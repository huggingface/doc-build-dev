import{S as be,i as Ee,s as we,e as n,k as I,w as xe,t as o,M as Ae,c as r,d as t,m as M,a as i,x as $e,h as a,b as l,G as e,g as O,y as Le,L as Pe,q as Se,o as ke,B as De,v as Ge}from"../chunks/vendor-hf-doc-builder.js";import{I as Ie}from"../chunks/IconCopyLink-hf-doc-builder.js";function Me(le){let f,N,u,m,L,y,T,P,z,R,c,d,U,S,B,H,_,J,V,b,j,F,K,h,Q,k,W,X,D,Y,Z,G,ee,te,oe,p,ae,E,se,ne,w,re,ie,q;return y=new Ie({}),{c(){f=n("meta"),N=I(),u=n("h1"),m=n("a"),L=n("span"),xe(y.$$.fragment),T=I(),P=n("span"),z=o("Philosophy"),R=I(),c=n("ul"),d=n("li"),U=o("Readability and clarity is prefered over highly optimized code. A strong importance is put on providing readable, intuitive and elementary code design. "),S=n("em"),B=o("E.g."),H=o(", the provided "),_=n("a"),J=o("schedulers"),V=o(" are separated from the provided "),b=n("a"),j=o("models"),F=o(" and provide well-commented code that can be read alongside the original paper."),K=I(),h=n("li"),Q=o("Diffusers is "),k=n("strong"),W=o("modality independent"),X=o(" and focusses on providing pretrained models and tools to build systems that generate "),D=n("strong"),Y=o("continous outputs"),Z=o(", "),G=n("em"),ee=o("e.g."),te=o(" vision and audio."),oe=I(),p=n("li"),ae=o("Diffusion models and schedulers are provided as consise, elementary building blocks whereas diffusion pipelines are a collection of end-to-end diffusion systems that can be used out-of-the-box, should stay as close as possible to their original implementation and can include components of other library, such as text-encoders. Examples for diffusion pipelines are "),E=n("a"),se=o("Glide"),ne=o(" and "),w=n("a"),re=o("Latent Diffusion"),ie=o("."),this.h()},l(s){const x=Ae('[data-svelte="svelte-1phssyn"]',document.head);f=r(x,"META",{name:!0,content:!0}),x.forEach(t),N=M(s),u=r(s,"H1",{class:!0});var C=i(u);m=r(C,"A",{id:!0,class:!0,href:!0});var de=i(m);L=r(de,"SPAN",{});var he=i(L);$e(y.$$.fragment,he),he.forEach(t),de.forEach(t),T=M(C),P=r(C,"SPAN",{});var ce=i(P);z=a(ce,"Philosophy"),ce.forEach(t),C.forEach(t),R=M(s),c=r(s,"UL",{});var A=i(c);d=r(A,"LI",{});var g=i(d);U=a(g,"Readability and clarity is prefered over highly optimized code. A strong importance is put on providing readable, intuitive and elementary code design. "),S=r(g,"EM",{});var fe=i(S);B=a(fe,"E.g."),fe.forEach(t),H=a(g,", the provided "),_=r(g,"A",{href:!0,rel:!0});var ue=i(_);J=a(ue,"schedulers"),ue.forEach(t),V=a(g," are separated from the provided "),b=r(g,"A",{href:!0,rel:!0});var pe=i(b);j=a(pe,"models"),pe.forEach(t),F=a(g," and provide well-commented code that can be read alongside the original paper."),g.forEach(t),K=M(A),h=r(A,"LI",{});var v=i(h);Q=a(v,"Diffusers is "),k=r(v,"STRONG",{});var me=i(k);W=a(me,"modality independent"),me.forEach(t),X=a(v," and focusses on providing pretrained models and tools to build systems that generate "),D=r(v,"STRONG",{});var ge=i(D);Y=a(ge,"continous outputs"),ge.forEach(t),Z=a(v,", "),G=r(v,"EM",{});var ve=i(G);ee=a(ve,"e.g."),ve.forEach(t),te=a(v," vision and audio."),v.forEach(t),oe=M(A),p=r(A,"LI",{});var $=i(p);ae=a($,"Diffusion models and schedulers are provided as consise, elementary building blocks whereas diffusion pipelines are a collection of end-to-end diffusion systems that can be used out-of-the-box, should stay as close as possible to their original implementation and can include components of other library, such as text-encoders. Examples for diffusion pipelines are "),E=r($,"A",{href:!0,rel:!0});var ye=i(E);se=a(ye,"Glide"),ye.forEach(t),ne=a($," and "),w=r($,"A",{href:!0,rel:!0});var _e=i(w);re=a(_e,"Latent Diffusion"),_e.forEach(t),ie=a($,"."),$.forEach(t),A.forEach(t),this.h()},h(){l(f,"name","hf:doc:metadata"),l(f,"content",JSON.stringify(Ne)),l(m,"id","philosophy"),l(m,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(m,"href","#philosophy"),l(u,"class","relative group"),l(_,"href","https://github.com/huggingface/diffusers/tree/main/src/diffusers/schedulers"),l(_,"rel","nofollow"),l(b,"href","https://github.com/huggingface/diffusers/tree/main/src/diffusers/models"),l(b,"rel","nofollow"),l(E,"href","https://github.com/openai/glide-text2im"),l(E,"rel","nofollow"),l(w,"href","https://github.com/CompVis/latent-diffusion"),l(w,"rel","nofollow")},m(s,x){e(document.head,f),O(s,N,x),O(s,u,x),e(u,m),e(m,L),Le(y,L,null),e(u,T),e(u,P),e(P,z),O(s,R,x),O(s,c,x),e(c,d),e(d,U),e(d,S),e(S,B),e(d,H),e(d,_),e(_,J),e(d,V),e(d,b),e(b,j),e(d,F),e(c,K),e(c,h),e(h,Q),e(h,k),e(k,W),e(h,X),e(h,D),e(D,Y),e(h,Z),e(h,G),e(G,ee),e(h,te),e(c,oe),e(c,p),e(p,ae),e(p,E),e(E,se),e(p,ne),e(p,w),e(w,re),e(p,ie),q=!0},p:Pe,i(s){q||(Se(y.$$.fragment,s),q=!0)},o(s){ke(y.$$.fragment,s),q=!1},d(s){t(f),s&&t(N),s&&t(u),De(y),s&&t(R),s&&t(c)}}}const Ne={local:"philosophy",title:"Philosophy"};function Re(le){return Ge(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Oe extends be{constructor(f){super();Ee(this,f,Re,Me,we,{})}}export{Oe as default,Ne as metadata};
