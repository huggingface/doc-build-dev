import{S as we,i as ke,s as ze,e as _,c as g,a as u,d as n,b as f,N as Dl,g as $,L as Z,D as Cu,O as H,P as U,G as s,F as Me,Q as rl,U as vu,H as Se,I as ye,J as Pe,q as k,o as E,v as hs,V as _s,f as Au,w as N,x as F,y as D,B as I,k as C,m as A,n as ve,p as be,W as bu,l as Qe,t as p,h as m,j as wu,X as ku,K as zu,Y as qu,Z as ds,M as Tu}from"../chunks/vendor-hf-doc-builder.js";import{T as Nl,C as Y}from"../chunks/CodeBlock-hf-doc-builder.js";import{I as Tt}from"../chunks/IconCopyLink-hf-doc-builder.js";function Mu(r){let e,a;return{c(){e=_("iframe"),this.h()},l(t){e=g(t,"IFRAME",{class:!0,src:!0,title:!0,frameborder:!0,allow:!0}),u(e).forEach(n),this.h()},h(){f(e,"class","w-full xl:w-4/6 h-80"),Dl(e.src,a="https://www.youtube-nocookie.com/embed/"+r[0])||f(e,"src",a),f(e,"title","YouTube video player"),f(e,"frameborder","0"),f(e,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),e.allowFullscreen=!0},m(t,l){$(t,e,l)},p(t,[l]){l&1&&!Dl(e.src,a="https://www.youtube-nocookie.com/embed/"+t[0])&&f(e,"src",a)},i:Z,o:Z,d(t){t&&n(e)}}}function Su(r,e,a){let{id:t}=e;return r.$$set=l=>{"id"in l&&a(0,t=l.id)},[t]}class Zc extends we{constructor(e){super();ke(this,e,Su,Mu,ze,{id:0})}}var Ke=(r=>(r.OPEN="OPEN",r.CLOSED="CLOSED",r.HASHASHLINK="HASHASHLINK",r))(Ke||{});const hr={};function yu(r){return hr[r]||(hr[r]=Cu("OPEN")),hr[r]}function Pu(r){let e,a,t,l,i,c;return{c(){e=H("svg"),a=H("defs"),t=H("clipPath"),l=H("rect"),i=H("g"),c=H("path"),this.h()},l(h){e=U(h,"svg",{class:!0,xmlns:!0,"xmlns:xlink":!0,"aria-hidden":!0,focusable:!0,role:!0,width:!0,height:!0,preserveAspectRatio:!0,viewBox:!0});var d=u(e);a=U(d,"defs",{});var v=u(a);t=U(v,"clipPath",{id:!0});var j=u(t);l=U(j,"rect",{x:!0,y:!0,width:!0,height:!0,fill:!0}),u(l).forEach(n),j.forEach(n),v.forEach(n),i=U(d,"g",{"clip-path":!0});var S=u(i);c=U(S,"path",{d:!0,fill:!0}),u(c).forEach(n),S.forEach(n),d.forEach(n),this.h()},h(){f(l,"x","3.05"),f(l,"y","0.5"),f(l,"width","25.73"),f(l,"height","31"),f(l,"fill","none"),f(t,"id","a"),f(c,"d","M24.94,9.51a12.81,12.81,0,0,1,0,18.16,12.68,12.68,0,0,1-18,0,12.81,12.81,0,0,1,0-18.16l9-9V5l-.84.83-6,6a9.58,9.58,0,1,0,13.55,0ZM20.44,9a1.68,1.68,0,1,1,1.67-1.67A1.68,1.68,0,0,1,20.44,9Z"),f(c,"fill","#ee4c2c"),f(i,"clip-path","url(#a)"),f(e,"class",r[0]),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),f(e,"aria-hidden","true"),f(e,"focusable","false"),f(e,"role","img"),f(e,"width","1em"),f(e,"height","1em"),f(e,"preserveAspectRatio","xMidYMid meet"),f(e,"viewBox","0 0 32 32")},m(h,d){$(h,e,d),s(e,a),s(a,t),s(t,l),s(e,i),s(i,c)},p(h,[d]){d&1&&f(e,"class",h[0])},i:Z,o:Z,d(h){h&&n(e)}}}function Nu(r,e,a){let{classNames:t=""}=e;return r.$$set=l=>{"classNames"in l&&a(0,t=l.classNames)},[t]}class Du extends we{constructor(e){super();ke(this,e,Nu,Pu,ze,{classNames:0})}}function Iu(r){let e,a,t,l;return{c(){e=H("svg"),a=H("path"),t=H("path"),l=H("path"),this.h()},l(i){e=U(i,"svg",{class:!0,xmlns:!0,"xmlns:xlink":!0,"aria-hidden":!0,focusable:!0,role:!0,width:!0,height:!0,preserveAspectRatio:!0,viewBox:!0});var c=u(e);a=U(c,"path",{d:!0,fill:!0}),u(a).forEach(n),t=U(c,"path",{d:!0,fill:!0}),u(t).forEach(n),l=U(c,"path",{d:!0,fill:!0}),u(l).forEach(n),c.forEach(n),this.h()},h(){f(a,"d","M145.726 42.065v42.07l72.861 42.07v-42.07l-72.86-42.07zM0 84.135v42.07l36.43 21.03V105.17L0 84.135zm109.291 21.035l-36.43 21.034v126.2l36.43 21.035v-84.135l36.435 21.035v-42.07l-36.435-21.034V105.17z"),f(a,"fill","#E55B2D"),f(t,"d","M145.726 42.065L36.43 105.17v42.065l72.861-42.065v42.065l36.435-21.03v-84.14zM255.022 63.1l-36.435 21.035v42.07l36.435-21.035V63.1zm-72.865 84.135l-36.43 21.035v42.07l36.43-21.036v-42.07zm-36.43 63.104l-36.436-21.035v84.135l36.435-21.035V210.34z"),f(t,"fill","#ED8E24"),f(l,"d","M145.726 0L0 84.135l36.43 21.035l109.296-63.105l72.861 42.07L255.022 63.1L145.726 0zm0 126.204l-36.435 21.03l36.435 21.036l36.43-21.035l-36.43-21.03z"),f(l,"fill","#F8BF3C"),f(e,"class",r[0]),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),f(e,"aria-hidden","true"),f(e,"focusable","false"),f(e,"role","img"),f(e,"width","0.94em"),f(e,"height","1em"),f(e,"preserveAspectRatio","xMidYMid meet"),f(e,"viewBox","0 0 256 274")},m(i,c){$(i,e,c),s(e,a),s(e,t),s(e,l)},p(i,[c]){c&1&&f(e,"class",i[0])},i:Z,o:Z,d(i){i&&n(e)}}}function Fu(r,e,a){let{classNames:t=""}=e;return r.$$set=l=>{"classNames"in l&&a(0,t=l.classNames)},[t]}class Ou extends we{constructor(e){super();ke(this,e,Fu,Iu,ze,{classNames:0})}}function Lu(r){let e,a,t,l,i,c;const h=r[7].default,d=Me(h,r,r[6],null);return{c(){e=_("div"),a=_("ul"),d&&d.c(),this.h()},l(v){e=g(v,"DIV",{class:!0});var j=u(e);a=g(j,"UL",{class:!0});var S=u(a);d&&d.l(S),S.forEach(n),j.forEach(n),this.h()},h(){f(a,"class","min-w-full w-auto"),f(e,"class",t="absolute top-full mt-1 min-w-full w-auto bg-white rounded-xl overflow-hidden shadow-lg z-10 border border-gray-100 "+(r[2]==="right"?"right-0":"left-0")+" "+r[0])},m(v,j){$(v,e,j),s(e,a),d&&d.m(a,null),r[8](e),l=!0,i||(c=rl(e,"click",function(){vu(r[1])&&r[1].apply(this,arguments)}),i=!0)},p(v,[j]){r=v,d&&d.p&&(!l||j&64)&&Se(d,h,r,r[6],l?Pe(h,r[6],j,null):ye(r[6]),null),(!l||j&5&&t!==(t="absolute top-full mt-1 min-w-full w-auto bg-white rounded-xl overflow-hidden shadow-lg z-10 border border-gray-100 "+(r[2]==="right"?"right-0":"left-0")+" "+r[0]))&&f(e,"class",t)},i(v){l||(k(d,v),l=!0)},o(v){E(d,v),l=!1},d(v){v&&n(e),d&&d.d(v),r[8](null),i=!1,c()}}}function Ru(r,e,a){let{$$slots:t={},$$scope:l}=e,{classNames:i=""}=e,{dropdownElement:c=void 0}=e,{forceAlignement:h=void 0}=e,{onClose:d}=e,v=h!=null?h:"left",j;hs(()=>{var T,y;if(document.addEventListener("click",S),!h){const z=document.documentElement.clientWidth,M=(j==null?void 0:j.getBoundingClientRect())||{},w=(T=M.left)!=null?T:0,q=(y=M.width)!=null?y:0;a(2,v=w+q>z?"right":"left")}return()=>{document.removeEventListener("click",S)}});function S(T){const y=T.target;y!==c&&!(c==null?void 0:c.contains(y))&&d()}function P(T){_s[T?"unshift":"push"](()=>{j=T,a(3,j)})}return r.$$set=T=>{"classNames"in T&&a(0,i=T.classNames),"dropdownElement"in T&&a(4,c=T.dropdownElement),"forceAlignement"in T&&a(5,h=T.forceAlignement),"onClose"in T&&a(1,d=T.onClose),"$$scope"in T&&a(6,l=T.$$scope)},[i,d,v,j,c,h,l,t,P]}class Bu extends we{constructor(e){super();ke(this,e,Ru,Lu,ze,{classNames:0,dropdownElement:4,forceAlignement:5,onClose:1})}}function Hu(r){let e,a;return{c(){e=H("svg"),a=H("path"),this.h()},l(t){e=U(t,"svg",{class:!0,xmlns:!0,"xmlns:xlink":!0,"aria-hidden":!0,focusable:!0,role:!0,width:!0,height:!0,preserveAspectRatio:!0,viewBox:!0,style:!0});var l=u(e);a=U(l,"path",{d:!0,fill:!0}),u(a).forEach(n),l.forEach(n),this.h()},h(){f(a,"d","M7 10l5 5l5-5z"),f(a,"fill","currentColor"),f(e,"class",r[0]),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),f(e,"aria-hidden","true"),f(e,"focusable","false"),f(e,"role","img"),f(e,"width","1em"),f(e,"height","1em"),f(e,"preserveAspectRatio","xMidYMid meet"),f(e,"viewBox","0 0 24 24"),Au(e,"transform","rotate(360deg)")},m(t,l){$(t,e,l),s(e,a)},p(t,[l]){l&1&&f(e,"class",t[0])},i:Z,o:Z,d(t){t&&n(e)}}}function Uu(r,e,a){let{classNames:t=""}=e;return r.$$set=l=>{"classNames"in l&&a(0,t=l.classNames)},[t]}class Ju extends we{constructor(e){super();ke(this,e,Uu,Hu,ze,{classNames:0})}}const Vu=r=>({}),Wc=r=>({}),Gu=r=>({}),Yc=r=>({});function Ku(r){let e,a,t,l,i,c=r[2]&&Xc(r),h=r[10]&&eu();return{c(){c&&c.c(),e=C(),a=p(r[4]),t=C(),h&&h.c(),l=Qe()},l(d){c&&c.l(d),e=A(d),a=m(d,r[4]),t=A(d),h&&h.l(d),l=Qe()},m(d,v){c&&c.m(d,v),$(d,e,v),$(d,a,v),$(d,t,v),h&&h.m(d,v),$(d,l,v),i=!0},p(d,v){d[2]?c?(c.p(d,v),v&4&&k(c,1)):(c=Xc(d),c.c(),k(c,1),c.m(e.parentNode,e)):c&&(ve(),E(c,1,1,()=>{c=null}),be()),(!i||v&16)&&wu(a,d[4]),d[10]?h?v&1024&&k(h,1):(h=eu(),h.c(),k(h,1),h.m(l.parentNode,l)):h&&(ve(),E(h,1,1,()=>{h=null}),be())},i(d){i||(k(c),k(h),i=!0)},o(d){E(c),E(h),i=!1},d(d){c&&c.d(d),d&&n(e),d&&n(a),d&&n(t),h&&h.d(d),d&&n(l)}}}function Qu(r){let e;const a=r[14].button,t=Me(a,r,r[18],Yc);return{c(){t&&t.c()},l(l){t&&t.l(l)},m(l,i){t&&t.m(l,i),e=!0},p(l,i){t&&t.p&&(!e||i&262144)&&Se(t,a,l,l[18],e?Pe(a,l[18],i,Gu):ye(l[18]),Yc)},i(l){e||(k(t,l),e=!0)},o(l){E(t,l),e=!1},d(l){t&&t.d(l)}}}function Xc(r){let e,a,t;var l=r[2];function i(c){return{props:{classNames:"mr-1.5 "+c[3]}}}return l&&(e=new l(i(r))),{c(){e&&N(e.$$.fragment),a=Qe()},l(c){e&&F(e.$$.fragment,c),a=Qe()},m(c,h){e&&D(e,c,h),$(c,a,h),t=!0},p(c,h){const d={};if(h&8&&(d.classNames="mr-1.5 "+c[3]),l!==(l=c[2])){if(e){ve();const v=e;E(v.$$.fragment,1,0,()=>{I(v,1)}),be()}l?(e=new l(i(c)),N(e.$$.fragment),k(e.$$.fragment,1),D(e,a.parentNode,a)):e=null}else l&&e.$set(d)},i(c){t||(e&&k(e.$$.fragment,c),t=!0)},o(c){e&&E(e.$$.fragment,c),t=!1},d(c){c&&n(a),e&&I(e,c)}}}function eu(r){let e,a;return e=new Ju({props:{classNames:"-mr-1 text-gray-500"}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function tu(r){let e,a;return e=new Bu({props:{classNames:r[6]+" "+(r[9]?"v2-dropdown-menu hidden":""),dropdownElement:r[11],forceAlignement:r[5],onClose:r[16],$$slots:{default:[xu]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&576&&(i.classNames=t[6]+" "+(t[9]?"v2-dropdown-menu hidden":"")),l&2048&&(i.dropdownElement=t[11]),l&32&&(i.forceAlignement=t[5]),l&4096&&(i.onClose=t[16]),l&262144&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function xu(r){let e;const a=r[14].menu,t=Me(a,r,r[18],Wc);return{c(){t&&t.c()},l(l){t&&t.l(l)},m(l,i){t&&t.m(l,i),e=!0},p(l,i){t&&t.p&&(!e||i&262144)&&Se(t,a,l,l[18],e?Pe(a,l[18],i,Vu):ye(l[18]),Wc)},i(l){e||(k(t,l),e=!0)},o(l){E(t,l),e=!1},d(l){t&&t.d(l)}}}function Zu(r){let e,a,t,l,i,c,h,d,v,j,S;const P=[Qu,Ku],T=[];function y(M,w){return M[13].button?0:1}t=y(r),l=T[t]=P[t](r);let z=(r[12]||r[9])&&tu(r);return{c(){e=_("div"),a=_("button"),l.c(),c=C(),z&&z.c(),this.h()},l(M){e=g(M,"DIV",{class:!0,"selected-value":!0});var w=u(e);a=g(w,"BUTTON",{class:!0,type:!0});var q=u(a);l.l(q),q.forEach(n),c=A(w),z&&z.l(w),w.forEach(n),this.h()},h(){f(a,"class",i=""+r[1]+" "+(r[7]?"":"cursor-pointer w-full btn text-sm")+" "+(r[9]?"v2-dropdown-button":"")),f(a,"type","button"),f(e,"class",h="relative "+r[0]+" "+(r[9]?"v2-dropdown":"")),f(e,"selected-value",d=r[8]||void 0)},m(M,w){$(M,e,w),s(e,a),T[t].m(a,null),s(e,c),z&&z.m(e,null),r[17](e),v=!0,j||(S=rl(a,"click",r[15]),j=!0)},p(M,[w]){let q=t;t=y(M),t===q?T[t].p(M,w):(ve(),E(T[q],1,1,()=>{T[q]=null}),be(),l=T[t],l?l.p(M,w):(l=T[t]=P[t](M),l.c()),k(l,1),l.m(a,null)),(!v||w&642&&i!==(i=""+M[1]+" "+(M[7]?"":"cursor-pointer w-full btn text-sm")+" "+(M[9]?"v2-dropdown-button":"")))&&f(a,"class",i),M[12]||M[9]?z?(z.p(M,w),w&4608&&k(z,1)):(z=tu(M),z.c(),k(z,1),z.m(e,null)):z&&(ve(),E(z,1,1,()=>{z=null}),be()),(!v||w&513&&h!==(h="relative "+M[0]+" "+(M[9]?"v2-dropdown":"")))&&f(e,"class",h),(!v||w&256&&d!==(d=M[8]||void 0))&&f(e,"selected-value",d)},i(M){v||(k(l),k(z),v=!0)},o(M){E(l),E(z),v=!1},d(M){M&&n(e),T[t].d(),z&&z.d(),r[17](null),j=!1,S()}}}function Wu(r,e,a){let{$$slots:t={},$$scope:l}=e;const i=bu(t);let{classNames:c=""}=e,{btnClassNames:h=""}=e,{btnIcon:d=void 0}=e,{btnIconClassNames:v=""}=e,{btnLabel:j=""}=e,{forceMenuAlignement:S=void 0}=e,{menuClassNames:P=""}=e,{noBtnClass:T=void 0}=e,{selectedValue:y=void 0}=e,{useDeprecatedJS:z=!0}=e,{withBtnCaret:M=!1}=e,w,q=!1;const O=()=>a(12,q=!q),G=()=>a(12,q=!1);function J(B){_s[B?"unshift":"push"](()=>{w=B,a(11,w)})}return r.$$set=B=>{"classNames"in B&&a(0,c=B.classNames),"btnClassNames"in B&&a(1,h=B.btnClassNames),"btnIcon"in B&&a(2,d=B.btnIcon),"btnIconClassNames"in B&&a(3,v=B.btnIconClassNames),"btnLabel"in B&&a(4,j=B.btnLabel),"forceMenuAlignement"in B&&a(5,S=B.forceMenuAlignement),"menuClassNames"in B&&a(6,P=B.menuClassNames),"noBtnClass"in B&&a(7,T=B.noBtnClass),"selectedValue"in B&&a(8,y=B.selectedValue),"useDeprecatedJS"in B&&a(9,z=B.useDeprecatedJS),"withBtnCaret"in B&&a(10,M=B.withBtnCaret),"$$scope"in B&&a(18,l=B.$$scope)},[c,h,d,v,j,S,P,T,y,z,M,w,q,i,t,O,G,J,l]}class Eu extends we{constructor(e){super();ke(this,e,Wu,Zu,ze,{classNames:0,btnClassNames:1,btnIcon:2,btnIconClassNames:3,btnLabel:4,forceMenuAlignement:5,menuClassNames:6,noBtnClass:7,selectedValue:8,useDeprecatedJS:9,withBtnCaret:10})}}function Yu(r){let e,a,t,l=r[5]&&lu(r);return{c(){l&&l.c(),e=C(),a=p(r[7])},l(i){l&&l.l(i),e=A(i),a=m(i,r[7])},m(i,c){l&&l.m(i,c),$(i,e,c),$(i,a,c),t=!0},p(i,c){i[5]?l?(l.p(i,c),c&32&&k(l,1)):(l=lu(i),l.c(),k(l,1),l.m(e.parentNode,e)):l&&(ve(),E(l,1,1,()=>{l=null}),be()),(!t||c&128)&&wu(a,i[7])},i(i){t||(k(l),t=!0)},o(i){E(l),t=!1},d(i){l&&l.d(i),i&&n(e),i&&n(a)}}}function Xu(r){let e;const a=r[15].default,t=Me(a,r,r[14],null);return{c(){t&&t.c()},l(l){t&&t.l(l)},m(l,i){t&&t.m(l,i),e=!0},p(l,i){t&&t.p&&(!e||i&16384)&&Se(t,a,l,l[14],e?Pe(a,l[14],i,null):ye(l[14]),null)},i(l){e||(k(t,l),e=!0)},o(l){E(t,l),e=!1},d(l){t&&t.d(l)}}}function lu(r){let e,a,t;var l=r[5];function i(c){return{props:{classNames:"mr-1.5 "+c[6]}}}return l&&(e=new l(i(r))),{c(){e&&N(e.$$.fragment),a=Qe()},l(c){e&&F(e.$$.fragment,c),a=Qe()},m(c,h){e&&D(e,c,h),$(c,a,h),t=!0},p(c,h){const d={};if(h&64&&(d.classNames="mr-1.5 "+c[6]),l!==(l=c[5])){if(e){ve();const v=e;E(v.$$.fragment,1,0,()=>{I(v,1)}),be()}l?(e=new l(i(c)),N(e.$$.fragment),k(e.$$.fragment,1),D(e,a.parentNode,a)):e=null}else l&&e.$set(d)},i(c){t||(e&&k(e.$$.fragment,c),t=!0)},o(c){e&&E(e.$$.fragment,c),t=!1},d(c){c&&n(a),e&&I(e,c)}}}function ef(r){let e,a,t,l,i,c,h,d,v,j;const S=[Xu,Yu],P=[];function T(y,z){return y[13].default?0:1}return t=T(r),l=P[t]=S[t](r),{c(){e=_("li"),a=_("a"),l.c(),this.h()},l(y){e=g(y,"LI",{});var z=u(e);a=g(z,"A",{class:!0,"data-label":!0,"data-url":!0,"data-value":!0,href:!0,rel:!0,target:!0});var M=u(a);l.l(M),M.forEach(n),z.forEach(n),this.h()},h(){f(a,"class",i="flex items-center hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer px-3 py-1.5 whitespace-nowrap "+r[0]+" "+(r[9]?"hover:underline":"")+" "+(r[12]?"v2-dropdown-entry":"")),f(a,"data-label",r[1]),f(a,"data-url",r[2]),f(a,"data-value",r[3]),f(a,"href",r[4]),f(a,"rel",c=r[8]?"nofollow":void 0),f(a,"target",h=r[11]?"_blank":void 0)},m(y,z){$(y,e,z),s(e,a),P[t].m(a,null),d=!0,v||(j=rl(a,"click",function(){vu(r[10])&&r[10].apply(this,arguments)}),v=!0)},p(y,[z]){r=y;let M=t;t=T(r),t===M?P[t].p(r,z):(ve(),E(P[M],1,1,()=>{P[M]=null}),be(),l=P[t],l?l.p(r,z):(l=P[t]=S[t](r),l.c()),k(l,1),l.m(a,null)),(!d||z&4609&&i!==(i="flex items-center hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer px-3 py-1.5 whitespace-nowrap "+r[0]+" "+(r[9]?"hover:underline":"")+" "+(r[12]?"v2-dropdown-entry":"")))&&f(a,"class",i),(!d||z&2)&&f(a,"data-label",r[1]),(!d||z&4)&&f(a,"data-url",r[2]),(!d||z&8)&&f(a,"data-value",r[3]),(!d||z&16)&&f(a,"href",r[4]),(!d||z&256&&c!==(c=r[8]?"nofollow":void 0))&&f(a,"rel",c),(!d||z&2048&&h!==(h=r[11]?"_blank":void 0))&&f(a,"target",h)},i(y){d||(k(l),d=!0)},o(y){E(l),d=!1},d(y){y&&n(e),P[t].d(),v=!1,j()}}}function tf(r,e,a){let{$$slots:t={},$$scope:l}=e;const i=bu(t);let{classNames:c=""}=e,{dataLabel:h=void 0}=e,{dataUrl:d=void 0}=e,{dataValue:v=void 0}=e,{href:j=void 0}=e,{icon:S=void 0}=e,{iconClassNames:P=""}=e,{label:T=""}=e,{noFollow:y=!1}=e,{underline:z=!1}=e,{onClick:M=()=>{}}=e,{targetBlank:w=!1}=e,{useDeprecatedJS:q=!0}=e;return r.$$set=O=>{"classNames"in O&&a(0,c=O.classNames),"dataLabel"in O&&a(1,h=O.dataLabel),"dataUrl"in O&&a(2,d=O.dataUrl),"dataValue"in O&&a(3,v=O.dataValue),"href"in O&&a(4,j=O.href),"icon"in O&&a(5,S=O.icon),"iconClassNames"in O&&a(6,P=O.iconClassNames),"label"in O&&a(7,T=O.label),"noFollow"in O&&a(8,y=O.noFollow),"underline"in O&&a(9,z=O.underline),"onClick"in O&&a(10,M=O.onClick),"targetBlank"in O&&a(11,w=O.targetBlank),"useDeprecatedJS"in O&&a(12,q=O.useDeprecatedJS),"$$scope"in O&&a(14,l=O.$$scope)},[c,h,d,v,j,S,P,T,y,z,M,w,q,i,l,t]}class ju extends we{constructor(e){super();ke(this,e,tf,ef,ze,{classNames:0,dataLabel:1,dataUrl:2,dataValue:3,href:4,icon:5,iconClassNames:6,label:7,noFollow:8,underline:9,onClick:10,targetBlank:11,useDeprecatedJS:12})}}const{window:lf}=ku,af=r=>({}),au=r=>({slot:"button"});function ou(r,e,a){const t=r.slice();return t[11]=e[a].label,t[12]=e[a].value,t}const of=r=>({}),su=r=>({slot:"menu"}),sf=r=>({}),nu=r=>({slot:"button"});function iu(r,e,a){const t=r.slice();return t[11]=e[a].label,t[12]=e[a].value,t}const nf=r=>({}),ru=r=>({slot:"menu"});function rf(r){let e,a;return e=new Eu({props:{btnLabel:"",classNames:"colab-dropdown",noBtnClass:!0,useDeprecatedJS:!1,$$slots:{menu:[mf],button:[ff]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&1024&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function cf(r){let e,a,t;return{c(){e=_("a"),a=_("img"),this.h()},l(l){e=g(l,"A",{href:!0,target:!0});var i=u(e);a=g(i,"IMG",{alt:!0,class:!0,src:!0}),i.forEach(n),this.h()},h(){f(a,"alt","Open In Colab"),f(a,"class","!m-0"),Dl(a.src,t="https://colab.research.google.com/assets/colab-badge.svg")||f(a,"src",t),f(e,"href",r[2][0].value),f(e,"target","_blank")},m(l,i){$(l,e,i),s(e,a)},p:Z,i:Z,o:Z,d(l){l&&n(e)}}}function uf(r){let e,a;return{c(){e=_("img"),this.h()},l(t){e=g(t,"IMG",{alt:!0,class:!0,src:!0}),this.h()},h(){f(e,"alt","Open In Colab"),f(e,"class","!m-0"),Dl(e.src,a="https://colab.research.google.com/assets/colab-badge.svg")||f(e,"src",a)},m(t,l){$(t,e,l)},d(t){t&&n(e)}}}function ff(r){let e;const a=r[6].default,t=Me(a,r,r[10],nu),l=t||uf();return{c(){l&&l.c()},l(i){l&&l.l(i)},m(i,c){l&&l.m(i,c),e=!0},p(i,c){t&&t.p&&(!e||c&1024)&&Se(t,a,i,i[10],e?Pe(a,i[10],c,sf):ye(i[10]),nu)},i(i){e||(k(l,i),e=!0)},o(i){E(l,i),e=!1},d(i){l&&l.d(i)}}}function cu(r){let e,a;function t(){return r[7](r[12])}return e=new ju({props:{classNames:"text-sm !no-underline",iconClassNames:"text-gray-500",label:r[11],onClick:t,useDeprecatedJS:!1}}),{c(){N(e.$$.fragment)},l(l){F(e.$$.fragment,l)},m(l,i){D(e,l,i),a=!0},p(l,i){r=l},i(l){a||(k(e.$$.fragment,l),a=!0)},o(l){E(e.$$.fragment,l),a=!1},d(l){I(e,l)}}}function pf(r){let e,a,t=r[2],l=[];for(let c=0;c<t.length;c+=1)l[c]=cu(iu(r,t,c));const i=c=>E(l[c],1,1,()=>{l[c]=null});return{c(){for(let c=0;c<l.length;c+=1)l[c].c();e=Qe()},l(c){for(let h=0;h<l.length;h+=1)l[h].l(c);e=Qe()},m(c,h){for(let d=0;d<l.length;d+=1)l[d].m(c,h);$(c,e,h),a=!0},p(c,h){if(h&4){t=c[2];let d;for(d=0;d<t.length;d+=1){const v=iu(c,t,d);l[d]?(l[d].p(v,h),k(l[d],1)):(l[d]=cu(v),l[d].c(),k(l[d],1),l[d].m(e.parentNode,e))}for(ve(),d=t.length;d<l.length;d+=1)i(d);be()}},i(c){if(!a){for(let h=0;h<t.length;h+=1)k(l[h]);a=!0}},o(c){l=l.filter(Boolean);for(let h=0;h<l.length;h+=1)E(l[h]);a=!1},d(c){zu(l,c),c&&n(e)}}}function mf(r){let e;const a=r[6].default,t=Me(a,r,r[10],ru),l=t||pf(r);return{c(){l&&l.c()},l(i){l&&l.l(i)},m(i,c){l&&l.m(i,c),e=!0},p(i,c){t&&t.p&&(!e||c&1024)&&Se(t,a,i,i[10],e?Pe(a,i[10],c,nf):ye(i[10]),ru)},i(i){e||(k(l,i),e=!0)},o(i){E(l,i),e=!1},d(i){l&&l.d(i)}}}function df(r){let e,a;return e=new Eu({props:{btnLabel:"",classNames:"colab-dropdown",noBtnClass:!0,useDeprecatedJS:!1,$$slots:{menu:[vf],button:[gf]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&1024&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function hf(r){let e,a,t;return{c(){e=_("a"),a=_("img"),this.h()},l(l){e=g(l,"A",{href:!0,target:!0});var i=u(e);a=g(i,"IMG",{alt:!0,class:!0,src:!0}),i.forEach(n),this.h()},h(){f(a,"alt","Open In Studio Lab"),f(a,"class","!m-0"),Dl(a.src,t="https://studiolab.sagemaker.aws/studiolab.svg")||f(a,"src",t),f(e,"href",r[3][0].value),f(e,"target","_blank")},m(l,i){$(l,e,i),s(e,a)},p:Z,i:Z,o:Z,d(l){l&&n(e)}}}function _f(r){let e,a;return{c(){e=_("img"),this.h()},l(t){e=g(t,"IMG",{alt:!0,class:!0,src:!0}),this.h()},h(){f(e,"alt","Open In Studio Lab"),f(e,"class","!m-0"),Dl(e.src,a="https://studiolab.sagemaker.aws/studiolab.svg")||f(e,"src",a)},m(t,l){$(t,e,l)},d(t){t&&n(e)}}}function gf(r){let e;const a=r[6].default,t=Me(a,r,r[10],au),l=t||_f();return{c(){l&&l.c()},l(i){l&&l.l(i)},m(i,c){l&&l.m(i,c),e=!0},p(i,c){t&&t.p&&(!e||c&1024)&&Se(t,a,i,i[10],e?Pe(a,i[10],c,af):ye(i[10]),au)},i(i){e||(k(l,i),e=!0)},o(i){E(l,i),e=!1},d(i){l&&l.d(i)}}}function uu(r){let e,a;function t(){return r[8](r[12])}return e=new ju({props:{classNames:"text-sm !no-underline",iconClassNames:"text-gray-500",label:r[11],onClick:t,useDeprecatedJS:!1}}),{c(){N(e.$$.fragment)},l(l){F(e.$$.fragment,l)},m(l,i){D(e,l,i),a=!0},p(l,i){r=l},i(l){a||(k(e.$$.fragment,l),a=!0)},o(l){E(e.$$.fragment,l),a=!1},d(l){I(e,l)}}}function $f(r){let e,a,t=r[3],l=[];for(let c=0;c<t.length;c+=1)l[c]=uu(ou(r,t,c));const i=c=>E(l[c],1,1,()=>{l[c]=null});return{c(){for(let c=0;c<l.length;c+=1)l[c].c();e=Qe()},l(c){for(let h=0;h<l.length;h+=1)l[h].l(c);e=Qe()},m(c,h){for(let d=0;d<l.length;d+=1)l[d].m(c,h);$(c,e,h),a=!0},p(c,h){if(h&8){t=c[3];let d;for(d=0;d<t.length;d+=1){const v=ou(c,t,d);l[d]?(l[d].p(v,h),k(l[d],1)):(l[d]=uu(v),l[d].c(),k(l[d],1),l[d].m(e.parentNode,e))}for(ve(),d=t.length;d<l.length;d+=1)i(d);be()}},i(c){if(!a){for(let h=0;h<t.length;h+=1)k(l[h]);a=!0}},o(c){l=l.filter(Boolean);for(let h=0;h<l.length;h+=1)E(l[h]);a=!1},d(c){zu(l,c),c&&n(e)}}}function vf(r){let e;const a=r[6].default,t=Me(a,r,r[10],su),l=t||$f(r);return{c(){l&&l.c()},l(i){l&&l.l(i)},m(i,c){l&&l.m(i,c),e=!0},p(i,c){t&&t.p&&(!e||c&1024)&&Se(t,a,i,i[10],e?Pe(a,i[10],c,of):ye(i[10]),su)},i(i){e||(k(l,i),e=!0)},o(i){E(l,i),e=!1},d(i){l&&l.d(i)}}}function bf(r){let e,a,t,l,i,c,h,d,v,j;const S=[cf,rf],P=[];function T(w,q){return w[2].length===1?0:1}a=T(r),t=P[a]=S[a](r);const y=[hf,df],z=[];function M(w,q){return w[3].length===1?0:1}return i=M(r),c=z[i]=y[i](r),{c(){e=_("div"),t.c(),l=C(),c.c(),this.h()},l(w){e=g(w,"DIV",{class:!0});var q=u(e);t.l(q),l=A(q),c.l(q),q.forEach(n),this.h()},h(){f(e,"class",h="flex space-x-1 "+r[0])},m(w,q){$(w,e,q),P[a].m(e,null),s(e,l),z[i].m(e,null),r[9](e),d=!0,v||(j=rl(lf,"resize",r[4]),v=!0)},p(w,[q]){t.p(w,q),c.p(w,q),(!d||q&1&&h!==(h="flex space-x-1 "+w[0]))&&f(e,"class",h)},i(w){d||(k(t),k(c),d=!0)},o(w){E(t),E(c),d=!1},d(w){w&&n(e),P[a].d(),z[i].d(),r[9](null),v=!1,j()}}}function fu(r){window.open(r)}function wf(r,e,a){let{$$slots:t={},$$scope:l}=e,{options:i=[]}=e,{classNames:c=""}=e,h;const d=i.filter(y=>y.value.includes("colab.research.google.com")),v=i.filter(y=>y.value.includes("studiolab.sagemaker.aws"));function j(){const y=document.querySelector(".prose-doc h1"),z=document.querySelector(".prose-doc h1 > span");if(y&&z){const{width:M}=y.getBoundingClientRect(),{width:w}=z.getBoundingClientRect();let q=0;for(let G=0;G<h.children.length;G++)q+=h.children.item(G).clientWidth;const O=20;M-w<q+O?h.classList.remove("absolute"):h.classList.add("absolute")}}hs(()=>{j()});const S=y=>fu(y),P=y=>fu(y);function T(y){_s[y?"unshift":"push"](()=>{h=y,a(1,h)})}return r.$$set=y=>{"options"in y&&a(5,i=y.options),"classNames"in y&&a(0,c=y.classNames),"$$scope"in y&&a(10,l=y.$$scope)},[c,h,d,v,j,i,t,S,P,T,l]}class kf extends we{constructor(e){super();ke(this,e,wf,bf,ze,{options:5,classNames:0})}}function zf(r){let e,a,t,l,i,c,h,d,v,j,S,P,T,y,z,M,w,q,O,G,J,B,W,K,x,ne,oe,se,fe,re,pe,ie,ee,ce,me,R,V,le,L,Q,ue;return{c(){e=H("svg"),a=H("style"),t=p(`.J {
			stroke: #dce0df;
		}
		.K {
			stroke-linejoin: round;
		}
	`),l=H("g"),i=H("path"),c=H("path"),h=H("path"),d=H("path"),v=H("path"),j=H("path"),S=H("path"),P=H("path"),T=H("g"),y=H("path"),z=H("path"),M=H("path"),w=H("g"),q=H("path"),O=H("path"),G=H("path"),J=H("g"),B=H("path"),W=H("path"),K=H("g"),x=H("path"),ne=H("path"),oe=H("path"),se=H("path"),fe=H("path"),re=H("path"),pe=H("path"),ie=H("path"),ee=H("g"),ce=H("path"),me=H("path"),R=H("path"),V=H("path"),le=H("g"),L=H("path"),Q=H("path"),ue=H("path"),this.h()},l(_e){e=U(_e,"svg",{class:!0,xmlns:!0,"xmlns:xlink":!0,"aria-hidden":!0,focusable:!0,role:!0,width:!0,height:!0,preserveAspectRatio:!0,viewBox:!0});var X=u(e);a=U(X,"style",{});var qe=u(a);t=m(qe,`.J {
			stroke: #dce0df;
		}
		.K {
			stroke-linejoin: round;
		}
	`),qe.forEach(n),l=U(X,"g",{fill:!0,class:!0});var ae=u(l);i=U(ae,"path",{d:!0}),u(i).forEach(n),c=U(ae,"path",{d:!0}),u(c).forEach(n),h=U(ae,"path",{d:!0}),u(h).forEach(n),d=U(ae,"path",{d:!0}),u(d).forEach(n),v=U(ae,"path",{d:!0}),u(v).forEach(n),j=U(ae,"path",{d:!0}),u(j).forEach(n),S=U(ae,"path",{d:!0}),u(S).forEach(n),P=U(ae,"path",{d:!0}),u(P).forEach(n),ae.forEach(n),T=U(X,"g",{fill:!0,class:!0});var Te=u(T);y=U(Te,"path",{d:!0}),u(y).forEach(n),z=U(Te,"path",{d:!0}),u(z).forEach(n),M=U(Te,"path",{d:!0}),u(M).forEach(n),Te.forEach(n),w=U(X,"g",{fill:!0,class:!0});var Ee=u(w);q=U(Ee,"path",{d:!0}),u(q).forEach(n),O=U(Ee,"path",{d:!0}),u(O).forEach(n),Ee.forEach(n),G=U(X,"path",{d:!0,fill:!0,class:!0}),u(G).forEach(n),J=U(X,"g",{fill:!0,class:!0});var De=u(J);B=U(De,"path",{d:!0}),u(B).forEach(n),W=U(De,"path",{d:!0}),u(W).forEach(n),De.forEach(n),K=U(X,"g",{fill:!0,class:!0});var ge=u(K);x=U(ge,"path",{d:!0}),u(x).forEach(n),ne=U(ge,"path",{d:!0}),u(ne).forEach(n),oe=U(ge,"path",{d:!0}),u(oe).forEach(n),se=U(ge,"path",{d:!0}),u(se).forEach(n),fe=U(ge,"path",{d:!0}),u(fe).forEach(n),re=U(ge,"path",{d:!0}),u(re).forEach(n),pe=U(ge,"path",{d:!0}),u(pe).forEach(n),ge.forEach(n),ie=U(X,"path",{d:!0,fill:!0,class:!0}),u(ie).forEach(n),ee=U(X,"g",{fill:!0,class:!0});var te=u(ee);ce=U(te,"path",{d:!0}),u(ce).forEach(n),me=U(te,"path",{d:!0}),u(me).forEach(n),R=U(te,"path",{d:!0}),u(R).forEach(n),V=U(te,"path",{d:!0}),u(V).forEach(n),te.forEach(n),le=U(X,"g",{fill:!0,class:!0});var Ie=u(le);L=U(Ie,"path",{d:!0}),u(L).forEach(n),Q=U(Ie,"path",{d:!0}),u(Q).forEach(n),ue=U(Ie,"path",{d:!0}),u(ue).forEach(n),Ie.forEach(n),X.forEach(n),this.h()},h(){f(i,"d","M50.5 130.4l-25 43.31h50l25-43.31h-50z"),f(c,"d","M.5 217.01l25-43.3h50l-25 43.3H.5z"),f(h,"d","M125.5 173.71h-50l-25 43.3h50l25-43.3z"),f(d,"d","M175.5 173.71h-50l-25 43.3h50l25-43.3z"),f(v,"d","M150.5 130.4l-25 43.31h50l25-43.31h-50z"),f(j,"d","M175.5 87.1l-25 43.3h50l25-43.3h-50z"),f(S,"d","M200.5 43.8l-25 43.3h50l25-43.3h-50z"),f(P,"d","M225.5.5l-25 43.3h50l25-43.3h-50z"),f(l,"fill","#5e97f6"),f(l,"class","J K"),f(y,"d","M.5 217.01l25 43.3h50l-25-43.3H.5z"),f(z,"d","M125.5 260.31h-50l-25-43.3h50l25 43.3z"),f(M,"d","M175.5 260.31h-50l-25-43.3h50l25 43.3z"),f(T,"fill","#2a56c6"),f(T,"class","J K"),f(q,"d","M200.5 217.01l-25-43.3-25 43.3 25 43.3 25-43.3zm50-86.61l-25-43.3-25 43.3h50z"),f(O,"d","M250.5 43.8l-25 43.3 25 43.3 25-43.3-25-43.3z"),f(w,"fill","#00796b"),f(w,"class","J K"),f(G,"d","M125.5 173.71l-25-43.31-25 43.31h50z"),f(G,"fill","#3367d6"),f(G,"class","J K"),f(B,"d","M250.5 130.4h-50l-25 43.31h50l25-43.31z"),f(W,"d","M300.5 130.4h-50l-25 43.31h50l25-43.31z"),f(J,"fill","#26a69a"),f(J,"class","J K"),f(x,"d","M350.5 43.8L325.5.5l-25 43.3 25 43.3 25-43.3z"),f(ne,"d","M375.5 87.1l-25-43.3-25 43.3 25 43.3 25-43.3z"),f(oe,"d","M400.5 130.4l-25-43.3-25 43.3 25 43.31 25-43.31z"),f(se,"d","M425.5 173.71l-25-43.31-25 43.31 25 43.3 25-43.3z"),f(fe,"d","M450.5 217.01l-25-43.3-25 43.3 25 43.3 25-43.3zM425.5.5l-25 43.3 25 43.3 25-43.3-25-43.3z"),f(re,"d","M375.5 87.1l25-43.3 25 43.3-25 43.3-25-43.3zm-25 43.3l-25 43.31 25 43.3 25-43.3-25-43.31z"),f(pe,"d","M325.5 260.31l-25-43.3 25-43.3 25 43.3-25 43.3z"),f(K,"fill","#9c27b0"),f(K,"class","J K"),f(ie,"d","M275.5 260.31l-25-43.3h50l25 43.3h-50z"),f(ie,"fill","#6a1b9a"),f(ie,"class","J K"),f(ce,"d","M225.5 173.71h-50l25 43.3h50l-25-43.3z"),f(me,"d","M275.5 173.71h-50l25 43.3 25-43.3zm0-86.61l25 43.3h50l-25-43.3h-50z"),f(R,"d","M300.5 43.8h-50l25 43.3h50l-25-43.3zm125 216.51l-25-43.3h-50l25 43.3h50z"),f(V,"d","M375.5 173.71l-25 43.3h50l-25-43.3z"),f(ee,"fill","#00695c"),f(ee,"class","J K"),f(L,"d","M325.5.5h-50l-25 43.3h50l25-43.3zm0 173.21h-50l-25 43.3h50l25-43.3z"),f(Q,"d","M350.5 130.4h-50l-25 43.31h50l25-43.31zM425.5.5h-50l-25 43.3h50l25-43.3z"),f(ue,"d","M375.5 87.1l-25-43.3h50l-25 43.3z"),f(le,"fill","#ea80fc"),f(le,"class","J K"),f(e,"class",r[0]),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),f(e,"aria-hidden","true"),f(e,"focusable","false"),f(e,"role","img"),f(e,"width","1.73em"),f(e,"height","1em"),f(e,"preserveAspectRatio","xMidYMid meet"),f(e,"viewBox","0 0 451 260.81")},m(_e,X){$(_e,e,X),s(e,a),s(a,t),s(e,l),s(l,i),s(l,c),s(l,h),s(l,d),s(l,v),s(l,j),s(l,S),s(l,P),s(e,T),s(T,y),s(T,z),s(T,M),s(e,w),s(w,q),s(w,O),s(e,G),s(e,J),s(J,B),s(J,W),s(e,K),s(K,x),s(K,ne),s(K,oe),s(K,se),s(K,fe),s(K,re),s(K,pe),s(e,ie),s(e,ee),s(ee,ce),s(ee,me),s(ee,R),s(ee,V),s(e,le),s(le,L),s(le,Q),s(le,ue)},p(_e,[X]){X&1&&f(e,"class",_e[0])},i:Z,o:Z,d(_e){_e&&n(e)}}}function Ef(r,e,a){let{classNames:t=""}=e;return r.$$set=l=>{"classNames"in l&&a(0,t=l.classNames)},[t]}class jf extends we{constructor(e){super();ke(this,e,Ef,zf,ze,{classNames:0})}}function Cf(r){let e,a;return{c(){e=H("svg"),a=H("path"),this.h()},l(t){e=U(t,"svg",{class:!0,width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=u(e);a=U(l,"path",{d:!0,fill:!0}),u(a).forEach(n),l.forEach(n),this.h()},h(){f(a,"d","M0 4.50001C0.390979 2.37042 2.25728 0.756592 4.5 0.756592C6.74272 0.756592 8.60861 2.37042 9 4.50001C8.60902 6.62959 6.74272 8.24342 4.5 8.24342C2.25728 8.24342 0.391395 6.62959 0 4.50001ZM4.5 6.57968C5.05156 6.57968 5.58054 6.36057 5.97055 5.97056C6.36057 5.58054 6.57967 5.05157 6.57967 4.50001C6.57967 3.94844 6.36057 3.41947 5.97055 3.02945C5.58054 2.63944 5.05156 2.42033 4.5 2.42033C3.94844 2.42033 3.41946 2.63944 3.02945 3.02945C2.63943 3.41947 2.42033 3.94844 2.42033 4.50001C2.42033 5.05157 2.63943 5.58054 3.02945 5.97056C3.41946 6.36057 3.94844 6.57968 4.5 6.57968ZM4.5 5.74781C4.16906 5.74781 3.85168 5.61635 3.61767 5.38234C3.38366 5.14833 3.2522 4.83094 3.2522 4.50001C3.2522 4.16907 3.38366 3.85168 3.61767 3.61767C3.85168 3.38367 4.16906 3.2522 4.5 3.2522C4.83094 3.2522 5.14832 3.38367 5.38233 3.61767C5.61634 3.85168 5.7478 4.16907 5.7478 4.50001C5.7478 4.83094 5.61634 5.14833 5.38233 5.38234C5.14832 5.61635 4.83094 5.74781 4.5 5.74781Z"),f(a,"fill","currentColor"),f(e,"class",r[0]),f(e,"width",r[1]),f(e,"height",r[1]),f(e,"viewBox","0 0 9 9"),f(e,"fill","currentColor"),f(e,"xmlns","http://www.w3.org/2000/svg")},m(t,l){$(t,e,l),s(e,a)},p(t,[l]){l&1&&f(e,"class",t[0]),l&2&&f(e,"width",t[1]),l&2&&f(e,"height",t[1])},i:Z,o:Z,d(t){t&&n(e)}}}function Af(r,e,a){let{classNames:t=""}=e,{size:l="1em"}=e;return r.$$set=i=>{"classNames"in i&&a(0,t=i.classNames),"size"in i&&a(1,l=i.size)},[t,l]}class qf extends we{constructor(e){super();ke(this,e,Af,Cf,ze,{classNames:0,size:1})}}function Tf(r){let e,a;return{c(){e=H("svg"),a=H("path"),this.h()},l(t){e=U(t,"svg",{class:!0,width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=u(e);a=U(l,"path",{d:!0,fill:!0}),u(a).forEach(n),l.forEach(n),this.h()},h(){f(a,"d","M1.39125 1.9725L0.0883333 0.669997L0.677917 0.0804138L8.9275 8.33041L8.33792 8.91958L6.95875 7.54041C6.22592 8.00523 5.37572 8.25138 4.50792 8.25C2.26125 8.25 0.392083 6.63333 0 4.5C0.179179 3.52946 0.667345 2.64287 1.39167 1.9725H1.39125ZM5.65667 6.23833L5.04667 5.62833C4.81335 5.73996 4.55116 5.77647 4.29622 5.73282C4.04129 5.68918 3.80617 5.56752 3.62328 5.38463C3.44039 5.20175 3.31874 4.96663 3.27509 4.71169C3.23144 4.45676 3.26795 4.19456 3.37958 3.96125L2.76958 3.35125C2.50447 3.75187 2.38595 4.2318 2.4341 4.70978C2.48225 5.18777 2.6941 5.63442 3.0338 5.97411C3.37349 6.31381 3.82015 6.52567 4.29813 6.57382C4.77611 6.62197 5.25605 6.50345 5.65667 6.23833ZM2.83042 1.06666C3.35 0.862497 3.91625 0.749997 4.50792 0.749997C6.75458 0.749997 8.62375 2.36666 9.01583 4.5C8.88816 5.19404 8.60119 5.84899 8.1775 6.41333L6.56917 4.805C6.61694 4.48317 6.58868 4.15463 6.48664 3.84569C6.3846 3.53675 6.21162 3.256 5.98156 3.02594C5.7515 2.79588 5.47075 2.6229 5.16181 2.52086C4.85287 2.41882 4.52433 2.39056 4.2025 2.43833L2.83042 1.06708V1.06666Z"),f(a,"fill","currentColor"),f(e,"class",r[0]),f(e,"width",r[1]),f(e,"height",r[1]),f(e,"viewBox","0 0 10 9"),f(e,"fill","currentColor"),f(e,"xmlns","http://www.w3.org/2000/svg")},m(t,l){$(t,e,l),s(e,a)},p(t,[l]){l&1&&f(e,"class",t[0]),l&2&&f(e,"width",t[1]),l&2&&f(e,"height",t[1])},i:Z,o:Z,d(t){t&&n(e)}}}function Mf(r,e,a){let{classNames:t=""}=e,{size:l="1em"}=e;return r.$$set=i=>{"classNames"in i&&a(0,t=i.classNames),"size"in i&&a(1,l=i.size)},[t,l]}class Sf extends we{constructor(e){super();ke(this,e,Mf,Tf,ze,{classNames:0,size:1})}}const{window:yf}=ku;function pu(r){let e,a,t,l,i,c,h,d,v,j;return a=new Sf({props:{size:"0.9em"}}),{c(){e=_("div"),N(a.$$.fragment),t=C(),l=_("span"),i=p("Hide "),c=p(r[3]),h=p(" content"),this.h()},l(S){e=g(S,"DIV",{class:!0});var P=u(e);F(a.$$.fragment,P),t=A(P),l=g(P,"SPAN",{});var T=u(l);i=m(T,"Hide "),c=m(T,r[3]),h=m(T," content"),T.forEach(n),P.forEach(n),this.h()},h(){f(e,"class","cursor-pointer flex items-center justify-center space-x-1 text-sm px-2 bg-white dark:bg-gray-950 hover:underline leading-none")},m(S,P){$(S,e,P),D(a,e,null),s(e,t),s(e,l),s(l,i),s(l,c),s(l,h),d=!0,v||(j=rl(e,"click",r[5]),v=!0)},p:Z,i(S){d||(k(a.$$.fragment,S),d=!0)},o(S){E(a.$$.fragment,S),d=!1},d(S){S&&n(e),I(a),v=!1,j()}}}function Pf(r){let e,a;const t=r[10].default,l=Me(t,r,r[9],null);return{c(){e=_("div"),l&&l.c(),this.h()},l(i){e=g(i,"DIV",{class:!0});var c=u(e);l&&l.l(c),c.forEach(n),this.h()},h(){f(e,"class","framework-content")},m(i,c){$(i,e,c),l&&l.m(e,null),a=!0},p(i,c){l&&l.p&&(!a||c&512)&&Se(l,t,i,i[9],a?Pe(t,i[9],c,null):ye(i[9]),null)},i(i){a||(k(l,i),a=!0)},o(i){E(l,i),a=!1},d(i){i&&n(e),l&&l.d(i)}}}function Nf(r){let e,a,t,l,i,c,h,d,v,j;return a=new qf({props:{size:"0.9em"}}),{c(){e=_("div"),N(a.$$.fragment),t=C(),l=_("span"),i=p("Show "),c=p(r[3]),h=p(" content"),this.h()},l(S){e=g(S,"DIV",{class:!0});var P=u(e);F(a.$$.fragment,P),t=A(P),l=g(P,"SPAN",{});var T=u(l);i=m(T,"Show "),c=m(T,r[3]),h=m(T," content"),T.forEach(n),P.forEach(n),this.h()},h(){f(e,"class","cursor-pointer mt-[-12.5px] flex items-center justify-center space-x-1 py-4 text-sm hover:underline leading-none")},m(S,P){$(S,e,P),D(a,e,null),s(e,t),s(e,l),s(l,i),s(l,c),s(l,h),d=!0,v||(j=rl(e,"click",r[5]),v=!0)},p:Z,i(S){d||(k(a.$$.fragment,S),d=!0)},o(S){E(a.$$.fragment,S),d=!1},d(S){S&&n(e),I(a),v=!1,j()}}}function Df(r){let e,a,t,l,i,c,h,d,v,j,S,P,T,y;var z=r[2];function M(J){return{}}z&&(l=new z(M()));let w=!r[1]&&pu(r);const q=[Nf,Pf],O=[];function G(J,B){return J[1]?0:1}return j=G(r),S=O[j]=q[j](r),{c(){e=_("div"),a=_("div"),t=_("div"),l&&N(l.$$.fragment),i=C(),c=_("span"),h=p(r[3]),d=C(),w&&w.c(),v=C(),S.c(),this.h()},l(J){e=g(J,"DIV",{class:!0});var B=u(e);a=g(B,"DIV",{class:!0});var W=u(a);t=g(W,"DIV",{class:!0});var K=u(t);l&&F(l.$$.fragment,K),i=A(K),c=g(K,"SPAN",{});var x=u(c);h=m(x,r[3]),x.forEach(n),K.forEach(n),d=A(W),w&&w.l(W),W.forEach(n),v=A(B),S.l(B),B.forEach(n),this.h()},h(){f(t,"class","flex px-1 items-center space-x-1 bg-white dark:bg-gray-950"),f(a,"class","flex h-[22px] mt-[-12.5px] justify-between leading-none"),f(e,"class","border border-gray-200 rounded-xl px-4 relative")},m(J,B){$(J,e,B),s(e,a),s(a,t),l&&D(l,t,null),s(t,i),s(t,c),s(c,h),s(a,d),w&&w.m(a,null),s(e,v),O[j].m(e,null),r[11](e),P=!0,T||(y=rl(yf,"hashchange",r[6]),T=!0)},p(J,[B]){if(z!==(z=J[2])){if(l){ve();const K=l;E(K.$$.fragment,1,0,()=>{I(K,1)}),be()}z?(l=new z(M()),N(l.$$.fragment),k(l.$$.fragment,1),D(l,t,i)):l=null}J[1]?w&&(ve(),E(w,1,1,()=>{w=null}),be()):w?(w.p(J,B),B&2&&k(w,1)):(w=pu(J),w.c(),k(w,1),w.m(a,null));let W=j;j=G(J),j===W?O[j].p(J,B):(ve(),E(O[W],1,1,()=>{O[W]=null}),be(),S=O[j],S?S.p(J,B):(S=O[j]=q[j](J),S.c()),k(S,1),S.m(e,null))},i(J){P||(l&&k(l.$$.fragment,J),k(w),k(S),P=!0)},o(J){l&&E(l.$$.fragment,J),E(w),E(S),P=!1},d(J){J&&n(e),l&&I(l),w&&w.d(),O[j].d(),r[11](null),T=!1,y()}}}function If(r,e,a){let t,l,{$$slots:i={},$$scope:c}=e,{framework:h}=e,d,v=new Set;const j={pytorch:{Icon:Du,label:"Pytorch"},tensorflow:{Icon:Ou,label:"TensorFlow"},jax:{Icon:jf,label:"JAX"}},{Icon:S,label:P}=j[h],T=`hf_doc_framework_${h}_is_hidden`,y=yu(h);qu(r,y,q=>a(8,l=q));function z(){ds(y,l=l!==Ke.CLOSED?Ke.CLOSED:Ke.OPEN,l),localStorage.setItem(T,l)}function M(){const q=window.location.hash.slice(1);v.has(q)&&(ds(y,l=Ke.HASHASHLINK,l),localStorage.setItem(T,l))}hs(()=>{const q=window.location.hash.slice(1),O="header-link",G=d.querySelectorAll(`.${O}`);v=new Set([...G].map(B=>B.id));const J=localStorage.getItem(T);v.has(q)?ds(y,l=Ke.HASHASHLINK,l):J===Ke.CLOSED&&l!==Ke.HASHASHLINK&&ds(y,l=Ke.CLOSED,l)});function w(q){_s[q?"unshift":"push"](()=>{d=q,a(0,d)})}return r.$$set=q=>{"framework"in q&&a(7,h=q.framework),"$$scope"in q&&a(9,c=q.$$scope)},r.$$.update=()=>{r.$$.dirty&256&&a(1,t=l===Ke.CLOSED)},[d,t,S,P,y,z,M,h,l,c,i,w]}class _r extends we{constructor(e){super();ke(this,e,If,Df,ze,{framework:7})}}const Ff=r=>({}),mu=r=>({}),Of=r=>({}),du=r=>({}),Lf=r=>({}),hu=r=>({});function _u(r){let e,a;return e=new _r({props:{framework:"pytorch",$$slots:{default:[Rf]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&16&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function Rf(r){let e;const a=r[3].pytorch,t=Me(a,r,r[4],hu);return{c(){t&&t.c()},l(l){t&&t.l(l)},m(l,i){t&&t.m(l,i),e=!0},p(l,i){t&&t.p&&(!e||i&16)&&Se(t,a,l,l[4],e?Pe(a,l[4],i,Lf):ye(l[4]),hu)},i(l){e||(k(t,l),e=!0)},o(l){E(t,l),e=!1},d(l){t&&t.d(l)}}}function gu(r){let e,a;return e=new _r({props:{framework:"tensorflow",$$slots:{default:[Bf]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&16&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function Bf(r){let e;const a=r[3].tensorflow,t=Me(a,r,r[4],du);return{c(){t&&t.c()},l(l){t&&t.l(l)},m(l,i){t&&t.m(l,i),e=!0},p(l,i){t&&t.p&&(!e||i&16)&&Se(t,a,l,l[4],e?Pe(a,l[4],i,Of):ye(l[4]),du)},i(l){e||(k(t,l),e=!0)},o(l){E(t,l),e=!1},d(l){t&&t.d(l)}}}function $u(r){let e,a;return e=new _r({props:{framework:"jax",$$slots:{default:[Hf]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&16&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function Hf(r){let e;const a=r[3].jax,t=Me(a,r,r[4],mu);return{c(){t&&t.c()},l(l){t&&t.l(l)},m(l,i){t&&t.m(l,i),e=!0},p(l,i){t&&t.p&&(!e||i&16)&&Se(t,a,l,l[4],e?Pe(a,l[4],i,Ff):ye(l[4]),mu)},i(l){e||(k(t,l),e=!0)},o(l){E(t,l),e=!1},d(l){t&&t.d(l)}}}function Uf(r){let e,a,t,l,i=r[0]&&_u(r),c=r[1]&&gu(r),h=r[2]&&$u(r);return{c(){e=_("div"),i&&i.c(),a=C(),c&&c.c(),t=C(),h&&h.c(),this.h()},l(d){e=g(d,"DIV",{class:!0});var v=u(e);i&&i.l(v),a=A(v),c&&c.l(v),t=A(v),h&&h.l(v),v.forEach(n),this.h()},h(){f(e,"class","space-y-10 py-6 2xl:py-8 2xl:-mx-4")},m(d,v){$(d,e,v),i&&i.m(e,null),s(e,a),c&&c.m(e,null),s(e,t),h&&h.m(e,null),l=!0},p(d,[v]){d[0]?i?(i.p(d,v),v&1&&k(i,1)):(i=_u(d),i.c(),k(i,1),i.m(e,a)):i&&(ve(),E(i,1,1,()=>{i=null}),be()),d[1]?c?(c.p(d,v),v&2&&k(c,1)):(c=gu(d),c.c(),k(c,1),c.m(e,t)):c&&(ve(),E(c,1,1,()=>{c=null}),be()),d[2]?h?(h.p(d,v),v&4&&k(h,1)):(h=$u(d),h.c(),k(h,1),h.m(e,null)):h&&(ve(),E(h,1,1,()=>{h=null}),be())},i(d){l||(k(i),k(c),k(h),l=!0)},o(d){E(i),E(c),E(h),l=!1},d(d){d&&n(e),i&&i.d(),c&&c.d(),h&&h.d()}}}function Jf(r,e,a){let{$$slots:t={},$$scope:l}=e,{pytorch:i=!1}=e,{tensorflow:c=!1}=e,{jax:h=!1}=e;return r.$$set=d=>{"pytorch"in d&&a(0,i=d.pytorch),"tensorflow"in d&&a(1,c=d.tensorflow),"jax"in d&&a(2,h=d.jax),"$$scope"in d&&a(4,l=d.$$scope)},[i,c,h,t,l]}class Pl extends we{constructor(e){super();ke(this,e,Jf,Uf,ze,{pytorch:0,tensorflow:1,jax:2})}}function Vf(r){let e;const a=r[1].default,t=Me(a,r,r[0],null);return{c(){t&&t.c()},l(l){t&&t.l(l)},m(l,i){t&&t.m(l,i),e=!0},p(l,[i]){t&&t.p&&(!e||i&1)&&Se(t,a,l,l[0],e?Pe(a,l[0],i,null):ye(l[0]),null)},i(l){e||(k(t,l),e=!0)},o(l){E(t,l),e=!1},d(l){t&&t.d(l)}}}function Gf(r,e,a){let{$$slots:t={},$$scope:l}=e;return r.$$set=i=>{"$$scope"in i&&a(0,l=i.$$scope)},[l,t]}class Ne extends we{constructor(e){super();ke(this,e,Gf,Vf,ze,{})}}function Kf(r){let e,a;return{c(){e=_("p"),a=p(`Tutti gli esempi di codice presenti in questa documentazione hanno un pulsante in alto a sinistra che permette di selezionare tra PyTorch e TensorFlow. Se
questo non \xE8 presente, ci si aspetta che il codice funzioni per entrambi i backend senza alcun cambiamento.`)},l(t){e=g(t,"P",{});var l=u(e);a=m(l,`Tutti gli esempi di codice presenti in questa documentazione hanno un pulsante in alto a sinistra che permette di selezionare tra PyTorch e TensorFlow. Se
questo non \xE8 presente, ci si aspetta che il codice funzioni per entrambi i backend senza alcun cambiamento.`),l.forEach(n)},m(t,l){$(t,e,l),s(e,a)},d(t){t&&n(e)}}}function Qf(r){let e,a,t,l,i,c,h,d;return{c(){e=_("p"),a=p("Per maggiori dettagli legati alla "),t=_("code"),l=p("pipeline()"),i=p(" e ai compiti ad essa associati, fai riferimento alla documentazione "),c=_("a"),h=p("qui"),d=p("."),this.h()},l(v){e=g(v,"P",{});var j=u(e);a=m(j,"Per maggiori dettagli legati alla "),t=g(j,"CODE",{});var S=u(t);l=m(S,"pipeline()"),S.forEach(n),i=m(j," e ai compiti ad essa associati, fai riferimento alla documentazione "),c=g(j,"A",{href:!0});var P=u(c);h=m(P,"qui"),P.forEach(n),d=m(j,"."),j.forEach(n),this.h()},h(){f(c,"href","./main_classes/pipelines")},m(v,j){$(v,e,j),s(e,a),s(e,t),s(t,l),s(e,i),s(e,c),s(c,h),s(e,d)},d(v){v&&n(e)}}}function xf(r){let e,a;return e=new Y({props:{code:"pip install torch",highlighted:"pip install torch"}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p:Z,i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function Zf(r){let e,a;return e=new Ne({props:{$$slots:{default:[xf]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function Wf(r){let e,a;return e=new Y({props:{code:"pip install tensorflow",highlighted:"pip install tensorflow"}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p:Z,i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function Yf(r){let e,a;return e=new Ne({props:{$$slots:{default:[Wf]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function Xf(r){let e,a,t,l,i,c,h,d,v,j,S,P,T,y;return T=new Y({props:{code:`from transformers import AutoTokenizer, AutoModelForSequenceClassification

model = AutoModelForSequenceClassification.from_pretrained(model_name)
tokenizer = AutoTokenizer.from_pretrained(model_name)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer, AutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModelForSequenceClassification.from_pretrained(model_name)
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(model_name)`}}),{c(){e=_("p"),a=p("Usa "),t=_("code"),l=p("AutoModelForSequenceClassification"),i=p(" e "),c=_("code"),h=p("AutoTokenizer"),d=p(" per caricare il modello pre-allenato e il suo tokenizer associato (maggiori informazioni su una "),v=_("code"),j=p("AutoClass"),S=p(" in seguito):"),P=C(),N(T.$$.fragment)},l(z){e=g(z,"P",{});var M=u(e);a=m(M,"Usa "),t=g(M,"CODE",{});var w=u(t);l=m(w,"AutoModelForSequenceClassification"),w.forEach(n),i=m(M," e "),c=g(M,"CODE",{});var q=u(c);h=m(q,"AutoTokenizer"),q.forEach(n),d=m(M," per caricare il modello pre-allenato e il suo tokenizer associato (maggiori informazioni su una "),v=g(M,"CODE",{});var O=u(v);j=m(O,"AutoClass"),O.forEach(n),S=m(M," in seguito):"),M.forEach(n),P=A(z),F(T.$$.fragment,z)},m(z,M){$(z,e,M),s(e,a),s(e,t),s(t,l),s(e,i),s(e,c),s(c,h),s(e,d),s(e,v),s(v,j),s(e,S),$(z,P,M),D(T,z,M),y=!0},p:Z,i(z){y||(k(T.$$.fragment,z),y=!0)},o(z){E(T.$$.fragment,z),y=!1},d(z){z&&n(e),z&&n(P),I(T,z)}}}function ep(r){let e,a;return e=new Ne({props:{$$slots:{default:[Xf]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function tp(r){let e,a,t,l,i,c,h,d,v,j,S,P,T,y;return T=new Y({props:{code:`from transformers import AutoTokenizer, TFAutoModelForSequenceClassification

model = TFAutoModelForSequenceClassification.from_pretrained(model_name)
tokenizer = AutoTokenizer.from_pretrained(model_name)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer, TFAutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model = TFAutoModelForSequenceClassification.from_pretrained(model_name)
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(model_name)`}}),{c(){e=_("p"),a=p("Usa "),t=_("code"),l=p("TFAutoModelForSequenceClassification"),i=p(" e "),c=_("code"),h=p("AutoTokenizer"),d=p(" per caricare il modello pre-allenato e il suo tokenizer associato (maggiori informazioni su una "),v=_("code"),j=p("TFAutoClass"),S=p(" in seguito):"),P=C(),N(T.$$.fragment)},l(z){e=g(z,"P",{});var M=u(e);a=m(M,"Usa "),t=g(M,"CODE",{});var w=u(t);l=m(w,"TFAutoModelForSequenceClassification"),w.forEach(n),i=m(M," e "),c=g(M,"CODE",{});var q=u(c);h=m(q,"AutoTokenizer"),q.forEach(n),d=m(M," per caricare il modello pre-allenato e il suo tokenizer associato (maggiori informazioni su una "),v=g(M,"CODE",{});var O=u(v);j=m(O,"TFAutoClass"),O.forEach(n),S=m(M," in seguito):"),M.forEach(n),P=A(z),F(T.$$.fragment,z)},m(z,M){$(z,e,M),s(e,a),s(e,t),s(t,l),s(e,i),s(e,c),s(c,h),s(e,d),s(e,v),s(v,j),s(e,S),$(z,P,M),D(T,z,M),y=!0},p:Z,i(z){y||(k(T.$$.fragment,z),y=!0)},o(z){E(T.$$.fragment,z),y=!1},d(z){z&&n(e),z&&n(P),I(T,z)}}}function lp(r){let e,a;return e=new Ne({props:{$$slots:{default:[tp]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function ap(r){let e,a;return e=new Y({props:{code:`pt_batch = tokenizer(
    ["Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.", "Speriamo te non la odierai."],
    padding=True,
    truncation=True,
    max_length=512,
    return_tensors="pt",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>pt_batch = tokenizer(
<span class="hljs-meta">... </span>    [<span class="hljs-string">&quot;Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.&quot;</span>, <span class="hljs-string">&quot;Speriamo te non la odierai.&quot;</span>],
<span class="hljs-meta">... </span>    padding=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>    truncation=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>    max_length=<span class="hljs-number">512</span>,
<span class="hljs-meta">... </span>    return_tensors=<span class="hljs-string">&quot;pt&quot;</span>,
<span class="hljs-meta">... </span>)`}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p:Z,i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function op(r){let e,a;return e=new Ne({props:{$$slots:{default:[ap]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function sp(r){let e,a;return e=new Y({props:{code:`tf_batch = tokenizer(
    ["Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.", "Speriamo te non la odierai."],
    padding=True,
    truncation=True,
    max_length=512,
    return_tensors="tf",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>tf_batch = tokenizer(
<span class="hljs-meta">... </span>    [<span class="hljs-string">&quot;Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.&quot;</span>, <span class="hljs-string">&quot;Speriamo te non la odierai.&quot;</span>],
<span class="hljs-meta">... </span>    padding=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>    truncation=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>    max_length=<span class="hljs-number">512</span>,
<span class="hljs-meta">... </span>    return_tensors=<span class="hljs-string">&quot;tf&quot;</span>,
<span class="hljs-meta">... </span>)`}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p:Z,i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function np(r){let e,a;return e=new Ne({props:{$$slots:{default:[sp]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function ip(r){let e,a,t,l,i,c,h,d;return{c(){e=_("p"),a=p("Guarda il "),t=_("a"),l=p("task summary"),i=p(" per sapere quale classe di "),c=_("code"),h=p("AutoModel"),d=p(" utilizzare per quale compito."),this.h()},l(v){e=g(v,"P",{});var j=u(e);a=m(j,"Guarda il "),t=g(j,"A",{href:!0});var S=u(t);l=m(S,"task summary"),S.forEach(n),i=m(j," per sapere quale classe di "),c=g(j,"CODE",{});var P=u(c);h=m(P,"AutoModel"),P.forEach(n),d=m(j," utilizzare per quale compito."),j.forEach(n),this.h()},h(){f(t,"href","./task_summary")},m(v,j){$(v,e,j),s(e,a),s(e,t),s(t,l),s(e,i),s(e,c),s(c,h),s(e,d)},d(v){v&&n(e)}}}function rp(r){let e,a,t,l,i,c,h,d,v,j,S,P,T,y,z,M,w,q,O,G,J,B,W,K,x,ne,oe,se,fe,re,pe,ie,ee,ce,me,R,V,le;return M=new Y({props:{code:`from transformers import AutoModelForSequenceClassification

model_name = "nlptown/bert-base-multilingual-uncased-sentiment"
pt_model = AutoModelForSequenceClassification.from_pretrained(model_name)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model_name = <span class="hljs-string">&quot;nlptown/bert-base-multilingual-uncased-sentiment&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model = AutoModelForSequenceClassification.from_pretrained(model_name)`}}),q=new Nl({props:{$$slots:{default:[ip]},$$scope:{ctx:r}}}),ne=new Y({props:{code:"pt_outputs = pt_model(**pt_batch)",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_outputs = pt_model(**pt_batch)'}}),V=new Y({props:{code:`from torch import nn

pt_predictions = nn.functional.softmax(pt_outputs.logits, dim=-1)
print(pt_predictions)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> torch <span class="hljs-keyword">import</span> nn

<span class="hljs-meta">&gt;&gt;&gt; </span>pt_predictions = nn.functional.softmax(pt_outputs.logits, dim=-<span class="hljs-number">1</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(pt_predictions)
tensor([[<span class="hljs-number">0.0041</span>, <span class="hljs-number">0.0037</span>, <span class="hljs-number">0.0203</span>, <span class="hljs-number">0.2005</span>, <span class="hljs-number">0.7713</span>],
        [<span class="hljs-number">0.3766</span>, <span class="hljs-number">0.3292</span>, <span class="hljs-number">0.1832</span>, <span class="hljs-number">0.0558</span>, <span class="hljs-number">0.0552</span>]], grad_fn=&lt;SoftmaxBackward0&gt;)`}}),{c(){e=_("p"),a=p("\u{1F917} Transformers fornisce un metodo semplice e unificato per caricare istanze pre-allenate. Questo significa che puoi caricare un "),t=_("code"),l=p("AutoModel"),i=p(" come caricheresti un "),c=_("code"),h=p("AutoTokenizer"),d=p(". L\u2019unica differenza \xE8 selezionare l\u2019"),v=_("code"),j=p("AutoModel"),S=p(" corretto per il compito di interesse. Dato che stai facendo classificazione di testi, o sequenze, carica "),P=_("code"),T=p("AutoModelForSequenceClassification"),y=p(":"),z=C(),N(M.$$.fragment),w=C(),N(q.$$.fragment),O=C(),G=_("p"),J=p("Ora puoi passare il tuo lotto di input pre-processati direttamente al modello. Devi solo spacchettare il dizionario aggiungendo "),B=_("code"),W=p("**"),K=p(":"),x=C(),N(ne.$$.fragment),oe=C(),se=_("p"),fe=p("Il modello produrr\xE0 le attivazioni finali nell\u2019attributo "),re=_("code"),pe=p("logits"),ie=p(". Applica la funzione softmax a "),ee=_("code"),ce=p("logits"),me=p(" per ottenere le probabilit\xE0:"),R=C(),N(V.$$.fragment)},l(L){e=g(L,"P",{});var Q=u(e);a=m(Q,"\u{1F917} Transformers fornisce un metodo semplice e unificato per caricare istanze pre-allenate. Questo significa che puoi caricare un "),t=g(Q,"CODE",{});var ue=u(t);l=m(ue,"AutoModel"),ue.forEach(n),i=m(Q," come caricheresti un "),c=g(Q,"CODE",{});var _e=u(c);h=m(_e,"AutoTokenizer"),_e.forEach(n),d=m(Q,". L\u2019unica differenza \xE8 selezionare l\u2019"),v=g(Q,"CODE",{});var X=u(v);j=m(X,"AutoModel"),X.forEach(n),S=m(Q," corretto per il compito di interesse. Dato che stai facendo classificazione di testi, o sequenze, carica "),P=g(Q,"CODE",{});var qe=u(P);T=m(qe,"AutoModelForSequenceClassification"),qe.forEach(n),y=m(Q,":"),Q.forEach(n),z=A(L),F(M.$$.fragment,L),w=A(L),F(q.$$.fragment,L),O=A(L),G=g(L,"P",{});var ae=u(G);J=m(ae,"Ora puoi passare il tuo lotto di input pre-processati direttamente al modello. Devi solo spacchettare il dizionario aggiungendo "),B=g(ae,"CODE",{});var Te=u(B);W=m(Te,"**"),Te.forEach(n),K=m(ae,":"),ae.forEach(n),x=A(L),F(ne.$$.fragment,L),oe=A(L),se=g(L,"P",{});var Ee=u(se);fe=m(Ee,"Il modello produrr\xE0 le attivazioni finali nell\u2019attributo "),re=g(Ee,"CODE",{});var De=u(re);pe=m(De,"logits"),De.forEach(n),ie=m(Ee,". Applica la funzione softmax a "),ee=g(Ee,"CODE",{});var ge=u(ee);ce=m(ge,"logits"),ge.forEach(n),me=m(Ee," per ottenere le probabilit\xE0:"),Ee.forEach(n),R=A(L),F(V.$$.fragment,L)},m(L,Q){$(L,e,Q),s(e,a),s(e,t),s(t,l),s(e,i),s(e,c),s(c,h),s(e,d),s(e,v),s(v,j),s(e,S),s(e,P),s(P,T),s(e,y),$(L,z,Q),D(M,L,Q),$(L,w,Q),D(q,L,Q),$(L,O,Q),$(L,G,Q),s(G,J),s(G,B),s(B,W),s(G,K),$(L,x,Q),D(ne,L,Q),$(L,oe,Q),$(L,se,Q),s(se,fe),s(se,re),s(re,pe),s(se,ie),s(se,ee),s(ee,ce),s(se,me),$(L,R,Q),D(V,L,Q),le=!0},p(L,Q){const ue={};Q&2&&(ue.$$scope={dirty:Q,ctx:L}),q.$set(ue)},i(L){le||(k(M.$$.fragment,L),k(q.$$.fragment,L),k(ne.$$.fragment,L),k(V.$$.fragment,L),le=!0)},o(L){E(M.$$.fragment,L),E(q.$$.fragment,L),E(ne.$$.fragment,L),E(V.$$.fragment,L),le=!1},d(L){L&&n(e),L&&n(z),I(M,L),L&&n(w),I(q,L),L&&n(O),L&&n(G),L&&n(x),I(ne,L),L&&n(oe),L&&n(se),L&&n(R),I(V,L)}}}function cp(r){let e,a;return e=new Ne({props:{$$slots:{default:[rp]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function up(r){let e,a,t,l,i,c,h,d;return{c(){e=_("p"),a=p("Guarda il "),t=_("a"),l=p("task summary"),i=p(" per sapere quale classe di "),c=_("code"),h=p("AutoModel"),d=p(" utilizzare per quale compito."),this.h()},l(v){e=g(v,"P",{});var j=u(e);a=m(j,"Guarda il "),t=g(j,"A",{href:!0});var S=u(t);l=m(S,"task summary"),S.forEach(n),i=m(j," per sapere quale classe di "),c=g(j,"CODE",{});var P=u(c);h=m(P,"AutoModel"),P.forEach(n),d=m(j," utilizzare per quale compito."),j.forEach(n),this.h()},h(){f(t,"href","./task_summary")},m(v,j){$(v,e,j),s(e,a),s(e,t),s(t,l),s(e,i),s(e,c),s(c,h),s(e,d)},d(v){v&&n(e)}}}function fp(r){let e,a,t,l,i,c,h,d,v,j,S,P,T,y,z,M,w,q,O,G,J,B,W,K,x,ne,oe,se,fe,re,pe,ie,ee,ce,me;return M=new Y({props:{code:`from transformers import TFAutoModelForSequenceClassification

nome_del_modello = "nlptown/bert-base-multilingual-uncased-sentiment"
tf_model = TFAutoModelForSequenceClassification.from_pretrained(nome_del_modello)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFAutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>nome_del_modello = <span class="hljs-string">&quot;nlptown/bert-base-multilingual-uncased-sentiment&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFAutoModelForSequenceClassification.from_pretrained(nome_del_modello)`}}),q=new Nl({props:{$$slots:{default:[up]},$$scope:{ctx:r}}}),W=new Y({props:{code:"tf_outputs = tf_model(tf_batch)",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_outputs = tf_model(tf_batch)'}}),ce=new Y({props:{code:`import tensorflow as tf

tf_predictions = tf.nn.softmax(tf_outputs.logits, axis=-1)
tf_predictions`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf

<span class="hljs-meta">&gt;&gt;&gt; </span>tf_predictions = tf.nn.softmax(tf_outputs.logits, axis=-<span class="hljs-number">1</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_predictions`}}),{c(){e=_("p"),a=p("\u{1F917} Transformers fornisce un metodo semplice e unificato per caricare istanze pre-allenate. Questo significa che puoi caricare un "),t=_("code"),l=p("TFAutoModel"),i=p(" come caricheresti un "),c=_("code"),h=p("AutoTokenizer"),d=p(". L\u2019unica differenza \xE8 selezionare il "),v=_("code"),j=p("TFAutoModel"),S=p(" corretto per il compito di interesse. Dato che stai facendo classificazione di testi, o sequenze, carica "),P=_("code"),T=p("TFAutoModelForSequenceClassification"),y=p(":"),z=C(),N(M.$$.fragment),w=C(),N(q.$$.fragment),O=C(),G=_("p"),J=p("Ora puoi passare il tuo lotto di input pre-processati direttamente al modello passando le chiavi del dizionario al tensore:"),B=C(),N(W.$$.fragment),K=C(),x=_("p"),ne=p("Il modello produrr\xE0 le attivazioni finali nell\u2019attributo "),oe=_("code"),se=p("logits"),fe=p(". Applica la funzione softmax a "),re=_("code"),pe=p("logits"),ie=p(" per ottenere le probabilit\xE0:"),ee=C(),N(ce.$$.fragment)},l(R){e=g(R,"P",{});var V=u(e);a=m(V,"\u{1F917} Transformers fornisce un metodo semplice e unificato per caricare istanze pre-allenate. Questo significa che puoi caricare un "),t=g(V,"CODE",{});var le=u(t);l=m(le,"TFAutoModel"),le.forEach(n),i=m(V," come caricheresti un "),c=g(V,"CODE",{});var L=u(c);h=m(L,"AutoTokenizer"),L.forEach(n),d=m(V,". L\u2019unica differenza \xE8 selezionare il "),v=g(V,"CODE",{});var Q=u(v);j=m(Q,"TFAutoModel"),Q.forEach(n),S=m(V," corretto per il compito di interesse. Dato che stai facendo classificazione di testi, o sequenze, carica "),P=g(V,"CODE",{});var ue=u(P);T=m(ue,"TFAutoModelForSequenceClassification"),ue.forEach(n),y=m(V,":"),V.forEach(n),z=A(R),F(M.$$.fragment,R),w=A(R),F(q.$$.fragment,R),O=A(R),G=g(R,"P",{});var _e=u(G);J=m(_e,"Ora puoi passare il tuo lotto di input pre-processati direttamente al modello passando le chiavi del dizionario al tensore:"),_e.forEach(n),B=A(R),F(W.$$.fragment,R),K=A(R),x=g(R,"P",{});var X=u(x);ne=m(X,"Il modello produrr\xE0 le attivazioni finali nell\u2019attributo "),oe=g(X,"CODE",{});var qe=u(oe);se=m(qe,"logits"),qe.forEach(n),fe=m(X,". Applica la funzione softmax a "),re=g(X,"CODE",{});var ae=u(re);pe=m(ae,"logits"),ae.forEach(n),ie=m(X," per ottenere le probabilit\xE0:"),X.forEach(n),ee=A(R),F(ce.$$.fragment,R)},m(R,V){$(R,e,V),s(e,a),s(e,t),s(t,l),s(e,i),s(e,c),s(c,h),s(e,d),s(e,v),s(v,j),s(e,S),s(e,P),s(P,T),s(e,y),$(R,z,V),D(M,R,V),$(R,w,V),D(q,R,V),$(R,O,V),$(R,G,V),s(G,J),$(R,B,V),D(W,R,V),$(R,K,V),$(R,x,V),s(x,ne),s(x,oe),s(oe,se),s(x,fe),s(x,re),s(re,pe),s(x,ie),$(R,ee,V),D(ce,R,V),me=!0},p(R,V){const le={};V&2&&(le.$$scope={dirty:V,ctx:R}),q.$set(le)},i(R){me||(k(M.$$.fragment,R),k(q.$$.fragment,R),k(W.$$.fragment,R),k(ce.$$.fragment,R),me=!0)},o(R){E(M.$$.fragment,R),E(q.$$.fragment,R),E(W.$$.fragment,R),E(ce.$$.fragment,R),me=!1},d(R){R&&n(e),R&&n(z),I(M,R),R&&n(w),I(q,R),R&&n(O),R&&n(G),R&&n(B),I(W,R),R&&n(K),R&&n(x),R&&n(ee),I(ce,R)}}}function pp(r){let e,a;return e=new Ne({props:{$$slots:{default:[fp]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function mp(r){let e,a,t,l,i;return{c(){e=_("p"),a=p("Tutti i modelli di \u{1F917} Transformers (PyTorch e TensorFlow) restituiscono i tensori "),t=_("em"),l=p("prima"),i=p(` della funzione finale
di attivazione (come la softmax) perch\xE9 la funzione di attivazione finale viene spesso unita a quella di perdita.`)},l(c){e=g(c,"P",{});var h=u(e);a=m(h,"Tutti i modelli di \u{1F917} Transformers (PyTorch e TensorFlow) restituiscono i tensori "),t=g(h,"EM",{});var d=u(t);l=m(d,"prima"),d.forEach(n),i=m(h,` della funzione finale
di attivazione (come la softmax) perch\xE9 la funzione di attivazione finale viene spesso unita a quella di perdita.`),h.forEach(n)},m(c,h){$(c,e,h),s(e,a),s(e,t),s(t,l),s(e,i)},d(c){c&&n(e)}}}function dp(r){let e,a,t,l,i;return{c(){e=_("p"),a=p(`Gli output del modello di \u{1F917} Transformers sono delle dataclasses speciali in modo che i loro attributi vengano auto-completati all\u2019interno di un IDE.
Gli output del modello si comportano anche come una tupla o un dizionario (ad esempio, puoi indicizzare con un intero, una slice o una stringa) nel qual caso gli attributi che sono `),t=_("code"),l=p("None"),i=p(" vengono ignorati.")},l(c){e=g(c,"P",{});var h=u(e);a=m(h,`Gli output del modello di \u{1F917} Transformers sono delle dataclasses speciali in modo che i loro attributi vengano auto-completati all\u2019interno di un IDE.
Gli output del modello si comportano anche come una tupla o un dizionario (ad esempio, puoi indicizzare con un intero, una slice o una stringa) nel qual caso gli attributi che sono `),t=g(h,"CODE",{});var d=u(t);l=m(d,"None"),d.forEach(n),i=m(h," vengono ignorati."),h.forEach(n)},m(c,h){$(c,e,h),s(e,a),s(e,t),s(t,l),s(e,i)},d(c){c&&n(e)}}}function hp(r){let e,a,t,l,i,c,h,d,v,j,S,P,T,y,z,M;return h=new Y({props:{code:`pt_save_directory = "./pt_save_pretrained"
tokenizer.save_pretrained(pt_save_directory)
pt_model.save_pretrained(pt_save_directory)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>pt_save_directory = <span class="hljs-string">&quot;./pt_save_pretrained&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.save_pretrained(pt_save_directory)
<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.save_pretrained(pt_save_directory)`}}),z=new Y({props:{code:'pt_model = AutoModelForSequenceClassification.from_pretrained("./pt_save_pretrained")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model = AutoModelForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;./pt_save_pretrained&quot;</span>)'}}),{c(){e=_("p"),a=p("Una volta completato il fine-tuning del tuo modello, puoi salvarlo con il suo tokenizer utilizzando "),t=_("code"),l=p("PreTrainedModel.save_pretrained()"),i=p(":"),c=C(),N(h.$$.fragment),d=C(),v=_("p"),j=p("Quando desideri utilizzare il tuo modello nuovamente, puoi ri-caricarlo con "),S=_("code"),P=p("PreTrainedModel.from_pretrained()"),T=p(":"),y=C(),N(z.$$.fragment)},l(w){e=g(w,"P",{});var q=u(e);a=m(q,"Una volta completato il fine-tuning del tuo modello, puoi salvarlo con il suo tokenizer utilizzando "),t=g(q,"CODE",{});var O=u(t);l=m(O,"PreTrainedModel.save_pretrained()"),O.forEach(n),i=m(q,":"),q.forEach(n),c=A(w),F(h.$$.fragment,w),d=A(w),v=g(w,"P",{});var G=u(v);j=m(G,"Quando desideri utilizzare il tuo modello nuovamente, puoi ri-caricarlo con "),S=g(G,"CODE",{});var J=u(S);P=m(J,"PreTrainedModel.from_pretrained()"),J.forEach(n),T=m(G,":"),G.forEach(n),y=A(w),F(z.$$.fragment,w)},m(w,q){$(w,e,q),s(e,a),s(e,t),s(t,l),s(e,i),$(w,c,q),D(h,w,q),$(w,d,q),$(w,v,q),s(v,j),s(v,S),s(S,P),s(v,T),$(w,y,q),D(z,w,q),M=!0},p:Z,i(w){M||(k(h.$$.fragment,w),k(z.$$.fragment,w),M=!0)},o(w){E(h.$$.fragment,w),E(z.$$.fragment,w),M=!1},d(w){w&&n(e),w&&n(c),I(h,w),w&&n(d),w&&n(v),w&&n(y),I(z,w)}}}function _p(r){let e,a;return e=new Ne({props:{$$slots:{default:[hp]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function gp(r){let e,a,t,l,i,c,h,d,v,j,S,P,T,y,z,M;return h=new Y({props:{code:`tf_save_directory = "./tf_save_pretrained"
tokenizer.save_pretrained(tf_save_directory)
tf_model.save_pretrained(tf_save_directory)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>tf_save_directory = <span class="hljs-string">&quot;./tf_save_pretrained&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.save_pretrained(tf_save_directory)
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model.save_pretrained(tf_save_directory)`}}),z=new Y({props:{code:'tf_model = TFAutoModelForSequenceClassification.from_pretrained("./tf_save_pretrained")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFAutoModelForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;./tf_save_pretrained&quot;</span>)'}}),{c(){e=_("p"),a=p("Una volta completato il fine-tuning del tuo modello, puoi salvarlo con il suo tokenizer utilizzando "),t=_("code"),l=p("TFPreTrainedModel.save_pretrained()"),i=p(":"),c=C(),N(h.$$.fragment),d=C(),v=_("p"),j=p("Quando desideri utilizzare il tuo modello nuovamente, puoi ri-caricarlo con "),S=_("code"),P=p("TFPreTrainedModel.from_pretrained()"),T=p(":"),y=C(),N(z.$$.fragment)},l(w){e=g(w,"P",{});var q=u(e);a=m(q,"Una volta completato il fine-tuning del tuo modello, puoi salvarlo con il suo tokenizer utilizzando "),t=g(q,"CODE",{});var O=u(t);l=m(O,"TFPreTrainedModel.save_pretrained()"),O.forEach(n),i=m(q,":"),q.forEach(n),c=A(w),F(h.$$.fragment,w),d=A(w),v=g(w,"P",{});var G=u(v);j=m(G,"Quando desideri utilizzare il tuo modello nuovamente, puoi ri-caricarlo con "),S=g(G,"CODE",{});var J=u(S);P=m(J,"TFPreTrainedModel.from_pretrained()"),J.forEach(n),T=m(G,":"),G.forEach(n),y=A(w),F(z.$$.fragment,w)},m(w,q){$(w,e,q),s(e,a),s(e,t),s(t,l),s(e,i),$(w,c,q),D(h,w,q),$(w,d,q),$(w,v,q),s(v,j),s(v,S),s(S,P),s(v,T),$(w,y,q),D(z,w,q),M=!0},p:Z,i(w){M||(k(h.$$.fragment,w),k(z.$$.fragment,w),M=!0)},o(w){E(h.$$.fragment,w),E(z.$$.fragment,w),M=!1},d(w){w&&n(e),w&&n(c),I(h,w),w&&n(d),w&&n(v),w&&n(y),I(z,w)}}}function $p(r){let e,a;return e=new Ne({props:{$$slots:{default:[gp]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function vp(r){let e,a;return e=new Y({props:{code:`from transformers import AutoModel

tokenizer = AutoTokenizer.from_pretrained(tf_save_directory)
pt_model = AutoModelForSequenceClassification.from_pretrained(tf_save_directory, from_tf=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModel

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(tf_save_directory)
<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model = AutoModelForSequenceClassification.from_pretrained(tf_save_directory, from_tf=<span class="hljs-literal">True</span>)`}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p:Z,i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function bp(r){let e,a;return e=new Ne({props:{$$slots:{default:[vp]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function wp(r){let e,a;return e=new Y({props:{code:`from transformers import TFAutoModel

tokenizer = AutoTokenizer.from_pretrained(pt_save_directory)
tf_model = TFAutoModelForSequenceClassification.from_pretrained(pt_save_directory, from_pt=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFAutoModel

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(pt_save_directory)
<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFAutoModelForSequenceClassification.from_pretrained(pt_save_directory, from_pt=<span class="hljs-literal">True</span>)`}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p:Z,i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function kp(r){let e,a;return e=new Ne({props:{$$slots:{default:[wp]},$$scope:{ctx:r}}}),{c(){N(e.$$.fragment)},l(t){F(e.$$.fragment,t)},m(t,l){D(e,t,l),a=!0},p(t,l){const i={};l&2&&(i.$$scope={dirty:l,ctx:t}),e.$set(i)},i(t){a||(k(e.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),a=!1},d(t){I(e,t)}}}function zp(r){let e,a,t,l,i,c,h,d,v,j,S,P,T,y,z,M,w,q,O,G,J,B,W,K,x,ne,oe,se,fe,re,pe,ie,ee,ce,me,R,V,le,L,Q,ue,_e,X,qe,ae,Te,Ee,De,ge,te,Ie,gs,$s,Il,vs,bs,Fl,ws,ks,Ol,zs,Es,Ll,js,Cs,Rl,As,qs,Bl,Ts,Ms,Hl,Ss,Ua,Mt,Ul,ys,Ps,Ja,Fe,Jl,Ns,Ds,Vl,Is,Fs,Gl,Os,Va,St,Kl,Ls,Rs,Ga,lt,Ql,Bs,Hs,xl,Us,Ka,at,Qa,xe,ot,Zl,yt,Js,Wl,Vs,xa,st,Gs,Yl,Ks,Qs,Za,cl,xs,Wa,nt,Ya,it,Zs,Xl,Ws,Ys,Xa,Pt,eo,Oe,Xs,Nt,en,tn,ea,ln,an,to,Dt,lo,rt,on,ta,sn,nn,ao,It,oo,Le,rn,la,cn,un,Ft,fn,pn,so,Ot,no,ct,mn,aa,dn,hn,io,Lt,ro,Re,_n,Rt,gn,$n,Bt,vn,bn,co,Ht,uo,ut,wn,oa,kn,zn,fo,Ut,po,ul,En,mo,Jt,ho,ft,jn,fl,Cn,An,_o,Ze,pt,sa,Vt,qn,na,Tn,go,je,Mn,ia,Sn,yn,Gt,Pn,Nn,ra,Dn,In,Kt,Fn,On,$o,Qt,vo,mt,bo,Be,Ln,ca,Rn,Bn,ua,Hn,Un,wo,xt,ko,He,Jn,pl,Vn,Gn,ml,Kn,Qn,zo,We,dt,fa,Zt,xn,pa,Zn,Eo,Wt,jo,de,Wn,ma,Yn,Xn,da,ei,ti,ha,li,ai,dl,oi,si,_a,ni,ii,ga,ri,ci,Co,Ue,ui,$a,fi,pi,va,mi,di,Ao,Ye,ht,ba,Yt,hi,wa,_i,qo,Je,gi,ka,$i,vi,hl,bi,wi,To,_t,ki,za,zi,Ei,Mo,Xt,So,gt,ji,Ea,Ci,Ai,yo,_l,qi,Po,el,No,gl,Ti,Do,$t,$l,vl,Mi,Si,yi,bl,wl,Pi,Ni,Io,vt,Di,ja,Ii,Fi,Fo,bt,Oo,wt,Oi,kl,Li,Ri,Lo,Xe,kt,Ca,tl,Bi,Aa,Hi,Ro,zt,Bo,Et,Ho,he,Ui,ll,qa,Ji,Vi,al,Ta,Gi,Ki,Ma,Qi,xi,Sa,Zi,Wi,ol,Yi,Xi,zl,er,tr,Uo,jt,Jo,et,Ct,ya,sl,lr,Pa,ar,Vo,At,Go,Ve,or,Na,sr,nr,Da,ir,rr,Ko,qt,Qo;return c=new Tt({}),S=new kf({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Mixed",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/it/quicktour.ipynb"},{label:"PyTorch",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/it/pytorch/quicktour.ipynb"},{label:"TensorFlow",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/main/transformers_doc/it/tensorflow/quicktour.ipynb"},{label:"Mixed",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/it/quicktour.ipynb"},{label:"PyTorch",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/it/pytorch/quicktour.ipynb"},{label:"TensorFlow",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/main/transformers_doc/it/tensorflow/quicktour.ipynb"}]}}),B=new Nl({props:{$$slots:{default:[Kf]},$$scope:{ctx:r}}}),oe=new Tt({}),V=new Zc({props:{id:"tiZFewofSLM"}}),at=new Nl({props:{$$slots:{default:[Qf]},$$scope:{ctx:r}}}),yt=new Tt({}),nt=new Pl({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[Yf],pytorch:[Zf]},$$scope:{ctx:r}}}),Pt=new Y({props:{code:`from transformers import pipeline

classificatore = pipeline("sentiment-analysis", model="MilaNLProc/feel-it-italian-sentiment")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>classificatore = pipeline(<span class="hljs-string">&quot;sentiment-analysis&quot;</span>, model=<span class="hljs-string">&quot;MilaNLProc/feel-it-italian-sentiment&quot;</span>)`}}),Dt=new Y({props:{code:'classificatore("Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.")',highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>classificatore(<span class="hljs-string">&quot;Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.&quot;</span>)
[{<span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;positive&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.9997</span>}]`}}),It=new Y({props:{code:`risultati = classificatore(
    ["Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.", "Speriamo te non la odierai."]
)
for risultato in risultati:
    print(f"etichetta: {risultato['label']}, con punteggio: {round(risultato['score'], 4)}")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>risultati = classificatore(
<span class="hljs-meta">... </span>    [<span class="hljs-string">&quot;Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.&quot;</span>, <span class="hljs-string">&quot;Speriamo te non la odierai.&quot;</span>]
<span class="hljs-meta">... </span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> risultato <span class="hljs-keyword">in</span> risultati:
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;etichetta: <span class="hljs-subst">{risultato[<span class="hljs-string">&#x27;label&#x27;</span>]}</span>, con punteggio: <span class="hljs-subst">{<span class="hljs-built_in">round</span>(risultato[<span class="hljs-string">&#x27;score&#x27;</span>], <span class="hljs-number">4</span>)}</span>&quot;</span>)
etichetta: positive, con punteggio: <span class="hljs-number">0.9998</span>
etichetta: negative, con punteggio: <span class="hljs-number">0.9998</span>`}}),Ot=new Y({props:{code:"pip install datasets ",highlighted:"pip install datasets "}}),Lt=new Y({props:{code:`import torch
from transformers import pipeline

riconoscitore_vocale = pipeline(
    "automatic-speech-recognition", model="radiogroup-crits/wav2vec2-xls-r-1b-italian-doc4lm-5gram"
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> torch
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>riconoscitore_vocale = pipeline(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;automatic-speech-recognition&quot;</span>, model=<span class="hljs-string">&quot;radiogroup-crits/wav2vec2-xls-r-1b-italian-doc4lm-5gram&quot;</span>
<span class="hljs-meta">... </span>)`}}),Ht=new Y({props:{code:`from datasets import load_dataset, Audio

dataset = load_dataset("PolyAI/minds14", name="it-IT", split="train")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset, Audio

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, name=<span class="hljs-string">&quot;it-IT&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)`}}),Ut=new Y({props:{code:'dataset = dataset.cast_column("audio", Audio(sampling_rate=riconoscitore_vocale.feature_extractor.sampling_rate))',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = dataset.cast_column(<span class="hljs-string">&quot;audio&quot;</span>, Audio(sampling_rate=riconoscitore_vocale.feature_extractor.sampling_rate))'}}),Jt=new Y({props:{code:`risultato = riconoscitore_vocale(dataset[:4]["audio"])
print([d["text"] for d in risultato])`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>risultato = riconoscitore_vocale(dataset[:<span class="hljs-number">4</span>][<span class="hljs-string">&quot;audio&quot;</span>])
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>([d[<span class="hljs-string">&quot;text&quot;</span>] <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> risultato])
[<span class="hljs-string">&#x27;dovrei caricare dei soldi sul mio conto corrente&#x27;</span>, <span class="hljs-string">&#x27;buongiorno e senza vorrei depositare denaro sul mio conto corrente come devo fare per cortesia&#x27;</span>, <span class="hljs-string">&#x27;s\xEC salve vorrei depositare del denaro sul mio conto&#x27;</span>, <span class="hljs-string">&#x27;e buon pomeriggio vorrei depositare dei soldi sul mio conto bancario volleo sapere come posso fare se e posso farlo online ed un altro conto o andandoo tramite bancomut&#x27;</span>]`}}),Vt=new Tt({}),Qt=new Y({props:{code:'model_name = "nlptown/bert-base-multilingual-uncased-sentiment"',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model_name = <span class="hljs-string">&quot;nlptown/bert-base-multilingual-uncased-sentiment&quot;</span>'}}),mt=new Pl({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[lp],pytorch:[ep]},$$scope:{ctx:r}}}),xt=new Y({props:{code:`classifier = pipeline("sentiment-analysis", model=model, tokenizer=tokenizer)
classifier("Nous sommes tr\xE8s heureux de vous pr\xE9senter la biblioth\xE8que \u{1F917} Transformers.")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>classifier = pipeline(<span class="hljs-string">&quot;sentiment-analysis&quot;</span>, model=model, tokenizer=tokenizer)
<span class="hljs-meta">&gt;&gt;&gt; </span>classifier(<span class="hljs-string">&quot;Nous sommes tr\xE8s heureux de vous pr\xE9senter la biblioth\xE8que \u{1F917} Transformers.&quot;</span>)
[{<span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-string">&#x27;5 stars&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.7273</span>}]`}}),Zt=new Tt({}),Wt=new Zc({props:{id:"AhChOFRegn4"}}),Yt=new Tt({}),Xt=new Y({props:{code:`from transformers import AutoTokenizer

nome_del_modello = "nlptown/bert-base-multilingual-uncased-sentiment"
tokenizer = AutoTokenizer.from_pretrained(nome_del_modello)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>nome_del_modello = <span class="hljs-string">&quot;nlptown/bert-base-multilingual-uncased-sentiment&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(nome_del_modello)`}}),el=new Y({props:{code:`encoding = tokenizer("Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.")
print(encoding)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>encoding = tokenizer(<span class="hljs-string">&quot;Siamo molto felici di mostrarti la libreria \u{1F917} Transformers.&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(encoding)
{<span class="hljs-string">&#x27;input_ids&#x27;</span>: [<span class="hljs-number">101</span>, <span class="hljs-number">56821</span>, <span class="hljs-number">10132</span>, <span class="hljs-number">14407</span>, <span class="hljs-number">13019</span>, <span class="hljs-number">13007</span>, <span class="hljs-number">10120</span>, <span class="hljs-number">47201</span>, <span class="hljs-number">10330</span>, <span class="hljs-number">10106</span>, <span class="hljs-number">91686</span>, <span class="hljs-number">100</span>, <span class="hljs-number">58263</span>, <span class="hljs-number">119</span>, <span class="hljs-number">102</span>],
<span class="hljs-string">&#x27;token_type_ids&#x27;</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],
<span class="hljs-string">&#x27;attention_mask&#x27;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>]}`}}),bt=new Pl({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[np],pytorch:[op]},$$scope:{ctx:r}}}),tl=new Tt({}),zt=new Pl({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[pp],pytorch:[cp]},$$scope:{ctx:r}}}),Et=new Nl({props:{$$slots:{default:[mp]},$$scope:{ctx:r}}}),jt=new Nl({props:{$$slots:{default:[dp]},$$scope:{ctx:r}}}),sl=new Tt({}),At=new Pl({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[$p],pytorch:[_p]},$$scope:{ctx:r}}}),qt=new Pl({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[kp],pytorch:[bp]},$$scope:{ctx:r}}}),{c(){e=_("meta"),a=C(),t=_("h1"),l=_("a"),i=_("span"),N(c.$$.fragment),h=C(),d=_("span"),v=p("Quick tour"),j=C(),N(S.$$.fragment),P=C(),T=_("p"),y=p("Entra in azione con \u{1F917} Transformers! Inizia utilizzando "),z=_("code"),M=p("pipeline()"),w=p(" per un\u2019inferenza veloce, carica un modello pre-allenato e un tokenizer con una "),q=_("a"),O=p("AutoClass"),G=p(" per risolvere i tuoi compiti legati a testo, immagini o audio."),J=C(),N(B.$$.fragment),W=C(),K=_("h2"),x=_("a"),ne=_("span"),N(oe.$$.fragment),se=C(),fe=_("span"),re=p("Pipeline"),pe=C(),ie=_("p"),ee=_("code"),ce=p("pipeline()"),me=p(" \xE8 il modo pi\xF9 semplice per utilizzare un modello pre-allenato per un dato compito."),R=C(),N(V.$$.fragment),le=C(),L=_("p"),Q=p("La "),ue=_("code"),_e=p("pipeline()"),X=p(" supporta molti compiti comuni:"),qe=C(),ae=_("p"),Te=_("strong"),Ee=p("Testo"),De=p(":"),ge=C(),te=_("ul"),Ie=_("li"),gs=p("Analisi del Sentimento (Sentiment Analysis, in inglese): classifica la polarit\xE0 di un testo dato."),$s=C(),Il=_("li"),vs=p("Generazione del Testo (Text Generation, in inglese): genera del testo a partire da un dato input."),bs=C(),Fl=_("li"),ws=p("Riconoscimento di Entit\xE0 (Name Entity Recognition o NER, in inglese): etichetta ogni parola con l\u2019entit\xE0 che questa rappresenta (persona, data, luogo, ecc.)."),ks=C(),Ol=_("li"),zs=p("Rispondere a Domande (Question answering, in inglese): estrae la risposta da un contesto, dato del contesto e una domanda."),Es=C(),Ll=_("li"),js=p("Riempimento di Maschere (Fill-mask, in inglese): riempie gli spazi mancanti in un testo che ha parole mascherate."),Cs=C(),Rl=_("li"),As=p("Riassumere (Summarization, in inglese): genera una sintesi di una lunga sequenza di testo o di un documento."),qs=C(),Bl=_("li"),Ts=p("Traduzione (Translation, in inglese): traduce un testo in un\u2019altra lingua."),Ms=C(),Hl=_("li"),Ss=p("Estrazione di Caratteristiche (Feature Extraction, in inglese): crea un tensore che rappresenta un testo."),Ua=C(),Mt=_("p"),Ul=_("strong"),ys=p("Immagini"),Ps=p(":"),Ja=C(),Fe=_("ul"),Jl=_("li"),Ns=p("Classificazione di Immagini (Image Classification, in inglese): classifica un\u2019immagine."),Ds=C(),Vl=_("li"),Is=p("Segmentazione di Immagini (Image Segmentation, in inglese): classifica ogni pixel di un\u2019immagine."),Fs=C(),Gl=_("li"),Os=p("Rilevazione di Oggetti (Object Detection, in inglese): rileva oggetti all\u2019interno di un\u2019immagine."),Va=C(),St=_("p"),Kl=_("strong"),Ls=p("Audio"),Rs=p(":"),Ga=C(),lt=_("ul"),Ql=_("li"),Bs=p("Classificazione di Audio (Audio Classification, in inglese): assegna un\u2019etichetta ad un segmento di audio dato."),Hs=C(),xl=_("li"),Us=p("Riconoscimento Vocale Automatico (Automatic Speech Recognition o ASR, in inglese): trascrive il contenuto di un audio dato in un testo."),Ka=C(),N(at.$$.fragment),Qa=C(),xe=_("h3"),ot=_("a"),Zl=_("span"),N(yt.$$.fragment),Js=C(),Wl=_("span"),Vs=p("Utilizzo della Pipeline"),xa=C(),st=_("p"),Gs=p("Nel seguente esempio, utilizzerai la "),Yl=_("code"),Ks=p("pipeline()"),Qs=p(" per l\u2019analisi del sentimento."),Za=C(),cl=_("p"),xs=p("Installa le seguenti dipendenze se non lo hai gi\xE0 fatto:"),Wa=C(),N(nt.$$.fragment),Ya=C(),it=_("p"),Zs=p("Importa "),Xl=_("code"),Ws=p("pipeline()"),Ys=p(" e specifica il compito che vuoi completare:"),Xa=C(),N(Pt.$$.fragment),eo=C(),Oe=_("p"),Xs=p("La pipeline scarica e salva il "),Nt=_("a"),en=p("modello pre-allenato"),tn=p(" e il tokenizer per l\u2019analisi del sentimento. Se non avessimo scelto un modello, la pipeline ne avrebbe scelto uno di default. Ora puoi utilizzare il "),ea=_("code"),ln=p("classifier"),an=p(" sul tuo testo obiettivo:"),to=C(),N(Dt.$$.fragment),lo=C(),rt=_("p"),on=p("Per pi\xF9 di una frase, passa una lista di frasi alla "),ta=_("code"),sn=p("pipeline()"),nn=p(" la quale restituir\xE0 una lista di dizionari:"),ao=C(),N(It.$$.fragment),oo=C(),Le=_("p"),rn=p("La "),la=_("code"),cn=p("pipeline()"),un=p(" pu\xF2 anche iterare su un dataset intero. Inizia installando la libreria "),Ft=_("a"),fn=p("\u{1F917} Datasets"),pn=p(":"),so=C(),N(Ot.$$.fragment),no=C(),ct=_("p"),mn=p("Crea una "),aa=_("code"),dn=p("pipeline()"),hn=p(" con il compito che vuoi risolvere e con il modello che vuoi utilizzare."),io=C(),N(Lt.$$.fragment),ro=C(),Re=_("p"),_n=p("Poi, carica un dataset (vedi \u{1F917} Datasets "),Rt=_("a"),gn=p("Quick Start"),$n=p(" per maggiori dettagli) sul quale vuoi iterare. Per esempio, carichiamo il dataset "),Bt=_("a"),vn=p("MInDS-14"),bn=p(":"),co=C(),N(Ht.$$.fragment),uo=C(),ut=_("p"),wn=p("Dobbiamo assicurarci che la frequenza di campionamento del set di dati corrisponda alla frequenza di campionamento con cui \xE8 stato addestrato "),oa=_("code"),kn=p("radiogroup-crits/wav2vec2-xls-r-1b-italian-doc4lm-5gram"),zn=p("."),fo=C(),N(Ut.$$.fragment),po=C(),ul=_("p"),En=p(`I file audio vengono caricati automaticamente e ri-campionati quando chiamiamo la colonna \u201Caudio\u201D.
Estraiamo i vettori delle forme d\u2019onda grezze delle prime 4 osservazioni e passiamoli come lista alla pipeline:`),mo=C(),N(Jt.$$.fragment),ho=C(),ft=_("p"),jn=p("Per un dataset pi\xF9 grande dove gli input sono di dimensione maggiore (come nel parlato/audio o nella visione), dovrai passare un generatore al posto di una lista che carica tutti gli input in memoria. Guarda la "),fl=_("a"),Cn=p("documentazione della pipeline"),An=p(" per maggiori informazioni."),_o=C(),Ze=_("h3"),pt=_("a"),sa=_("span"),N(Vt.$$.fragment),qn=C(),na=_("span"),Tn=p("Utilizzare un altro modello e tokenizer nella pipeline"),go=C(),je=_("p"),Mn=p("La "),ia=_("code"),Sn=p("pipeline()"),yn=p(" pu\xF2 ospitare qualsiasi modello del "),Gt=_("a"),Pn=p("Model Hub"),Nn=p(", rendendo semplice l\u2019adattamento della "),ra=_("code"),Dn=p("pipeline()"),In=p(" per altri casi d\u2019uso. Per esempio, se si vuole un modello capace di trattare testo in francese, usa i tag presenti nel Model Hub in modo da filtrare per ottenere un modello appropriato. Il miglior risultato filtrato restituisce un modello multi-lingua "),Kt=_("a"),Fn=p("BERT model"),On=p(" fine-tuned per l\u2019analisi del sentimento. Ottimo, utilizziamo questo modello!"),$o=C(),N(Qt.$$.fragment),vo=C(),N(mt.$$.fragment),bo=C(),Be=_("p"),Ln=p("Poi puoi specificare il modello e il tokenizer nella "),ca=_("code"),Rn=p("pipeline()"),Bn=p(", e applicare il "),ua=_("code"),Hn=p("classifier"),Un=p(" sul tuo testo obiettivo:"),wo=C(),N(xt.$$.fragment),ko=C(),He=_("p"),Jn=p("Se non riesci a trovare un modello per il tuo caso d\u2019uso, dovrai fare fine-tuning di un modello pre-allenato sui tuoi dati. Dai un\u2019occhiata al nostro tutorial "),pl=_("a"),Vn=p("fine-tuning tutorial"),Gn=p(" per imparare come. Infine, dopo che hai completato il fine-tuning del tuo modello pre-allenato, considera per favore di condividerlo (vedi il tutorial "),ml=_("a"),Kn=p("qui"),Qn=p(") con la comunit\xE0 sul Model Hub per democratizzare l\u2019NLP! \u{1F917}"),zo=C(),We=_("h2"),dt=_("a"),fa=_("span"),N(Zt.$$.fragment),xn=C(),pa=_("span"),Zn=p("AutoClass"),Eo=C(),N(Wt.$$.fragment),jo=C(),de=_("p"),Wn=p("Al suo interno, le classi "),ma=_("code"),Yn=p("AutoModelForSequenceClassification"),Xn=p(" e "),da=_("code"),ei=p("AutoTokenizer"),ti=p(" lavorano assieme per dare potere alla "),ha=_("code"),li=p("pipeline()"),ai=p(". Una "),dl=_("a"),oi=p("AutoClass"),si=p(" \xE8 una scorciatoia che automaticamente recupera l\u2019architettura di un modello pre-allenato a partire dal suo nome o path. Hai solo bisogno di selezionare la "),_a=_("code"),ni=p("AutoClass"),ii=p(" appropriata per il tuo compito e il suo tokenizer associato con "),ga=_("code"),ri=p("AutoTokenizer"),ci=p("."),Co=C(),Ue=_("p"),ui=p("Ritorniamo al nostro esempio e vediamo come puoi utilizzare la "),$a=_("code"),fi=p("AutoClass"),pi=p(" per replicare i risultati della "),va=_("code"),mi=p("pipeline()"),di=p("."),Ao=C(),Ye=_("h3"),ht=_("a"),ba=_("span"),N(Yt.$$.fragment),hi=C(),wa=_("span"),_i=p("AutoTokenizer"),qo=C(),Je=_("p"),gi=p("Un tokenizer \xE8 responsabile dell\u2019elaborazione del testo in modo da trasformarlo in un formato comprensibile dal modello. Per prima cosa, il tokenizer divider\xE0 il testo in parole chiamate "),ka=_("em"),$i=p("token"),vi=p(". Ci sono diverse regole che governano il processo di tokenizzazione, tra cui come dividere una parola e a quale livello (impara di pi\xF9 sulla tokenizzazione "),hl=_("a"),bi=p("qui"),wi=p("). La cosa pi\xF9 importante da ricordare comunque \xE8 che hai bisogno di inizializzare il tokenizer con lo stesso nome del modello in modo da assicurarti che stai utilizzando le stesse regole di tokenizzazione con cui il modello \xE8 stato pre-allenato."),To=C(),_t=_("p"),ki=p("Carica un tokenizer con "),za=_("code"),zi=p("AutoTokenizer"),Ei=p(":"),Mo=C(),N(Xt.$$.fragment),So=C(),gt=_("p"),ji=p("Dopodich\xE9, il tokenizer converte i token in numeri in modo da costruire un tensore come input del modello. Questo \xE8 conosciuto come il "),Ea=_("em"),Ci=p("vocabolario"),Ai=p(" del modello."),yo=C(),_l=_("p"),qi=p("Passa il tuo testo al tokenizer:"),Po=C(),N(el.$$.fragment),No=C(),gl=_("p"),Ti=p("Il tokenizer restituir\xE0 un dizionario contenente:"),Do=C(),$t=_("ul"),$l=_("li"),vl=_("a"),Mi=p("input_ids"),Si=p(": rappresentazioni numeriche dei tuoi token."),yi=C(),bl=_("li"),wl=_("a"),Pi=p("attention_mask"),Ni=p(": indica quali token devono essere presi in considerazione."),Io=C(),vt=_("p"),Di=p("Come con la "),ja=_("code"),Ii=p("pipeline()"),Fi=p(", il tokenizer accetter\xE0 una lista di input. In pi\xF9, il tokenizer pu\xF2 anche completare (pad, in inglese) e troncare il testo in modo da restituire un lotto (batch, in inglese) di lunghezza uniforme:"),Fo=C(),N(bt.$$.fragment),Oo=C(),wt=_("p"),Oi=p("Leggi il tutorial sul "),kl=_("a"),Li=p("preproccesing"),Ri=p(" per maggiori dettagli sulla tokenizzazione."),Lo=C(),Xe=_("h3"),kt=_("a"),Ca=_("span"),N(tl.$$.fragment),Bi=C(),Aa=_("span"),Hi=p("AutoModel"),Ro=C(),N(zt.$$.fragment),Bo=C(),N(Et.$$.fragment),Ho=C(),he=_("p"),Ui=p("I modelli sono "),ll=_("a"),qa=_("code"),Ji=p("torch.nn.Module"),Vi=p(" o "),al=_("a"),Ta=_("code"),Gi=p("tf.keras.Model"),Ki=p(" standard cos\xEC puoi utilizzarli all\u2019interno del tuo training loop usuale. Tuttavia, per rendere le cose pi\xF9 semplici, \u{1F917} Transformers fornisce una classe "),Ma=_("code"),Qi=p("Trainer"),xi=p(" per PyTorch che aggiunge delle funzionalit\xE0 per l\u2019allenamento distribuito, precisione mista, e altro ancora. Per TensorFlow, puoi utilizzare il metodo "),Sa=_("code"),Zi=p("fit"),Wi=p(" di "),ol=_("a"),Yi=p("Keras"),Xi=p(". Fai riferimento al "),zl=_("a"),er=p("tutorial per il training"),tr=p(" per maggiori dettagli."),Uo=C(),N(jt.$$.fragment),Jo=C(),et=_("h3"),Ct=_("a"),ya=_("span"),N(sl.$$.fragment),lr=C(),Pa=_("span"),ar=p("Salva un modello"),Vo=C(),N(At.$$.fragment),Go=C(),Ve=_("p"),or=p("Una caratteristica particolarmente interessante di \u{1F917} Transformers \xE8 la sua abilit\xE0 di salvare un modello e ri-caricarlo sia come modello di PyTorch che di TensorFlow. I parametri "),Na=_("code"),sr=p("from_pt"),nr=p(" o "),Da=_("code"),ir=p("from_tf"),rr=p(" possono convertire un modello da un framework all\u2019altro:"),Ko=C(),N(qt.$$.fragment),this.h()},l(o){const b=Tu('[data-svelte="svelte-1phssyn"]',document.head);e=g(b,"META",{name:!0,content:!0}),b.forEach(n),a=A(o),t=g(o,"H1",{class:!0});var nl=u(t);l=g(nl,"A",{id:!0,class:!0,href:!0});var Ia=u(l);i=g(Ia,"SPAN",{});var Fa=u(i);F(c.$$.fragment,Fa),Fa.forEach(n),Ia.forEach(n),h=A(nl),d=g(nl,"SPAN",{});var Oa=u(d);v=m(Oa,"Quick tour"),Oa.forEach(n),nl.forEach(n),j=A(o),F(S.$$.fragment,o),P=A(o),T=g(o,"P",{});var tt=u(T);y=m(tt,"Entra in azione con \u{1F917} Transformers! Inizia utilizzando "),z=g(tt,"CODE",{});var La=u(z);M=m(La,"pipeline()"),La.forEach(n),w=m(tt," per un\u2019inferenza veloce, carica un modello pre-allenato e un tokenizer con una "),q=g(tt,"A",{href:!0});var Ra=u(q);O=m(Ra,"AutoClass"),Ra.forEach(n),G=m(tt," per risolvere i tuoi compiti legati a testo, immagini o audio."),tt.forEach(n),J=A(o),F(B.$$.fragment,o),W=A(o),K=g(o,"H2",{class:!0});var il=u(K);x=g(il,"A",{id:!0,class:!0,href:!0});var Ba=u(x);ne=g(Ba,"SPAN",{});var Ha=u(ne);F(oe.$$.fragment,Ha),Ha.forEach(n),Ba.forEach(n),se=A(il),fe=g(il,"SPAN",{});var gr=u(fe);re=m(gr,"Pipeline"),gr.forEach(n),il.forEach(n),pe=A(o),ie=g(o,"P",{});var cr=u(ie);ee=g(cr,"CODE",{});var $r=u(ee);ce=m($r,"pipeline()"),$r.forEach(n),me=m(cr," \xE8 il modo pi\xF9 semplice per utilizzare un modello pre-allenato per un dato compito."),cr.forEach(n),R=A(o),F(V.$$.fragment,o),le=A(o),L=g(o,"P",{});var xo=u(L);Q=m(xo,"La "),ue=g(xo,"CODE",{});var vr=u(ue);_e=m(vr,"pipeline()"),vr.forEach(n),X=m(xo," supporta molti compiti comuni:"),xo.forEach(n),qe=A(o),ae=g(o,"P",{});var ur=u(ae);Te=g(ur,"STRONG",{});var br=u(Te);Ee=m(br,"Testo"),br.forEach(n),De=m(ur,":"),ur.forEach(n),ge=A(o),te=g(o,"UL",{});var $e=u(te);Ie=g($e,"LI",{});var wr=u(Ie);gs=m(wr,"Analisi del Sentimento (Sentiment Analysis, in inglese): classifica la polarit\xE0 di un testo dato."),wr.forEach(n),$s=A($e),Il=g($e,"LI",{});var kr=u(Il);vs=m(kr,"Generazione del Testo (Text Generation, in inglese): genera del testo a partire da un dato input."),kr.forEach(n),bs=A($e),Fl=g($e,"LI",{});var zr=u(Fl);ws=m(zr,"Riconoscimento di Entit\xE0 (Name Entity Recognition o NER, in inglese): etichetta ogni parola con l\u2019entit\xE0 che questa rappresenta (persona, data, luogo, ecc.)."),zr.forEach(n),ks=A($e),Ol=g($e,"LI",{});var Er=u(Ol);zs=m(Er,"Rispondere a Domande (Question answering, in inglese): estrae la risposta da un contesto, dato del contesto e una domanda."),Er.forEach(n),Es=A($e),Ll=g($e,"LI",{});var jr=u(Ll);js=m(jr,"Riempimento di Maschere (Fill-mask, in inglese): riempie gli spazi mancanti in un testo che ha parole mascherate."),jr.forEach(n),Cs=A($e),Rl=g($e,"LI",{});var Cr=u(Rl);As=m(Cr,"Riassumere (Summarization, in inglese): genera una sintesi di una lunga sequenza di testo o di un documento."),Cr.forEach(n),qs=A($e),Bl=g($e,"LI",{});var Ar=u(Bl);Ts=m(Ar,"Traduzione (Translation, in inglese): traduce un testo in un\u2019altra lingua."),Ar.forEach(n),Ms=A($e),Hl=g($e,"LI",{});var qr=u(Hl);Ss=m(qr,"Estrazione di Caratteristiche (Feature Extraction, in inglese): crea un tensore che rappresenta un testo."),qr.forEach(n),$e.forEach(n),Ua=A(o),Mt=g(o,"P",{});var fr=u(Mt);Ul=g(fr,"STRONG",{});var Tr=u(Ul);ys=m(Tr,"Immagini"),Tr.forEach(n),Ps=m(fr,":"),fr.forEach(n),Ja=A(o),Fe=g(o,"UL",{});var El=u(Fe);Jl=g(El,"LI",{});var Mr=u(Jl);Ns=m(Mr,"Classificazione di Immagini (Image Classification, in inglese): classifica un\u2019immagine."),Mr.forEach(n),Ds=A(El),Vl=g(El,"LI",{});var Sr=u(Vl);Is=m(Sr,"Segmentazione di Immagini (Image Segmentation, in inglese): classifica ogni pixel di un\u2019immagine."),Sr.forEach(n),Fs=A(El),Gl=g(El,"LI",{});var yr=u(Gl);Os=m(yr,"Rilevazione di Oggetti (Object Detection, in inglese): rileva oggetti all\u2019interno di un\u2019immagine."),yr.forEach(n),El.forEach(n),Va=A(o),St=g(o,"P",{});var pr=u(St);Kl=g(pr,"STRONG",{});var Pr=u(Kl);Ls=m(Pr,"Audio"),Pr.forEach(n),Rs=m(pr,":"),pr.forEach(n),Ga=A(o),lt=g(o,"UL",{});var Zo=u(lt);Ql=g(Zo,"LI",{});var Nr=u(Ql);Bs=m(Nr,"Classificazione di Audio (Audio Classification, in inglese): assegna un\u2019etichetta ad un segmento di audio dato."),Nr.forEach(n),Hs=A(Zo),xl=g(Zo,"LI",{});var Dr=u(xl);Us=m(Dr,"Riconoscimento Vocale Automatico (Automatic Speech Recognition o ASR, in inglese): trascrive il contenuto di un audio dato in un testo."),Dr.forEach(n),Zo.forEach(n),Ka=A(o),F(at.$$.fragment,o),Qa=A(o),xe=g(o,"H3",{class:!0});var Wo=u(xe);ot=g(Wo,"A",{id:!0,class:!0,href:!0});var Ir=u(ot);Zl=g(Ir,"SPAN",{});var Fr=u(Zl);F(yt.$$.fragment,Fr),Fr.forEach(n),Ir.forEach(n),Js=A(Wo),Wl=g(Wo,"SPAN",{});var Or=u(Wl);Vs=m(Or,"Utilizzo della Pipeline"),Or.forEach(n),Wo.forEach(n),xa=A(o),st=g(o,"P",{});var Yo=u(st);Gs=m(Yo,"Nel seguente esempio, utilizzerai la "),Yl=g(Yo,"CODE",{});var Lr=u(Yl);Ks=m(Lr,"pipeline()"),Lr.forEach(n),Qs=m(Yo," per l\u2019analisi del sentimento."),Yo.forEach(n),Za=A(o),cl=g(o,"P",{});var Rr=u(cl);xs=m(Rr,"Installa le seguenti dipendenze se non lo hai gi\xE0 fatto:"),Rr.forEach(n),Wa=A(o),F(nt.$$.fragment,o),Ya=A(o),it=g(o,"P",{});var Xo=u(it);Zs=m(Xo,"Importa "),Xl=g(Xo,"CODE",{});var Br=u(Xl);Ws=m(Br,"pipeline()"),Br.forEach(n),Ys=m(Xo," e specifica il compito che vuoi completare:"),Xo.forEach(n),Xa=A(o),F(Pt.$$.fragment,o),eo=A(o),Oe=g(o,"P",{});var jl=u(Oe);Xs=m(jl,"La pipeline scarica e salva il "),Nt=g(jl,"A",{href:!0,rel:!0});var Hr=u(Nt);en=m(Hr,"modello pre-allenato"),Hr.forEach(n),tn=m(jl," e il tokenizer per l\u2019analisi del sentimento. Se non avessimo scelto un modello, la pipeline ne avrebbe scelto uno di default. Ora puoi utilizzare il "),ea=g(jl,"CODE",{});var Ur=u(ea);ln=m(Ur,"classifier"),Ur.forEach(n),an=m(jl," sul tuo testo obiettivo:"),jl.forEach(n),to=A(o),F(Dt.$$.fragment,o),lo=A(o),rt=g(o,"P",{});var es=u(rt);on=m(es,"Per pi\xF9 di una frase, passa una lista di frasi alla "),ta=g(es,"CODE",{});var Jr=u(ta);sn=m(Jr,"pipeline()"),Jr.forEach(n),nn=m(es," la quale restituir\xE0 una lista di dizionari:"),es.forEach(n),ao=A(o),F(It.$$.fragment,o),oo=A(o),Le=g(o,"P",{});var Cl=u(Le);rn=m(Cl,"La "),la=g(Cl,"CODE",{});var Vr=u(la);cn=m(Vr,"pipeline()"),Vr.forEach(n),un=m(Cl," pu\xF2 anche iterare su un dataset intero. Inizia installando la libreria "),Ft=g(Cl,"A",{href:!0,rel:!0});var Gr=u(Ft);fn=m(Gr,"\u{1F917} Datasets"),Gr.forEach(n),pn=m(Cl,":"),Cl.forEach(n),so=A(o),F(Ot.$$.fragment,o),no=A(o),ct=g(o,"P",{});var ts=u(ct);mn=m(ts,"Crea una "),aa=g(ts,"CODE",{});var Kr=u(aa);dn=m(Kr,"pipeline()"),Kr.forEach(n),hn=m(ts," con il compito che vuoi risolvere e con il modello che vuoi utilizzare."),ts.forEach(n),io=A(o),F(Lt.$$.fragment,o),ro=A(o),Re=g(o,"P",{});var Al=u(Re);_n=m(Al,"Poi, carica un dataset (vedi \u{1F917} Datasets "),Rt=g(Al,"A",{href:!0,rel:!0});var Qr=u(Rt);gn=m(Qr,"Quick Start"),Qr.forEach(n),$n=m(Al," per maggiori dettagli) sul quale vuoi iterare. Per esempio, carichiamo il dataset "),Bt=g(Al,"A",{href:!0,rel:!0});var xr=u(Bt);vn=m(xr,"MInDS-14"),xr.forEach(n),bn=m(Al,":"),Al.forEach(n),co=A(o),F(Ht.$$.fragment,o),uo=A(o),ut=g(o,"P",{});var ls=u(ut);wn=m(ls,"Dobbiamo assicurarci che la frequenza di campionamento del set di dati corrisponda alla frequenza di campionamento con cui \xE8 stato addestrato "),oa=g(ls,"CODE",{});var Zr=u(oa);kn=m(Zr,"radiogroup-crits/wav2vec2-xls-r-1b-italian-doc4lm-5gram"),Zr.forEach(n),zn=m(ls,"."),ls.forEach(n),fo=A(o),F(Ut.$$.fragment,o),po=A(o),ul=g(o,"P",{});var Wr=u(ul);En=m(Wr,`I file audio vengono caricati automaticamente e ri-campionati quando chiamiamo la colonna \u201Caudio\u201D.
Estraiamo i vettori delle forme d\u2019onda grezze delle prime 4 osservazioni e passiamoli come lista alla pipeline:`),Wr.forEach(n),mo=A(o),F(Jt.$$.fragment,o),ho=A(o),ft=g(o,"P",{});var as=u(ft);jn=m(as,"Per un dataset pi\xF9 grande dove gli input sono di dimensione maggiore (come nel parlato/audio o nella visione), dovrai passare un generatore al posto di una lista che carica tutti gli input in memoria. Guarda la "),fl=g(as,"A",{href:!0});var Yr=u(fl);Cn=m(Yr,"documentazione della pipeline"),Yr.forEach(n),An=m(as," per maggiori informazioni."),as.forEach(n),_o=A(o),Ze=g(o,"H3",{class:!0});var os=u(Ze);pt=g(os,"A",{id:!0,class:!0,href:!0});var Xr=u(pt);sa=g(Xr,"SPAN",{});var ec=u(sa);F(Vt.$$.fragment,ec),ec.forEach(n),Xr.forEach(n),qn=A(os),na=g(os,"SPAN",{});var tc=u(na);Tn=m(tc,"Utilizzare un altro modello e tokenizer nella pipeline"),tc.forEach(n),os.forEach(n),go=A(o),je=g(o,"P",{});var Ge=u(je);Mn=m(Ge,"La "),ia=g(Ge,"CODE",{});var lc=u(ia);Sn=m(lc,"pipeline()"),lc.forEach(n),yn=m(Ge," pu\xF2 ospitare qualsiasi modello del "),Gt=g(Ge,"A",{href:!0,rel:!0});var ac=u(Gt);Pn=m(ac,"Model Hub"),ac.forEach(n),Nn=m(Ge,", rendendo semplice l\u2019adattamento della "),ra=g(Ge,"CODE",{});var oc=u(ra);Dn=m(oc,"pipeline()"),oc.forEach(n),In=m(Ge," per altri casi d\u2019uso. Per esempio, se si vuole un modello capace di trattare testo in francese, usa i tag presenti nel Model Hub in modo da filtrare per ottenere un modello appropriato. Il miglior risultato filtrato restituisce un modello multi-lingua "),Kt=g(Ge,"A",{href:!0,rel:!0});var sc=u(Kt);Fn=m(sc,"BERT model"),sc.forEach(n),On=m(Ge," fine-tuned per l\u2019analisi del sentimento. Ottimo, utilizziamo questo modello!"),Ge.forEach(n),$o=A(o),F(Qt.$$.fragment,o),vo=A(o),F(mt.$$.fragment,o),bo=A(o),Be=g(o,"P",{});var ql=u(Be);Ln=m(ql,"Poi puoi specificare il modello e il tokenizer nella "),ca=g(ql,"CODE",{});var nc=u(ca);Rn=m(nc,"pipeline()"),nc.forEach(n),Bn=m(ql,", e applicare il "),ua=g(ql,"CODE",{});var ic=u(ua);Hn=m(ic,"classifier"),ic.forEach(n),Un=m(ql," sul tuo testo obiettivo:"),ql.forEach(n),wo=A(o),F(xt.$$.fragment,o),ko=A(o),He=g(o,"P",{});var Tl=u(He);Jn=m(Tl,"Se non riesci a trovare un modello per il tuo caso d\u2019uso, dovrai fare fine-tuning di un modello pre-allenato sui tuoi dati. Dai un\u2019occhiata al nostro tutorial "),pl=g(Tl,"A",{href:!0});var rc=u(pl);Vn=m(rc,"fine-tuning tutorial"),rc.forEach(n),Gn=m(Tl," per imparare come. Infine, dopo che hai completato il fine-tuning del tuo modello pre-allenato, considera per favore di condividerlo (vedi il tutorial "),ml=g(Tl,"A",{href:!0});var cc=u(ml);Kn=m(cc,"qui"),cc.forEach(n),Qn=m(Tl,") con la comunit\xE0 sul Model Hub per democratizzare l\u2019NLP! \u{1F917}"),Tl.forEach(n),zo=A(o),We=g(o,"H2",{class:!0});var ss=u(We);dt=g(ss,"A",{id:!0,class:!0,href:!0});var uc=u(dt);fa=g(uc,"SPAN",{});var fc=u(fa);F(Zt.$$.fragment,fc),fc.forEach(n),uc.forEach(n),xn=A(ss),pa=g(ss,"SPAN",{});var pc=u(pa);Zn=m(pc,"AutoClass"),pc.forEach(n),ss.forEach(n),Eo=A(o),F(Wt.$$.fragment,o),jo=A(o),de=g(o,"P",{});var Ce=u(de);Wn=m(Ce,"Al suo interno, le classi "),ma=g(Ce,"CODE",{});var mc=u(ma);Yn=m(mc,"AutoModelForSequenceClassification"),mc.forEach(n),Xn=m(Ce," e "),da=g(Ce,"CODE",{});var dc=u(da);ei=m(dc,"AutoTokenizer"),dc.forEach(n),ti=m(Ce," lavorano assieme per dare potere alla "),ha=g(Ce,"CODE",{});var hc=u(ha);li=m(hc,"pipeline()"),hc.forEach(n),ai=m(Ce,". Una "),dl=g(Ce,"A",{href:!0});var _c=u(dl);oi=m(_c,"AutoClass"),_c.forEach(n),si=m(Ce," \xE8 una scorciatoia che automaticamente recupera l\u2019architettura di un modello pre-allenato a partire dal suo nome o path. Hai solo bisogno di selezionare la "),_a=g(Ce,"CODE",{});var gc=u(_a);ni=m(gc,"AutoClass"),gc.forEach(n),ii=m(Ce," appropriata per il tuo compito e il suo tokenizer associato con "),ga=g(Ce,"CODE",{});var $c=u(ga);ri=m($c,"AutoTokenizer"),$c.forEach(n),ci=m(Ce,"."),Ce.forEach(n),Co=A(o),Ue=g(o,"P",{});var Ml=u(Ue);ui=m(Ml,"Ritorniamo al nostro esempio e vediamo come puoi utilizzare la "),$a=g(Ml,"CODE",{});var vc=u($a);fi=m(vc,"AutoClass"),vc.forEach(n),pi=m(Ml," per replicare i risultati della "),va=g(Ml,"CODE",{});var bc=u(va);mi=m(bc,"pipeline()"),bc.forEach(n),di=m(Ml,"."),Ml.forEach(n),Ao=A(o),Ye=g(o,"H3",{class:!0});var ns=u(Ye);ht=g(ns,"A",{id:!0,class:!0,href:!0});var wc=u(ht);ba=g(wc,"SPAN",{});var kc=u(ba);F(Yt.$$.fragment,kc),kc.forEach(n),wc.forEach(n),hi=A(ns),wa=g(ns,"SPAN",{});var zc=u(wa);_i=m(zc,"AutoTokenizer"),zc.forEach(n),ns.forEach(n),qo=A(o),Je=g(o,"P",{});var Sl=u(Je);gi=m(Sl,"Un tokenizer \xE8 responsabile dell\u2019elaborazione del testo in modo da trasformarlo in un formato comprensibile dal modello. Per prima cosa, il tokenizer divider\xE0 il testo in parole chiamate "),ka=g(Sl,"EM",{});var Ec=u(ka);$i=m(Ec,"token"),Ec.forEach(n),vi=m(Sl,". Ci sono diverse regole che governano il processo di tokenizzazione, tra cui come dividere una parola e a quale livello (impara di pi\xF9 sulla tokenizzazione "),hl=g(Sl,"A",{href:!0});var jc=u(hl);bi=m(jc,"qui"),jc.forEach(n),wi=m(Sl,"). La cosa pi\xF9 importante da ricordare comunque \xE8 che hai bisogno di inizializzare il tokenizer con lo stesso nome del modello in modo da assicurarti che stai utilizzando le stesse regole di tokenizzazione con cui il modello \xE8 stato pre-allenato."),Sl.forEach(n),To=A(o),_t=g(o,"P",{});var is=u(_t);ki=m(is,"Carica un tokenizer con "),za=g(is,"CODE",{});var Cc=u(za);zi=m(Cc,"AutoTokenizer"),Cc.forEach(n),Ei=m(is,":"),is.forEach(n),Mo=A(o),F(Xt.$$.fragment,o),So=A(o),gt=g(o,"P",{});var rs=u(gt);ji=m(rs,"Dopodich\xE9, il tokenizer converte i token in numeri in modo da costruire un tensore come input del modello. Questo \xE8 conosciuto come il "),Ea=g(rs,"EM",{});var Ac=u(Ea);Ci=m(Ac,"vocabolario"),Ac.forEach(n),Ai=m(rs," del modello."),rs.forEach(n),yo=A(o),_l=g(o,"P",{});var qc=u(_l);qi=m(qc,"Passa il tuo testo al tokenizer:"),qc.forEach(n),Po=A(o),F(el.$$.fragment,o),No=A(o),gl=g(o,"P",{});var Tc=u(gl);Ti=m(Tc,"Il tokenizer restituir\xE0 un dizionario contenente:"),Tc.forEach(n),Do=A(o),$t=g(o,"UL",{});var cs=u($t);$l=g(cs,"LI",{});var mr=u($l);vl=g(mr,"A",{href:!0});var Mc=u(vl);Mi=m(Mc,"input_ids"),Mc.forEach(n),Si=m(mr,": rappresentazioni numeriche dei tuoi token."),mr.forEach(n),yi=A(cs),bl=g(cs,"LI",{});var dr=u(bl);wl=g(dr,"A",{href:!0});var Sc=u(wl);Pi=m(Sc,"attention_mask"),Sc.forEach(n),Ni=m(dr,": indica quali token devono essere presi in considerazione."),dr.forEach(n),cs.forEach(n),Io=A(o),vt=g(o,"P",{});var us=u(vt);Di=m(us,"Come con la "),ja=g(us,"CODE",{});var yc=u(ja);Ii=m(yc,"pipeline()"),yc.forEach(n),Fi=m(us,", il tokenizer accetter\xE0 una lista di input. In pi\xF9, il tokenizer pu\xF2 anche completare (pad, in inglese) e troncare il testo in modo da restituire un lotto (batch, in inglese) di lunghezza uniforme:"),us.forEach(n),Fo=A(o),F(bt.$$.fragment,o),Oo=A(o),wt=g(o,"P",{});var fs=u(wt);Oi=m(fs,"Leggi il tutorial sul "),kl=g(fs,"A",{href:!0});var Pc=u(kl);Li=m(Pc,"preproccesing"),Pc.forEach(n),Ri=m(fs," per maggiori dettagli sulla tokenizzazione."),fs.forEach(n),Lo=A(o),Xe=g(o,"H3",{class:!0});var ps=u(Xe);kt=g(ps,"A",{id:!0,class:!0,href:!0});var Nc=u(kt);Ca=g(Nc,"SPAN",{});var Dc=u(Ca);F(tl.$$.fragment,Dc),Dc.forEach(n),Nc.forEach(n),Bi=A(ps),Aa=g(ps,"SPAN",{});var Ic=u(Aa);Hi=m(Ic,"AutoModel"),Ic.forEach(n),ps.forEach(n),Ro=A(o),F(zt.$$.fragment,o),Bo=A(o),F(Et.$$.fragment,o),Ho=A(o),he=g(o,"P",{});var Ae=u(he);Ui=m(Ae,"I modelli sono "),ll=g(Ae,"A",{href:!0,rel:!0});var Fc=u(ll);qa=g(Fc,"CODE",{});var Oc=u(qa);Ji=m(Oc,"torch.nn.Module"),Oc.forEach(n),Fc.forEach(n),Vi=m(Ae," o "),al=g(Ae,"A",{href:!0,rel:!0});var Lc=u(al);Ta=g(Lc,"CODE",{});var Rc=u(Ta);Gi=m(Rc,"tf.keras.Model"),Rc.forEach(n),Lc.forEach(n),Ki=m(Ae," standard cos\xEC puoi utilizzarli all\u2019interno del tuo training loop usuale. Tuttavia, per rendere le cose pi\xF9 semplici, \u{1F917} Transformers fornisce una classe "),Ma=g(Ae,"CODE",{});var Bc=u(Ma);Qi=m(Bc,"Trainer"),Bc.forEach(n),xi=m(Ae," per PyTorch che aggiunge delle funzionalit\xE0 per l\u2019allenamento distribuito, precisione mista, e altro ancora. Per TensorFlow, puoi utilizzare il metodo "),Sa=g(Ae,"CODE",{});var Hc=u(Sa);Zi=m(Hc,"fit"),Hc.forEach(n),Wi=m(Ae," di "),ol=g(Ae,"A",{href:!0,rel:!0});var Uc=u(ol);Yi=m(Uc,"Keras"),Uc.forEach(n),Xi=m(Ae,". Fai riferimento al "),zl=g(Ae,"A",{href:!0});var Jc=u(zl);er=m(Jc,"tutorial per il training"),Jc.forEach(n),tr=m(Ae," per maggiori dettagli."),Ae.forEach(n),Uo=A(o),F(jt.$$.fragment,o),Jo=A(o),et=g(o,"H3",{class:!0});var ms=u(et);Ct=g(ms,"A",{id:!0,class:!0,href:!0});var Vc=u(Ct);ya=g(Vc,"SPAN",{});var Gc=u(ya);F(sl.$$.fragment,Gc),Gc.forEach(n),Vc.forEach(n),lr=A(ms),Pa=g(ms,"SPAN",{});var Kc=u(Pa);ar=m(Kc,"Salva un modello"),Kc.forEach(n),ms.forEach(n),Vo=A(o),F(At.$$.fragment,o),Go=A(o),Ve=g(o,"P",{});var yl=u(Ve);or=m(yl,"Una caratteristica particolarmente interessante di \u{1F917} Transformers \xE8 la sua abilit\xE0 di salvare un modello e ri-caricarlo sia come modello di PyTorch che di TensorFlow. I parametri "),Na=g(yl,"CODE",{});var Qc=u(Na);sr=m(Qc,"from_pt"),Qc.forEach(n),nr=m(yl," o "),Da=g(yl,"CODE",{});var xc=u(Da);ir=m(xc,"from_tf"),xc.forEach(n),rr=m(yl," possono convertire un modello da un framework all\u2019altro:"),yl.forEach(n),Ko=A(o),F(qt.$$.fragment,o),this.h()},h(){f(e,"name","hf:doc:metadata"),f(e,"content",JSON.stringify(Ep)),f(l,"id","quick-tour"),f(l,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(l,"href","#quick-tour"),f(t,"class","relative group"),f(q,"href","./model_doc/auto"),f(x,"id","pipeline"),f(x,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(x,"href","#pipeline"),f(K,"class","relative group"),f(ot,"id","utilizzo-della-pipeline"),f(ot,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ot,"href","#utilizzo-della-pipeline"),f(xe,"class","relative group"),f(Nt,"href","https://huggingface.co/MilaNLProc/feel-it-italian-sentiment"),f(Nt,"rel","nofollow"),f(Ft,"href","https://huggingface.co/docs/datasets/"),f(Ft,"rel","nofollow"),f(Rt,"href","https://huggingface.co/docs/datasets/quickstart.html"),f(Rt,"rel","nofollow"),f(Bt,"href","https://huggingface.co/datasets/PolyAI/minds14"),f(Bt,"rel","nofollow"),f(fl,"href","./main_classes/pipelines"),f(pt,"id","utilizzare-un-altro-modello-e-tokenizer-nella-pipeline"),f(pt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(pt,"href","#utilizzare-un-altro-modello-e-tokenizer-nella-pipeline"),f(Ze,"class","relative group"),f(Gt,"href","https://huggingface.co/models"),f(Gt,"rel","nofollow"),f(Kt,"href","https://huggingface.co/nlptown/bert-base-multilingual-uncased-sentiment"),f(Kt,"rel","nofollow"),f(pl,"href","./training"),f(ml,"href","./model_sharing"),f(dt,"id","autoclass"),f(dt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(dt,"href","#autoclass"),f(We,"class","relative group"),f(dl,"href","./model_doc/auto"),f(ht,"id","autotokenizer"),f(ht,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ht,"href","#autotokenizer"),f(Ye,"class","relative group"),f(hl,"href","./tokenizer_summary"),f(vl,"href","./glossary#input-ids"),f(wl,"href",".glossary#attention-mask"),f(kl,"href","./preprocessing"),f(kt,"id","automodel"),f(kt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(kt,"href","#automodel"),f(Xe,"class","relative group"),f(ll,"href","https://pytorch.org/docs/stable/nn.html#torch.nn.Module"),f(ll,"rel","nofollow"),f(al,"href","https://www.tensorflow.org/api_docs/python/tf/keras/Model"),f(al,"rel","nofollow"),f(ol,"href","https://keras.io/"),f(ol,"rel","nofollow"),f(zl,"href","./training"),f(Ct,"id","salva-un-modello"),f(Ct,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(Ct,"href","#salva-un-modello"),f(et,"class","relative group")},m(o,b){s(document.head,e),$(o,a,b),$(o,t,b),s(t,l),s(l,i),D(c,i,null),s(t,h),s(t,d),s(d,v),$(o,j,b),D(S,o,b),$(o,P,b),$(o,T,b),s(T,y),s(T,z),s(z,M),s(T,w),s(T,q),s(q,O),s(T,G),$(o,J,b),D(B,o,b),$(o,W,b),$(o,K,b),s(K,x),s(x,ne),D(oe,ne,null),s(K,se),s(K,fe),s(fe,re),$(o,pe,b),$(o,ie,b),s(ie,ee),s(ee,ce),s(ie,me),$(o,R,b),D(V,o,b),$(o,le,b),$(o,L,b),s(L,Q),s(L,ue),s(ue,_e),s(L,X),$(o,qe,b),$(o,ae,b),s(ae,Te),s(Te,Ee),s(ae,De),$(o,ge,b),$(o,te,b),s(te,Ie),s(Ie,gs),s(te,$s),s(te,Il),s(Il,vs),s(te,bs),s(te,Fl),s(Fl,ws),s(te,ks),s(te,Ol),s(Ol,zs),s(te,Es),s(te,Ll),s(Ll,js),s(te,Cs),s(te,Rl),s(Rl,As),s(te,qs),s(te,Bl),s(Bl,Ts),s(te,Ms),s(te,Hl),s(Hl,Ss),$(o,Ua,b),$(o,Mt,b),s(Mt,Ul),s(Ul,ys),s(Mt,Ps),$(o,Ja,b),$(o,Fe,b),s(Fe,Jl),s(Jl,Ns),s(Fe,Ds),s(Fe,Vl),s(Vl,Is),s(Fe,Fs),s(Fe,Gl),s(Gl,Os),$(o,Va,b),$(o,St,b),s(St,Kl),s(Kl,Ls),s(St,Rs),$(o,Ga,b),$(o,lt,b),s(lt,Ql),s(Ql,Bs),s(lt,Hs),s(lt,xl),s(xl,Us),$(o,Ka,b),D(at,o,b),$(o,Qa,b),$(o,xe,b),s(xe,ot),s(ot,Zl),D(yt,Zl,null),s(xe,Js),s(xe,Wl),s(Wl,Vs),$(o,xa,b),$(o,st,b),s(st,Gs),s(st,Yl),s(Yl,Ks),s(st,Qs),$(o,Za,b),$(o,cl,b),s(cl,xs),$(o,Wa,b),D(nt,o,b),$(o,Ya,b),$(o,it,b),s(it,Zs),s(it,Xl),s(Xl,Ws),s(it,Ys),$(o,Xa,b),D(Pt,o,b),$(o,eo,b),$(o,Oe,b),s(Oe,Xs),s(Oe,Nt),s(Nt,en),s(Oe,tn),s(Oe,ea),s(ea,ln),s(Oe,an),$(o,to,b),D(Dt,o,b),$(o,lo,b),$(o,rt,b),s(rt,on),s(rt,ta),s(ta,sn),s(rt,nn),$(o,ao,b),D(It,o,b),$(o,oo,b),$(o,Le,b),s(Le,rn),s(Le,la),s(la,cn),s(Le,un),s(Le,Ft),s(Ft,fn),s(Le,pn),$(o,so,b),D(Ot,o,b),$(o,no,b),$(o,ct,b),s(ct,mn),s(ct,aa),s(aa,dn),s(ct,hn),$(o,io,b),D(Lt,o,b),$(o,ro,b),$(o,Re,b),s(Re,_n),s(Re,Rt),s(Rt,gn),s(Re,$n),s(Re,Bt),s(Bt,vn),s(Re,bn),$(o,co,b),D(Ht,o,b),$(o,uo,b),$(o,ut,b),s(ut,wn),s(ut,oa),s(oa,kn),s(ut,zn),$(o,fo,b),D(Ut,o,b),$(o,po,b),$(o,ul,b),s(ul,En),$(o,mo,b),D(Jt,o,b),$(o,ho,b),$(o,ft,b),s(ft,jn),s(ft,fl),s(fl,Cn),s(ft,An),$(o,_o,b),$(o,Ze,b),s(Ze,pt),s(pt,sa),D(Vt,sa,null),s(Ze,qn),s(Ze,na),s(na,Tn),$(o,go,b),$(o,je,b),s(je,Mn),s(je,ia),s(ia,Sn),s(je,yn),s(je,Gt),s(Gt,Pn),s(je,Nn),s(je,ra),s(ra,Dn),s(je,In),s(je,Kt),s(Kt,Fn),s(je,On),$(o,$o,b),D(Qt,o,b),$(o,vo,b),D(mt,o,b),$(o,bo,b),$(o,Be,b),s(Be,Ln),s(Be,ca),s(ca,Rn),s(Be,Bn),s(Be,ua),s(ua,Hn),s(Be,Un),$(o,wo,b),D(xt,o,b),$(o,ko,b),$(o,He,b),s(He,Jn),s(He,pl),s(pl,Vn),s(He,Gn),s(He,ml),s(ml,Kn),s(He,Qn),$(o,zo,b),$(o,We,b),s(We,dt),s(dt,fa),D(Zt,fa,null),s(We,xn),s(We,pa),s(pa,Zn),$(o,Eo,b),D(Wt,o,b),$(o,jo,b),$(o,de,b),s(de,Wn),s(de,ma),s(ma,Yn),s(de,Xn),s(de,da),s(da,ei),s(de,ti),s(de,ha),s(ha,li),s(de,ai),s(de,dl),s(dl,oi),s(de,si),s(de,_a),s(_a,ni),s(de,ii),s(de,ga),s(ga,ri),s(de,ci),$(o,Co,b),$(o,Ue,b),s(Ue,ui),s(Ue,$a),s($a,fi),s(Ue,pi),s(Ue,va),s(va,mi),s(Ue,di),$(o,Ao,b),$(o,Ye,b),s(Ye,ht),s(ht,ba),D(Yt,ba,null),s(Ye,hi),s(Ye,wa),s(wa,_i),$(o,qo,b),$(o,Je,b),s(Je,gi),s(Je,ka),s(ka,$i),s(Je,vi),s(Je,hl),s(hl,bi),s(Je,wi),$(o,To,b),$(o,_t,b),s(_t,ki),s(_t,za),s(za,zi),s(_t,Ei),$(o,Mo,b),D(Xt,o,b),$(o,So,b),$(o,gt,b),s(gt,ji),s(gt,Ea),s(Ea,Ci),s(gt,Ai),$(o,yo,b),$(o,_l,b),s(_l,qi),$(o,Po,b),D(el,o,b),$(o,No,b),$(o,gl,b),s(gl,Ti),$(o,Do,b),$(o,$t,b),s($t,$l),s($l,vl),s(vl,Mi),s($l,Si),s($t,yi),s($t,bl),s(bl,wl),s(wl,Pi),s(bl,Ni),$(o,Io,b),$(o,vt,b),s(vt,Di),s(vt,ja),s(ja,Ii),s(vt,Fi),$(o,Fo,b),D(bt,o,b),$(o,Oo,b),$(o,wt,b),s(wt,Oi),s(wt,kl),s(kl,Li),s(wt,Ri),$(o,Lo,b),$(o,Xe,b),s(Xe,kt),s(kt,Ca),D(tl,Ca,null),s(Xe,Bi),s(Xe,Aa),s(Aa,Hi),$(o,Ro,b),D(zt,o,b),$(o,Bo,b),D(Et,o,b),$(o,Ho,b),$(o,he,b),s(he,Ui),s(he,ll),s(ll,qa),s(qa,Ji),s(he,Vi),s(he,al),s(al,Ta),s(Ta,Gi),s(he,Ki),s(he,Ma),s(Ma,Qi),s(he,xi),s(he,Sa),s(Sa,Zi),s(he,Wi),s(he,ol),s(ol,Yi),s(he,Xi),s(he,zl),s(zl,er),s(he,tr),$(o,Uo,b),D(jt,o,b),$(o,Jo,b),$(o,et,b),s(et,Ct),s(Ct,ya),D(sl,ya,null),s(et,lr),s(et,Pa),s(Pa,ar),$(o,Vo,b),D(At,o,b),$(o,Go,b),$(o,Ve,b),s(Ve,or),s(Ve,Na),s(Na,sr),s(Ve,nr),s(Ve,Da),s(Da,ir),s(Ve,rr),$(o,Ko,b),D(qt,o,b),Qo=!0},p(o,[b]){const nl={};b&2&&(nl.$$scope={dirty:b,ctx:o}),B.$set(nl);const Ia={};b&2&&(Ia.$$scope={dirty:b,ctx:o}),at.$set(Ia);const Fa={};b&2&&(Fa.$$scope={dirty:b,ctx:o}),nt.$set(Fa);const Oa={};b&2&&(Oa.$$scope={dirty:b,ctx:o}),mt.$set(Oa);const tt={};b&2&&(tt.$$scope={dirty:b,ctx:o}),bt.$set(tt);const La={};b&2&&(La.$$scope={dirty:b,ctx:o}),zt.$set(La);const Ra={};b&2&&(Ra.$$scope={dirty:b,ctx:o}),Et.$set(Ra);const il={};b&2&&(il.$$scope={dirty:b,ctx:o}),jt.$set(il);const Ba={};b&2&&(Ba.$$scope={dirty:b,ctx:o}),At.$set(Ba);const Ha={};b&2&&(Ha.$$scope={dirty:b,ctx:o}),qt.$set(Ha)},i(o){Qo||(k(c.$$.fragment,o),k(S.$$.fragment,o),k(B.$$.fragment,o),k(oe.$$.fragment,o),k(V.$$.fragment,o),k(at.$$.fragment,o),k(yt.$$.fragment,o),k(nt.$$.fragment,o),k(Pt.$$.fragment,o),k(Dt.$$.fragment,o),k(It.$$.fragment,o),k(Ot.$$.fragment,o),k(Lt.$$.fragment,o),k(Ht.$$.fragment,o),k(Ut.$$.fragment,o),k(Jt.$$.fragment,o),k(Vt.$$.fragment,o),k(Qt.$$.fragment,o),k(mt.$$.fragment,o),k(xt.$$.fragment,o),k(Zt.$$.fragment,o),k(Wt.$$.fragment,o),k(Yt.$$.fragment,o),k(Xt.$$.fragment,o),k(el.$$.fragment,o),k(bt.$$.fragment,o),k(tl.$$.fragment,o),k(zt.$$.fragment,o),k(Et.$$.fragment,o),k(jt.$$.fragment,o),k(sl.$$.fragment,o),k(At.$$.fragment,o),k(qt.$$.fragment,o),Qo=!0)},o(o){E(c.$$.fragment,o),E(S.$$.fragment,o),E(B.$$.fragment,o),E(oe.$$.fragment,o),E(V.$$.fragment,o),E(at.$$.fragment,o),E(yt.$$.fragment,o),E(nt.$$.fragment,o),E(Pt.$$.fragment,o),E(Dt.$$.fragment,o),E(It.$$.fragment,o),E(Ot.$$.fragment,o),E(Lt.$$.fragment,o),E(Ht.$$.fragment,o),E(Ut.$$.fragment,o),E(Jt.$$.fragment,o),E(Vt.$$.fragment,o),E(Qt.$$.fragment,o),E(mt.$$.fragment,o),E(xt.$$.fragment,o),E(Zt.$$.fragment,o),E(Wt.$$.fragment,o),E(Yt.$$.fragment,o),E(Xt.$$.fragment,o),E(el.$$.fragment,o),E(bt.$$.fragment,o),E(tl.$$.fragment,o),E(zt.$$.fragment,o),E(Et.$$.fragment,o),E(jt.$$.fragment,o),E(sl.$$.fragment,o),E(At.$$.fragment,o),E(qt.$$.fragment,o),Qo=!1},d(o){n(e),o&&n(a),o&&n(t),I(c),o&&n(j),I(S,o),o&&n(P),o&&n(T),o&&n(J),I(B,o),o&&n(W),o&&n(K),I(oe),o&&n(pe),o&&n(ie),o&&n(R),I(V,o),o&&n(le),o&&n(L),o&&n(qe),o&&n(ae),o&&n(ge),o&&n(te),o&&n(Ua),o&&n(Mt),o&&n(Ja),o&&n(Fe),o&&n(Va),o&&n(St),o&&n(Ga),o&&n(lt),o&&n(Ka),I(at,o),o&&n(Qa),o&&n(xe),I(yt),o&&n(xa),o&&n(st),o&&n(Za),o&&n(cl),o&&n(Wa),I(nt,o),o&&n(Ya),o&&n(it),o&&n(Xa),I(Pt,o),o&&n(eo),o&&n(Oe),o&&n(to),I(Dt,o),o&&n(lo),o&&n(rt),o&&n(ao),I(It,o),o&&n(oo),o&&n(Le),o&&n(so),I(Ot,o),o&&n(no),o&&n(ct),o&&n(io),I(Lt,o),o&&n(ro),o&&n(Re),o&&n(co),I(Ht,o),o&&n(uo),o&&n(ut),o&&n(fo),I(Ut,o),o&&n(po),o&&n(ul),o&&n(mo),I(Jt,o),o&&n(ho),o&&n(ft),o&&n(_o),o&&n(Ze),I(Vt),o&&n(go),o&&n(je),o&&n($o),I(Qt,o),o&&n(vo),I(mt,o),o&&n(bo),o&&n(Be),o&&n(wo),I(xt,o),o&&n(ko),o&&n(He),o&&n(zo),o&&n(We),I(Zt),o&&n(Eo),I(Wt,o),o&&n(jo),o&&n(de),o&&n(Co),o&&n(Ue),o&&n(Ao),o&&n(Ye),I(Yt),o&&n(qo),o&&n(Je),o&&n(To),o&&n(_t),o&&n(Mo),I(Xt,o),o&&n(So),o&&n(gt),o&&n(yo),o&&n(_l),o&&n(Po),I(el,o),o&&n(No),o&&n(gl),o&&n(Do),o&&n($t),o&&n(Io),o&&n(vt),o&&n(Fo),I(bt,o),o&&n(Oo),o&&n(wt),o&&n(Lo),o&&n(Xe),I(tl),o&&n(Ro),I(zt,o),o&&n(Bo),I(Et,o),o&&n(Ho),o&&n(he),o&&n(Uo),I(jt,o),o&&n(Jo),o&&n(et),I(sl),o&&n(Vo),I(At,o),o&&n(Go),o&&n(Ve),o&&n(Ko),I(qt,o)}}}const Ep={local:"quick-tour",sections:[{local:"pipeline",sections:[{local:"utilizzo-della-pipeline",title:"Utilizzo della Pipeline"},{local:"utilizzare-un-altro-modello-e-tokenizer-nella-pipeline",title:"Utilizzare un altro modello e tokenizer nella pipeline"}],title:"Pipeline"},{local:"autoclass",sections:[{local:"autotokenizer",title:"AutoTokenizer"},{local:"automodel",title:"AutoModel"},{local:"salva-un-modello",title:"Salva un modello"}],title:"AutoClass"}],title:"Quick tour"};function jp(r){return hs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Tp extends we{constructor(e){super();ke(this,e,jp,zp,ze,{})}}export{Tp as default,Ep as metadata};
