import{S as Ul,i as Yl,s as zl,e as l,k as f,w as u,t as o,M as Jl,c as n,d as t,m,a,x as v,h as s,b as c,F as r,g,y as h,q as _,o as b,B as $,v as Kl,L as Ql}from"../../chunks/vendor-6b77c823.js";import{T as Xl}from"../../chunks/Tip-39098574.js";import{D as L}from"../../chunks/Docstring-1088f2fb.js";import{C as Ir}from"../../chunks/CodeBlock-3a8b25a8.js";import{I as Us}from"../../chunks/IconCopyLink-7a11ce68.js";import{E as Zl}from"../../chunks/ExampleCodeBlock-5212b321.js";function en(dr){let E,F,w,d,R,p,A,re,Le,Y,z,Fe,W,x,te,oe,xe,P,$e,k,Pe,Ee,S,ye,y,J,se,le,ke,ne,K,Ve,B,Ge;return{c(){E=l("p"),F=o("\u{1F917} Transformers has following logging levels:"),w=f(),d=l("ul"),R=l("li"),p=o("50: "),A=l("code"),re=o("transformers.logging.CRITICAL"),Le=o(" or "),Y=l("code"),z=o("transformers.logging.FATAL"),Fe=f(),W=l("li"),x=o("40: "),te=l("code"),oe=o("transformers.logging.ERROR"),xe=f(),P=l("li"),$e=o("30: "),k=l("code"),Pe=o("transformers.logging.WARNING"),Ee=o(" or "),S=l("code"),ye=o("transformers.logging.WARN"),y=f(),J=l("li"),se=o("20: "),le=l("code"),ke=o("transformers.logging.INFO"),ne=f(),K=l("li"),Ve=o("10: "),B=l("code"),Ge=o("transformers.logging.DEBUG")},l(N){E=n(N,"P",{});var V=a(E);F=s(V,"\u{1F917} Transformers has following logging levels:"),V.forEach(t),w=m(N),d=n(N,"UL",{});var D=a(d);R=n(D,"LI",{});var ae=a(R);p=s(ae,"50: "),A=n(ae,"CODE",{});var we=a(A);re=s(we,"transformers.logging.CRITICAL"),we.forEach(t),Le=s(ae," or "),Y=n(ae,"CODE",{});var cr=a(Y);z=s(cr,"transformers.logging.FATAL"),cr.forEach(t),ae.forEach(t),Fe=m(D),W=n(D,"LI",{});var Me=a(W);x=s(Me,"40: "),te=n(Me,"CODE",{});var Re=a(te);oe=s(Re,"transformers.logging.ERROR"),Re.forEach(t),Me.forEach(t),xe=m(D),P=n(D,"LI",{});var ie=a(P);$e=s(ie,"30: "),k=n(ie,"CODE",{});var pr=a(k);Pe=s(pr,"transformers.logging.WARNING"),pr.forEach(t),Ee=s(ie," or "),S=n(ie,"CODE",{});var We=a(S);ye=s(We,"transformers.logging.WARN"),We.forEach(t),ie.forEach(t),y=m(D),J=n(D,"LI",{});var q=a(J);se=s(q,"20: "),le=n(q,"CODE",{});var Be=a(le);ke=s(Be,"transformers.logging.INFO"),Be.forEach(t),q.forEach(t),ne=m(D),K=n(D,"LI",{});var O=a(K);Ve=s(O,"10: "),B=n(O,"CODE",{});var ur=a(B);Ge=s(ur,"transformers.logging.DEBUG"),ur.forEach(t),O.forEach(t),D.forEach(t)},m(N,V){g(N,E,V),r(E,F),g(N,w,V),g(N,d,V),r(d,R),r(R,p),r(R,A),r(A,re),r(R,Le),r(R,Y),r(Y,z),r(d,Fe),r(d,W),r(W,x),r(W,te),r(te,oe),r(d,xe),r(d,P),r(P,$e),r(P,k),r(k,Pe),r(P,Ee),r(P,S),r(S,ye),r(d,y),r(d,J),r(J,se),r(J,le),r(le,ke),r(d,ne),r(d,K),r(K,Ve),r(K,B),r(B,Ge)},d(N){N&&t(E),N&&t(w),N&&t(d)}}}function rn(dr){let E,F,w,d,R;return d=new Ir({props:{code:"    [LEVELNAME|FILENAME|LINE NUMBER] TIME >> MESSAGE",highlighted:'    [LEVELNAME|<span class="hljs-type">FILENAME</span>|<span class="hljs-type">LINE</span> NUMBER] TIME &gt;&gt; MESSAGE'}}),{c(){E=l("p"),F=o("Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),w=f(),u(d.$$.fragment)},l(p){E=n(p,"P",{});var A=a(E);F=s(A,"Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),A.forEach(t),w=m(p),v(d.$$.fragment,p)},m(p,A){g(p,E,A),r(E,F),g(p,w,A),h(d,p,A),R=!0},p:Ql,i(p){R||(_(d.$$.fragment,p),R=!0)},o(p){b(d.$$.fragment,p),R=!1},d(p){p&&t(E),p&&t(w),$(d,p)}}}function tn(dr){let E,F,w,d,R,p,A,re,Le,Y,z,Fe,W,x,te,oe,xe,P,$e,k,Pe,Ee,S,ye,y,J,se,le,ke,ne,K,Ve,B,Ge,N,V,D,ae,we,cr,Me,Re,ie,pr,We,q,Be,O,ur,Nr,ro,to,Dr,oo,so,Tr,lo,no,Cr,ao,io,pt,qe,ut,Oe,go,Sr,fo,mo,vt,je,ht,I,co,Lr,po,uo,Fr,vo,ho,xr,_o,bo,Pr,$o,Eo,kr,yo,wo,_t,He,bt,Q,Ro,vr,Oo,Ao,hr,Io,No,$t,T,Ae,Vr,Do,To,Gr,Co,So,Lo,_r,Mr,Fo,xo,Po,Ie,Wr,ko,Vo,Br,Go,Mo,Wo,br,qr,Bo,qo,jo,$r,jr,Ho,Uo,Et,G,Yo,Hr,zo,Jo,Er,Ko,Qo,yr,Xo,Zo,yt,ge,Ne,Ur,Ue,es,Yr,rs,wt,fe,Ye,ts,ze,os,zr,ss,ls,Rt,me,Je,ns,Ke,as,Jr,is,gs,Ot,de,Qe,fs,Xe,ms,Kr,ds,cs,At,ce,Ze,ps,er,us,Qr,vs,hs,It,pe,De,Xr,rr,_s,Zr,bs,Nt,j,tr,$s,et,Es,ys,Te,Dt,ue,or,ws,rt,Rs,Tt,H,sr,Os,tt,As,Is,ot,Ns,Ct,ve,lr,Ds,st,Ts,St,he,nr,Cs,lt,Ss,Lt,X,ar,Ls,Ce,Fs,Ft,U,ir,xs,nt,Ps,ks,at,Vs,xt,_e,gr,Gs,it,Ms,Pt,be,fr,Ws,gt,Bs,kt;return p=new Us({}),S=new Ir({props:{code:`import transformers

transformers.logging.set_verbosity_info()`,highlighted:`<span class="hljs-keyword">import</span> transformers

transformers.logging.set_verbosity_info()`}}),q=new Ir({props:{code:"TRANSFORMERS_VERBOSITY=error ./myprogram.py",highlighted:"TRANSFORMERS_VERBOSITY=error ./myprogram.py"}}),qe=new Ir({props:{code:"TRANSFORMERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py",highlighted:"TRANSFORMERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py"}}),je=new Ir({props:{code:`from transformers.utils import logging

logging.set_verbosity_info()
logger = logging.get_logger(__name__)
logger.info("INFO")
logger.warning("WARN")`,highlighted:`<span class="hljs-keyword">from</span> transformers.utils <span class="hljs-keyword">import</span> logging

logging.set_verbosity_info()
logger = logging.get_logger(__name__)
logger.info(<span class="hljs-string">&quot;INFO&quot;</span>)
logger.warning(<span class="hljs-string">&quot;WARN&quot;</span>)`}}),He=new Ir({props:{code:`from transformers.utils import logging

if __name__ == "__main__":
    logging.set_verbosity_info()
    # leave it empy or use a string
    logger = logging.get_logger()
    logger.info("INFO")
    logger.warning("WARN")`,highlighted:`<span class="hljs-keyword">from</span> transformers.utils <span class="hljs-keyword">import</span> logging

<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:
    logging.set_verbosity_info()
    <span class="hljs-comment"># leave it empy or use a string</span>
    logger = logging.get_logger()
    logger.info(<span class="hljs-string">&quot;INFO&quot;</span>)
    logger.warning(<span class="hljs-string">&quot;WARN&quot;</span>)`}}),Ue=new Us({}),Ye=new L({props:{name:"transformers.utils.logging.set_verbosity_error",anchor:"transformers.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L184"}}),Je=new L({props:{name:"transformers.utils.logging.set_verbosity_warning",anchor:"transformers.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L174"}}),Qe=new L({props:{name:"transformers.utils.logging.set_verbosity_info",anchor:"transformers.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L169"}}),Ze=new L({props:{name:"transformers.utils.logging.set_verbosity_debug",anchor:"transformers.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L179"}}),rr=new Us({}),tr=new L({props:{name:"transformers.utils.logging.get_verbosity",anchor:"transformers.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L127",returnDescription:`
<p>The logging level.</p>
`,returnType:`
<p><code>int</code></p>
`}}),Te=new Xl({props:{$$slots:{default:[en]},$$scope:{ctx:dr}}}),or=new L({props:{name:"transformers.utils.logging.set_verbosity",anchor:"transformers.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],parametersDescription:[{anchor:"transformers.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., one of:</p>
<ul>
<li><code>transformers.logging.CRITICAL</code> or <code>transformers.logging.FATAL</code></li>
<li><code>transformers.logging.ERROR</code></li>
<li><code>transformers.logging.WARNING</code> or <code>transformers.logging.WARN</code></li>
<li><code>transformers.logging.INFO</code></li>
<li><code>transformers.logging.DEBUG</code></li>
</ul>`,name:"verbosity"}],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L150"}}),sr=new L({props:{name:"transformers.utils.logging.get_logger",anchor:"transformers.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L113"}}),lr=new L({props:{name:"transformers.utils.logging.enable_default_handler",anchor:"transformers.utils.logging.enable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L198"}}),nr=new L({props:{name:"transformers.utils.logging.disable_default_handler",anchor:"transformers.utils.logging.disable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L189"}}),ar=new L({props:{name:"transformers.utils.logging.enable_explicit_format",anchor:"transformers.utils.logging.enable_explicit_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L244"}}),Ce=new Zl({props:{anchor:"transformers.utils.logging.enable_explicit_format.example",$$slots:{default:[rn]},$$scope:{ctx:dr}}}),ir=new L({props:{name:"transformers.utils.logging.reset_format",anchor:"transformers.utils.logging.reset_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L259"}}),gr=new L({props:{name:"transformers.utils.logging.enable_progress_bar",anchor:"transformers.utils.logging.enable_progress_bar",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L335"}}),fr=new L({props:{name:"transformers.utils.logging.disable_progress_bar",anchor:"transformers.utils.logging.disable_progress_bar",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17280/src/transformers/utils/logging.py#L341"}}),{c(){E=l("meta"),F=f(),w=l("h1"),d=l("a"),R=l("span"),u(p.$$.fragment),A=f(),re=l("span"),Le=o("Logging"),Y=f(),z=l("p"),Fe=o("\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),W=f(),x=l("p"),te=o("Currently the default verbosity of the library is "),oe=l("code"),xe=o("WARNING"),P=o("."),$e=f(),k=l("p"),Pe=o(`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),Ee=f(),u(S.$$.fragment),ye=f(),y=l("p"),J=o("You can also use the environment variable "),se=l("code"),le=o("TRANSFORMERS_VERBOSITY"),ke=o(` to override the default verbosity. You can set it
to one of the following: `),ne=l("code"),K=o("debug"),Ve=o(", "),B=l("code"),Ge=o("info"),N=o(", "),V=l("code"),D=o("warning"),ae=o(", "),we=l("code"),cr=o("error"),Me=o(", "),Re=l("code"),ie=o("critical"),pr=o(". For example:"),We=f(),u(q.$$.fragment),Be=f(),O=l("p"),ur=o("Additionally, some "),Nr=l("code"),ro=o("warnings"),to=o(` can be disabled by setting the environment variable
`),Dr=l("code"),oo=o("TRANSFORMERS_NO_ADVISORY_WARNINGS"),so=o(" to a true value, like "),Tr=l("em"),lo=o("1"),no=o(`. This will disable any warning that is logged using
`),Cr=l("code"),ao=o("logger.warning_advice()"),io=o(". For example:"),pt=f(),u(qe.$$.fragment),ut=f(),Oe=l("p"),go=o("Here is an example of how to use "),Sr=l("code"),fo=o("logging"),mo=o(" in a module:"),vt=f(),u(je.$$.fragment),ht=f(),I=l("p"),co=o("Above, a "),Lr=l("code"),po=o("logger"),uo=o(" instance is created from "),Fr=l("code"),vo=o("logging.get_logger(__name__)"),ho=o(". If you want to use "),xr=l("code"),_o=o("logging"),bo=o(" in a script, you shouldn\u2019t pass "),Pr=l("code"),$o=o("__name__"),Eo=o(" to "),kr=l("code"),yo=o("logging.get_logger"),wo=o(". For example:"),_t=f(),u(He.$$.fragment),bt=f(),Q=l("p"),Ro=o(`All the methods of this logging module are documented below, the main ones are
`),vr=l("a"),Oo=o("logging.get_verbosity()"),Ao=o(` to get the current level of verbosity in the logger and
`),hr=l("a"),Io=o("logging.set_verbosity()"),No=o(` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),$t=f(),T=l("ul"),Ae=l("li"),Vr=l("code"),Do=o("transformers.logging.CRITICAL"),To=o(" or "),Gr=l("code"),Co=o("transformers.logging.FATAL"),So=o(` (int value, 50): only report the most
critical errors.`),Lo=f(),_r=l("li"),Mr=l("code"),Fo=o("transformers.logging.ERROR"),xo=o(" (int value, 40): only report errors."),Po=f(),Ie=l("li"),Wr=l("code"),ko=o("transformers.logging.WARNING"),Vo=o(" or "),Br=l("code"),Go=o("transformers.logging.WARN"),Mo=o(` (int value, 30): only reports error and
warnings. This the default level used by the library.`),Wo=f(),br=l("li"),qr=l("code"),Bo=o("transformers.logging.INFO"),qo=o(" (int value, 20): reports error, warnings and basic information."),jo=f(),$r=l("li"),jr=l("code"),Ho=o("transformers.logging.DEBUG"),Uo=o(" (int value, 10): report all information."),Et=f(),G=l("p"),Yo=o("By default, "),Hr=l("code"),zo=o("tqdm"),Jo=o(" progress bars will be displayed during model download. "),Er=l("a"),Ko=o("logging.disable_progress_bar()"),Qo=o(" and "),yr=l("a"),Xo=o("logging.enable_progress_bar()"),Zo=o(" can be used to suppress or unsuppress this behavior."),yt=f(),ge=l("h2"),Ne=l("a"),Ur=l("span"),u(Ue.$$.fragment),es=f(),Yr=l("span"),rs=o("Base setters"),wt=f(),fe=l("div"),u(Ye.$$.fragment),ts=f(),ze=l("p"),os=o("Set the verbosity to the "),zr=l("code"),ss=o("ERROR"),ls=o(" level."),Rt=f(),me=l("div"),u(Je.$$.fragment),ns=f(),Ke=l("p"),as=o("Set the verbosity to the "),Jr=l("code"),is=o("WARNING"),gs=o(" level."),Ot=f(),de=l("div"),u(Qe.$$.fragment),fs=f(),Xe=l("p"),ms=o("Set the verbosity to the "),Kr=l("code"),ds=o("INFO"),cs=o(" level."),At=f(),ce=l("div"),u(Ze.$$.fragment),ps=f(),er=l("p"),us=o("Set the verbosity to the "),Qr=l("code"),vs=o("DEBUG"),hs=o(" level."),It=f(),pe=l("h2"),De=l("a"),Xr=l("span"),u(rr.$$.fragment),_s=f(),Zr=l("span"),bs=o("Other functions"),Nt=f(),j=l("div"),u(tr.$$.fragment),$s=f(),et=l("p"),Es=o("Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),ys=f(),u(Te.$$.fragment),Dt=f(),ue=l("div"),u(or.$$.fragment),ws=f(),rt=l("p"),Rs=o("Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),Tt=f(),H=l("div"),u(sr.$$.fragment),Os=f(),tt=l("p"),As=o("Return a logger with the specified name."),Is=f(),ot=l("p"),Ns=o("This function is not supposed to be directly accessed unless you are writing a custom transformers module."),Ct=f(),ve=l("div"),u(lr.$$.fragment),Ds=f(),st=l("p"),Ts=o("Enable the default handler of the HuggingFace Transformers\u2019s root logger."),St=f(),he=l("div"),u(nr.$$.fragment),Cs=f(),lt=l("p"),Ss=o("Disable the default handler of the HuggingFace Transformers\u2019s root logger."),Lt=f(),X=l("div"),u(ar.$$.fragment),Ls=f(),u(Ce.$$.fragment),Fs=o(`
All handlers currently bound to the root logger are affected by this method.`),Ft=f(),U=l("div"),u(ir.$$.fragment),xs=f(),nt=l("p"),Ps=o("Resets the formatting for HuggingFace Transformers\u2019s loggers."),ks=f(),at=l("p"),Vs=o("All handlers currently bound to the root logger are affected by this method."),xt=f(),_e=l("div"),u(gr.$$.fragment),Gs=f(),it=l("p"),Ms=o("Enable tqdm progress bar."),Pt=f(),be=l("div"),u(fr.$$.fragment),Ws=f(),gt=l("p"),Bs=o("Disable tqdm progress bar."),this.h()},l(e){const i=Jl('[data-svelte="svelte-1phssyn"]',document.head);E=n(i,"META",{name:!0,content:!0}),i.forEach(t),F=m(e),w=n(e,"H1",{class:!0});var mr=a(w);d=n(mr,"A",{id:!0,class:!0,href:!0});var ft=a(d);R=n(ft,"SPAN",{});var Ys=a(R);v(p.$$.fragment,Ys),Ys.forEach(t),ft.forEach(t),A=m(mr),re=n(mr,"SPAN",{});var zs=a(re);Le=s(zs,"Logging"),zs.forEach(t),mr.forEach(t),Y=m(e),z=n(e,"P",{});var Js=a(z);Fe=s(Js,"\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),Js.forEach(t),W=m(e),x=n(e,"P",{});var Vt=a(x);te=s(Vt,"Currently the default verbosity of the library is "),oe=n(Vt,"CODE",{});var Ks=a(oe);xe=s(Ks,"WARNING"),Ks.forEach(t),P=s(Vt,"."),Vt.forEach(t),$e=m(e),k=n(e,"P",{});var Qs=a(k);Pe=s(Qs,`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),Qs.forEach(t),Ee=m(e),v(S.$$.fragment,e),ye=m(e),y=n(e,"P",{});var C=a(y);J=s(C,"You can also use the environment variable "),se=n(C,"CODE",{});var Xs=a(se);le=s(Xs,"TRANSFORMERS_VERBOSITY"),Xs.forEach(t),ke=s(C,` to override the default verbosity. You can set it
to one of the following: `),ne=n(C,"CODE",{});var Zs=a(ne);K=s(Zs,"debug"),Zs.forEach(t),Ve=s(C,", "),B=n(C,"CODE",{});var el=a(B);Ge=s(el,"info"),el.forEach(t),N=s(C,", "),V=n(C,"CODE",{});var rl=a(V);D=s(rl,"warning"),rl.forEach(t),ae=s(C,", "),we=n(C,"CODE",{});var tl=a(we);cr=s(tl,"error"),tl.forEach(t),Me=s(C,", "),Re=n(C,"CODE",{});var ol=a(Re);ie=s(ol,"critical"),ol.forEach(t),pr=s(C,". For example:"),C.forEach(t),We=m(e),v(q.$$.fragment,e),Be=m(e),O=n(e,"P",{});var Z=a(O);ur=s(Z,"Additionally, some "),Nr=n(Z,"CODE",{});var sl=a(Nr);ro=s(sl,"warnings"),sl.forEach(t),to=s(Z,` can be disabled by setting the environment variable
`),Dr=n(Z,"CODE",{});var ll=a(Dr);oo=s(ll,"TRANSFORMERS_NO_ADVISORY_WARNINGS"),ll.forEach(t),so=s(Z," to a true value, like "),Tr=n(Z,"EM",{});var nl=a(Tr);lo=s(nl,"1"),nl.forEach(t),no=s(Z,`. This will disable any warning that is logged using
`),Cr=n(Z,"CODE",{});var al=a(Cr);ao=s(al,"logger.warning_advice()"),al.forEach(t),io=s(Z,". For example:"),Z.forEach(t),pt=m(e),v(qe.$$.fragment,e),ut=m(e),Oe=n(e,"P",{});var Gt=a(Oe);go=s(Gt,"Here is an example of how to use "),Sr=n(Gt,"CODE",{});var il=a(Sr);fo=s(il,"logging"),il.forEach(t),mo=s(Gt," in a module:"),Gt.forEach(t),vt=m(e),v(je.$$.fragment,e),ht=m(e),I=n(e,"P",{});var M=a(I);co=s(M,"Above, a "),Lr=n(M,"CODE",{});var gl=a(Lr);po=s(gl,"logger"),gl.forEach(t),uo=s(M," instance is created from "),Fr=n(M,"CODE",{});var fl=a(Fr);vo=s(fl,"logging.get_logger(__name__)"),fl.forEach(t),ho=s(M,". If you want to use "),xr=n(M,"CODE",{});var ml=a(xr);_o=s(ml,"logging"),ml.forEach(t),bo=s(M," in a script, you shouldn\u2019t pass "),Pr=n(M,"CODE",{});var dl=a(Pr);$o=s(dl,"__name__"),dl.forEach(t),Eo=s(M," to "),kr=n(M,"CODE",{});var cl=a(kr);yo=s(cl,"logging.get_logger"),cl.forEach(t),wo=s(M,". For example:"),M.forEach(t),_t=m(e),v(He.$$.fragment,e),bt=m(e),Q=n(e,"P",{});var wr=a(Q);Ro=s(wr,`All the methods of this logging module are documented below, the main ones are
`),vr=n(wr,"A",{href:!0});var pl=a(vr);Oo=s(pl,"logging.get_verbosity()"),pl.forEach(t),Ao=s(wr,` to get the current level of verbosity in the logger and
`),hr=n(wr,"A",{href:!0});var ul=a(hr);Io=s(ul,"logging.set_verbosity()"),ul.forEach(t),No=s(wr,` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),wr.forEach(t),$t=m(e),T=n(e,"UL",{});var ee=a(T);Ae=n(ee,"LI",{});var mt=a(Ae);Vr=n(mt,"CODE",{});var vl=a(Vr);Do=s(vl,"transformers.logging.CRITICAL"),vl.forEach(t),To=s(mt," or "),Gr=n(mt,"CODE",{});var hl=a(Gr);Co=s(hl,"transformers.logging.FATAL"),hl.forEach(t),So=s(mt,` (int value, 50): only report the most
critical errors.`),mt.forEach(t),Lo=m(ee),_r=n(ee,"LI",{});var qs=a(_r);Mr=n(qs,"CODE",{});var _l=a(Mr);Fo=s(_l,"transformers.logging.ERROR"),_l.forEach(t),xo=s(qs," (int value, 40): only report errors."),qs.forEach(t),Po=m(ee),Ie=n(ee,"LI",{});var dt=a(Ie);Wr=n(dt,"CODE",{});var bl=a(Wr);ko=s(bl,"transformers.logging.WARNING"),bl.forEach(t),Vo=s(dt," or "),Br=n(dt,"CODE",{});var $l=a(Br);Go=s($l,"transformers.logging.WARN"),$l.forEach(t),Mo=s(dt,` (int value, 30): only reports error and
warnings. This the default level used by the library.`),dt.forEach(t),Wo=m(ee),br=n(ee,"LI",{});var js=a(br);qr=n(js,"CODE",{});var El=a(qr);Bo=s(El,"transformers.logging.INFO"),El.forEach(t),qo=s(js," (int value, 20): reports error, warnings and basic information."),js.forEach(t),jo=m(ee),$r=n(ee,"LI",{});var Hs=a($r);jr=n(Hs,"CODE",{});var yl=a(jr);Ho=s(yl,"transformers.logging.DEBUG"),yl.forEach(t),Uo=s(Hs," (int value, 10): report all information."),Hs.forEach(t),ee.forEach(t),Et=m(e),G=n(e,"P",{});var Se=a(G);Yo=s(Se,"By default, "),Hr=n(Se,"CODE",{});var wl=a(Hr);zo=s(wl,"tqdm"),wl.forEach(t),Jo=s(Se," progress bars will be displayed during model download. "),Er=n(Se,"A",{href:!0});var Rl=a(Er);Ko=s(Rl,"logging.disable_progress_bar()"),Rl.forEach(t),Qo=s(Se," and "),yr=n(Se,"A",{href:!0});var Ol=a(yr);Xo=s(Ol,"logging.enable_progress_bar()"),Ol.forEach(t),Zo=s(Se," can be used to suppress or unsuppress this behavior."),Se.forEach(t),yt=m(e),ge=n(e,"H2",{class:!0});var Mt=a(ge);Ne=n(Mt,"A",{id:!0,class:!0,href:!0});var Al=a(Ne);Ur=n(Al,"SPAN",{});var Il=a(Ur);v(Ue.$$.fragment,Il),Il.forEach(t),Al.forEach(t),es=m(Mt),Yr=n(Mt,"SPAN",{});var Nl=a(Yr);rs=s(Nl,"Base setters"),Nl.forEach(t),Mt.forEach(t),wt=m(e),fe=n(e,"DIV",{class:!0});var Wt=a(fe);v(Ye.$$.fragment,Wt),ts=m(Wt),ze=n(Wt,"P",{});var Bt=a(ze);os=s(Bt,"Set the verbosity to the "),zr=n(Bt,"CODE",{});var Dl=a(zr);ss=s(Dl,"ERROR"),Dl.forEach(t),ls=s(Bt," level."),Bt.forEach(t),Wt.forEach(t),Rt=m(e),me=n(e,"DIV",{class:!0});var qt=a(me);v(Je.$$.fragment,qt),ns=m(qt),Ke=n(qt,"P",{});var jt=a(Ke);as=s(jt,"Set the verbosity to the "),Jr=n(jt,"CODE",{});var Tl=a(Jr);is=s(Tl,"WARNING"),Tl.forEach(t),gs=s(jt," level."),jt.forEach(t),qt.forEach(t),Ot=m(e),de=n(e,"DIV",{class:!0});var Ht=a(de);v(Qe.$$.fragment,Ht),fs=m(Ht),Xe=n(Ht,"P",{});var Ut=a(Xe);ms=s(Ut,"Set the verbosity to the "),Kr=n(Ut,"CODE",{});var Cl=a(Kr);ds=s(Cl,"INFO"),Cl.forEach(t),cs=s(Ut," level."),Ut.forEach(t),Ht.forEach(t),At=m(e),ce=n(e,"DIV",{class:!0});var Yt=a(ce);v(Ze.$$.fragment,Yt),ps=m(Yt),er=n(Yt,"P",{});var zt=a(er);us=s(zt,"Set the verbosity to the "),Qr=n(zt,"CODE",{});var Sl=a(Qr);vs=s(Sl,"DEBUG"),Sl.forEach(t),hs=s(zt," level."),zt.forEach(t),Yt.forEach(t),It=m(e),pe=n(e,"H2",{class:!0});var Jt=a(pe);De=n(Jt,"A",{id:!0,class:!0,href:!0});var Ll=a(De);Xr=n(Ll,"SPAN",{});var Fl=a(Xr);v(rr.$$.fragment,Fl),Fl.forEach(t),Ll.forEach(t),_s=m(Jt),Zr=n(Jt,"SPAN",{});var xl=a(Zr);bs=s(xl,"Other functions"),xl.forEach(t),Jt.forEach(t),Nt=m(e),j=n(e,"DIV",{class:!0});var Rr=a(j);v(tr.$$.fragment,Rr),$s=m(Rr),et=n(Rr,"P",{});var Pl=a(et);Es=s(Pl,"Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),Pl.forEach(t),ys=m(Rr),v(Te.$$.fragment,Rr),Rr.forEach(t),Dt=m(e),ue=n(e,"DIV",{class:!0});var Kt=a(ue);v(or.$$.fragment,Kt),ws=m(Kt),rt=n(Kt,"P",{});var kl=a(rt);Rs=s(kl,"Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),kl.forEach(t),Kt.forEach(t),Tt=m(e),H=n(e,"DIV",{class:!0});var Or=a(H);v(sr.$$.fragment,Or),Os=m(Or),tt=n(Or,"P",{});var Vl=a(tt);As=s(Vl,"Return a logger with the specified name."),Vl.forEach(t),Is=m(Or),ot=n(Or,"P",{});var Gl=a(ot);Ns=s(Gl,"This function is not supposed to be directly accessed unless you are writing a custom transformers module."),Gl.forEach(t),Or.forEach(t),Ct=m(e),ve=n(e,"DIV",{class:!0});var Qt=a(ve);v(lr.$$.fragment,Qt),Ds=m(Qt),st=n(Qt,"P",{});var Ml=a(st);Ts=s(Ml,"Enable the default handler of the HuggingFace Transformers\u2019s root logger."),Ml.forEach(t),Qt.forEach(t),St=m(e),he=n(e,"DIV",{class:!0});var Xt=a(he);v(nr.$$.fragment,Xt),Cs=m(Xt),lt=n(Xt,"P",{});var Wl=a(lt);Ss=s(Wl,"Disable the default handler of the HuggingFace Transformers\u2019s root logger."),Wl.forEach(t),Xt.forEach(t),Lt=m(e),X=n(e,"DIV",{class:!0});var ct=a(X);v(ar.$$.fragment,ct),Ls=m(ct),v(Ce.$$.fragment,ct),Fs=s(ct,`
All handlers currently bound to the root logger are affected by this method.`),ct.forEach(t),Ft=m(e),U=n(e,"DIV",{class:!0});var Ar=a(U);v(ir.$$.fragment,Ar),xs=m(Ar),nt=n(Ar,"P",{});var Bl=a(nt);Ps=s(Bl,"Resets the formatting for HuggingFace Transformers\u2019s loggers."),Bl.forEach(t),ks=m(Ar),at=n(Ar,"P",{});var ql=a(at);Vs=s(ql,"All handlers currently bound to the root logger are affected by this method."),ql.forEach(t),Ar.forEach(t),xt=m(e),_e=n(e,"DIV",{class:!0});var Zt=a(_e);v(gr.$$.fragment,Zt),Gs=m(Zt),it=n(Zt,"P",{});var jl=a(it);Ms=s(jl,"Enable tqdm progress bar."),jl.forEach(t),Zt.forEach(t),Pt=m(e),be=n(e,"DIV",{class:!0});var eo=a(be);v(fr.$$.fragment,eo),Ws=m(eo),gt=n(eo,"P",{});var Hl=a(gt);Bs=s(Hl,"Disable tqdm progress bar."),Hl.forEach(t),eo.forEach(t),this.h()},h(){c(E,"name","hf:doc:metadata"),c(E,"content",JSON.stringify(on)),c(d,"id","logging"),c(d,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(d,"href","#logging"),c(w,"class","relative group"),c(vr,"href","/docs/transformers/pr_17280/en/main_classes/logging#transformers.utils.logging.get_verbosity"),c(hr,"href","/docs/transformers/pr_17280/en/main_classes/logging#transformers.utils.logging.set_verbosity"),c(Er,"href","/docs/transformers/pr_17280/en/main_classes/logging#transformers.utils.logging.disable_progress_bar"),c(yr,"href","/docs/transformers/pr_17280/en/main_classes/logging#transformers.utils.logging.enable_progress_bar"),c(Ne,"id","transformers.utils.logging.set_verbosity_error"),c(Ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ne,"href","#transformers.utils.logging.set_verbosity_error"),c(ge,"class","relative group"),c(fe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(de,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(De,"id","transformers.utils.logging.get_verbosity"),c(De,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(De,"href","#transformers.utils.logging.get_verbosity"),c(pe,"class","relative group"),c(j,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(ue,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(H,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(ve,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(he,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(X,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(U,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(_e,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(be,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,i){r(document.head,E),g(e,F,i),g(e,w,i),r(w,d),r(d,R),h(p,R,null),r(w,A),r(w,re),r(re,Le),g(e,Y,i),g(e,z,i),r(z,Fe),g(e,W,i),g(e,x,i),r(x,te),r(x,oe),r(oe,xe),r(x,P),g(e,$e,i),g(e,k,i),r(k,Pe),g(e,Ee,i),h(S,e,i),g(e,ye,i),g(e,y,i),r(y,J),r(y,se),r(se,le),r(y,ke),r(y,ne),r(ne,K),r(y,Ve),r(y,B),r(B,Ge),r(y,N),r(y,V),r(V,D),r(y,ae),r(y,we),r(we,cr),r(y,Me),r(y,Re),r(Re,ie),r(y,pr),g(e,We,i),h(q,e,i),g(e,Be,i),g(e,O,i),r(O,ur),r(O,Nr),r(Nr,ro),r(O,to),r(O,Dr),r(Dr,oo),r(O,so),r(O,Tr),r(Tr,lo),r(O,no),r(O,Cr),r(Cr,ao),r(O,io),g(e,pt,i),h(qe,e,i),g(e,ut,i),g(e,Oe,i),r(Oe,go),r(Oe,Sr),r(Sr,fo),r(Oe,mo),g(e,vt,i),h(je,e,i),g(e,ht,i),g(e,I,i),r(I,co),r(I,Lr),r(Lr,po),r(I,uo),r(I,Fr),r(Fr,vo),r(I,ho),r(I,xr),r(xr,_o),r(I,bo),r(I,Pr),r(Pr,$o),r(I,Eo),r(I,kr),r(kr,yo),r(I,wo),g(e,_t,i),h(He,e,i),g(e,bt,i),g(e,Q,i),r(Q,Ro),r(Q,vr),r(vr,Oo),r(Q,Ao),r(Q,hr),r(hr,Io),r(Q,No),g(e,$t,i),g(e,T,i),r(T,Ae),r(Ae,Vr),r(Vr,Do),r(Ae,To),r(Ae,Gr),r(Gr,Co),r(Ae,So),r(T,Lo),r(T,_r),r(_r,Mr),r(Mr,Fo),r(_r,xo),r(T,Po),r(T,Ie),r(Ie,Wr),r(Wr,ko),r(Ie,Vo),r(Ie,Br),r(Br,Go),r(Ie,Mo),r(T,Wo),r(T,br),r(br,qr),r(qr,Bo),r(br,qo),r(T,jo),r(T,$r),r($r,jr),r(jr,Ho),r($r,Uo),g(e,Et,i),g(e,G,i),r(G,Yo),r(G,Hr),r(Hr,zo),r(G,Jo),r(G,Er),r(Er,Ko),r(G,Qo),r(G,yr),r(yr,Xo),r(G,Zo),g(e,yt,i),g(e,ge,i),r(ge,Ne),r(Ne,Ur),h(Ue,Ur,null),r(ge,es),r(ge,Yr),r(Yr,rs),g(e,wt,i),g(e,fe,i),h(Ye,fe,null),r(fe,ts),r(fe,ze),r(ze,os),r(ze,zr),r(zr,ss),r(ze,ls),g(e,Rt,i),g(e,me,i),h(Je,me,null),r(me,ns),r(me,Ke),r(Ke,as),r(Ke,Jr),r(Jr,is),r(Ke,gs),g(e,Ot,i),g(e,de,i),h(Qe,de,null),r(de,fs),r(de,Xe),r(Xe,ms),r(Xe,Kr),r(Kr,ds),r(Xe,cs),g(e,At,i),g(e,ce,i),h(Ze,ce,null),r(ce,ps),r(ce,er),r(er,us),r(er,Qr),r(Qr,vs),r(er,hs),g(e,It,i),g(e,pe,i),r(pe,De),r(De,Xr),h(rr,Xr,null),r(pe,_s),r(pe,Zr),r(Zr,bs),g(e,Nt,i),g(e,j,i),h(tr,j,null),r(j,$s),r(j,et),r(et,Es),r(j,ys),h(Te,j,null),g(e,Dt,i),g(e,ue,i),h(or,ue,null),r(ue,ws),r(ue,rt),r(rt,Rs),g(e,Tt,i),g(e,H,i),h(sr,H,null),r(H,Os),r(H,tt),r(tt,As),r(H,Is),r(H,ot),r(ot,Ns),g(e,Ct,i),g(e,ve,i),h(lr,ve,null),r(ve,Ds),r(ve,st),r(st,Ts),g(e,St,i),g(e,he,i),h(nr,he,null),r(he,Cs),r(he,lt),r(lt,Ss),g(e,Lt,i),g(e,X,i),h(ar,X,null),r(X,Ls),h(Ce,X,null),r(X,Fs),g(e,Ft,i),g(e,U,i),h(ir,U,null),r(U,xs),r(U,nt),r(nt,Ps),r(U,ks),r(U,at),r(at,Vs),g(e,xt,i),g(e,_e,i),h(gr,_e,null),r(_e,Gs),r(_e,it),r(it,Ms),g(e,Pt,i),g(e,be,i),h(fr,be,null),r(be,Ws),r(be,gt),r(gt,Bs),kt=!0},p(e,[i]){const mr={};i&2&&(mr.$$scope={dirty:i,ctx:e}),Te.$set(mr);const ft={};i&2&&(ft.$$scope={dirty:i,ctx:e}),Ce.$set(ft)},i(e){kt||(_(p.$$.fragment,e),_(S.$$.fragment,e),_(q.$$.fragment,e),_(qe.$$.fragment,e),_(je.$$.fragment,e),_(He.$$.fragment,e),_(Ue.$$.fragment,e),_(Ye.$$.fragment,e),_(Je.$$.fragment,e),_(Qe.$$.fragment,e),_(Ze.$$.fragment,e),_(rr.$$.fragment,e),_(tr.$$.fragment,e),_(Te.$$.fragment,e),_(or.$$.fragment,e),_(sr.$$.fragment,e),_(lr.$$.fragment,e),_(nr.$$.fragment,e),_(ar.$$.fragment,e),_(Ce.$$.fragment,e),_(ir.$$.fragment,e),_(gr.$$.fragment,e),_(fr.$$.fragment,e),kt=!0)},o(e){b(p.$$.fragment,e),b(S.$$.fragment,e),b(q.$$.fragment,e),b(qe.$$.fragment,e),b(je.$$.fragment,e),b(He.$$.fragment,e),b(Ue.$$.fragment,e),b(Ye.$$.fragment,e),b(Je.$$.fragment,e),b(Qe.$$.fragment,e),b(Ze.$$.fragment,e),b(rr.$$.fragment,e),b(tr.$$.fragment,e),b(Te.$$.fragment,e),b(or.$$.fragment,e),b(sr.$$.fragment,e),b(lr.$$.fragment,e),b(nr.$$.fragment,e),b(ar.$$.fragment,e),b(Ce.$$.fragment,e),b(ir.$$.fragment,e),b(gr.$$.fragment,e),b(fr.$$.fragment,e),kt=!1},d(e){t(E),e&&t(F),e&&t(w),$(p),e&&t(Y),e&&t(z),e&&t(W),e&&t(x),e&&t($e),e&&t(k),e&&t(Ee),$(S,e),e&&t(ye),e&&t(y),e&&t(We),$(q,e),e&&t(Be),e&&t(O),e&&t(pt),$(qe,e),e&&t(ut),e&&t(Oe),e&&t(vt),$(je,e),e&&t(ht),e&&t(I),e&&t(_t),$(He,e),e&&t(bt),e&&t(Q),e&&t($t),e&&t(T),e&&t(Et),e&&t(G),e&&t(yt),e&&t(ge),$(Ue),e&&t(wt),e&&t(fe),$(Ye),e&&t(Rt),e&&t(me),$(Je),e&&t(Ot),e&&t(de),$(Qe),e&&t(At),e&&t(ce),$(Ze),e&&t(It),e&&t(pe),$(rr),e&&t(Nt),e&&t(j),$(tr),$(Te),e&&t(Dt),e&&t(ue),$(or),e&&t(Tt),e&&t(H),$(sr),e&&t(Ct),e&&t(ve),$(lr),e&&t(St),e&&t(he),$(nr),e&&t(Lt),e&&t(X),$(ar),$(Ce),e&&t(Ft),e&&t(U),$(ir),e&&t(xt),e&&t(_e),$(gr),e&&t(Pt),e&&t(be),$(fr)}}}const on={local:"logging",sections:[{local:"transformers.utils.logging.set_verbosity_error",title:"Base setters"},{local:"transformers.utils.logging.get_verbosity",title:"Other functions"}],title:"Logging"};function sn(dr){return Kl(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class dn extends Ul{constructor(E){super();Yl(this,E,sn,tn,zl,{})}}export{dn as default,on as metadata};
