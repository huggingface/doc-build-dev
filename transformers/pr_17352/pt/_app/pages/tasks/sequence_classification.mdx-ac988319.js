import{D as cs,S as De,i as Me,s as Ae,O as C,P as x,a as f,d as s,b as i,g as v,F as l,L as be,t as p,h as u,e as g,w as O,k as T,c as $,x as B,m as D,y as F,Q as ya,q as z,o as M,B as H,n as rt,p as ot,Y as hs,v as fs,Z as Wt,X as ps,V as us,H as yt,I as jt,J as zt,K as Ct,M as ds}from"../../chunks/vendor-c570b7f7.js";import{T as Et}from"../../chunks/Tip-4965f0b6.js";import{Y as ms}from"../../chunks/Youtube-ea859fc9.js";import{I as Zt,C as ve}from"../../chunks/CodeBlock-8a2530c2.js";var Ce=(c=>(c.OPEN="OPEN",c.CLOSED="CLOSED",c.HASHASHLINK="HASHASHLINK",c))(Ce||{});const Ea={};function _s(c){return Ea[c]||(Ea[c]=cs("OPEN")),Ea[c]}function gs(c){let e,r,t,a,n,h;return{c(){e=C("svg"),r=C("defs"),t=C("clipPath"),a=C("rect"),n=C("g"),h=C("path"),this.h()},l(d){e=x(d,"svg",{class:!0,xmlns:!0,"xmlns:xlink":!0,"aria-hidden":!0,focusable:!0,role:!0,width:!0,height:!0,preserveAspectRatio:!0,viewBox:!0});var _=f(e);r=x(_,"defs",{});var w=f(r);t=x(w,"clipPath",{id:!0});var E=f(t);a=x(E,"rect",{x:!0,y:!0,width:!0,height:!0,fill:!0}),f(a).forEach(s),E.forEach(s),w.forEach(s),n=x(_,"g",{"clip-path":!0});var b=f(n);h=x(b,"path",{d:!0,fill:!0}),f(h).forEach(s),b.forEach(s),_.forEach(s),this.h()},h(){i(a,"x","3.05"),i(a,"y","0.5"),i(a,"width","25.73"),i(a,"height","31"),i(a,"fill","none"),i(t,"id","a"),i(h,"d","M24.94,9.51a12.81,12.81,0,0,1,0,18.16,12.68,12.68,0,0,1-18,0,12.81,12.81,0,0,1,0-18.16l9-9V5l-.84.83-6,6a9.58,9.58,0,1,0,13.55,0ZM20.44,9a1.68,1.68,0,1,1,1.67-1.67A1.68,1.68,0,0,1,20.44,9Z"),i(h,"fill","#ee4c2c"),i(n,"clip-path","url(#a)"),i(e,"class",c[0]),i(e,"xmlns","http://www.w3.org/2000/svg"),i(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),i(e,"aria-hidden","true"),i(e,"focusable","false"),i(e,"role","img"),i(e,"width","1em"),i(e,"height","1em"),i(e,"preserveAspectRatio","xMidYMid meet"),i(e,"viewBox","0 0 32 32")},m(d,_){v(d,e,_),l(e,r),l(r,t),l(t,a),l(e,n),l(n,h)},p(d,[_]){_&1&&i(e,"class",d[0])},i:be,o:be,d(d){d&&s(e)}}}function $s(c,e,r){let{classNames:t=""}=e;return c.$$set=a=>{"classNames"in a&&r(0,t=a.classNames)},[t]}class ws extends De{constructor(e){super();Me(this,e,$s,gs,Ae,{classNames:0})}}function vs(c){let e,r,t,a;return{c(){e=C("svg"),r=C("path"),t=C("path"),a=C("path"),this.h()},l(n){e=x(n,"svg",{class:!0,xmlns:!0,"xmlns:xlink":!0,"aria-hidden":!0,focusable:!0,role:!0,width:!0,height:!0,preserveAspectRatio:!0,viewBox:!0});var h=f(e);r=x(h,"path",{d:!0,fill:!0}),f(r).forEach(s),t=x(h,"path",{d:!0,fill:!0}),f(t).forEach(s),a=x(h,"path",{d:!0,fill:!0}),f(a).forEach(s),h.forEach(s),this.h()},h(){i(r,"d","M145.726 42.065v42.07l72.861 42.07v-42.07l-72.86-42.07zM0 84.135v42.07l36.43 21.03V105.17L0 84.135zm109.291 21.035l-36.43 21.034v126.2l36.43 21.035v-84.135l36.435 21.035v-42.07l-36.435-21.034V105.17z"),i(r,"fill","#E55B2D"),i(t,"d","M145.726 42.065L36.43 105.17v42.065l72.861-42.065v42.065l36.435-21.03v-84.14zM255.022 63.1l-36.435 21.035v42.07l36.435-21.035V63.1zm-72.865 84.135l-36.43 21.035v42.07l36.43-21.036v-42.07zm-36.43 63.104l-36.436-21.035v84.135l36.435-21.035V210.34z"),i(t,"fill","#ED8E24"),i(a,"d","M145.726 0L0 84.135l36.43 21.035l109.296-63.105l72.861 42.07L255.022 63.1L145.726 0zm0 126.204l-36.435 21.03l36.435 21.036l36.43-21.035l-36.43-21.03z"),i(a,"fill","#F8BF3C"),i(e,"class",c[0]),i(e,"xmlns","http://www.w3.org/2000/svg"),i(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),i(e,"aria-hidden","true"),i(e,"focusable","false"),i(e,"role","img"),i(e,"width","0.94em"),i(e,"height","1em"),i(e,"preserveAspectRatio","xMidYMid meet"),i(e,"viewBox","0 0 256 274")},m(n,h){v(n,e,h),l(e,r),l(e,t),l(e,a)},p(n,[h]){h&1&&i(e,"class",n[0])},i:be,o:be,d(n){n&&s(e)}}}function bs(c,e,r){let{classNames:t=""}=e;return c.$$set=a=>{"classNames"in a&&r(0,t=a.classNames)},[t]}class ks extends De{constructor(e){super();Me(this,e,bs,vs,Ae,{classNames:0})}}function Es(c){let e,r,t,a,n,h,d,_,w,E,b,q,I,N,W,K,S,L,Y,ee,j,V,J,R,G,ue,Q,le,te,oe,ne,ie,U,fe,ae,de,k,A,ce,X,he;return{c(){e=C("svg"),r=C("style"),t=p(`.J {
			stroke: #dce0df;
		}
		.K {
			stroke-linejoin: round;
		}
	`),a=C("g"),n=C("path"),h=C("path"),d=C("path"),_=C("path"),w=C("path"),E=C("path"),b=C("path"),q=C("path"),I=C("g"),N=C("path"),W=C("path"),K=C("path"),S=C("g"),L=C("path"),Y=C("path"),ee=C("path"),j=C("g"),V=C("path"),J=C("path"),R=C("g"),G=C("path"),ue=C("path"),Q=C("path"),le=C("path"),te=C("path"),oe=C("path"),ne=C("path"),ie=C("path"),U=C("g"),fe=C("path"),ae=C("path"),de=C("path"),k=C("path"),A=C("g"),ce=C("path"),X=C("path"),he=C("path"),this.h()},l(se){e=x(se,"svg",{class:!0,xmlns:!0,"xmlns:xlink":!0,"aria-hidden":!0,focusable:!0,role:!0,width:!0,height:!0,preserveAspectRatio:!0,viewBox:!0});var Z=f(e);r=x(Z,"style",{});var ge=f(r);t=u(ge,`.J {
			stroke: #dce0df;
		}
		.K {
			stroke-linejoin: round;
		}
	`),ge.forEach(s),a=x(Z,"g",{fill:!0,class:!0});var re=f(a);n=x(re,"path",{d:!0}),f(n).forEach(s),h=x(re,"path",{d:!0}),f(h).forEach(s),d=x(re,"path",{d:!0}),f(d).forEach(s),_=x(re,"path",{d:!0}),f(_).forEach(s),w=x(re,"path",{d:!0}),f(w).forEach(s),E=x(re,"path",{d:!0}),f(E).forEach(s),b=x(re,"path",{d:!0}),f(b).forEach(s),q=x(re,"path",{d:!0}),f(q).forEach(s),re.forEach(s),I=x(Z,"g",{fill:!0,class:!0});var me=f(I);N=x(me,"path",{d:!0}),f(N).forEach(s),W=x(me,"path",{d:!0}),f(W).forEach(s),K=x(me,"path",{d:!0}),f(K).forEach(s),me.forEach(s),S=x(Z,"g",{fill:!0,class:!0});var pe=f(S);L=x(pe,"path",{d:!0}),f(L).forEach(s),Y=x(pe,"path",{d:!0}),f(Y).forEach(s),pe.forEach(s),ee=x(Z,"path",{d:!0,fill:!0,class:!0}),f(ee).forEach(s),j=x(Z,"g",{fill:!0,class:!0});var _e=f(j);V=x(_e,"path",{d:!0}),f(V).forEach(s),J=x(_e,"path",{d:!0}),f(J).forEach(s),_e.forEach(s),R=x(Z,"g",{fill:!0,class:!0});var m=f(R);G=x(m,"path",{d:!0}),f(G).forEach(s),ue=x(m,"path",{d:!0}),f(ue).forEach(s),Q=x(m,"path",{d:!0}),f(Q).forEach(s),le=x(m,"path",{d:!0}),f(le).forEach(s),te=x(m,"path",{d:!0}),f(te).forEach(s),oe=x(m,"path",{d:!0}),f(oe).forEach(s),ne=x(m,"path",{d:!0}),f(ne).forEach(s),m.forEach(s),ie=x(Z,"path",{d:!0,fill:!0,class:!0}),f(ie).forEach(s),U=x(Z,"g",{fill:!0,class:!0});var P=f(U);fe=x(P,"path",{d:!0}),f(fe).forEach(s),ae=x(P,"path",{d:!0}),f(ae).forEach(s),de=x(P,"path",{d:!0}),f(de).forEach(s),k=x(P,"path",{d:!0}),f(k).forEach(s),P.forEach(s),A=x(Z,"g",{fill:!0,class:!0});var $e=f(A);ce=x($e,"path",{d:!0}),f(ce).forEach(s),X=x($e,"path",{d:!0}),f(X).forEach(s),he=x($e,"path",{d:!0}),f(he).forEach(s),$e.forEach(s),Z.forEach(s),this.h()},h(){i(n,"d","M50.5 130.4l-25 43.31h50l25-43.31h-50z"),i(h,"d","M.5 217.01l25-43.3h50l-25 43.3H.5z"),i(d,"d","M125.5 173.71h-50l-25 43.3h50l25-43.3z"),i(_,"d","M175.5 173.71h-50l-25 43.3h50l25-43.3z"),i(w,"d","M150.5 130.4l-25 43.31h50l25-43.31h-50z"),i(E,"d","M175.5 87.1l-25 43.3h50l25-43.3h-50z"),i(b,"d","M200.5 43.8l-25 43.3h50l25-43.3h-50z"),i(q,"d","M225.5.5l-25 43.3h50l25-43.3h-50z"),i(a,"fill","#5e97f6"),i(a,"class","J K"),i(N,"d","M.5 217.01l25 43.3h50l-25-43.3H.5z"),i(W,"d","M125.5 260.31h-50l-25-43.3h50l25 43.3z"),i(K,"d","M175.5 260.31h-50l-25-43.3h50l25 43.3z"),i(I,"fill","#2a56c6"),i(I,"class","J K"),i(L,"d","M200.5 217.01l-25-43.3-25 43.3 25 43.3 25-43.3zm50-86.61l-25-43.3-25 43.3h50z"),i(Y,"d","M250.5 43.8l-25 43.3 25 43.3 25-43.3-25-43.3z"),i(S,"fill","#00796b"),i(S,"class","J K"),i(ee,"d","M125.5 173.71l-25-43.31-25 43.31h50z"),i(ee,"fill","#3367d6"),i(ee,"class","J K"),i(V,"d","M250.5 130.4h-50l-25 43.31h50l25-43.31z"),i(J,"d","M300.5 130.4h-50l-25 43.31h50l25-43.31z"),i(j,"fill","#26a69a"),i(j,"class","J K"),i(G,"d","M350.5 43.8L325.5.5l-25 43.3 25 43.3 25-43.3z"),i(ue,"d","M375.5 87.1l-25-43.3-25 43.3 25 43.3 25-43.3z"),i(Q,"d","M400.5 130.4l-25-43.3-25 43.3 25 43.31 25-43.31z"),i(le,"d","M425.5 173.71l-25-43.31-25 43.31 25 43.3 25-43.3z"),i(te,"d","M450.5 217.01l-25-43.3-25 43.3 25 43.3 25-43.3zM425.5.5l-25 43.3 25 43.3 25-43.3-25-43.3z"),i(oe,"d","M375.5 87.1l25-43.3 25 43.3-25 43.3-25-43.3zm-25 43.3l-25 43.31 25 43.3 25-43.3-25-43.31z"),i(ne,"d","M325.5 260.31l-25-43.3 25-43.3 25 43.3-25 43.3z"),i(R,"fill","#9c27b0"),i(R,"class","J K"),i(ie,"d","M275.5 260.31l-25-43.3h50l25 43.3h-50z"),i(ie,"fill","#6a1b9a"),i(ie,"class","J K"),i(fe,"d","M225.5 173.71h-50l25 43.3h50l-25-43.3z"),i(ae,"d","M275.5 173.71h-50l25 43.3 25-43.3zm0-86.61l25 43.3h50l-25-43.3h-50z"),i(de,"d","M300.5 43.8h-50l25 43.3h50l-25-43.3zm125 216.51l-25-43.3h-50l25 43.3h50z"),i(k,"d","M375.5 173.71l-25 43.3h50l-25-43.3z"),i(U,"fill","#00695c"),i(U,"class","J K"),i(ce,"d","M325.5.5h-50l-25 43.3h50l25-43.3zm0 173.21h-50l-25 43.3h50l25-43.3z"),i(X,"d","M350.5 130.4h-50l-25 43.31h50l25-43.31zM425.5.5h-50l-25 43.3h50l25-43.3z"),i(he,"d","M375.5 87.1l-25-43.3h50l-25 43.3z"),i(A,"fill","#ea80fc"),i(A,"class","J K"),i(e,"class",c[0]),i(e,"xmlns","http://www.w3.org/2000/svg"),i(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),i(e,"aria-hidden","true"),i(e,"focusable","false"),i(e,"role","img"),i(e,"width","1.73em"),i(e,"height","1em"),i(e,"preserveAspectRatio","xMidYMid meet"),i(e,"viewBox","0 0 451 260.81")},m(se,Z){v(se,e,Z),l(e,r),l(r,t),l(e,a),l(a,n),l(a,h),l(a,d),l(a,_),l(a,w),l(a,E),l(a,b),l(a,q),l(e,I),l(I,N),l(I,W),l(I,K),l(e,S),l(S,L),l(S,Y),l(e,ee),l(e,j),l(j,V),l(j,J),l(e,R),l(R,G),l(R,ue),l(R,Q),l(R,le),l(R,te),l(R,oe),l(R,ne),l(e,ie),l(e,U),l(U,fe),l(U,ae),l(U,de),l(U,k),l(e,A),l(A,ce),l(A,X),l(A,he)},p(se,[Z]){Z&1&&i(e,"class",se[0])},i:be,o:be,d(se){se&&s(e)}}}function ys(c,e,r){let{classNames:t=""}=e;return c.$$set=a=>{"classNames"in a&&r(0,t=a.classNames)},[t]}class js extends De{constructor(e){super();Me(this,e,ys,Es,Ae,{classNames:0})}}function zs(c){let e,r;return{c(){e=C("svg"),r=C("path"),this.h()},l(t){e=x(t,"svg",{class:!0,width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var a=f(e);r=x(a,"path",{d:!0,fill:!0}),f(r).forEach(s),a.forEach(s),this.h()},h(){i(r,"d","M0 4.50001C0.390979 2.37042 2.25728 0.756592 4.5 0.756592C6.74272 0.756592 8.60861 2.37042 9 4.50001C8.60902 6.62959 6.74272 8.24342 4.5 8.24342C2.25728 8.24342 0.391395 6.62959 0 4.50001ZM4.5 6.57968C5.05156 6.57968 5.58054 6.36057 5.97055 5.97056C6.36057 5.58054 6.57967 5.05157 6.57967 4.50001C6.57967 3.94844 6.36057 3.41947 5.97055 3.02945C5.58054 2.63944 5.05156 2.42033 4.5 2.42033C3.94844 2.42033 3.41946 2.63944 3.02945 3.02945C2.63943 3.41947 2.42033 3.94844 2.42033 4.50001C2.42033 5.05157 2.63943 5.58054 3.02945 5.97056C3.41946 6.36057 3.94844 6.57968 4.5 6.57968ZM4.5 5.74781C4.16906 5.74781 3.85168 5.61635 3.61767 5.38234C3.38366 5.14833 3.2522 4.83094 3.2522 4.50001C3.2522 4.16907 3.38366 3.85168 3.61767 3.61767C3.85168 3.38367 4.16906 3.2522 4.5 3.2522C4.83094 3.2522 5.14832 3.38367 5.38233 3.61767C5.61634 3.85168 5.7478 4.16907 5.7478 4.50001C5.7478 4.83094 5.61634 5.14833 5.38233 5.38234C5.14832 5.61635 4.83094 5.74781 4.5 5.74781Z"),i(r,"fill","currentColor"),i(e,"class",c[0]),i(e,"width",c[1]),i(e,"height",c[1]),i(e,"viewBox","0 0 9 9"),i(e,"fill","currentColor"),i(e,"xmlns","http://www.w3.org/2000/svg")},m(t,a){v(t,e,a),l(e,r)},p(t,[a]){a&1&&i(e,"class",t[0]),a&2&&i(e,"width",t[1]),a&2&&i(e,"height",t[1])},i:be,o:be,d(t){t&&s(e)}}}function Cs(c,e,r){let{classNames:t=""}=e,{size:a="1em"}=e;return c.$$set=n=>{"classNames"in n&&r(0,t=n.classNames),"size"in n&&r(1,a=n.size)},[t,a]}class xs extends De{constructor(e){super();Me(this,e,Cs,zs,Ae,{classNames:0,size:1})}}function Ts(c){let e,r;return{c(){e=C("svg"),r=C("path"),this.h()},l(t){e=x(t,"svg",{class:!0,width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var a=f(e);r=x(a,"path",{d:!0,fill:!0}),f(r).forEach(s),a.forEach(s),this.h()},h(){i(r,"d","M1.39125 1.9725L0.0883333 0.669997L0.677917 0.0804138L8.9275 8.33041L8.33792 8.91958L6.95875 7.54041C6.22592 8.00523 5.37572 8.25138 4.50792 8.25C2.26125 8.25 0.392083 6.63333 0 4.5C0.179179 3.52946 0.667345 2.64287 1.39167 1.9725H1.39125ZM5.65667 6.23833L5.04667 5.62833C4.81335 5.73996 4.55116 5.77647 4.29622 5.73282C4.04129 5.68918 3.80617 5.56752 3.62328 5.38463C3.44039 5.20175 3.31874 4.96663 3.27509 4.71169C3.23144 4.45676 3.26795 4.19456 3.37958 3.96125L2.76958 3.35125C2.50447 3.75187 2.38595 4.2318 2.4341 4.70978C2.48225 5.18777 2.6941 5.63442 3.0338 5.97411C3.37349 6.31381 3.82015 6.52567 4.29813 6.57382C4.77611 6.62197 5.25605 6.50345 5.65667 6.23833ZM2.83042 1.06666C3.35 0.862497 3.91625 0.749997 4.50792 0.749997C6.75458 0.749997 8.62375 2.36666 9.01583 4.5C8.88816 5.19404 8.60119 5.84899 8.1775 6.41333L6.56917 4.805C6.61694 4.48317 6.58868 4.15463 6.48664 3.84569C6.3846 3.53675 6.21162 3.256 5.98156 3.02594C5.7515 2.79588 5.47075 2.6229 5.16181 2.52086C4.85287 2.41882 4.52433 2.39056 4.2025 2.43833L2.83042 1.06708V1.06666Z"),i(r,"fill","currentColor"),i(e,"class",c[0]),i(e,"width",c[1]),i(e,"height",c[1]),i(e,"viewBox","0 0 10 9"),i(e,"fill","currentColor"),i(e,"xmlns","http://www.w3.org/2000/svg")},m(t,a){v(t,e,a),l(e,r)},p(t,[a]){a&1&&i(e,"class",t[0]),a&2&&i(e,"width",t[1]),a&2&&i(e,"height",t[1])},i:be,o:be,d(t){t&&s(e)}}}function Ds(c,e,r){let{classNames:t=""}=e,{size:a="1em"}=e;return c.$$set=n=>{"classNames"in n&&r(0,t=n.classNames),"size"in n&&r(1,a=n.size)},[t,a]}class Ms extends De{constructor(e){super();Me(this,e,Ds,Ts,Ae,{classNames:0,size:1})}}const{window:As}=ps;function ts(c){let e,r,t,a,n,h,d,_,w,E;return r=new Ms({props:{size:"0.9em"}}),{c(){e=g("div"),O(r.$$.fragment),t=T(),a=g("span"),n=p("Hide "),h=p(c[3]),d=p(" content"),this.h()},l(b){e=$(b,"DIV",{class:!0});var q=f(e);B(r.$$.fragment,q),t=D(q),a=$(q,"SPAN",{});var I=f(a);n=u(I,"Hide "),h=u(I,c[3]),d=u(I," content"),I.forEach(s),q.forEach(s),this.h()},h(){i(e,"class","cursor-pointer flex items-center justify-center space-x-1 text-sm px-2 bg-white dark:bg-gray-950 hover:underline leading-none")},m(b,q){v(b,e,q),F(r,e,null),l(e,t),l(e,a),l(a,n),l(a,h),l(a,d),_=!0,w||(E=ya(e,"click",c[5]),w=!0)},p:be,i(b){_||(z(r.$$.fragment,b),_=!0)},o(b){M(r.$$.fragment,b),_=!1},d(b){b&&s(e),H(r),w=!1,E()}}}function Ss(c){let e,r;const t=c[10].default,a=yt(t,c,c[9],null);return{c(){e=g("div"),a&&a.c(),this.h()},l(n){e=$(n,"DIV",{class:!0});var h=f(e);a&&a.l(h),h.forEach(s),this.h()},h(){i(e,"class","framework-content")},m(n,h){v(n,e,h),a&&a.m(e,null),r=!0},p(n,h){a&&a.p&&(!r||h&512)&&jt(a,t,n,n[9],r?Ct(t,n[9],h,null):zt(n[9]),null)},i(n){r||(z(a,n),r=!0)},o(n){M(a,n),r=!1},d(n){n&&s(e),a&&a.d(n)}}}function qs(c){let e,r,t,a,n,h,d,_,w,E;return r=new xs({props:{size:"0.9em"}}),{c(){e=g("div"),O(r.$$.fragment),t=T(),a=g("span"),n=p("Show "),h=p(c[3]),d=p(" content"),this.h()},l(b){e=$(b,"DIV",{class:!0});var q=f(e);B(r.$$.fragment,q),t=D(q),a=$(q,"SPAN",{});var I=f(a);n=u(I,"Show "),h=u(I,c[3]),d=u(I," content"),I.forEach(s),q.forEach(s),this.h()},h(){i(e,"class","cursor-pointer mt-[-12.5px] flex items-center justify-center space-x-1 py-4 text-sm hover:underline leading-none")},m(b,q){v(b,e,q),F(r,e,null),l(e,t),l(e,a),l(a,n),l(a,h),l(a,d),_=!0,w||(E=ya(e,"click",c[5]),w=!0)},p:be,i(b){_||(z(r.$$.fragment,b),_=!0)},o(b){M(r.$$.fragment,b),_=!1},d(b){b&&s(e),H(r),w=!1,E()}}}function Ps(c){let e,r,t,a,n,h,d,_,w,E,b,q,I,N;var W=c[2];function K(j){return{}}W&&(a=new W(K()));let S=!c[1]&&ts(c);const L=[qs,Ss],Y=[];function ee(j,V){return j[1]?0:1}return E=ee(c),b=Y[E]=L[E](c),{c(){e=g("div"),r=g("div"),t=g("div"),a&&O(a.$$.fragment),n=T(),h=g("span"),d=p(c[3]),_=T(),S&&S.c(),w=T(),b.c(),this.h()},l(j){e=$(j,"DIV",{class:!0});var V=f(e);r=$(V,"DIV",{class:!0});var J=f(r);t=$(J,"DIV",{class:!0});var R=f(t);a&&B(a.$$.fragment,R),n=D(R),h=$(R,"SPAN",{});var G=f(h);d=u(G,c[3]),G.forEach(s),R.forEach(s),_=D(J),S&&S.l(J),J.forEach(s),w=D(V),b.l(V),V.forEach(s),this.h()},h(){i(t,"class","flex px-1 items-center space-x-1 bg-white dark:bg-gray-950"),i(r,"class","flex h-[22px] mt-[-12.5px] justify-between leading-none"),i(e,"class","border border-gray-200 rounded-xl px-4 relative")},m(j,V){v(j,e,V),l(e,r),l(r,t),a&&F(a,t,null),l(t,n),l(t,h),l(h,d),l(r,_),S&&S.m(r,null),l(e,w),Y[E].m(e,null),c[11](e),q=!0,I||(N=ya(As,"hashchange",c[6]),I=!0)},p(j,[V]){if(W!==(W=j[2])){if(a){rt();const R=a;M(R.$$.fragment,1,0,()=>{H(R,1)}),ot()}W?(a=new W(K()),O(a.$$.fragment),z(a.$$.fragment,1),F(a,t,n)):a=null}j[1]?S&&(rt(),M(S,1,1,()=>{S=null}),ot()):S?(S.p(j,V),V&2&&z(S,1)):(S=ts(j),S.c(),z(S,1),S.m(r,null));let J=E;E=ee(j),E===J?Y[E].p(j,V):(rt(),M(Y[J],1,1,()=>{Y[J]=null}),ot(),b=Y[E],b?b.p(j,V):(b=Y[E]=L[E](j),b.c()),z(b,1),b.m(e,null))},i(j){q||(a&&z(a.$$.fragment,j),z(S),z(b),q=!0)},o(j){a&&M(a.$$.fragment,j),M(S),M(b),q=!1},d(j){j&&s(e),a&&H(a),S&&S.d(),Y[E].d(),c[11](null),I=!1,N()}}}function Is(c,e,r){let t,a,{$$slots:n={},$$scope:h}=e,{framework:d}=e,_,w=new Set;const E={pytorch:{Icon:ws,label:"Pytorch"},tensorflow:{Icon:ks,label:"TensorFlow"},jax:{Icon:js,label:"JAX"}},{Icon:b,label:q}=E[d],I=`hf_doc_framework_${d}_is_hidden`,N=_s(d);hs(c,N,L=>r(8,a=L));function W(){Wt(N,a=a!==Ce.CLOSED?Ce.CLOSED:Ce.OPEN,a),localStorage.setItem(I,a)}function K(){const L=window.location.hash.slice(1);w.has(L)&&(Wt(N,a=Ce.HASHASHLINK,a),localStorage.setItem(I,a))}fs(()=>{const L=window.location.hash.slice(1),Y="header-link",ee=_.querySelectorAll(`.${Y}`);w=new Set([...ee].map(V=>V.id));const j=localStorage.getItem(I);w.has(L)?Wt(N,a=Ce.HASHASHLINK,a):j===Ce.CLOSED&&a!==Ce.HASHASHLINK&&Wt(N,a=Ce.CLOSED,a)});function S(L){us[L?"unshift":"push"](()=>{_=L,r(0,_)})}return c.$$set=L=>{"framework"in L&&r(7,d=L.framework),"$$scope"in L&&r(9,h=L.$$scope)},c.$$.update=()=>{c.$$.dirty&256&&r(1,t=a===Ce.CLOSED)},[_,t,b,q,N,W,K,d,a,h,n,S]}class ja extends De{constructor(e){super();Me(this,e,Is,Ps,Ae,{framework:7})}}const Ls=c=>({}),as=c=>({}),Ns=c=>({}),ss=c=>({}),Os=c=>({}),ls=c=>({});function rs(c){let e,r;return e=new ja({props:{framework:"pytorch",$$slots:{default:[Fs]},$$scope:{ctx:c}}}),{c(){O(e.$$.fragment)},l(t){B(e.$$.fragment,t)},m(t,a){F(e,t,a),r=!0},p(t,a){const n={};a&16&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){r||(z(e.$$.fragment,t),r=!0)},o(t){M(e.$$.fragment,t),r=!1},d(t){H(e,t)}}}function Fs(c){let e;const r=c[3].pytorch,t=yt(r,c,c[4],ls);return{c(){t&&t.c()},l(a){t&&t.l(a)},m(a,n){t&&t.m(a,n),e=!0},p(a,n){t&&t.p&&(!e||n&16)&&jt(t,r,a,a[4],e?Ct(r,a[4],n,Os):zt(a[4]),ls)},i(a){e||(z(t,a),e=!0)},o(a){M(t,a),e=!1},d(a){t&&t.d(a)}}}function os(c){let e,r;return e=new ja({props:{framework:"tensorflow",$$slots:{default:[Hs]},$$scope:{ctx:c}}}),{c(){O(e.$$.fragment)},l(t){B(e.$$.fragment,t)},m(t,a){F(e,t,a),r=!0},p(t,a){const n={};a&16&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){r||(z(e.$$.fragment,t),r=!0)},o(t){M(e.$$.fragment,t),r=!1},d(t){H(e,t)}}}function Hs(c){let e;const r=c[3].tensorflow,t=yt(r,c,c[4],ss);return{c(){t&&t.c()},l(a){t&&t.l(a)},m(a,n){t&&t.m(a,n),e=!0},p(a,n){t&&t.p&&(!e||n&16)&&jt(t,r,a,a[4],e?Ct(r,a[4],n,Ns):zt(a[4]),ss)},i(a){e||(z(t,a),e=!0)},o(a){M(t,a),e=!1},d(a){t&&t.d(a)}}}function ns(c){let e,r;return e=new ja({props:{framework:"jax",$$slots:{default:[Bs]},$$scope:{ctx:c}}}),{c(){O(e.$$.fragment)},l(t){B(e.$$.fragment,t)},m(t,a){F(e,t,a),r=!0},p(t,a){const n={};a&16&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){r||(z(e.$$.fragment,t),r=!0)},o(t){M(e.$$.fragment,t),r=!1},d(t){H(e,t)}}}function Bs(c){let e;const r=c[3].jax,t=yt(r,c,c[4],as);return{c(){t&&t.c()},l(a){t&&t.l(a)},m(a,n){t&&t.m(a,n),e=!0},p(a,n){t&&t.p&&(!e||n&16)&&jt(t,r,a,a[4],e?Ct(r,a[4],n,Ls):zt(a[4]),as)},i(a){e||(z(t,a),e=!0)},o(a){M(t,a),e=!1},d(a){t&&t.d(a)}}}function Ks(c){let e,r,t,a,n=c[0]&&rs(c),h=c[1]&&os(c),d=c[2]&&ns(c);return{c(){e=g("div"),n&&n.c(),r=T(),h&&h.c(),t=T(),d&&d.c(),this.h()},l(_){e=$(_,"DIV",{class:!0});var w=f(e);n&&n.l(w),r=D(w),h&&h.l(w),t=D(w),d&&d.l(w),w.forEach(s),this.h()},h(){i(e,"class","space-y-10 py-6 2xl:py-8 2xl:-mx-4")},m(_,w){v(_,e,w),n&&n.m(e,null),l(e,r),h&&h.m(e,null),l(e,t),d&&d.m(e,null),a=!0},p(_,[w]){_[0]?n?(n.p(_,w),w&1&&z(n,1)):(n=rs(_),n.c(),z(n,1),n.m(e,r)):n&&(rt(),M(n,1,1,()=>{n=null}),ot()),_[1]?h?(h.p(_,w),w&2&&z(h,1)):(h=os(_),h.c(),z(h,1),h.m(e,t)):h&&(rt(),M(h,1,1,()=>{h=null}),ot()),_[2]?d?(d.p(_,w),w&4&&z(d,1)):(d=ns(_),d.c(),z(d,1),d.m(e,null)):d&&(rt(),M(d,1,1,()=>{d=null}),ot())},i(_){a||(z(n),z(h),z(d),a=!0)},o(_){M(n),M(h),M(d),a=!1},d(_){_&&s(e),n&&n.d(),h&&h.d(),d&&d.d()}}}function Rs(c,e,r){let{$$slots:t={},$$scope:a}=e,{pytorch:n=!1}=e,{tensorflow:h=!1}=e,{jax:d=!1}=e;return c.$$set=_=>{"pytorch"in _&&r(0,n=_.pytorch),"tensorflow"in _&&r(1,h=_.tensorflow),"jax"in _&&r(2,d=_.jax),"$$scope"in _&&r(4,a=_.$$scope)},[n,h,d,t,a]}class is extends De{constructor(e){super();Me(this,e,Rs,Ks,Ae,{pytorch:0,tensorflow:1,jax:2})}}function Vs(c){let e;const r=c[1].default,t=yt(r,c,c[0],null);return{c(){t&&t.c()},l(a){t&&t.l(a)},m(a,n){t&&t.m(a,n),e=!0},p(a,[n]){t&&t.p&&(!e||n&1)&&jt(t,r,a,a[0],e?Ct(r,a[0],n,null):zt(a[0]),null)},i(a){e||(z(t,a),e=!0)},o(a){M(t,a),e=!1},d(a){t&&t.d(a)}}}function Js(c,e,r){let{$$slots:t={},$$scope:a}=e;return c.$$set=n=>{"$$scope"in n&&r(0,a=n.$$scope)},[a,t]}class Ut extends De{constructor(e){super();Me(this,e,Js,Vs,Ae,{})}}function Ws(c){let e,r,t,a,n;return{c(){e=g("p"),r=p("See the text classification "),t=g("a"),a=p("task page"),n=p(" for more information about other forms of text classification and their associated models, datasets, and metrics."),this.h()},l(h){e=$(h,"P",{});var d=f(e);r=u(d,"See the text classification "),t=$(d,"A",{href:!0,rel:!0});var _=f(t);a=u(_,"task page"),_.forEach(s),n=u(d," for more information about other forms of text classification and their associated models, datasets, and metrics."),d.forEach(s),this.h()},h(){i(t,"href","https://huggingface.co/tasks/text-classification"),i(t,"rel","nofollow")},m(h,d){v(h,e,d),l(e,r),l(e,t),l(t,a),l(e,n)},d(h){h&&s(e)}}}function Zs(c){let e,r;return e=new ve({props:{code:`from transformers import DataCollatorWithPadding

data_collator = DataCollatorWithPadding(tokenizer=tokenizer)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DataCollatorWithPadding

<span class="hljs-meta">&gt;&gt;&gt; </span>data_collator = DataCollatorWithPadding(tokenizer=tokenizer)`}}),{c(){O(e.$$.fragment)},l(t){B(e.$$.fragment,t)},m(t,a){F(e,t,a),r=!0},p:be,i(t){r||(z(e.$$.fragment,t),r=!0)},o(t){M(e.$$.fragment,t),r=!1},d(t){H(e,t)}}}function Us(c){let e,r;return e=new Ut({props:{$$slots:{default:[Zs]},$$scope:{ctx:c}}}),{c(){O(e.$$.fragment)},l(t){B(e.$$.fragment,t)},m(t,a){F(e,t,a),r=!0},p(t,a){const n={};a&2&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){r||(z(e.$$.fragment,t),r=!0)},o(t){M(e.$$.fragment,t),r=!1},d(t){H(e,t)}}}function Ys(c){let e,r;return e=new ve({props:{code:`from transformers import DataCollatorWithPadding

data_collator = DataCollatorWithPadding(tokenizer=tokenizer, return_tensors="tf")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> DataCollatorWithPadding

<span class="hljs-meta">&gt;&gt;&gt; </span>data_collator = DataCollatorWithPadding(tokenizer=tokenizer, return_tensors=<span class="hljs-string">&quot;tf&quot;</span>)`}}),{c(){O(e.$$.fragment)},l(t){B(e.$$.fragment,t)},m(t,a){F(e,t,a),r=!0},p:be,i(t){r||(z(e.$$.fragment,t),r=!0)},o(t){M(e.$$.fragment,t),r=!1},d(t){H(e,t)}}}function Gs(c){let e,r;return e=new Ut({props:{$$slots:{default:[Ys]},$$scope:{ctx:c}}}),{c(){O(e.$$.fragment)},l(t){B(e.$$.fragment,t)},m(t,a){F(e,t,a),r=!0},p(t,a){const n={};a&2&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){r||(z(e.$$.fragment,t),r=!0)},o(t){M(e.$$.fragment,t),r=!1},d(t){H(e,t)}}}function Qs(c){let e,r,t,a,n,h,d,_;return{c(){e=g("p"),r=p("If you aren\u2019t familiar with fine-tuning a model with the "),t=g("code"),a=p("Trainer"),n=p(", take a look at the basic tutorial "),h=g("a"),d=p("here"),_=p("!"),this.h()},l(w){e=$(w,"P",{});var E=f(e);r=u(E,"If you aren\u2019t familiar with fine-tuning a model with the "),t=$(E,"CODE",{});var b=f(t);a=u(b,"Trainer"),b.forEach(s),n=u(E,", take a look at the basic tutorial "),h=$(E,"A",{href:!0});var q=f(h);d=u(q,"here"),q.forEach(s),_=u(E,"!"),E.forEach(s),this.h()},h(){i(h,"href","../training#finetune-with-trainer")},m(w,E){v(w,e,E),l(e,r),l(e,t),l(t,a),l(e,n),l(e,h),l(h,d),l(e,_)},d(w){w&&s(e)}}}function Xs(c){let e,r,t,a,n,h,d;return{c(){e=g("p"),r=g("code"),t=p("Trainer"),a=p(" will apply dynamic padding by default when you pass "),n=g("code"),h=p("tokenizer"),d=p(" to it. In this case, you don\u2019t need to specify a data collator explicitly.")},l(_){e=$(_,"P",{});var w=f(e);r=$(w,"CODE",{});var E=f(r);t=u(E,"Trainer"),E.forEach(s),a=u(w," will apply dynamic padding by default when you pass "),n=$(w,"CODE",{});var b=f(n);h=u(b,"tokenizer"),b.forEach(s),d=u(w," to it. In this case, you don\u2019t need to specify a data collator explicitly."),w.forEach(s)},m(_,w){v(_,e,w),l(e,r),l(r,t),l(e,a),l(e,n),l(n,h),l(e,d)},d(_){_&&s(e)}}}function el(c){let e,r,t,a,n,h,d,_,w,E,b,q,I,N,W,K,S,L,Y,ee,j,V,J,R,G,ue,Q,le,te,oe,ne,ie,U,fe,ae,de;return d=new ve({props:{code:`from transformers import AutoModelForSequenceClassification, TrainingArguments, Trainer

model = AutoModelForSequenceClassification.from_pretrained("distilbert-base-uncased", num_labels=2)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModelForSequenceClassification, TrainingArguments, Trainer

<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModelForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;distilbert-base-uncased&quot;</span>, num_labels=<span class="hljs-number">2</span>)`}}),w=new Et({props:{$$slots:{default:[Qs]},$$scope:{ctx:c}}}),U=new ve({props:{code:`training_args = TrainingArguments(
    output_dir="./results",
    learning_rate=2e-5,
    per_device_train_batch_size=16,
    per_device_eval_batch_size=16,
    num_train_epochs=5,
    weight_decay=0.01,
)

trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=tokenized_imdb["train"],
    eval_dataset=tokenized_imdb["test"],
    tokenizer=tokenizer,
    data_collator=data_collator,
)

trainer.train()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>training_args = TrainingArguments(
<span class="hljs-meta">... </span>    output_dir=<span class="hljs-string">&quot;./results&quot;</span>,
<span class="hljs-meta">... </span>    learning_rate=<span class="hljs-number">2e-5</span>,
<span class="hljs-meta">... </span>    per_device_train_batch_size=<span class="hljs-number">16</span>,
<span class="hljs-meta">... </span>    per_device_eval_batch_size=<span class="hljs-number">16</span>,
<span class="hljs-meta">... </span>    num_train_epochs=<span class="hljs-number">5</span>,
<span class="hljs-meta">... </span>    weight_decay=<span class="hljs-number">0.01</span>,
<span class="hljs-meta">... </span>)

<span class="hljs-meta">&gt;&gt;&gt; </span>trainer = Trainer(
<span class="hljs-meta">... </span>    model=model,
<span class="hljs-meta">... </span>    args=training_args,
<span class="hljs-meta">... </span>    train_dataset=tokenized_imdb[<span class="hljs-string">&quot;train&quot;</span>],
<span class="hljs-meta">... </span>    eval_dataset=tokenized_imdb[<span class="hljs-string">&quot;test&quot;</span>],
<span class="hljs-meta">... </span>    tokenizer=tokenizer,
<span class="hljs-meta">... </span>    data_collator=data_collator,
<span class="hljs-meta">... </span>)

<span class="hljs-meta">&gt;&gt;&gt; </span>trainer.train()`}}),ae=new Et({props:{$$slots:{default:[Xs]},$$scope:{ctx:c}}}),{c(){e=g("p"),r=p("Load DistilBERT with "),t=g("code"),a=p("AutoModelForSequenceClassification"),n=p(" along with the number of expected labels:"),h=T(),O(d.$$.fragment),_=T(),O(w.$$.fragment),E=T(),b=g("p"),q=p("At this point, only three steps remain:"),I=T(),N=g("ol"),W=g("li"),K=p("Define your training hyperparameters in "),S=g("code"),L=p("TrainingArguments"),Y=p("."),ee=T(),j=g("li"),V=p("Pass the training arguments to "),J=g("code"),R=p("Trainer"),G=p(" along with the model, dataset, tokenizer, and data collator."),ue=T(),Q=g("li"),le=p("Call "),te=g("code"),oe=p("train()"),ne=p(" to fine-tune your model."),ie=T(),O(U.$$.fragment),fe=T(),O(ae.$$.fragment)},l(k){e=$(k,"P",{});var A=f(e);r=u(A,"Load DistilBERT with "),t=$(A,"CODE",{});var ce=f(t);a=u(ce,"AutoModelForSequenceClassification"),ce.forEach(s),n=u(A," along with the number of expected labels:"),A.forEach(s),h=D(k),B(d.$$.fragment,k),_=D(k),B(w.$$.fragment,k),E=D(k),b=$(k,"P",{});var X=f(b);q=u(X,"At this point, only three steps remain:"),X.forEach(s),I=D(k),N=$(k,"OL",{});var he=f(N);W=$(he,"LI",{});var se=f(W);K=u(se,"Define your training hyperparameters in "),S=$(se,"CODE",{});var Z=f(S);L=u(Z,"TrainingArguments"),Z.forEach(s),Y=u(se,"."),se.forEach(s),ee=D(he),j=$(he,"LI",{});var ge=f(j);V=u(ge,"Pass the training arguments to "),J=$(ge,"CODE",{});var re=f(J);R=u(re,"Trainer"),re.forEach(s),G=u(ge," along with the model, dataset, tokenizer, and data collator."),ge.forEach(s),ue=D(he),Q=$(he,"LI",{});var me=f(Q);le=u(me,"Call "),te=$(me,"CODE",{});var pe=f(te);oe=u(pe,"train()"),pe.forEach(s),ne=u(me," to fine-tune your model."),me.forEach(s),he.forEach(s),ie=D(k),B(U.$$.fragment,k),fe=D(k),B(ae.$$.fragment,k)},m(k,A){v(k,e,A),l(e,r),l(e,t),l(t,a),l(e,n),v(k,h,A),F(d,k,A),v(k,_,A),F(w,k,A),v(k,E,A),v(k,b,A),l(b,q),v(k,I,A),v(k,N,A),l(N,W),l(W,K),l(W,S),l(S,L),l(W,Y),l(N,ee),l(N,j),l(j,V),l(j,J),l(J,R),l(j,G),l(N,ue),l(N,Q),l(Q,le),l(Q,te),l(te,oe),l(Q,ne),v(k,ie,A),F(U,k,A),v(k,fe,A),F(ae,k,A),de=!0},p(k,A){const ce={};A&2&&(ce.$$scope={dirty:A,ctx:k}),w.$set(ce);const X={};A&2&&(X.$$scope={dirty:A,ctx:k}),ae.$set(X)},i(k){de||(z(d.$$.fragment,k),z(w.$$.fragment,k),z(U.$$.fragment,k),z(ae.$$.fragment,k),de=!0)},o(k){M(d.$$.fragment,k),M(w.$$.fragment,k),M(U.$$.fragment,k),M(ae.$$.fragment,k),de=!1},d(k){k&&s(e),k&&s(h),H(d,k),k&&s(_),H(w,k),k&&s(E),k&&s(b),k&&s(I),k&&s(N),k&&s(ie),H(U,k),k&&s(fe),H(ae,k)}}}function tl(c){let e,r;return e=new Ut({props:{$$slots:{default:[el]},$$scope:{ctx:c}}}),{c(){O(e.$$.fragment)},l(t){B(e.$$.fragment,t)},m(t,a){F(e,t,a),r=!0},p(t,a){const n={};a&2&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){r||(z(e.$$.fragment,t),r=!0)},o(t){M(e.$$.fragment,t),r=!1},d(t){H(e,t)}}}function al(c){let e,r,t,a,n;return{c(){e=g("p"),r=p("If you aren\u2019t familiar with fine-tuning a model with Keras, take a look at the basic tutorial "),t=g("a"),a=p("here"),n=p("!"),this.h()},l(h){e=$(h,"P",{});var d=f(e);r=u(d,"If you aren\u2019t familiar with fine-tuning a model with Keras, take a look at the basic tutorial "),t=$(d,"A",{href:!0});var _=f(t);a=u(_,"here"),_.forEach(s),n=u(d,"!"),d.forEach(s),this.h()},h(){i(t,"href","training#finetune-with-keras")},m(h,d){v(h,e,d),l(e,r),l(e,t),l(t,a),l(e,n)},d(h){h&&s(e)}}}function sl(c){let e,r,t,a,n,h,d,_,w,E,b,q,I,N,W,K,S,L,Y,ee,j,V,J,R,G,ue,Q,le,te,oe,ne,ie,U,fe,ae,de,k,A,ce,X,he,se,Z,ge,re,me,pe,_e;return N=new ve({props:{code:`tf_train_set = tokenized_imdb["train"].to_tf_dataset(
    columns=["attention_mask", "input_ids", "label"],
    shuffle=True,
    batch_size=16,
    collate_fn=data_collator,
)

tf_validation_set = tokenized_imdb["test"].to_tf_dataset(
    columns=["attention_mask", "input_ids", "label"],
    shuffle=False,
    batch_size=16,
    collate_fn=data_collator,
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>tf_train_set = tokenized_imdb[<span class="hljs-string">&quot;train&quot;</span>].to_tf_dataset(
<span class="hljs-meta">... </span>    columns=[<span class="hljs-string">&quot;attention_mask&quot;</span>, <span class="hljs-string">&quot;input_ids&quot;</span>, <span class="hljs-string">&quot;label&quot;</span>],
<span class="hljs-meta">... </span>    shuffle=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>    batch_size=<span class="hljs-number">16</span>,
<span class="hljs-meta">... </span>    collate_fn=data_collator,
<span class="hljs-meta">... </span>)

<span class="hljs-meta">&gt;&gt;&gt; </span>tf_validation_set = tokenized_imdb[<span class="hljs-string">&quot;test&quot;</span>].to_tf_dataset(
<span class="hljs-meta">... </span>    columns=[<span class="hljs-string">&quot;attention_mask&quot;</span>, <span class="hljs-string">&quot;input_ids&quot;</span>, <span class="hljs-string">&quot;label&quot;</span>],
<span class="hljs-meta">... </span>    shuffle=<span class="hljs-literal">False</span>,
<span class="hljs-meta">... </span>    batch_size=<span class="hljs-number">16</span>,
<span class="hljs-meta">... </span>    collate_fn=data_collator,
<span class="hljs-meta">... </span>)`}}),K=new Et({props:{$$slots:{default:[al]},$$scope:{ctx:c}}}),j=new ve({props:{code:`from transformers import create_optimizer
import tensorflow as tf

batch_size = 16
num_epochs = 5
batches_per_epoch = len(tokenized_imdb["train"]) // batch_size
total_train_steps = int(batches_per_epoch * num_epochs)
optimizer, schedule = create_optimizer(init_lr=2e-5, num_warmup_steps=0, num_train_steps=total_train_steps)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> create_optimizer
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf

<span class="hljs-meta">&gt;&gt;&gt; </span>batch_size = <span class="hljs-number">16</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>num_epochs = <span class="hljs-number">5</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>batches_per_epoch = <span class="hljs-built_in">len</span>(tokenized_imdb[<span class="hljs-string">&quot;train&quot;</span>]) // batch_size
<span class="hljs-meta">&gt;&gt;&gt; </span>total_train_steps = <span class="hljs-built_in">int</span>(batches_per_epoch * num_epochs)
<span class="hljs-meta">&gt;&gt;&gt; </span>optimizer, schedule = create_optimizer(init_lr=<span class="hljs-number">2e-5</span>, num_warmup_steps=<span class="hljs-number">0</span>, num_train_steps=total_train_steps)`}}),te=new ve({props:{code:`from transformers import TFAutoModelForSequenceClassification

model = TFAutoModelForSequenceClassification.from_pretrained("distilbert-base-uncased", num_labels=2)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFAutoModelForSequenceClassification

<span class="hljs-meta">&gt;&gt;&gt; </span>model = TFAutoModelForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;distilbert-base-uncased&quot;</span>, num_labels=<span class="hljs-number">2</span>)`}}),A=new ve({props:{code:`import tensorflow as tf

model.compile(optimizer=optimizer)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf

<span class="hljs-meta">&gt;&gt;&gt; </span>model.<span class="hljs-built_in">compile</span>(optimizer=optimizer)`}}),pe=new ve({props:{code:"model.fit(x=tf_train_set, validation_data=tf_validation_set, epochs=3)",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model.fit(x=tf_train_set, validation_data=tf_validation_set, epochs=<span class="hljs-number">3</span>)'}}),{c(){e=g("p"),r=p("To fine-tune a model in TensorFlow, start by converting your datasets to the "),t=g("code"),a=p("tf.data.Dataset"),n=p(" format with "),h=g("a"),d=g("code"),_=p("to_tf_dataset"),w=p(". Specify inputs and labels in "),E=g("code"),b=p("columns"),q=p(", whether to shuffle the dataset order, batch size, and the data collator:"),I=T(),O(N.$$.fragment),W=T(),O(K.$$.fragment),S=T(),L=g("p"),Y=p("Set up an optimizer function, learning rate schedule, and some training hyperparameters:"),ee=T(),O(j.$$.fragment),V=T(),J=g("p"),R=p("Load DistilBERT with "),G=g("code"),ue=p("TFAutoModelForSequenceClassification"),Q=p(" along with the number of expected labels:"),le=T(),O(te.$$.fragment),oe=T(),ne=g("p"),ie=p("Configure the model for training with "),U=g("a"),fe=g("code"),ae=p("compile"),de=p(":"),k=T(),O(A.$$.fragment),ce=T(),X=g("p"),he=p("Call "),se=g("a"),Z=g("code"),ge=p("fit"),re=p(" to fine-tune the model:"),me=T(),O(pe.$$.fragment),this.h()},l(m){e=$(m,"P",{});var P=f(e);r=u(P,"To fine-tune a model in TensorFlow, start by converting your datasets to the "),t=$(P,"CODE",{});var $e=f(t);a=u($e,"tf.data.Dataset"),$e.forEach(s),n=u(P," format with "),h=$(P,"A",{href:!0,rel:!0});var Ge=f(h);d=$(Ge,"CODE",{});var Qe=f(d);_=u(Qe,"to_tf_dataset"),Qe.forEach(s),Ge.forEach(s),w=u(P,". Specify inputs and labels in "),E=$(P,"CODE",{});var ke=f(E);b=u(ke,"columns"),ke.forEach(s),q=u(P,", whether to shuffle the dataset order, batch size, and the data collator:"),P.forEach(s),I=D(m),B(N.$$.fragment,m),W=D(m),B(K.$$.fragment,m),S=D(m),L=$(m,"P",{});var Se=f(L);Y=u(Se,"Set up an optimizer function, learning rate schedule, and some training hyperparameters:"),Se.forEach(s),ee=D(m),B(j.$$.fragment,m),V=D(m),J=$(m,"P",{});var qe=f(J);R=u(qe,"Load DistilBERT with "),G=$(qe,"CODE",{});var Xe=f(G);ue=u(Xe,"TFAutoModelForSequenceClassification"),Xe.forEach(s),Q=u(qe," along with the number of expected labels:"),qe.forEach(s),le=D(m),B(te.$$.fragment,m),oe=D(m),ne=$(m,"P",{});var ye=f(ne);ie=u(ye,"Configure the model for training with "),U=$(ye,"A",{href:!0,rel:!0});var et=f(U);fe=$(et,"CODE",{});var tt=f(fe);ae=u(tt,"compile"),tt.forEach(s),et.forEach(s),de=u(ye,":"),ye.forEach(s),k=D(m),B(A.$$.fragment,m),ce=D(m),X=$(m,"P",{});var je=f(X);he=u(je,"Call "),se=$(je,"A",{href:!0,rel:!0});var at=f(se);Z=$(at,"CODE",{});var st=f(Z);ge=u(st,"fit"),st.forEach(s),at.forEach(s),re=u(je," to fine-tune the model:"),je.forEach(s),me=D(m),B(pe.$$.fragment,m),this.h()},h(){i(h,"href","https://huggingface.co/docs/datasets/package_reference/main_classes.html#datasets.Dataset.to_tf_dataset"),i(h,"rel","nofollow"),i(U,"href","https://keras.io/api/models/model_training_apis/#compile-method"),i(U,"rel","nofollow"),i(se,"href","https://keras.io/api/models/model_training_apis/#fit-method"),i(se,"rel","nofollow")},m(m,P){v(m,e,P),l(e,r),l(e,t),l(t,a),l(e,n),l(e,h),l(h,d),l(d,_),l(e,w),l(e,E),l(E,b),l(e,q),v(m,I,P),F(N,m,P),v(m,W,P),F(K,m,P),v(m,S,P),v(m,L,P),l(L,Y),v(m,ee,P),F(j,m,P),v(m,V,P),v(m,J,P),l(J,R),l(J,G),l(G,ue),l(J,Q),v(m,le,P),F(te,m,P),v(m,oe,P),v(m,ne,P),l(ne,ie),l(ne,U),l(U,fe),l(fe,ae),l(ne,de),v(m,k,P),F(A,m,P),v(m,ce,P),v(m,X,P),l(X,he),l(X,se),l(se,Z),l(Z,ge),l(X,re),v(m,me,P),F(pe,m,P),_e=!0},p(m,P){const $e={};P&2&&($e.$$scope={dirty:P,ctx:m}),K.$set($e)},i(m){_e||(z(N.$$.fragment,m),z(K.$$.fragment,m),z(j.$$.fragment,m),z(te.$$.fragment,m),z(A.$$.fragment,m),z(pe.$$.fragment,m),_e=!0)},o(m){M(N.$$.fragment,m),M(K.$$.fragment,m),M(j.$$.fragment,m),M(te.$$.fragment,m),M(A.$$.fragment,m),M(pe.$$.fragment,m),_e=!1},d(m){m&&s(e),m&&s(I),H(N,m),m&&s(W),H(K,m),m&&s(S),m&&s(L),m&&s(ee),H(j,m),m&&s(V),m&&s(J),m&&s(le),H(te,m),m&&s(oe),m&&s(ne),m&&s(k),H(A,m),m&&s(ce),m&&s(X),m&&s(me),H(pe,m)}}}function ll(c){let e,r;return e=new Ut({props:{$$slots:{default:[sl]},$$scope:{ctx:c}}}),{c(){O(e.$$.fragment)},l(t){B(e.$$.fragment,t)},m(t,a){F(e,t,a),r=!0},p(t,a){const n={};a&2&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){r||(z(e.$$.fragment,t),r=!0)},o(t){M(e.$$.fragment,t),r=!1},d(t){H(e,t)}}}function rl(c){let e,r,t,a,n,h,d,_;return{c(){e=g("p"),r=p(`For a more in-depth example of how to fine-tune a model for text classification, take a look at the corresponding
`),t=g("a"),a=p("PyTorch notebook"),n=p(`
or `),h=g("a"),d=p("TensorFlow notebook"),_=p("."),this.h()},l(w){e=$(w,"P",{});var E=f(e);r=u(E,`For a more in-depth example of how to fine-tune a model for text classification, take a look at the corresponding
`),t=$(E,"A",{href:!0,rel:!0});var b=f(t);a=u(b,"PyTorch notebook"),b.forEach(s),n=u(E,`
or `),h=$(E,"A",{href:!0,rel:!0});var q=f(h);d=u(q,"TensorFlow notebook"),q.forEach(s),_=u(E,"."),E.forEach(s),this.h()},h(){i(t,"href","https://colab.research.google.com/github/huggingface/notebooks/blob/main/examples/text_classification.ipynb"),i(t,"rel","nofollow"),i(h,"href","https://colab.research.google.com/github/huggingface/notebooks/blob/main/examples/text_classification-tf.ipynb"),i(h,"rel","nofollow")},m(w,E){v(w,e,E),l(e,r),l(e,t),l(t,a),l(e,n),l(e,h),l(h,d),l(e,_)},d(w){w&&s(e)}}}function ol(c){let e,r,t,a,n,h,d,_,w,E,b,q,I,N,W,K,S,L,Y,ee,j,V,J,R,G,ue,Q,le,te,oe,ne,ie,U,fe,ae,de,k,A,ce,X,he,se,Z,ge,re,me,pe,_e,m,P,$e,Ge,Qe,ke,Se,qe,Xe,ye,et,tt,je,at,st,xt,xe,Pe,nt,Ke,Yt,it,Gt,Tt,Ie,Qt,ft,Xt,ea,Dt,Re,Mt,Le,ta,ct,aa,sa,At,Ve,St,Ee,la,Je,ht,ra,oa,pt,na,ia,ut,fa,ca,qt,We,Pt,we,ha,dt,pa,ua,mt,da,ma,_t,_a,ga,gt,$a,wa,It,Ne,Lt,Te,Oe,$t,Ze,va,wt,ba,Nt,Fe,Ot,He,Ft;return h=new Zt({}),b=new ms({props:{id:"leNG9fN9FQU"}}),G=new Et({props:{$$slots:{default:[Ws]},$$scope:{ctx:c}}}),oe=new Zt({}),A=new ve({props:{code:`from datasets import load_dataset

imdb = load_dataset("imdb")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>imdb = load_dataset(<span class="hljs-string">&quot;imdb&quot;</span>)`}}),Z=new ve({props:{code:'imdb["test"][0]',highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>imdb[<span class="hljs-string">&quot;test&quot;</span>][<span class="hljs-number">0</span>]
{
    <span class="hljs-string">&quot;label&quot;</span>: <span class="hljs-number">0</span>,
    <span class="hljs-string">&quot;text&quot;</span>: <span class="hljs-string">&quot;I love sci-fi and am willing to put up with a lot. Sci-fi movies/TV are usually underfunded, under-appreciated and misunderstood. I tried to like this, I really did, but it is to good TV sci-fi as Babylon 5 is to Star Trek (the original). Silly prosthetics, cheap cardboard sets, stilted dialogues, CG that doesn&#x27;t match the background, and painfully one-dimensional characters cannot be overcome with a &#x27;sci-fi&#x27; setting. (I&#x27;m sure there are those of you out there who think Babylon 5 is good sci-fi TV. It&#x27;s not. It&#x27;s clich\xE9d and uninspiring.) While US viewers might like emotion and character development, sci-fi is a genre that does not take itself seriously (cf. Star Trek). It may treat important issues, yet not as a serious philosophy. It&#x27;s really difficult to care about the characters here as they are not simply foolish, just missing a spark of life. Their actions and reactions are wooden and predictable, often painful to watch. The makers of Earth KNOW it&#x27;s rubbish as they have to always say \\&quot;Gene Roddenberry&#x27;s Earth...\\&quot; otherwise people would not continue watching. Roddenberry&#x27;s ashes must be turning in their orbit as this dull, cheap, poorly edited (watching it without advert breaks really brings this home) trudging Trabant of a show lumbers into space. Spoiler. So, kill off a main character. And then bring him back as another actor. Jeeez! Dallas all over again.&quot;</span>,
}`}}),Ke=new Zt({}),Re=new ve({props:{code:`from transformers import AutoTokenizer

tokenizer = AutoTokenizer.from_pretrained("distilbert-base-uncased")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer

<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">&quot;distilbert-base-uncased&quot;</span>)`}}),Ve=new ve({props:{code:`def preprocess_function(examples):
    return tokenizer(examples["text"], truncation=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">preprocess_function</span>(<span class="hljs-params">examples</span>):
<span class="hljs-meta">... </span>    <span class="hljs-keyword">return</span> tokenizer(examples[<span class="hljs-string">&quot;text&quot;</span>], truncation=<span class="hljs-literal">True</span>)`}}),We=new ve({props:{code:"tokenized_imdb = imdb.map(preprocess_function, batched=True)",highlighted:'tokenized_imdb = imdb.<span class="hljs-built_in">map</span>(preprocess_function, batched=<span class="hljs-literal">True</span>)'}}),Ne=new is({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[Gs],pytorch:[Us]},$$scope:{ctx:c}}}),Ze=new Zt({}),Fe=new is({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[ll],pytorch:[tl]},$$scope:{ctx:c}}}),He=new Et({props:{$$slots:{default:[rl]},$$scope:{ctx:c}}}),{c(){e=g("meta"),r=T(),t=g("h1"),a=g("a"),n=g("span"),O(h.$$.fragment),d=T(),_=g("span"),w=p("Text classification"),E=T(),O(b.$$.fragment),q=T(),I=g("p"),N=p("Text classification is a common NLP task that assigns a label or class to text. There are many practical applications of text classification widely used in production by some of today\u2019s largest companies. One of the most popular forms of text classification is sentiment analysis, which assigns a label like positive, negative, or neutral to a sequence of text."),W=T(),K=g("p"),S=p("This guide will show you how to fine-tune "),L=g("a"),Y=p("DistilBERT"),ee=p(" on the "),j=g("a"),V=p("IMDb"),J=p(" dataset to determine whether a movie review is positive or negative."),R=T(),O(G.$$.fragment),ue=T(),Q=g("h2"),le=g("a"),te=g("span"),O(oe.$$.fragment),ne=T(),ie=g("span"),U=p("Load IMDb dataset"),fe=T(),ae=g("p"),de=p("Load the IMDb dataset from the \u{1F917} Datasets library:"),k=T(),O(A.$$.fragment),ce=T(),X=g("p"),he=p("Then take a look at an example:"),se=T(),O(Z.$$.fragment),ge=T(),re=g("p"),me=p("There are two fields in this dataset:"),pe=T(),_e=g("ul"),m=g("li"),P=g("code"),$e=p("text"),Ge=p(": a string containing the text of the movie review."),Qe=T(),ke=g("li"),Se=g("code"),qe=p("label"),Xe=p(": a value that can either be "),ye=g("code"),et=p("0"),tt=p(" for a negative review or "),je=g("code"),at=p("1"),st=p(" for a positive review."),xt=T(),xe=g("h2"),Pe=g("a"),nt=g("span"),O(Ke.$$.fragment),Yt=T(),it=g("span"),Gt=p("Preprocess"),Tt=T(),Ie=g("p"),Qt=p("Load the DistilBERT tokenizer to process the "),ft=g("code"),Xt=p("text"),ea=p(" field:"),Dt=T(),O(Re.$$.fragment),Mt=T(),Le=g("p"),ta=p("Create a preprocessing function to tokenize "),ct=g("code"),aa=p("text"),sa=p(" and truncate sequences to be no longer than DistilBERT\u2019s maximum input length:"),At=T(),O(Ve.$$.fragment),St=T(),Ee=g("p"),la=p("Use \u{1F917} Datasets "),Je=g("a"),ht=g("code"),ra=p("map"),oa=p(" function to apply the preprocessing function over the entire dataset. You can speed up the "),pt=g("code"),na=p("map"),ia=p(" function by setting "),ut=g("code"),fa=p("batched=True"),ca=p(" to process multiple elements of the dataset at once:"),qt=T(),O(We.$$.fragment),Pt=T(),we=g("p"),ha=p("Use "),dt=g("code"),pa=p("DataCollatorWithPadding"),ua=p(" to create a batch of examples. It will also "),mt=g("em"),da=p("dynamically pad"),ma=p(" your text to the length of the longest element in its batch, so they are a uniform length. While it is possible to pad your text in the "),_t=g("code"),_a=p("tokenizer"),ga=p(" function by setting "),gt=g("code"),$a=p("padding=True"),wa=p(", dynamic padding is more efficient."),It=T(),O(Ne.$$.fragment),Lt=T(),Te=g("h2"),Oe=g("a"),$t=g("span"),O(Ze.$$.fragment),va=T(),wt=g("span"),ba=p("Train"),Nt=T(),O(Fe.$$.fragment),Ot=T(),O(He.$$.fragment),this.h()},l(o){const y=ds('[data-svelte="svelte-1phssyn"]',document.head);e=$(y,"META",{name:!0,content:!0}),y.forEach(s),r=D(o),t=$(o,"H1",{class:!0});var Ue=f(t);a=$(Ue,"A",{id:!0,class:!0,href:!0});var vt=f(a);n=$(vt,"SPAN",{});var bt=f(n);B(h.$$.fragment,bt),bt.forEach(s),vt.forEach(s),d=D(Ue),_=$(Ue,"SPAN",{});var kt=f(_);w=u(kt,"Text classification"),kt.forEach(s),Ue.forEach(s),E=D(o),B(b.$$.fragment,o),q=D(o),I=$(o,"P",{});var za=f(I);N=u(za,"Text classification is a common NLP task that assigns a label or class to text. There are many practical applications of text classification widely used in production by some of today\u2019s largest companies. One of the most popular forms of text classification is sentiment analysis, which assigns a label like positive, negative, or neutral to a sequence of text."),za.forEach(s),W=D(o),K=$(o,"P",{});var lt=f(K);S=u(lt,"This guide will show you how to fine-tune "),L=$(lt,"A",{href:!0,rel:!0});var Ca=f(L);Y=u(Ca,"DistilBERT"),Ca.forEach(s),ee=u(lt," on the "),j=$(lt,"A",{href:!0,rel:!0});var xa=f(j);V=u(xa,"IMDb"),xa.forEach(s),J=u(lt," dataset to determine whether a movie review is positive or negative."),lt.forEach(s),R=D(o),B(G.$$.fragment,o),ue=D(o),Q=$(o,"H2",{class:!0});var Ht=f(Q);le=$(Ht,"A",{id:!0,class:!0,href:!0});var Ta=f(le);te=$(Ta,"SPAN",{});var Da=f(te);B(oe.$$.fragment,Da),Da.forEach(s),Ta.forEach(s),ne=D(Ht),ie=$(Ht,"SPAN",{});var Ma=f(ie);U=u(Ma,"Load IMDb dataset"),Ma.forEach(s),Ht.forEach(s),fe=D(o),ae=$(o,"P",{});var Aa=f(ae);de=u(Aa,"Load the IMDb dataset from the \u{1F917} Datasets library:"),Aa.forEach(s),k=D(o),B(A.$$.fragment,o),ce=D(o),X=$(o,"P",{});var Sa=f(X);he=u(Sa,"Then take a look at an example:"),Sa.forEach(s),se=D(o),B(Z.$$.fragment,o),ge=D(o),re=$(o,"P",{});var qa=f(re);me=u(qa,"There are two fields in this dataset:"),qa.forEach(s),pe=D(o),_e=$(o,"UL",{});var Bt=f(_e);m=$(Bt,"LI",{});var ka=f(m);P=$(ka,"CODE",{});var Pa=f(P);$e=u(Pa,"text"),Pa.forEach(s),Ge=u(ka,": a string containing the text of the movie review."),ka.forEach(s),Qe=D(Bt),ke=$(Bt,"LI",{});var Ye=f(ke);Se=$(Ye,"CODE",{});var Ia=f(Se);qe=u(Ia,"label"),Ia.forEach(s),Xe=u(Ye,": a value that can either be "),ye=$(Ye,"CODE",{});var La=f(ye);et=u(La,"0"),La.forEach(s),tt=u(Ye," for a negative review or "),je=$(Ye,"CODE",{});var Na=f(je);at=u(Na,"1"),Na.forEach(s),st=u(Ye," for a positive review."),Ye.forEach(s),Bt.forEach(s),xt=D(o),xe=$(o,"H2",{class:!0});var Kt=f(xe);Pe=$(Kt,"A",{id:!0,class:!0,href:!0});var Oa=f(Pe);nt=$(Oa,"SPAN",{});var Fa=f(nt);B(Ke.$$.fragment,Fa),Fa.forEach(s),Oa.forEach(s),Yt=D(Kt),it=$(Kt,"SPAN",{});var Ha=f(it);Gt=u(Ha,"Preprocess"),Ha.forEach(s),Kt.forEach(s),Tt=D(o),Ie=$(o,"P",{});var Rt=f(Ie);Qt=u(Rt,"Load the DistilBERT tokenizer to process the "),ft=$(Rt,"CODE",{});var Ba=f(ft);Xt=u(Ba,"text"),Ba.forEach(s),ea=u(Rt," field:"),Rt.forEach(s),Dt=D(o),B(Re.$$.fragment,o),Mt=D(o),Le=$(o,"P",{});var Vt=f(Le);ta=u(Vt,"Create a preprocessing function to tokenize "),ct=$(Vt,"CODE",{});var Ka=f(ct);aa=u(Ka,"text"),Ka.forEach(s),sa=u(Vt," and truncate sequences to be no longer than DistilBERT\u2019s maximum input length:"),Vt.forEach(s),At=D(o),B(Ve.$$.fragment,o),St=D(o),Ee=$(o,"P",{});var Be=f(Ee);la=u(Be,"Use \u{1F917} Datasets "),Je=$(Be,"A",{href:!0,rel:!0});var Ra=f(Je);ht=$(Ra,"CODE",{});var Va=f(ht);ra=u(Va,"map"),Va.forEach(s),Ra.forEach(s),oa=u(Be," function to apply the preprocessing function over the entire dataset. You can speed up the "),pt=$(Be,"CODE",{});var Ja=f(pt);na=u(Ja,"map"),Ja.forEach(s),ia=u(Be," function by setting "),ut=$(Be,"CODE",{});var Wa=f(ut);fa=u(Wa,"batched=True"),Wa.forEach(s),ca=u(Be," to process multiple elements of the dataset at once:"),Be.forEach(s),qt=D(o),B(We.$$.fragment,o),Pt=D(o),we=$(o,"P",{});var ze=f(we);ha=u(ze,"Use "),dt=$(ze,"CODE",{});var Za=f(dt);pa=u(Za,"DataCollatorWithPadding"),Za.forEach(s),ua=u(ze," to create a batch of examples. It will also "),mt=$(ze,"EM",{});var Ua=f(mt);da=u(Ua,"dynamically pad"),Ua.forEach(s),ma=u(ze," your text to the length of the longest element in its batch, so they are a uniform length. While it is possible to pad your text in the "),_t=$(ze,"CODE",{});var Ya=f(_t);_a=u(Ya,"tokenizer"),Ya.forEach(s),ga=u(ze," function by setting "),gt=$(ze,"CODE",{});var Ga=f(gt);$a=u(Ga,"padding=True"),Ga.forEach(s),wa=u(ze,", dynamic padding is more efficient."),ze.forEach(s),It=D(o),B(Ne.$$.fragment,o),Lt=D(o),Te=$(o,"H2",{class:!0});var Jt=f(Te);Oe=$(Jt,"A",{id:!0,class:!0,href:!0});var Qa=f(Oe);$t=$(Qa,"SPAN",{});var Xa=f($t);B(Ze.$$.fragment,Xa),Xa.forEach(s),Qa.forEach(s),va=D(Jt),wt=$(Jt,"SPAN",{});var es=f(wt);ba=u(es,"Train"),es.forEach(s),Jt.forEach(s),Nt=D(o),B(Fe.$$.fragment,o),Ot=D(o),B(He.$$.fragment,o),this.h()},h(){i(e,"name","hf:doc:metadata"),i(e,"content",JSON.stringify(nl)),i(a,"id","text-classification"),i(a,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(a,"href","#text-classification"),i(t,"class","relative group"),i(L,"href","https://huggingface.co/distilbert-base-uncased"),i(L,"rel","nofollow"),i(j,"href","https://huggingface.co/datasets/imdb"),i(j,"rel","nofollow"),i(le,"id","load-imdb-dataset"),i(le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(le,"href","#load-imdb-dataset"),i(Q,"class","relative group"),i(Pe,"id","preprocess"),i(Pe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Pe,"href","#preprocess"),i(xe,"class","relative group"),i(Je,"href","https://huggingface.co/docs/datasets/package_reference/main_classes.html#datasets.Dataset.map"),i(Je,"rel","nofollow"),i(Oe,"id","train"),i(Oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Oe,"href","#train"),i(Te,"class","relative group")},m(o,y){l(document.head,e),v(o,r,y),v(o,t,y),l(t,a),l(a,n),F(h,n,null),l(t,d),l(t,_),l(_,w),v(o,E,y),F(b,o,y),v(o,q,y),v(o,I,y),l(I,N),v(o,W,y),v(o,K,y),l(K,S),l(K,L),l(L,Y),l(K,ee),l(K,j),l(j,V),l(K,J),v(o,R,y),F(G,o,y),v(o,ue,y),v(o,Q,y),l(Q,le),l(le,te),F(oe,te,null),l(Q,ne),l(Q,ie),l(ie,U),v(o,fe,y),v(o,ae,y),l(ae,de),v(o,k,y),F(A,o,y),v(o,ce,y),v(o,X,y),l(X,he),v(o,se,y),F(Z,o,y),v(o,ge,y),v(o,re,y),l(re,me),v(o,pe,y),v(o,_e,y),l(_e,m),l(m,P),l(P,$e),l(m,Ge),l(_e,Qe),l(_e,ke),l(ke,Se),l(Se,qe),l(ke,Xe),l(ke,ye),l(ye,et),l(ke,tt),l(ke,je),l(je,at),l(ke,st),v(o,xt,y),v(o,xe,y),l(xe,Pe),l(Pe,nt),F(Ke,nt,null),l(xe,Yt),l(xe,it),l(it,Gt),v(o,Tt,y),v(o,Ie,y),l(Ie,Qt),l(Ie,ft),l(ft,Xt),l(Ie,ea),v(o,Dt,y),F(Re,o,y),v(o,Mt,y),v(o,Le,y),l(Le,ta),l(Le,ct),l(ct,aa),l(Le,sa),v(o,At,y),F(Ve,o,y),v(o,St,y),v(o,Ee,y),l(Ee,la),l(Ee,Je),l(Je,ht),l(ht,ra),l(Ee,oa),l(Ee,pt),l(pt,na),l(Ee,ia),l(Ee,ut),l(ut,fa),l(Ee,ca),v(o,qt,y),F(We,o,y),v(o,Pt,y),v(o,we,y),l(we,ha),l(we,dt),l(dt,pa),l(we,ua),l(we,mt),l(mt,da),l(we,ma),l(we,_t),l(_t,_a),l(we,ga),l(we,gt),l(gt,$a),l(we,wa),v(o,It,y),F(Ne,o,y),v(o,Lt,y),v(o,Te,y),l(Te,Oe),l(Oe,$t),F(Ze,$t,null),l(Te,va),l(Te,wt),l(wt,ba),v(o,Nt,y),F(Fe,o,y),v(o,Ot,y),F(He,o,y),Ft=!0},p(o,[y]){const Ue={};y&2&&(Ue.$$scope={dirty:y,ctx:o}),G.$set(Ue);const vt={};y&2&&(vt.$$scope={dirty:y,ctx:o}),Ne.$set(vt);const bt={};y&2&&(bt.$$scope={dirty:y,ctx:o}),Fe.$set(bt);const kt={};y&2&&(kt.$$scope={dirty:y,ctx:o}),He.$set(kt)},i(o){Ft||(z(h.$$.fragment,o),z(b.$$.fragment,o),z(G.$$.fragment,o),z(oe.$$.fragment,o),z(A.$$.fragment,o),z(Z.$$.fragment,o),z(Ke.$$.fragment,o),z(Re.$$.fragment,o),z(Ve.$$.fragment,o),z(We.$$.fragment,o),z(Ne.$$.fragment,o),z(Ze.$$.fragment,o),z(Fe.$$.fragment,o),z(He.$$.fragment,o),Ft=!0)},o(o){M(h.$$.fragment,o),M(b.$$.fragment,o),M(G.$$.fragment,o),M(oe.$$.fragment,o),M(A.$$.fragment,o),M(Z.$$.fragment,o),M(Ke.$$.fragment,o),M(Re.$$.fragment,o),M(Ve.$$.fragment,o),M(We.$$.fragment,o),M(Ne.$$.fragment,o),M(Ze.$$.fragment,o),M(Fe.$$.fragment,o),M(He.$$.fragment,o),Ft=!1},d(o){s(e),o&&s(r),o&&s(t),H(h),o&&s(E),H(b,o),o&&s(q),o&&s(I),o&&s(W),o&&s(K),o&&s(R),H(G,o),o&&s(ue),o&&s(Q),H(oe),o&&s(fe),o&&s(ae),o&&s(k),H(A,o),o&&s(ce),o&&s(X),o&&s(se),H(Z,o),o&&s(ge),o&&s(re),o&&s(pe),o&&s(_e),o&&s(xt),o&&s(xe),H(Ke),o&&s(Tt),o&&s(Ie),o&&s(Dt),H(Re,o),o&&s(Mt),o&&s(Le),o&&s(At),H(Ve,o),o&&s(St),o&&s(Ee),o&&s(qt),H(We,o),o&&s(Pt),o&&s(we),o&&s(It),H(Ne,o),o&&s(Lt),o&&s(Te),H(Ze),o&&s(Nt),H(Fe,o),o&&s(Ot),H(He,o)}}}const nl={local:"text-classification",sections:[{local:"load-imdb-dataset",title:"Load IMDb dataset"},{local:"preprocess",title:"Preprocess"},{local:"train",title:"Train"}],title:"Text classification"};function il(c){return fs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ul extends De{constructor(e){super();Me(this,e,il,ol,Ae,{})}}export{ul as default,nl as metadata};
