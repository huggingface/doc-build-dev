import{S as kt,i as Ct,s as Ot,e as n,k as h,w as K,t as s,M as qt,c as l,d as e,m as u,a as d,x as Q,h as o,b as m,G as t,g as c,y as V,q as X,o as Y,B as Z,v as Pt}from"../chunks/vendor-hf-doc-builder.js";import{T as It}from"../chunks/Tip-hf-doc-builder.js";import{I as At}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as lt}from"../chunks/CodeBlock-hf-doc-builder.js";function St(pa){let r,C,p,v,E,_,I,b;return{c(){r=n("p"),C=s("Index into an audio dataset using the row index first and then the "),p=n("code"),v=s("audio"),E=s(" column - "),_=n("code"),I=s('dataset[0]["audio"]'),b=s(" - to avoid decoding and resampling all the audio files in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset.")},l(A){r=l(A,"P",{});var g=d(r);C=o(g,"Index into an audio dataset using the row index first and then the "),p=l(g,"CODE",{});var w=d(p);v=o(w,"audio"),w.forEach(e),E=o(g," column - "),_=l(g,"CODE",{});var L=d(_);I=o(L,'dataset[0]["audio"]'),L.forEach(e),b=o(g," - to avoid decoding and resampling all the audio files in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset."),g.forEach(e)},m(A,g){c(A,r,g),t(r,C),t(r,p),t(p,v),t(r,E),t(r,_),t(_,I),t(r,b)},d(A){A&&e(r)}}}function Ut(pa){let r,C,p,v,E,_,I,b,A,g,w,L,aa,Ea,ba,ha,x,F,ta,Aa,ka,Ca,J,ea,Oa,qa,Pa,M,sa,Ia,Sa,ua,y,Ua,oa,Da,Na,B,Ta,La,fa,S,ma,O,_a,k,q,na,U,Fa,la,Ja,ga,f,Ma,da,Ba,Ha,H,Wa,Ga,ia,Ra,za,W,Ka,Qa,va,D,$a,$,Va,ra,Xa,Ya,ca,Za,at,G,tt,et,wa,N,xa;return _=new At({}),S=new lt({props:{code:`from datasets import load_dataset, Audio

dataset = load_dataset("PolyAI/minds14", "en-US", split="train")
dataset[0]["audio"]`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset, Audio

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, <span class="hljs-string">&quot;en-US&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;audio&quot;</span>]
{<span class="hljs-string">&#x27;array&#x27;</span>: array([ <span class="hljs-number">0.</span>        ,  <span class="hljs-number">0.00024414</span>, -<span class="hljs-number">0.00024414</span>, ..., -<span class="hljs-number">0.00024414</span>,
         <span class="hljs-number">0.</span>        ,  <span class="hljs-number">0.</span>        ], dtype=float32),
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>,
 <span class="hljs-string">&#x27;sampling_rate&#x27;</span>: <span class="hljs-number">8000</span>}`}}),O=new It({props:{warning:!0,$$slots:{default:[St]},$$scope:{ctx:pa}}}),U=new At({}),D=new lt({props:{code:'audio_dataset = audio_dataset.cast_column("paths_to_my_audio_files", Audio())',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>audio_dataset = audio_dataset.cast_column(<span class="hljs-string">&quot;paths_to_my_audio_files&quot;</span>, Audio())'}}),N=new lt({props:{code:`dataset = load_dataset("PolyAI/minds14", "en-US", split="train").cast_column('audio', Audio(decode=False))
dataset[0]`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, <span class="hljs-string">&quot;en-US&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>).cast_column(<span class="hljs-string">&#x27;audio&#x27;</span>, Audio(decode=<span class="hljs-literal">False</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>]
{<span class="hljs-string">&#x27;audio&#x27;</span>: {<span class="hljs-string">&#x27;bytes&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>},
 <span class="hljs-string">&#x27;english_transcription&#x27;</span>: <span class="hljs-string">&#x27;I would like to set up a joint account with my partner&#x27;</span>,
 <span class="hljs-string">&#x27;intent_class&#x27;</span>: <span class="hljs-number">11</span>,
 <span class="hljs-string">&#x27;lang_id&#x27;</span>: <span class="hljs-number">4</span>,
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>,
 <span class="hljs-string">&#x27;transcription&#x27;</span>: <span class="hljs-string">&#x27;I would like to set up a joint account with my partner&#x27;</span>}`}}),{c(){r=n("meta"),C=h(),p=n("h1"),v=n("a"),E=n("span"),K(_.$$.fragment),I=h(),b=n("span"),A=s("Load audio data"),g=h(),w=n("p"),L=s("Audio datasets are loaded from the "),aa=n("code"),Ea=s("audio"),ba=s(" column, which contains three important fields:"),ha=h(),x=n("ul"),F=n("li"),ta=n("code"),Aa=s("array"),ka=s(": the decoded audio data represented as a 1-dimensional array."),Ca=h(),J=n("li"),ea=n("code"),Oa=s("path"),qa=s(": the path to the downloaded audio file."),Pa=h(),M=n("li"),sa=n("code"),Ia=s("sampling_rate"),Sa=s(": the sampling rate of the audio data."),ua=h(),y=n("p"),Ua=s("When you load an audio dataset and call the "),oa=n("code"),Da=s("audio"),Na=s(" column, the "),B=n("a"),Ta=s("Audio"),La=s(" feature automatically decodes and resamples the audio file:"),fa=h(),K(S.$$.fragment),ma=h(),K(O.$$.fragment),_a=h(),k=n("h2"),q=n("a"),na=n("span"),K(U.$$.fragment),Fa=h(),la=n("span"),Ja=s("Path"),ga=h(),f=n("p"),Ma=s("The "),da=n("code"),Ba=s("path"),Ha=s(" is useful for loading your own dataset. Use the "),H=n("a"),Wa=s("cast_column()"),Ga=s(" function to take a column of audio file paths, and decode it into "),ia=n("code"),Ra=s("array"),za=s("\u2019s with the "),W=n("a"),Ka=s("Audio"),Qa=s(" feature:"),va=h(),K(D.$$.fragment),$a=h(),$=n("p"),Va=s("If you only want to load the underlying path to the audio dataset without decoding the audio file into an "),ra=n("code"),Xa=s("array"),Ya=s(", set "),ca=n("code"),Za=s("decode=False"),at=s(" in the "),G=n("a"),tt=s("Audio"),et=s(" feature:"),wa=h(),K(N.$$.fragment),this.h()},l(a){const i=qt('[data-svelte="svelte-1phssyn"]',document.head);r=l(i,"META",{name:!0,content:!0}),i.forEach(e),C=u(a),p=l(a,"H1",{class:!0});var T=d(p);v=l(T,"A",{id:!0,class:!0,href:!0});var dt=d(v);E=l(dt,"SPAN",{});var it=d(E);Q(_.$$.fragment,it),it.forEach(e),dt.forEach(e),I=u(T),b=l(T,"SPAN",{});var rt=d(b);A=o(rt,"Load audio data"),rt.forEach(e),T.forEach(e),g=u(a),w=l(a,"P",{});var ya=d(w);L=o(ya,"Audio datasets are loaded from the "),aa=l(ya,"CODE",{});var ct=d(aa);Ea=o(ct,"audio"),ct.forEach(e),ba=o(ya," column, which contains three important fields:"),ya.forEach(e),ha=u(a),x=l(a,"UL",{});var R=d(x);F=l(R,"LI",{});var st=d(F);ta=l(st,"CODE",{});var pt=d(ta);Aa=o(pt,"array"),pt.forEach(e),ka=o(st,": the decoded audio data represented as a 1-dimensional array."),st.forEach(e),Ca=u(R),J=l(R,"LI",{});var ot=d(J);ea=l(ot,"CODE",{});var ht=d(ea);Oa=o(ht,"path"),ht.forEach(e),qa=o(ot,": the path to the downloaded audio file."),ot.forEach(e),Pa=u(R),M=l(R,"LI",{});var nt=d(M);sa=l(nt,"CODE",{});var ut=d(sa);Ia=o(ut,"sampling_rate"),ut.forEach(e),Sa=o(nt,": the sampling rate of the audio data."),nt.forEach(e),R.forEach(e),ua=u(a),y=l(a,"P",{});var z=d(y);Ua=o(z,"When you load an audio dataset and call the "),oa=l(z,"CODE",{});var ft=d(oa);Da=o(ft,"audio"),ft.forEach(e),Na=o(z," column, the "),B=l(z,"A",{href:!0});var mt=d(B);Ta=o(mt,"Audio"),mt.forEach(e),La=o(z," feature automatically decodes and resamples the audio file:"),z.forEach(e),fa=u(a),Q(S.$$.fragment,a),ma=u(a),Q(O.$$.fragment,a),_a=u(a),k=l(a,"H2",{class:!0});var ja=d(k);q=l(ja,"A",{id:!0,class:!0,href:!0});var _t=d(q);na=l(_t,"SPAN",{});var gt=d(na);Q(U.$$.fragment,gt),gt.forEach(e),_t.forEach(e),Fa=u(ja),la=l(ja,"SPAN",{});var vt=d(la);Ja=o(vt,"Path"),vt.forEach(e),ja.forEach(e),ga=u(a),f=l(a,"P",{});var j=d(f);Ma=o(j,"The "),da=l(j,"CODE",{});var $t=d(da);Ba=o($t,"path"),$t.forEach(e),Ha=o(j," is useful for loading your own dataset. Use the "),H=l(j,"A",{href:!0});var wt=d(H);Wa=o(wt,"cast_column()"),wt.forEach(e),Ga=o(j," function to take a column of audio file paths, and decode it into "),ia=l(j,"CODE",{});var xt=d(ia);Ra=o(xt,"array"),xt.forEach(e),za=o(j,"\u2019s with the "),W=l(j,"A",{href:!0});var yt=d(W);Ka=o(yt,"Audio"),yt.forEach(e),Qa=o(j," feature:"),j.forEach(e),va=u(a),Q(D.$$.fragment,a),$a=u(a),$=l(a,"P",{});var P=d($);Va=o(P,"If you only want to load the underlying path to the audio dataset without decoding the audio file into an "),ra=l(P,"CODE",{});var jt=d(ra);Xa=o(jt,"array"),jt.forEach(e),Ya=o(P,", set "),ca=l(P,"CODE",{});var Et=d(ca);Za=o(Et,"decode=False"),Et.forEach(e),at=o(P," in the "),G=l(P,"A",{href:!0});var bt=d(G);tt=o(bt,"Audio"),bt.forEach(e),et=o(P," feature:"),P.forEach(e),wa=u(a),Q(N.$$.fragment,a),this.h()},h(){m(r,"name","hf:doc:metadata"),m(r,"content",JSON.stringify(Dt)),m(v,"id","load-audio-data"),m(v,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(v,"href","#load-audio-data"),m(p,"class","relative group"),m(B,"href","/docs/datasets/pr_4519/en/package_reference/main_classes#datasets.Audio"),m(q,"id","path"),m(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(q,"href","#path"),m(k,"class","relative group"),m(H,"href","/docs/datasets/pr_4519/en/package_reference/main_classes#datasets.Dataset.cast_column"),m(W,"href","/docs/datasets/pr_4519/en/package_reference/main_classes#datasets.Audio"),m(G,"href","/docs/datasets/pr_4519/en/package_reference/main_classes#datasets.Audio")},m(a,i){t(document.head,r),c(a,C,i),c(a,p,i),t(p,v),t(v,E),V(_,E,null),t(p,I),t(p,b),t(b,A),c(a,g,i),c(a,w,i),t(w,L),t(w,aa),t(aa,Ea),t(w,ba),c(a,ha,i),c(a,x,i),t(x,F),t(F,ta),t(ta,Aa),t(F,ka),t(x,Ca),t(x,J),t(J,ea),t(ea,Oa),t(J,qa),t(x,Pa),t(x,M),t(M,sa),t(sa,Ia),t(M,Sa),c(a,ua,i),c(a,y,i),t(y,Ua),t(y,oa),t(oa,Da),t(y,Na),t(y,B),t(B,Ta),t(y,La),c(a,fa,i),V(S,a,i),c(a,ma,i),V(O,a,i),c(a,_a,i),c(a,k,i),t(k,q),t(q,na),V(U,na,null),t(k,Fa),t(k,la),t(la,Ja),c(a,ga,i),c(a,f,i),t(f,Ma),t(f,da),t(da,Ba),t(f,Ha),t(f,H),t(H,Wa),t(f,Ga),t(f,ia),t(ia,Ra),t(f,za),t(f,W),t(W,Ka),t(f,Qa),c(a,va,i),V(D,a,i),c(a,$a,i),c(a,$,i),t($,Va),t($,ra),t(ra,Xa),t($,Ya),t($,ca),t(ca,Za),t($,at),t($,G),t(G,tt),t($,et),c(a,wa,i),V(N,a,i),xa=!0},p(a,[i]){const T={};i&2&&(T.$$scope={dirty:i,ctx:a}),O.$set(T)},i(a){xa||(X(_.$$.fragment,a),X(S.$$.fragment,a),X(O.$$.fragment,a),X(U.$$.fragment,a),X(D.$$.fragment,a),X(N.$$.fragment,a),xa=!0)},o(a){Y(_.$$.fragment,a),Y(S.$$.fragment,a),Y(O.$$.fragment,a),Y(U.$$.fragment,a),Y(D.$$.fragment,a),Y(N.$$.fragment,a),xa=!1},d(a){e(r),a&&e(C),a&&e(p),Z(_),a&&e(g),a&&e(w),a&&e(ha),a&&e(x),a&&e(ua),a&&e(y),a&&e(fa),Z(S,a),a&&e(ma),Z(O,a),a&&e(_a),a&&e(k),Z(U),a&&e(ga),a&&e(f),a&&e(va),Z(D,a),a&&e($a),a&&e($),a&&e(wa),Z(N,a)}}}const Dt={local:"load-audio-data",sections:[{local:"path",title:"Path"}],title:"Load audio data"};function Nt(pa){return Pt(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Mt extends kt{constructor(r){super();Ct(this,r,Nt,Ut,Ot,{})}}export{Mt as default,Dt as metadata};
