import{S as Ot,i as It,s as Pt,e as l,k as m,w as J,t as s,M as Dt,c as n,d as e,m as _,a as d,x as M,h as o,b as $,G as t,g as u,y as B,q as H,o as W,B as G,v as St}from"../chunks/vendor-hf-doc-builder.js";import{T as kt}from"../chunks/Tip-hf-doc-builder.js";import{I as Ct}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as rt}from"../chunks/CodeBlock-hf-doc-builder.js";function Ut(R){let r,E,p,f,j,h,b,y;return{c(){r=l("p"),E=s("To work with audio datasets, you need to have the "),p=l("code"),f=s("audio"),j=s(" dependency installed. Check out the "),h=l("a"),b=s("installation"),y=s(" guide to learn how to install it."),this.h()},l(g){r=n(g,"P",{});var c=d(r);E=o(c,"To work with audio datasets, you need to have the "),p=n(c,"CODE",{});var v=d(p);f=o(v,"audio"),v.forEach(e),j=o(c," dependency installed. Check out the "),h=n(c,"A",{href:!0});var C=d(h);b=o(C,"installation"),C.forEach(e),y=o(c," guide to learn how to install it."),c.forEach(e),this.h()},h(){$(h,"href","./installation#audio")},m(g,c){u(g,r,c),t(r,E),t(r,p),t(p,f),t(r,j),t(r,h),t(h,b),t(r,y)},d(g){g&&e(r)}}}function Tt(R){let r,E,p,f,j,h,b,y;return{c(){r=l("p"),E=s("Index into an audio dataset using the row index first and then the "),p=l("code"),f=s("audio"),j=s(" column - "),h=l("code"),b=s('dataset[0]["audio"]'),y=s(" - to avoid decoding and resampling all the audio files in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset.")},l(g){r=n(g,"P",{});var c=d(r);E=o(c,"Index into an audio dataset using the row index first and then the "),p=n(c,"CODE",{});var v=d(p);f=o(v,"audio"),v.forEach(e),j=o(c," column - "),h=n(c,"CODE",{});var C=d(h);b=o(C,'dataset[0]["audio"]'),C.forEach(e),y=o(c," - to avoid decoding and resampling all the audio files in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset."),c.forEach(e)},m(g,c){u(g,r,c),t(r,E),t(r,p),t(p,f),t(r,j),t(r,h),t(h,b),t(r,y)},d(g){g&&e(r)}}}function Lt(R){let r,E,p,f,j,h,b,y,g,c,v,C,ea,qa,ka,fa,A,z,sa,Ca,Oa,Ia,K,oa,Pa,Da,Sa,Q,la,Ua,Ta,ma,I,_a,q,La,na,Na,Fa,V,Ja,Ma,ga,U,$a,P,va,O,D,da,T,Ba,ia,Ha,wa,w,Wa,ra,Ga,Ra,X,za,Ka,ca,Qa,Va,Y,Xa,Ya,ja,L,ya,x,Za,pa,at,tt,ua,et,st,Z,ot,lt,Ea,N,xa;return h=new Ct({}),I=new kt({props:{$$slots:{default:[Ut]},$$scope:{ctx:R}}}),U=new rt({props:{code:`from datasets import load_dataset, Audio

dataset = load_dataset("PolyAI/minds14", "en-US", split="train")
dataset[0]["audio"]`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset, Audio

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, <span class="hljs-string">&quot;en-US&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;audio&quot;</span>]
{<span class="hljs-string">&#x27;array&#x27;</span>: array([ <span class="hljs-number">0.</span>        ,  <span class="hljs-number">0.00024414</span>, -<span class="hljs-number">0.00024414</span>, ..., -<span class="hljs-number">0.00024414</span>,
         <span class="hljs-number">0.</span>        ,  <span class="hljs-number">0.</span>        ], dtype=float32),
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>,
 <span class="hljs-string">&#x27;sampling_rate&#x27;</span>: <span class="hljs-number">8000</span>}`}}),P=new kt({props:{warning:!0,$$slots:{default:[Tt]},$$scope:{ctx:R}}}),T=new Ct({}),L=new rt({props:{code:'audio_dataset = Dataset.from_dict({"audio": ["path/to/audio_1", "path/to/audio_2", ..., "path/to/audio_n"]}).cast_column("audio", Audio())',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>audio_dataset = Dataset.from_dict({<span class="hljs-string">&quot;audio&quot;</span>: [<span class="hljs-string">&quot;path/to/audio_1&quot;</span>, <span class="hljs-string">&quot;path/to/audio_2&quot;</span>, ..., <span class="hljs-string">&quot;path/to/audio_n&quot;</span>]}).cast_column(<span class="hljs-string">&quot;audio&quot;</span>, Audio())'}}),N=new rt({props:{code:`dataset = load_dataset("PolyAI/minds14", "en-US", split="train").cast_column("audio", Audio(decode=False))
dataset[0]`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, <span class="hljs-string">&quot;en-US&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>).cast_column(<span class="hljs-string">&quot;audio&quot;</span>, Audio(decode=<span class="hljs-literal">False</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>]
{<span class="hljs-string">&#x27;audio&#x27;</span>: {<span class="hljs-string">&#x27;bytes&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>},
 <span class="hljs-string">&#x27;english_transcription&#x27;</span>: <span class="hljs-string">&#x27;I would like to set up a joint account with my partner&#x27;</span>,
 <span class="hljs-string">&#x27;intent_class&#x27;</span>: <span class="hljs-number">11</span>,
 <span class="hljs-string">&#x27;lang_id&#x27;</span>: <span class="hljs-number">4</span>,
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>,
 <span class="hljs-string">&#x27;transcription&#x27;</span>: <span class="hljs-string">&#x27;I would like to set up a joint account with my partner&#x27;</span>}`}}),{c(){r=l("meta"),E=m(),p=l("h1"),f=l("a"),j=l("span"),J(h.$$.fragment),b=m(),y=l("span"),g=s("Load audio data"),c=m(),v=l("p"),C=s("Audio datasets are loaded from the "),ea=l("code"),qa=s("audio"),ka=s(" column, which contains three important fields:"),fa=m(),A=l("ul"),z=l("li"),sa=l("code"),Ca=s("array"),Oa=s(": the decoded audio data represented as a 1-dimensional array."),Ia=m(),K=l("li"),oa=l("code"),Pa=s("path"),Da=s(": the path to the downloaded audio file."),Sa=m(),Q=l("li"),la=l("code"),Ua=s("sampling_rate"),Ta=s(": the sampling rate of the audio data."),ma=m(),J(I.$$.fragment),_a=m(),q=l("p"),La=s("When you load an audio dataset and call the "),na=l("code"),Na=s("audio"),Fa=s(" column, the "),V=l("a"),Ja=s("Audio"),Ma=s(" feature automatically decodes and resamples the audio file:"),ga=m(),J(U.$$.fragment),$a=m(),J(P.$$.fragment),va=m(),O=l("h2"),D=l("a"),da=l("span"),J(T.$$.fragment),Ba=m(),ia=l("span"),Ha=s("Local files"),wa=m(),w=l("p"),Wa=s("The "),ra=l("code"),Ga=s("path"),Ra=s(" is useful for loading your own dataset. Use the "),X=l("a"),za=s("cast_column()"),Ka=s(" function to take a column of audio file paths, and decode it into "),ca=l("code"),Qa=s("array"),Va=s("\u2019s with the "),Y=l("a"),Xa=s("Audio"),Ya=s(" feature:"),ja=m(),J(L.$$.fragment),ya=m(),x=l("p"),Za=s("If you only want to load the underlying path to the audio dataset without decoding the audio file into an "),pa=l("code"),at=s("array"),tt=s(", set "),ua=l("code"),et=s("decode=False"),st=s(" in the "),Z=l("a"),ot=s("Audio"),lt=s(" feature:"),Ea=m(),J(N.$$.fragment),this.h()},l(a){const i=Dt('[data-svelte="svelte-1phssyn"]',document.head);r=n(i,"META",{name:!0,content:!0}),i.forEach(e),E=_(a),p=n(a,"H1",{class:!0});var F=d(p);f=n(F,"A",{id:!0,class:!0,href:!0});var ha=d(f);j=n(ha,"SPAN",{});var ct=d(j);M(h.$$.fragment,ct),ct.forEach(e),ha.forEach(e),b=_(F),y=n(F,"SPAN",{});var pt=d(y);g=o(pt,"Load audio data"),pt.forEach(e),F.forEach(e),c=_(a),v=n(a,"P",{});var ba=d(v);C=o(ba,"Audio datasets are loaded from the "),ea=n(ba,"CODE",{});var ut=d(ea);qa=o(ut,"audio"),ut.forEach(e),ka=o(ba," column, which contains three important fields:"),ba.forEach(e),fa=_(a),A=n(a,"UL",{});var aa=d(A);z=n(aa,"LI",{});var nt=d(z);sa=n(nt,"CODE",{});var ht=d(sa);Ca=o(ht,"array"),ht.forEach(e),Oa=o(nt,": the decoded audio data represented as a 1-dimensional array."),nt.forEach(e),Ia=_(aa),K=n(aa,"LI",{});var dt=d(K);oa=n(dt,"CODE",{});var ft=d(oa);Pa=o(ft,"path"),ft.forEach(e),Da=o(dt,": the path to the downloaded audio file."),dt.forEach(e),Sa=_(aa),Q=n(aa,"LI",{});var it=d(Q);la=n(it,"CODE",{});var mt=d(la);Ua=o(mt,"sampling_rate"),mt.forEach(e),Ta=o(it,": the sampling rate of the audio data."),it.forEach(e),aa.forEach(e),ma=_(a),M(I.$$.fragment,a),_a=_(a),q=n(a,"P",{});var ta=d(q);La=o(ta,"When you load an audio dataset and call the "),na=n(ta,"CODE",{});var _t=d(na);Na=o(_t,"audio"),_t.forEach(e),Fa=o(ta," column, the "),V=n(ta,"A",{href:!0});var gt=d(V);Ja=o(gt,"Audio"),gt.forEach(e),Ma=o(ta," feature automatically decodes and resamples the audio file:"),ta.forEach(e),ga=_(a),M(U.$$.fragment,a),$a=_(a),M(P.$$.fragment,a),va=_(a),O=n(a,"H2",{class:!0});var Aa=d(O);D=n(Aa,"A",{id:!0,class:!0,href:!0});var $t=d(D);da=n($t,"SPAN",{});var vt=d(da);M(T.$$.fragment,vt),vt.forEach(e),$t.forEach(e),Ba=_(Aa),ia=n(Aa,"SPAN",{});var wt=d(ia);Ha=o(wt,"Local files"),wt.forEach(e),Aa.forEach(e),wa=_(a),w=n(a,"P",{});var k=d(w);Wa=o(k,"The "),ra=n(k,"CODE",{});var jt=d(ra);Ga=o(jt,"path"),jt.forEach(e),Ra=o(k," is useful for loading your own dataset. Use the "),X=n(k,"A",{href:!0});var yt=d(X);za=o(yt,"cast_column()"),yt.forEach(e),Ka=o(k," function to take a column of audio file paths, and decode it into "),ca=n(k,"CODE",{});var Et=d(ca);Qa=o(Et,"array"),Et.forEach(e),Va=o(k,"\u2019s with the "),Y=n(k,"A",{href:!0});var xt=d(Y);Xa=o(xt,"Audio"),xt.forEach(e),Ya=o(k," feature:"),k.forEach(e),ja=_(a),M(L.$$.fragment,a),ya=_(a),x=n(a,"P",{});var S=d(x);Za=o(S,"If you only want to load the underlying path to the audio dataset without decoding the audio file into an "),pa=n(S,"CODE",{});var bt=d(pa);at=o(bt,"array"),bt.forEach(e),tt=o(S,", set "),ua=n(S,"CODE",{});var At=d(ua);et=o(At,"decode=False"),At.forEach(e),st=o(S," in the "),Z=n(S,"A",{href:!0});var qt=d(Z);ot=o(qt,"Audio"),qt.forEach(e),lt=o(S," feature:"),S.forEach(e),Ea=_(a),M(N.$$.fragment,a),this.h()},h(){$(r,"name","hf:doc:metadata"),$(r,"content",JSON.stringify(Nt)),$(f,"id","load-audio-data"),$(f,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),$(f,"href","#load-audio-data"),$(p,"class","relative group"),$(V,"href","/docs/datasets/pr_4519/en/package_reference/main_classes#datasets.Audio"),$(D,"id","local-files"),$(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),$(D,"href","#local-files"),$(O,"class","relative group"),$(X,"href","/docs/datasets/pr_4519/en/package_reference/main_classes#datasets.Dataset.cast_column"),$(Y,"href","/docs/datasets/pr_4519/en/package_reference/main_classes#datasets.Audio"),$(Z,"href","/docs/datasets/pr_4519/en/package_reference/main_classes#datasets.Audio")},m(a,i){t(document.head,r),u(a,E,i),u(a,p,i),t(p,f),t(f,j),B(h,j,null),t(p,b),t(p,y),t(y,g),u(a,c,i),u(a,v,i),t(v,C),t(v,ea),t(ea,qa),t(v,ka),u(a,fa,i),u(a,A,i),t(A,z),t(z,sa),t(sa,Ca),t(z,Oa),t(A,Ia),t(A,K),t(K,oa),t(oa,Pa),t(K,Da),t(A,Sa),t(A,Q),t(Q,la),t(la,Ua),t(Q,Ta),u(a,ma,i),B(I,a,i),u(a,_a,i),u(a,q,i),t(q,La),t(q,na),t(na,Na),t(q,Fa),t(q,V),t(V,Ja),t(q,Ma),u(a,ga,i),B(U,a,i),u(a,$a,i),B(P,a,i),u(a,va,i),u(a,O,i),t(O,D),t(D,da),B(T,da,null),t(O,Ba),t(O,ia),t(ia,Ha),u(a,wa,i),u(a,w,i),t(w,Wa),t(w,ra),t(ra,Ga),t(w,Ra),t(w,X),t(X,za),t(w,Ka),t(w,ca),t(ca,Qa),t(w,Va),t(w,Y),t(Y,Xa),t(w,Ya),u(a,ja,i),B(L,a,i),u(a,ya,i),u(a,x,i),t(x,Za),t(x,pa),t(pa,at),t(x,tt),t(x,ua),t(ua,et),t(x,st),t(x,Z),t(Z,ot),t(x,lt),u(a,Ea,i),B(N,a,i),xa=!0},p(a,[i]){const F={};i&2&&(F.$$scope={dirty:i,ctx:a}),I.$set(F);const ha={};i&2&&(ha.$$scope={dirty:i,ctx:a}),P.$set(ha)},i(a){xa||(H(h.$$.fragment,a),H(I.$$.fragment,a),H(U.$$.fragment,a),H(P.$$.fragment,a),H(T.$$.fragment,a),H(L.$$.fragment,a),H(N.$$.fragment,a),xa=!0)},o(a){W(h.$$.fragment,a),W(I.$$.fragment,a),W(U.$$.fragment,a),W(P.$$.fragment,a),W(T.$$.fragment,a),W(L.$$.fragment,a),W(N.$$.fragment,a),xa=!1},d(a){e(r),a&&e(E),a&&e(p),G(h),a&&e(c),a&&e(v),a&&e(fa),a&&e(A),a&&e(ma),G(I,a),a&&e(_a),a&&e(q),a&&e(ga),G(U,a),a&&e($a),G(P,a),a&&e(va),a&&e(O),G(T),a&&e(wa),a&&e(w),a&&e(ja),G(L,a),a&&e(ya),a&&e(x),a&&e(Ea),G(N,a)}}}const Nt={local:"load-audio-data",sections:[{local:"local-files",title:"Local files"}],title:"Load audio data"};function Ft(R){return St(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Wt extends Ot{constructor(r){super();It(this,r,Ft,Lt,Pt,{})}}export{Wt as default,Nt as metadata};
