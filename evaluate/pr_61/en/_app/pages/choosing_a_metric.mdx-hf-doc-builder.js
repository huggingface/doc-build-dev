import{S as er,i as tr,s as ar,e as s,k as f,w as se,t as o,M as sr,c as r,d as a,m as p,a as i,x as re,h as n,b as l,G as t,g as h,y as oe,L as rr,q as ie,o as ne,B as le,v as or}from"../chunks/vendor-hf-doc-builder.js";import{I as Ve}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Zs}from"../chunks/CodeBlock-hf-doc-builder.js";function ir(ss){let E,Je,k,L,Ae,M,$t,Le,At,Ke,ce,Pe,Lt,Xe,he,Pt,Ze,b,P,je,D,jt,Se,St,et,fe,Tt,tt,_,pe,Te,qt,Nt,Gt,ue,qe,Ct,Mt,Dt,de,Ne,Ut,It,at,me,Ot,st,x,j,Ge,U,Rt,Ce,Bt,rt,ve,Ft,ot,v,Ht,I,Qt,Wt,O,Yt,zt,R,Vt,Jt,it,S,Kt,B,Xt,Zt,nt,F,lt,$,T,Me,H,ea,De,ta,ct,d,aa,Q,sa,ra,W,oa,ia,Y,na,la,z,ca,ha,V,fa,pa,ht,ge,ua,ft,g,ye,_e,da,J,ma,va,ga,q,Ue,ya,_a,K,wa,Ea,ka,we,Ie,ba,xa,$a,Ee,Oe,Aa,La,pt,A,N,Re,X,Pa,Be,ja,ut,w,Sa,Z,Ta,qa,ee,Na,Ga,dt,ke,Ca,mt,u,Ma,te,Da,Ua,Fe,Ia,Oa,He,Ra,Ba,Qe,Fa,Ha,We,Qa,Wa,Ye,Ya,za,vt,ae,gt,be,Va,yt;return M=new Ve({}),D=new Ve({}),U=new Ve({}),F=new Zs({props:{code:`precision_metric = evaluate.load("precision")
results = precision_metric.compute(references=[0, 1], predictions=[0, 1])
print(results)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt;</span> <span class="language-python">precision_metric = evaluate.load(<span class="hljs-string">&quot;precision&quot;</span>)</span>
<span class="hljs-meta">&gt;&gt;&gt;</span> <span class="language-python">results = precision_metric.compute(references=[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], predictions=[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>])</span>
<span class="hljs-meta">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">print</span>(results)</span>
{&#x27;precision&#x27;: 1.0}`}}),H=new Ve({}),X=new Ve({}),ae=new Zs({props:{code:`from evaluate import load
squad_metric = load("squad")
predictions = [{'prediction_text': '1976', 'id': '56e10a3be3433e1400422b22'}]
references = [{'answers': {'answer_start': [97], 'text': ['1976']}, 'id': '56e10a3be3433e1400422b22'}]
results = squad_metric.compute(predictions=predictions, references=references)
results`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-keyword">from</span> evaluate <span class="hljs-keyword">import</span> load</span>
<span class="hljs-meta">&gt;&gt;&gt;</span> <span class="language-python">squad_metric = load(<span class="hljs-string">&quot;squad&quot;</span>)</span>
<span class="hljs-meta">&gt;&gt;&gt;</span> <span class="language-python">predictions = [{<span class="hljs-string">&#x27;prediction_text&#x27;</span>: <span class="hljs-string">&#x27;1976&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;56e10a3be3433e1400422b22&#x27;</span>}]</span>
<span class="hljs-meta">&gt;&gt;&gt;</span> <span class="language-python">references = [{<span class="hljs-string">&#x27;answers&#x27;</span>: {<span class="hljs-string">&#x27;answer_start&#x27;</span>: [<span class="hljs-number">97</span>], <span class="hljs-string">&#x27;text&#x27;</span>: [<span class="hljs-string">&#x27;1976&#x27;</span>]}, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;56e10a3be3433e1400422b22&#x27;</span>}]</span>
<span class="hljs-meta">&gt;&gt;&gt;</span> <span class="language-python">results = squad_metric.compute(predictions=predictions, references=references)</span>
<span class="hljs-meta">&gt;&gt;&gt;</span> <span class="language-python">results</span>
{&#x27;exact_match&#x27;: 100.0, &#x27;f1&#x27;: 100.0}`}}),{c(){E=s("meta"),Je=f(),k=s("h1"),L=s("a"),Ae=s("span"),se(M.$$.fragment),$t=f(),Le=s("span"),At=o("Choosing a metric for your task"),Ke=f(),ce=s("p"),Pe=s("strong"),Lt=o("So you\u2019ve trained your model and want to see how well it\u2019s doing on a dataset of your choice. Where do you start?"),Xe=f(),he=s("p"),Pt=o("There is no \u201Cone size fits all\u201D approach to choosing an evaluation metric, but some good guidelines to keep in mind are:"),Ze=f(),b=s("h2"),P=s("a"),je=s("span"),se(D.$$.fragment),jt=f(),Se=s("span"),St=o("Categories of metrics"),et=f(),fe=s("p"),Tt=o("There are 3 high-level categories of metrics:"),tt=f(),_=s("ol"),pe=s("li"),Te=s("em"),qt=o("Generic metrics"),Nt=o(", which can be applied to a variety of situations and datasets, such as precision and accuracy."),Gt=f(),ue=s("li"),qe=s("em"),Ct=o("Task-specific metrics"),Mt=o(", which are limited to a given task, such as Machine Translation or Named Entity Recognition."),Dt=f(),de=s("li"),Ne=s("em"),Ut=o("Dataset-specific metrics"),It=o(", which aim to measure model performance on specific benchmarks."),at=f(),me=s("p"),Ot=o("Let\u2019s look at each of these three cases:"),st=f(),x=s("h3"),j=s("a"),Ge=s("span"),se(U.$$.fragment),Rt=f(),Ce=s("span"),Bt=o("Generic metrics"),rt=f(),ve=s("p"),Ft=o("Many of the metrics used in the Machine Learning community are quite generic and can be applied in a variety of tasks and datasets."),ot=f(),v=s("p"),Ht=o("This is the case for metrics like "),I=s("a"),Qt=o("accuracy"),Wt=o(" and "),O=s("a"),Yt=o("precision"),zt=o(", which can be used for evaluating labeled (supervised) datasets, as well as "),R=s("a"),Vt=o("perplexity"),Jt=o(", which can be used for evaluating different kinds of (unsupervised) generative tasks."),it=f(),S=s("p"),Kt=o("To see the input structure of a given metric, you can look at its metric card. For example, in the case of "),B=s("a"),Xt=o("precision"),Zt=o(", the format is:"),nt=f(),se(F.$$.fragment),lt=f(),$=s("h3"),T=s("a"),Me=s("span"),se(H.$$.fragment),ea=f(),De=s("span"),ta=o("Task-specific metrics"),ct=f(),d=s("p"),aa=o("Popular ML tasks like Machine Translation and Named Entity Recognition have specific metrics that can be used to compare models. For example, a series of different metrics have been proposed for text generation, ranging from "),Q=s("a"),sa=o("BLEU"),ra=o(" and its derivatives such as "),W=s("a"),oa=o("GoogleBLEU"),ia=o(" and "),Y=s("a"),na=o("GLEU"),la=o(", but also "),z=s("a"),ca=o("ROUGE"),ha=o(", "),V=s("a"),fa=o("MAUVE"),pa=o(", etc."),ht=f(),ge=s("p"),ua=o("You can find the right metric for your task by:"),ft=f(),g=s("ul"),ye=s("li"),_e=s("strong"),da=o("Looking at the "),J=s("a"),ma=o("Task pages"),va=o(" to see what metrics can be used for evaluating models for a given task."),ga=f(),q=s("li"),Ue=s("strong"),ya=o("Checking out leaderboards"),_a=o(" on sites like "),K=s("a"),wa=o("Papers With Code"),Ea=o(" (you can search by task and by dataset)."),ka=f(),we=s("li"),Ie=s("strong"),ba=o("Reading the metric cards"),xa=o(" for the relevant metrics and see which ones are a good fit for your use case."),$a=f(),Ee=s("li"),Oe=s("strong"),Aa=o("Looking at papers and blog posts"),La=o(" published on the topic and see what metrics they report. This can change over time, so try to pick papers from the last couple of years!"),pt=f(),A=s("h3"),N=s("a"),Re=s("span"),se(X.$$.fragment),Pa=f(),Be=s("span"),ja=o("Dataset-specific metrics"),ut=f(),w=s("p"),Sa=o("Some datasets have specific metrics associated with them \u2014 this is especially in the case of popular benchmarks like "),Z=s("a"),Ta=o("GLUE"),qa=o(" and "),ee=s("a"),Na=o("SQuAD"),Ga=o("."),dt=f(),ke=s("aside"),Ca=o(`\u{1F4A1}
GLUE is actually a collection of different subsets on different tasks, so first you need to choose the one that corresponds to the NLI task, such as mnli, which is described as \u201Ccrowdsourced collection of sentence pairs with textual entailment annotations\u201D`),mt=f(),u=s("p"),Ma=o("If you are evaluating your model on a benchmark dataset like the ones mentioned above, you can use its dedicated evaluation metric. Make sure you respect the format that they require. For example, to evaluate your model on the "),te=s("a"),Da=o("SQuAD"),Ua=o(" dataset, you need to feed the "),Fe=s("code"),Ia=o("question"),Oa=o(" and "),He=s("code"),Ra=o("context"),Ba=o(" into your model and return the "),Qe=s("code"),Fa=o("prediction_text"),Ha=o(", which should be compared with the "),We=s("code"),Qa=o("references"),Wa=o(" (based on matching the "),Ye=s("code"),Ya=o("id"),za=o(" of the question) :"),vt=f(),se(ae.$$.fragment),gt=f(),be=s("p"),Va=o("You can find examples of dataset structures by consulting the \u201CDataset Preview\u201D function or the dataset card for a given dataset, and you can see how to use its dedicated evaluation function based on the metric card."),this.h()},l(e){const c=sr('[data-svelte="svelte-1phssyn"]',document.head);E=r(c,"META",{name:!0,content:!0}),c.forEach(a),Je=p(e),k=r(e,"H1",{class:!0});var _t=i(k);L=r(_t,"A",{id:!0,class:!0,href:!0});var rs=i(L);Ae=r(rs,"SPAN",{});var os=i(Ae);re(M.$$.fragment,os),os.forEach(a),rs.forEach(a),$t=p(_t),Le=r(_t,"SPAN",{});var is=i(Le);At=n(is,"Choosing a metric for your task"),is.forEach(a),_t.forEach(a),Ke=p(e),ce=r(e,"P",{});var ns=i(ce);Pe=r(ns,"STRONG",{});var ls=i(Pe);Lt=n(ls,"So you\u2019ve trained your model and want to see how well it\u2019s doing on a dataset of your choice. Where do you start?"),ls.forEach(a),ns.forEach(a),Xe=p(e),he=r(e,"P",{});var cs=i(he);Pt=n(cs,"There is no \u201Cone size fits all\u201D approach to choosing an evaluation metric, but some good guidelines to keep in mind are:"),cs.forEach(a),Ze=p(e),b=r(e,"H2",{class:!0});var wt=i(b);P=r(wt,"A",{id:!0,class:!0,href:!0});var hs=i(P);je=r(hs,"SPAN",{});var fs=i(je);re(D.$$.fragment,fs),fs.forEach(a),hs.forEach(a),jt=p(wt),Se=r(wt,"SPAN",{});var ps=i(Se);St=n(ps,"Categories of metrics"),ps.forEach(a),wt.forEach(a),et=p(e),fe=r(e,"P",{});var us=i(fe);Tt=n(us,"There are 3 high-level categories of metrics:"),us.forEach(a),tt=p(e),_=r(e,"OL",{});var xe=i(_);pe=r(xe,"LI",{});var Ja=i(pe);Te=r(Ja,"EM",{});var ds=i(Te);qt=n(ds,"Generic metrics"),ds.forEach(a),Nt=n(Ja,", which can be applied to a variety of situations and datasets, such as precision and accuracy."),Ja.forEach(a),Gt=p(xe),ue=r(xe,"LI",{});var Ka=i(ue);qe=r(Ka,"EM",{});var ms=i(qe);Ct=n(ms,"Task-specific metrics"),ms.forEach(a),Mt=n(Ka,", which are limited to a given task, such as Machine Translation or Named Entity Recognition."),Ka.forEach(a),Dt=p(xe),de=r(xe,"LI",{});var Xa=i(de);Ne=r(Xa,"EM",{});var vs=i(Ne);Ut=n(vs,"Dataset-specific metrics"),vs.forEach(a),It=n(Xa,", which aim to measure model performance on specific benchmarks."),Xa.forEach(a),xe.forEach(a),at=p(e),me=r(e,"P",{});var gs=i(me);Ot=n(gs,"Let\u2019s look at each of these three cases:"),gs.forEach(a),st=p(e),x=r(e,"H3",{class:!0});var Et=i(x);j=r(Et,"A",{id:!0,class:!0,href:!0});var ys=i(j);Ge=r(ys,"SPAN",{});var _s=i(Ge);re(U.$$.fragment,_s),_s.forEach(a),ys.forEach(a),Rt=p(Et),Ce=r(Et,"SPAN",{});var ws=i(Ce);Bt=n(ws,"Generic metrics"),ws.forEach(a),Et.forEach(a),rt=p(e),ve=r(e,"P",{});var Es=i(ve);Ft=n(Es,"Many of the metrics used in the Machine Learning community are quite generic and can be applied in a variety of tasks and datasets."),Es.forEach(a),ot=p(e),v=r(e,"P",{});var G=i(v);Ht=n(G,"This is the case for metrics like "),I=r(G,"A",{href:!0,rel:!0});var ks=i(I);Qt=n(ks,"accuracy"),ks.forEach(a),Wt=n(G," and "),O=r(G,"A",{href:!0,rel:!0});var bs=i(O);Yt=n(bs,"precision"),bs.forEach(a),zt=n(G,", which can be used for evaluating labeled (supervised) datasets, as well as "),R=r(G,"A",{href:!0,rel:!0});var xs=i(R);Vt=n(xs,"perplexity"),xs.forEach(a),Jt=n(G,", which can be used for evaluating different kinds of (unsupervised) generative tasks."),G.forEach(a),it=p(e),S=r(e,"P",{});var kt=i(S);Kt=n(kt,"To see the input structure of a given metric, you can look at its metric card. For example, in the case of "),B=r(kt,"A",{href:!0,rel:!0});var $s=i(B);Xt=n($s,"precision"),$s.forEach(a),Zt=n(kt,", the format is:"),kt.forEach(a),nt=p(e),re(F.$$.fragment,e),lt=p(e),$=r(e,"H3",{class:!0});var bt=i($);T=r(bt,"A",{id:!0,class:!0,href:!0});var As=i(T);Me=r(As,"SPAN",{});var Ls=i(Me);re(H.$$.fragment,Ls),Ls.forEach(a),As.forEach(a),ea=p(bt),De=r(bt,"SPAN",{});var Ps=i(De);ta=n(Ps,"Task-specific metrics"),Ps.forEach(a),bt.forEach(a),ct=p(e),d=r(e,"P",{});var y=i(d);aa=n(y,"Popular ML tasks like Machine Translation and Named Entity Recognition have specific metrics that can be used to compare models. For example, a series of different metrics have been proposed for text generation, ranging from "),Q=r(y,"A",{href:!0,rel:!0});var js=i(Q);sa=n(js,"BLEU"),js.forEach(a),ra=n(y," and its derivatives such as "),W=r(y,"A",{href:!0,rel:!0});var Ss=i(W);oa=n(Ss,"GoogleBLEU"),Ss.forEach(a),ia=n(y," and "),Y=r(y,"A",{href:!0,rel:!0});var Ts=i(Y);na=n(Ts,"GLEU"),Ts.forEach(a),la=n(y,", but also "),z=r(y,"A",{href:!0,rel:!0});var qs=i(z);ca=n(qs,"ROUGE"),qs.forEach(a),ha=n(y,", "),V=r(y,"A",{href:!0,rel:!0});var Ns=i(V);fa=n(Ns,"MAUVE"),Ns.forEach(a),pa=n(y,", etc."),y.forEach(a),ht=p(e),ge=r(e,"P",{});var Gs=i(ge);ua=n(Gs,"You can find the right metric for your task by:"),Gs.forEach(a),ft=p(e),g=r(e,"UL",{});var C=i(g);ye=r(C,"LI",{});var Za=i(ye);_e=r(Za,"STRONG",{});var es=i(_e);da=n(es,"Looking at the "),J=r(es,"A",{href:!0,rel:!0});var Cs=i(J);ma=n(Cs,"Task pages"),Cs.forEach(a),es.forEach(a),va=n(Za," to see what metrics can be used for evaluating models for a given task."),Za.forEach(a),ga=p(C),q=r(C,"LI",{});var ze=i(q);Ue=r(ze,"STRONG",{});var Ms=i(Ue);ya=n(Ms,"Checking out leaderboards"),Ms.forEach(a),_a=n(ze," on sites like "),K=r(ze,"A",{href:!0,rel:!0});var Ds=i(K);wa=n(Ds,"Papers With Code"),Ds.forEach(a),Ea=n(ze," (you can search by task and by dataset)."),ze.forEach(a),ka=p(C),we=r(C,"LI",{});var ts=i(we);Ie=r(ts,"STRONG",{});var Us=i(Ie);ba=n(Us,"Reading the metric cards"),Us.forEach(a),xa=n(ts," for the relevant metrics and see which ones are a good fit for your use case."),ts.forEach(a),$a=p(C),Ee=r(C,"LI",{});var as=i(Ee);Oe=r(as,"STRONG",{});var Is=i(Oe);Aa=n(Is,"Looking at papers and blog posts"),Is.forEach(a),La=n(as," published on the topic and see what metrics they report. This can change over time, so try to pick papers from the last couple of years!"),as.forEach(a),C.forEach(a),pt=p(e),A=r(e,"H3",{class:!0});var xt=i(A);N=r(xt,"A",{id:!0,class:!0,href:!0});var Os=i(N);Re=r(Os,"SPAN",{});var Rs=i(Re);re(X.$$.fragment,Rs),Rs.forEach(a),Os.forEach(a),Pa=p(xt),Be=r(xt,"SPAN",{});var Bs=i(Be);ja=n(Bs,"Dataset-specific metrics"),Bs.forEach(a),xt.forEach(a),ut=p(e),w=r(e,"P",{});var $e=i(w);Sa=n($e,"Some datasets have specific metrics associated with them \u2014 this is especially in the case of popular benchmarks like "),Z=r($e,"A",{href:!0,rel:!0});var Fs=i(Z);Ta=n(Fs,"GLUE"),Fs.forEach(a),qa=n($e," and "),ee=r($e,"A",{href:!0,rel:!0});var Hs=i(ee);Na=n(Hs,"SQuAD"),Hs.forEach(a),Ga=n($e,"."),$e.forEach(a),dt=p(e),ke=r(e,"ASIDE",{});var Qs=i(ke);Ca=n(Qs,`\u{1F4A1}
GLUE is actually a collection of different subsets on different tasks, so first you need to choose the one that corresponds to the NLI task, such as mnli, which is described as \u201Ccrowdsourced collection of sentence pairs with textual entailment annotations\u201D`),Qs.forEach(a),mt=p(e),u=r(e,"P",{});var m=i(u);Ma=n(m,"If you are evaluating your model on a benchmark dataset like the ones mentioned above, you can use its dedicated evaluation metric. Make sure you respect the format that they require. For example, to evaluate your model on the "),te=r(m,"A",{href:!0,rel:!0});var Ws=i(te);Da=n(Ws,"SQuAD"),Ws.forEach(a),Ua=n(m," dataset, you need to feed the "),Fe=r(m,"CODE",{});var Ys=i(Fe);Ia=n(Ys,"question"),Ys.forEach(a),Oa=n(m," and "),He=r(m,"CODE",{});var zs=i(He);Ra=n(zs,"context"),zs.forEach(a),Ba=n(m," into your model and return the "),Qe=r(m,"CODE",{});var Vs=i(Qe);Fa=n(Vs,"prediction_text"),Vs.forEach(a),Ha=n(m,", which should be compared with the "),We=r(m,"CODE",{});var Js=i(We);Qa=n(Js,"references"),Js.forEach(a),Wa=n(m," (based on matching the "),Ye=r(m,"CODE",{});var Ks=i(Ye);Ya=n(Ks,"id"),Ks.forEach(a),za=n(m," of the question) :"),m.forEach(a),vt=p(e),re(ae.$$.fragment,e),gt=p(e),be=r(e,"P",{});var Xs=i(be);Va=n(Xs,"You can find examples of dataset structures by consulting the \u201CDataset Preview\u201D function or the dataset card for a given dataset, and you can see how to use its dedicated evaluation function based on the metric card."),Xs.forEach(a),this.h()},h(){l(E,"name","hf:doc:metadata"),l(E,"content",JSON.stringify(nr)),l(L,"id","choosing-a-metric-for-your-task"),l(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(L,"href","#choosing-a-metric-for-your-task"),l(k,"class","relative group"),l(P,"id","categories-of-metrics"),l(P,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(P,"href","#categories-of-metrics"),l(b,"class","relative group"),l(j,"id","generic-metrics"),l(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(j,"href","#generic-metrics"),l(x,"class","relative group"),l(I,"href","https://huggingface.co/metrics/accuracy"),l(I,"rel","nofollow"),l(O,"href","https://huggingface.co/metrics/precision"),l(O,"rel","nofollow"),l(R,"href","https://huggingface.co/metrics/perplexity"),l(R,"rel","nofollow"),l(B,"href","https://huggingface.co/metrics/precision"),l(B,"rel","nofollow"),l(T,"id","taskspecific-metrics"),l(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(T,"href","#taskspecific-metrics"),l($,"class","relative group"),l(Q,"href","https://huggingface.co/metrics/bleu"),l(Q,"rel","nofollow"),l(W,"href","https://huggingface.co/metrics/google_bleu"),l(W,"rel","nofollow"),l(Y,"href","https://huggingface.co/metrics/gleu"),l(Y,"rel","nofollow"),l(z,"href","https://huggingface.co/metrics/rouge"),l(z,"rel","nofollow"),l(V,"href","https://huggingface.co/metrics/mauve"),l(V,"rel","nofollow"),l(J,"href","https://huggingface.co/tasks"),l(J,"rel","nofollow"),l(K,"href","https://paperswithcode.com/"),l(K,"rel","nofollow"),l(N,"id","datasetspecific-metrics"),l(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(N,"href","#datasetspecific-metrics"),l(A,"class","relative group"),l(Z,"href","https://huggingface.co/metrics/glue"),l(Z,"rel","nofollow"),l(ee,"href","https://huggingface.co/metrics/squad"),l(ee,"rel","nofollow"),l(te,"href","https://huggingface.co/datasets/squad"),l(te,"rel","nofollow")},m(e,c){t(document.head,E),h(e,Je,c),h(e,k,c),t(k,L),t(L,Ae),oe(M,Ae,null),t(k,$t),t(k,Le),t(Le,At),h(e,Ke,c),h(e,ce,c),t(ce,Pe),t(Pe,Lt),h(e,Xe,c),h(e,he,c),t(he,Pt),h(e,Ze,c),h(e,b,c),t(b,P),t(P,je),oe(D,je,null),t(b,jt),t(b,Se),t(Se,St),h(e,et,c),h(e,fe,c),t(fe,Tt),h(e,tt,c),h(e,_,c),t(_,pe),t(pe,Te),t(Te,qt),t(pe,Nt),t(_,Gt),t(_,ue),t(ue,qe),t(qe,Ct),t(ue,Mt),t(_,Dt),t(_,de),t(de,Ne),t(Ne,Ut),t(de,It),h(e,at,c),h(e,me,c),t(me,Ot),h(e,st,c),h(e,x,c),t(x,j),t(j,Ge),oe(U,Ge,null),t(x,Rt),t(x,Ce),t(Ce,Bt),h(e,rt,c),h(e,ve,c),t(ve,Ft),h(e,ot,c),h(e,v,c),t(v,Ht),t(v,I),t(I,Qt),t(v,Wt),t(v,O),t(O,Yt),t(v,zt),t(v,R),t(R,Vt),t(v,Jt),h(e,it,c),h(e,S,c),t(S,Kt),t(S,B),t(B,Xt),t(S,Zt),h(e,nt,c),oe(F,e,c),h(e,lt,c),h(e,$,c),t($,T),t(T,Me),oe(H,Me,null),t($,ea),t($,De),t(De,ta),h(e,ct,c),h(e,d,c),t(d,aa),t(d,Q),t(Q,sa),t(d,ra),t(d,W),t(W,oa),t(d,ia),t(d,Y),t(Y,na),t(d,la),t(d,z),t(z,ca),t(d,ha),t(d,V),t(V,fa),t(d,pa),h(e,ht,c),h(e,ge,c),t(ge,ua),h(e,ft,c),h(e,g,c),t(g,ye),t(ye,_e),t(_e,da),t(_e,J),t(J,ma),t(ye,va),t(g,ga),t(g,q),t(q,Ue),t(Ue,ya),t(q,_a),t(q,K),t(K,wa),t(q,Ea),t(g,ka),t(g,we),t(we,Ie),t(Ie,ba),t(we,xa),t(g,$a),t(g,Ee),t(Ee,Oe),t(Oe,Aa),t(Ee,La),h(e,pt,c),h(e,A,c),t(A,N),t(N,Re),oe(X,Re,null),t(A,Pa),t(A,Be),t(Be,ja),h(e,ut,c),h(e,w,c),t(w,Sa),t(w,Z),t(Z,Ta),t(w,qa),t(w,ee),t(ee,Na),t(w,Ga),h(e,dt,c),h(e,ke,c),t(ke,Ca),h(e,mt,c),h(e,u,c),t(u,Ma),t(u,te),t(te,Da),t(u,Ua),t(u,Fe),t(Fe,Ia),t(u,Oa),t(u,He),t(He,Ra),t(u,Ba),t(u,Qe),t(Qe,Fa),t(u,Ha),t(u,We),t(We,Qa),t(u,Wa),t(u,Ye),t(Ye,Ya),t(u,za),h(e,vt,c),oe(ae,e,c),h(e,gt,c),h(e,be,c),t(be,Va),yt=!0},p:rr,i(e){yt||(ie(M.$$.fragment,e),ie(D.$$.fragment,e),ie(U.$$.fragment,e),ie(F.$$.fragment,e),ie(H.$$.fragment,e),ie(X.$$.fragment,e),ie(ae.$$.fragment,e),yt=!0)},o(e){ne(M.$$.fragment,e),ne(D.$$.fragment,e),ne(U.$$.fragment,e),ne(F.$$.fragment,e),ne(H.$$.fragment,e),ne(X.$$.fragment,e),ne(ae.$$.fragment,e),yt=!1},d(e){a(E),e&&a(Je),e&&a(k),le(M),e&&a(Ke),e&&a(ce),e&&a(Xe),e&&a(he),e&&a(Ze),e&&a(b),le(D),e&&a(et),e&&a(fe),e&&a(tt),e&&a(_),e&&a(at),e&&a(me),e&&a(st),e&&a(x),le(U),e&&a(rt),e&&a(ve),e&&a(ot),e&&a(v),e&&a(it),e&&a(S),e&&a(nt),le(F,e),e&&a(lt),e&&a($),le(H),e&&a(ct),e&&a(d),e&&a(ht),e&&a(ge),e&&a(ft),e&&a(g),e&&a(pt),e&&a(A),le(X),e&&a(ut),e&&a(w),e&&a(dt),e&&a(ke),e&&a(mt),e&&a(u),e&&a(vt),le(ae,e),e&&a(gt),e&&a(be)}}}const nr={local:"choosing-a-metric-for-your-task",sections:[{local:"categories-of-metrics",sections:[{local:"generic-metrics",title:"Generic metrics"},{local:"taskspecific-metrics",title:"Task-specific metrics"},{local:"datasetspecific-metrics",title:"Dataset-specific metrics"}],title:"Categories of metrics"}],title:"Choosing a metric for your task"};function lr(ss){return or(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class pr extends er{constructor(E){super();tr(this,E,lr,ir,ar,{})}}export{pr as default,nr as metadata};
