import{S as wo,i as Eo,s as Do,e as r,k as i,w as h,t as l,M as ko,c as o,d as a,m as c,a as s,x as m,h as d,b as n,F as t,g as f,y as u,L as Mo,q as v,o as g,B as _,v as xo}from"../../chunks/vendor-e830fc9c.js";import{D as se}from"../../chunks/Docstring-785cfc11.js";import{I as E}from"../../chunks/IconCopyLink-af4c5c5b.js";function No(Er){let M,vt,x,V,Ie,ne,aa,Pe,ra,gt,N,U,Se,ie,oa,Oe,sa,_t,A,J,Ce,le,na,Fe,ia,bt,j,la,Le,ca,da,$t,I,R,Te,ce,pa,He,fa,yt,q,ha,Ve,ma,ua,wt,P,W,Ue,de,va,Je,ga,Et,z,_a,je,ba,$a,Dt,S,B,Re,pe,ya,qe,wa,kt,K,Ea,We,Da,ka,Mt,O,G,ze,fe,Ma,Be,xa,xt,C,Q,Ke,he,Na,Ge,Aa,Nt,b,me,Ia,Qe,Pa,Sa,Me,Xe,Oa,Ca,Fa,Ye,La,Ta,X,ue,Ha,ve,Va,Ze,Ua,Ja,ja,Y,ge,Ra,F,qa,et,Wa,za,tt,Ba,Ka,At,L,Z,at,_e,Ga,rt,Qa,It,D,Xa,ot,Ya,Za,st,er,tr,Pt,$,be,ar,nt,rr,or,ee,$e,sr,it,nr,ir,te,ye,lr,lt,cr,dr,k,we,pr,ct,fr,hr,dt,mr,ur,ae,Ee,vr,pt,gr,St,T,re,ft,De,_r,ht,br,Ot,H,oe,mt,ke,$r,ut,yr,Ct;return ne=new E({}),ie=new E({}),le=new E({}),ce=new E({}),de=new E({}),pe=new E({}),fe=new E({}),he=new E({}),me=new se({props:{name:"class evaluate.MetricInfo",anchor:"evaluate.MetricInfo",parameters:[{name:"description",val:": str"},{name:"citation",val:": str"},{name:"features",val:": typing.Union[datasets.features.features.Features, typing.List[datasets.features.features.Features]]"},{name:"inputs_description",val:": str = <factory>"},{name:"homepage",val:": str = <factory>"},{name:"license",val:": str = <factory>"},{name:"codebase_urls",val:": typing.List[str] = <factory>"},{name:"reference_urls",val:": typing.List[str] = <factory>"},{name:"streamable",val:": bool = False"},{name:"format",val:": typing.Optional[str] = None"},{name:"metric_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"experiment_id",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/evaluate/blob/vr_41/src/evaluate/info.py#L35"}}),ue=new se({props:{name:"from_directory",anchor:"evaluate.MetricInfo.from_directory",parameters:[{name:"metric_info_dir",val:""}],source:"https://github.com/huggingface/evaluate/blob/vr_41/src/evaluate/info.py#L80"}}),ge=new se({props:{name:"write_to_directory",anchor:"evaluate.MetricInfo.write_to_directory",parameters:[{name:"metric_info_dir",val:""}],source:"https://github.com/huggingface/evaluate/blob/vr_41/src/evaluate/info.py#L70"}}),_e=new E({}),be=new se({props:{name:"class evaluate.Metric",anchor:"evaluate.Metric",parameters:[{name:"config_name",val:": typing.Optional[str] = None"},{name:"keep_in_memory",val:": bool = False"},{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"num_process",val:": int = 1"},{name:"process_id",val:": int = 0"},{name:"seed",val:": typing.Optional[int] = None"},{name:"experiment_id",val:": typing.Optional[str] = None"},{name:"max_concurrent_cache_files",val:": int = 10000"},{name:"timeout",val:": typing.Union[int, float] = 100"},{name:"**kwargs",val:""}],parametersDescription:[{anchor:"evaluate.Metric.config_name",description:`<strong>config_name</strong> (<code>str</code>) &#x2014; This is used to define a hash specific to a metrics computation script and prevents the metric&#x2019;s data
to be overridden when the metric loading script is modified.`,name:"config_name"},{anchor:"evaluate.Metric.keep_in_memory",description:"<strong>keep_in_memory</strong> (<code>bool</code>) &#x2014; keep all predictions and references in memory. Not possible in distributed settings.",name:"keep_in_memory"},{anchor:"evaluate.Metric.cache_dir",description:`<strong>cache_dir</strong> (<code>str</code>) &#x2014; Path to a directory in which temporary prediction/references data will be stored.
The data directory should be located on a shared file-system in distributed setups.`,name:"cache_dir"},{anchor:"evaluate.Metric.num_process",description:`<strong>num_process</strong> (<code>int</code>) &#x2014; specify the total number of nodes in a distributed settings.
This is useful to compute metrics in distributed setups (in particular non-additive metrics like F1).`,name:"num_process"},{anchor:"evaluate.Metric.process_id",description:`<strong>process_id</strong> (<code>int</code>) &#x2014; specify the id of the current process in a distributed setup (between 0 and num_process-1)
This is useful to compute metrics in distributed setups (in particular non-additive metrics like F1).`,name:"process_id"},{anchor:"evaluate.Metric.seed",description:'<strong>seed</strong> (<code>int</code>, optional) &#x2014; If specified, this will temporarily set numpy&#x2019;s random seed when <a href="/docs/evaluate/pr_41/en/package_reference/main_classes#evaluate.Metric.compute">evaluate.Metric.compute()</a> is run.',name:"seed"},{anchor:"evaluate.Metric.experiment_id",description:`<strong>experiment_id</strong> (<code>str</code>) &#x2014; A specific experiment id. This is used if several distributed evaluations share the same file system.
This is useful to compute metrics in distributed setups (in particular non-additive metrics like F1).`,name:"experiment_id"},{anchor:"evaluate.Metric.max_concurrent_cache_files",description:"<strong>max_concurrent_cache_files</strong> (<code>int</code>) &#x2014; Max number of concurrent metrics cache files (default 10000).",name:"max_concurrent_cache_files"},{anchor:"evaluate.Metric.timeout",description:"<strong>timeout</strong> (<code>Union[int, float]</code>) &#x2014; Timeout in second for distributed setting synchronization.",name:"timeout"}],source:"https://github.com/huggingface/evaluate/blob/vr_41/src/evaluate/metric.py#L140"}}),$e=new se({props:{name:"add",anchor:"evaluate.Metric.add",parameters:[{name:"prediction",val:" = None"},{name:"reference",val:" = None"},{name:"**kwargs",val:""}],parametersDescription:[{anchor:"evaluate.Metric.add.prediction",description:"<strong>prediction</strong> (list/array/tensor, optional) &#x2014; Predictions.",name:"prediction"},{anchor:"evaluate.Metric.add.reference",description:"<strong>reference</strong> (list/array/tensor, optional) &#x2014; References.",name:"reference"}],source:"https://github.com/huggingface/evaluate/blob/vr_41/src/evaluate/metric.py#L502"}}),ye=new se({props:{name:"add_batch",anchor:"evaluate.Metric.add_batch",parameters:[{name:"predictions",val:" = None"},{name:"references",val:" = None"},{name:"**kwargs",val:""}],parametersDescription:[{anchor:"evaluate.Metric.add_batch.predictions",description:"<strong>predictions</strong> (list/array/tensor, optional) &#x2014; Predictions.",name:"predictions"},{anchor:"evaluate.Metric.add_batch.references",description:"<strong>references</strong> (list/array/tensor, optional) &#x2014; References.",name:"references"}],source:"https://github.com/huggingface/evaluate/blob/vr_41/src/evaluate/metric.py#L455"}}),we=new se({props:{name:"compute",anchor:"evaluate.Metric.compute",parameters:[{name:"predictions",val:" = None"},{name:"references",val:" = None"},{name:"**kwargs",val:""}],parametersDescription:[{anchor:"evaluate.Metric.compute.predictions",description:"<strong>predictions</strong> (list/array/tensor, optional) &#x2014; Predictions.",name:"predictions"},{anchor:"evaluate.Metric.compute.references",description:"<strong>references</strong> (list/array/tensor, optional) &#x2014; References.",name:"references"},{anchor:"evaluate.Metric.compute.*kwargs",description:`*<strong>*kwargs</strong> (optional) &#x2014; Keyword arguments that will be forwarded to the metrics <code>_compute</code>
method (see details in the docstring).`,name:"*kwargs"}],source:"https://github.com/huggingface/evaluate/blob/vr_41/src/evaluate/metric.py#L391",returnDescription:`
<p>dict or None</p>
<ul>
<li>Dictionary with the metrics if this metric is run on the main process (<code>process_id == 0</code>).</li>
<li>None if the metric is not run on the main process (<code>process_id != 0</code>).</li>
</ul>
`}}),Ee=new se({props:{name:"download_and_prepare",anchor:"evaluate.Metric.download_and_prepare",parameters:[{name:"download_config",val:": typing.Optional[evaluate.utils.file_utils.DownloadConfig] = None"},{name:"dl_manager",val:": typing.Optional[datasets.utils.download_manager.DownloadManager] = None"}],parametersDescription:[{anchor:"evaluate.Metric.download_and_prepare.download_config",description:"<strong>download_config</strong> (<code>DownloadConfig</code>, optional) &#x2014; Specific download configuration parameters.",name:"download_config"},{anchor:"evaluate.Metric.download_and_prepare.dl_manager",description:"<strong>dl_manager</strong> (<code>DownloadManager</code>, optional) &#x2014; Specific download manager to use.",name:"dl_manager"}],source:"https://github.com/huggingface/evaluate/blob/vr_41/src/evaluate/metric.py#L618"}}),De=new E({}),ke=new E({}),{c(){M=r("meta"),vt=i(),x=r("h1"),V=r("a"),Ie=r("span"),h(ne.$$.fragment),aa=i(),Pe=r("span"),ra=l("Main classes"),gt=i(),N=r("h2"),U=r("a"),Se=r("span"),h(ie.$$.fragment),oa=i(),Oe=r("span"),sa=l("DatasetInfo"),_t=i(),A=r("h2"),J=r("a"),Ce=r("span"),h(le.$$.fragment),na=i(),Fe=r("span"),ia=l("Dataset"),bt=i(),j=r("p"),la=l("The base class "),Le=r("code"),ca=l("Dataset"),da=l(" implements a Dataset backed by an Apache Arrow table."),$t=i(),I=r("h2"),R=r("a"),Te=r("span"),h(ce.$$.fragment),pa=i(),He=r("span"),fa=l("DatasetDict"),yt=i(),q=r("p"),ha=l("Dictionary with split names as keys (\u2018train\u2019, \u2018test\u2019 for example), and "),Ve=r("code"),ma=l("Dataset"),ua=l(` objects as values.
It also has dataset transform methods like map or filter, to process all the splits at once.`),wt=i(),P=r("h2"),W=r("a"),Ue=r("span"),h(de.$$.fragment),va=i(),Je=r("span"),ga=l("IterableDataset"),Et=i(),z=r("p"),_a=l("The base class "),je=r("code"),ba=l("IterableDataset"),$a=l(" implements an iterable Dataset backed by python generators."),Dt=i(),S=r("h2"),B=r("a"),Re=r("span"),h(pe.$$.fragment),ya=i(),qe=r("span"),wa=l("IterableDatasetDict"),kt=i(),K=r("p"),Ea=l("Dictionary with split names as keys (\u2018train\u2019, \u2018test\u2019 for example), and "),We=r("code"),Da=l("IterableDataset"),ka=l(" objects as values."),Mt=i(),O=r("h2"),G=r("a"),ze=r("span"),h(fe.$$.fragment),Ma=i(),Be=r("span"),xa=l("Features"),xt=i(),C=r("h2"),Q=r("a"),Ke=r("span"),h(he.$$.fragment),Na=i(),Ge=r("span"),Aa=l("MetricInfo"),Nt=i(),b=r("div"),h(me.$$.fragment),Ia=i(),Qe=r("p"),Pa=l("Information about a metric."),Sa=i(),Me=r("p"),Xe=r("code"),Oa=l("MetricInfo"),Ca=l(` documents a metric, including its name, version, and features.
See the constructor arguments and properties for a full list.`),Fa=i(),Ye=r("p"),La=l("Note: Not all fields are known on construction and may be updated later."),Ta=i(),X=r("div"),h(ue.$$.fragment),Ha=i(),ve=r("p"),Va=l("Create MetricInfo from the JSON file in "),Ze=r("code"),Ua=l("metric_info_dir"),Ja=l("."),ja=i(),Y=r("div"),h(ge.$$.fragment),Ra=i(),F=r("p"),qa=l("Write "),et=r("code"),Wa=l("MetricInfo"),za=l(" as JSON to "),tt=r("code"),Ba=l("metric_info_dir"),Ka=l(`.
Also save the license separately in LICENCE.`),At=i(),L=r("h2"),Z=r("a"),at=r("span"),h(_e.$$.fragment),Ga=i(),rt=r("span"),Qa=l("Metric"),It=i(),D=r("p"),Xa=l("The base class "),ot=r("code"),Ya=l("Metric"),Za=l(" implements a Metric backed by one or several "),st=r("code"),er=l("Dataset"),tr=l("."),Pt=i(),$=r("div"),h(be.$$.fragment),ar=i(),nt=r("p"),rr=l("A Metric is the base class and common API for all metrics."),or=i(),ee=r("div"),h($e.$$.fragment),sr=i(),it=r("p"),nr=l("Add one prediction and reference for the metric\u2019s stack."),ir=i(),te=r("div"),h(ye.$$.fragment),lr=i(),lt=r("p"),cr=l("Add a batch of predictions and references for the metric\u2019s stack."),dr=i(),k=r("div"),h(we.$$.fragment),pr=i(),ct=r("p"),fr=l("Compute the metrics."),hr=i(),dt=r("p"),mr=l("Usage of positional arguments is not allowed to prevent mistakes."),ur=i(),ae=r("div"),h(Ee.$$.fragment),vr=i(),pt=r("p"),gr=l("Downloads and prepares dataset for reading."),St=i(),T=r("h2"),re=r("a"),ft=r("span"),h(De.$$.fragment),_r=i(),ht=r("span"),br=l("Filesystems"),Ot=i(),H=r("h2"),oe=r("a"),mt=r("span"),h(ke.$$.fragment),$r=i(),ut=r("span"),yr=l("Fingerprint"),this.h()},l(e){const p=ko('[data-svelte="svelte-1phssyn"]',document.head);M=o(p,"META",{name:!0,content:!0}),p.forEach(a),vt=c(e),x=o(e,"H1",{class:!0});var Ft=s(x);V=o(Ft,"A",{id:!0,class:!0,href:!0});var Dr=s(V);Ie=o(Dr,"SPAN",{});var kr=s(Ie);m(ne.$$.fragment,kr),kr.forEach(a),Dr.forEach(a),aa=c(Ft),Pe=o(Ft,"SPAN",{});var Mr=s(Pe);ra=d(Mr,"Main classes"),Mr.forEach(a),Ft.forEach(a),gt=c(e),N=o(e,"H2",{class:!0});var Lt=s(N);U=o(Lt,"A",{id:!0,class:!0,href:!0});var xr=s(U);Se=o(xr,"SPAN",{});var Nr=s(Se);m(ie.$$.fragment,Nr),Nr.forEach(a),xr.forEach(a),oa=c(Lt),Oe=o(Lt,"SPAN",{});var Ar=s(Oe);sa=d(Ar,"DatasetInfo"),Ar.forEach(a),Lt.forEach(a),_t=c(e),A=o(e,"H2",{class:!0});var Tt=s(A);J=o(Tt,"A",{id:!0,class:!0,href:!0});var Ir=s(J);Ce=o(Ir,"SPAN",{});var Pr=s(Ce);m(le.$$.fragment,Pr),Pr.forEach(a),Ir.forEach(a),na=c(Tt),Fe=o(Tt,"SPAN",{});var Sr=s(Fe);ia=d(Sr,"Dataset"),Sr.forEach(a),Tt.forEach(a),bt=c(e),j=o(e,"P",{});var Ht=s(j);la=d(Ht,"The base class "),Le=o(Ht,"CODE",{});var Or=s(Le);ca=d(Or,"Dataset"),Or.forEach(a),da=d(Ht," implements a Dataset backed by an Apache Arrow table."),Ht.forEach(a),$t=c(e),I=o(e,"H2",{class:!0});var Vt=s(I);R=o(Vt,"A",{id:!0,class:!0,href:!0});var Cr=s(R);Te=o(Cr,"SPAN",{});var Fr=s(Te);m(ce.$$.fragment,Fr),Fr.forEach(a),Cr.forEach(a),pa=c(Vt),He=o(Vt,"SPAN",{});var Lr=s(He);fa=d(Lr,"DatasetDict"),Lr.forEach(a),Vt.forEach(a),yt=c(e),q=o(e,"P",{});var Ut=s(q);ha=d(Ut,"Dictionary with split names as keys (\u2018train\u2019, \u2018test\u2019 for example), and "),Ve=o(Ut,"CODE",{});var Tr=s(Ve);ma=d(Tr,"Dataset"),Tr.forEach(a),ua=d(Ut,` objects as values.
It also has dataset transform methods like map or filter, to process all the splits at once.`),Ut.forEach(a),wt=c(e),P=o(e,"H2",{class:!0});var Jt=s(P);W=o(Jt,"A",{id:!0,class:!0,href:!0});var Hr=s(W);Ue=o(Hr,"SPAN",{});var Vr=s(Ue);m(de.$$.fragment,Vr),Vr.forEach(a),Hr.forEach(a),va=c(Jt),Je=o(Jt,"SPAN",{});var Ur=s(Je);ga=d(Ur,"IterableDataset"),Ur.forEach(a),Jt.forEach(a),Et=c(e),z=o(e,"P",{});var jt=s(z);_a=d(jt,"The base class "),je=o(jt,"CODE",{});var Jr=s(je);ba=d(Jr,"IterableDataset"),Jr.forEach(a),$a=d(jt," implements an iterable Dataset backed by python generators."),jt.forEach(a),Dt=c(e),S=o(e,"H2",{class:!0});var Rt=s(S);B=o(Rt,"A",{id:!0,class:!0,href:!0});var jr=s(B);Re=o(jr,"SPAN",{});var Rr=s(Re);m(pe.$$.fragment,Rr),Rr.forEach(a),jr.forEach(a),ya=c(Rt),qe=o(Rt,"SPAN",{});var qr=s(qe);wa=d(qr,"IterableDatasetDict"),qr.forEach(a),Rt.forEach(a),kt=c(e),K=o(e,"P",{});var qt=s(K);Ea=d(qt,"Dictionary with split names as keys (\u2018train\u2019, \u2018test\u2019 for example), and "),We=o(qt,"CODE",{});var Wr=s(We);Da=d(Wr,"IterableDataset"),Wr.forEach(a),ka=d(qt," objects as values."),qt.forEach(a),Mt=c(e),O=o(e,"H2",{class:!0});var Wt=s(O);G=o(Wt,"A",{id:!0,class:!0,href:!0});var zr=s(G);ze=o(zr,"SPAN",{});var Br=s(ze);m(fe.$$.fragment,Br),Br.forEach(a),zr.forEach(a),Ma=c(Wt),Be=o(Wt,"SPAN",{});var Kr=s(Be);xa=d(Kr,"Features"),Kr.forEach(a),Wt.forEach(a),xt=c(e),C=o(e,"H2",{class:!0});var zt=s(C);Q=o(zt,"A",{id:!0,class:!0,href:!0});var Gr=s(Q);Ke=o(Gr,"SPAN",{});var Qr=s(Ke);m(he.$$.fragment,Qr),Qr.forEach(a),Gr.forEach(a),Na=c(zt),Ge=o(zt,"SPAN",{});var Xr=s(Ge);Aa=d(Xr,"MetricInfo"),Xr.forEach(a),zt.forEach(a),Nt=c(e),b=o(e,"DIV",{class:!0});var y=s(b);m(me.$$.fragment,y),Ia=c(y),Qe=o(y,"P",{});var Yr=s(Qe);Pa=d(Yr,"Information about a metric."),Yr.forEach(a),Sa=c(y),Me=o(y,"P",{});var wr=s(Me);Xe=o(wr,"CODE",{});var Zr=s(Xe);Oa=d(Zr,"MetricInfo"),Zr.forEach(a),Ca=d(wr,` documents a metric, including its name, version, and features.
See the constructor arguments and properties for a full list.`),wr.forEach(a),Fa=c(y),Ye=o(y,"P",{});var eo=s(Ye);La=d(eo,"Note: Not all fields are known on construction and may be updated later."),eo.forEach(a),Ta=c(y),X=o(y,"DIV",{class:!0});var Bt=s(X);m(ue.$$.fragment,Bt),Ha=c(Bt),ve=o(Bt,"P",{});var Kt=s(ve);Va=d(Kt,"Create MetricInfo from the JSON file in "),Ze=o(Kt,"CODE",{});var to=s(Ze);Ua=d(to,"metric_info_dir"),to.forEach(a),Ja=d(Kt,"."),Kt.forEach(a),Bt.forEach(a),ja=c(y),Y=o(y,"DIV",{class:!0});var Gt=s(Y);m(ge.$$.fragment,Gt),Ra=c(Gt),F=o(Gt,"P",{});var xe=s(F);qa=d(xe,"Write "),et=o(xe,"CODE",{});var ao=s(et);Wa=d(ao,"MetricInfo"),ao.forEach(a),za=d(xe," as JSON to "),tt=o(xe,"CODE",{});var ro=s(tt);Ba=d(ro,"metric_info_dir"),ro.forEach(a),Ka=d(xe,`.
Also save the license separately in LICENCE.`),xe.forEach(a),Gt.forEach(a),y.forEach(a),At=c(e),L=o(e,"H2",{class:!0});var Qt=s(L);Z=o(Qt,"A",{id:!0,class:!0,href:!0});var oo=s(Z);at=o(oo,"SPAN",{});var so=s(at);m(_e.$$.fragment,so),so.forEach(a),oo.forEach(a),Ga=c(Qt),rt=o(Qt,"SPAN",{});var no=s(rt);Qa=d(no,"Metric"),no.forEach(a),Qt.forEach(a),It=c(e),D=o(e,"P",{});var Ne=s(D);Xa=d(Ne,"The base class "),ot=o(Ne,"CODE",{});var io=s(ot);Ya=d(io,"Metric"),io.forEach(a),Za=d(Ne," implements a Metric backed by one or several "),st=o(Ne,"CODE",{});var lo=s(st);er=d(lo,"Dataset"),lo.forEach(a),tr=d(Ne,"."),Ne.forEach(a),Pt=c(e),$=o(e,"DIV",{class:!0});var w=s($);m(be.$$.fragment,w),ar=c(w),nt=o(w,"P",{});var co=s(nt);rr=d(co,"A Metric is the base class and common API for all metrics."),co.forEach(a),or=c(w),ee=o(w,"DIV",{class:!0});var Xt=s(ee);m($e.$$.fragment,Xt),sr=c(Xt),it=o(Xt,"P",{});var po=s(it);nr=d(po,"Add one prediction and reference for the metric\u2019s stack."),po.forEach(a),Xt.forEach(a),ir=c(w),te=o(w,"DIV",{class:!0});var Yt=s(te);m(ye.$$.fragment,Yt),lr=c(Yt),lt=o(Yt,"P",{});var fo=s(lt);cr=d(fo,"Add a batch of predictions and references for the metric\u2019s stack."),fo.forEach(a),Yt.forEach(a),dr=c(w),k=o(w,"DIV",{class:!0});var Ae=s(k);m(we.$$.fragment,Ae),pr=c(Ae),ct=o(Ae,"P",{});var ho=s(ct);fr=d(ho,"Compute the metrics."),ho.forEach(a),hr=c(Ae),dt=o(Ae,"P",{});var mo=s(dt);mr=d(mo,"Usage of positional arguments is not allowed to prevent mistakes."),mo.forEach(a),Ae.forEach(a),ur=c(w),ae=o(w,"DIV",{class:!0});var Zt=s(ae);m(Ee.$$.fragment,Zt),vr=c(Zt),pt=o(Zt,"P",{});var uo=s(pt);gr=d(uo,"Downloads and prepares dataset for reading."),uo.forEach(a),Zt.forEach(a),w.forEach(a),St=c(e),T=o(e,"H2",{class:!0});var ea=s(T);re=o(ea,"A",{id:!0,class:!0,href:!0});var vo=s(re);ft=o(vo,"SPAN",{});var go=s(ft);m(De.$$.fragment,go),go.forEach(a),vo.forEach(a),_r=c(ea),ht=o(ea,"SPAN",{});var _o=s(ht);br=d(_o,"Filesystems"),_o.forEach(a),ea.forEach(a),Ot=c(e),H=o(e,"H2",{class:!0});var ta=s(H);oe=o(ta,"A",{id:!0,class:!0,href:!0});var bo=s(oe);mt=o(bo,"SPAN",{});var $o=s(mt);m(ke.$$.fragment,$o),$o.forEach(a),bo.forEach(a),$r=c(ta),ut=o(ta,"SPAN",{});var yo=s(ut);yr=d(yo,"Fingerprint"),yo.forEach(a),ta.forEach(a),this.h()},h(){n(M,"name","hf:doc:metadata"),n(M,"content",JSON.stringify(Ao)),n(V,"id","main-classes"),n(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(V,"href","#main-classes"),n(x,"class","relative group"),n(U,"id","datasetinfo"),n(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(U,"href","#datasetinfo"),n(N,"class","relative group"),n(J,"id","dataset"),n(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(J,"href","#dataset"),n(A,"class","relative group"),n(R,"id","datasetdict"),n(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(R,"href","#datasetdict"),n(I,"class","relative group"),n(W,"id","iterabledataset"),n(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(W,"href","#iterabledataset"),n(P,"class","relative group"),n(B,"id","iterabledatasetdict"),n(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(B,"href","#iterabledatasetdict"),n(S,"class","relative group"),n(G,"id","features"),n(G,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(G,"href","#features"),n(O,"class","relative group"),n(Q,"id","evaluate.MetricInfo"),n(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(Q,"href","#evaluate.MetricInfo"),n(C,"class","relative group"),n(X,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),n(Y,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),n(b,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),n(Z,"id","evaluate.Metric"),n(Z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(Z,"href","#evaluate.Metric"),n(L,"class","relative group"),n(ee,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),n(te,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),n(k,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),n(ae,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),n($,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),n(re,"id","filesystems"),n(re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(re,"href","#filesystems"),n(T,"class","relative group"),n(oe,"id","fingerprint"),n(oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(oe,"href","#fingerprint"),n(H,"class","relative group")},m(e,p){t(document.head,M),f(e,vt,p),f(e,x,p),t(x,V),t(V,Ie),u(ne,Ie,null),t(x,aa),t(x,Pe),t(Pe,ra),f(e,gt,p),f(e,N,p),t(N,U),t(U,Se),u(ie,Se,null),t(N,oa),t(N,Oe),t(Oe,sa),f(e,_t,p),f(e,A,p),t(A,J),t(J,Ce),u(le,Ce,null),t(A,na),t(A,Fe),t(Fe,ia),f(e,bt,p),f(e,j,p),t(j,la),t(j,Le),t(Le,ca),t(j,da),f(e,$t,p),f(e,I,p),t(I,R),t(R,Te),u(ce,Te,null),t(I,pa),t(I,He),t(He,fa),f(e,yt,p),f(e,q,p),t(q,ha),t(q,Ve),t(Ve,ma),t(q,ua),f(e,wt,p),f(e,P,p),t(P,W),t(W,Ue),u(de,Ue,null),t(P,va),t(P,Je),t(Je,ga),f(e,Et,p),f(e,z,p),t(z,_a),t(z,je),t(je,ba),t(z,$a),f(e,Dt,p),f(e,S,p),t(S,B),t(B,Re),u(pe,Re,null),t(S,ya),t(S,qe),t(qe,wa),f(e,kt,p),f(e,K,p),t(K,Ea),t(K,We),t(We,Da),t(K,ka),f(e,Mt,p),f(e,O,p),t(O,G),t(G,ze),u(fe,ze,null),t(O,Ma),t(O,Be),t(Be,xa),f(e,xt,p),f(e,C,p),t(C,Q),t(Q,Ke),u(he,Ke,null),t(C,Na),t(C,Ge),t(Ge,Aa),f(e,Nt,p),f(e,b,p),u(me,b,null),t(b,Ia),t(b,Qe),t(Qe,Pa),t(b,Sa),t(b,Me),t(Me,Xe),t(Xe,Oa),t(Me,Ca),t(b,Fa),t(b,Ye),t(Ye,La),t(b,Ta),t(b,X),u(ue,X,null),t(X,Ha),t(X,ve),t(ve,Va),t(ve,Ze),t(Ze,Ua),t(ve,Ja),t(b,ja),t(b,Y),u(ge,Y,null),t(Y,Ra),t(Y,F),t(F,qa),t(F,et),t(et,Wa),t(F,za),t(F,tt),t(tt,Ba),t(F,Ka),f(e,At,p),f(e,L,p),t(L,Z),t(Z,at),u(_e,at,null),t(L,Ga),t(L,rt),t(rt,Qa),f(e,It,p),f(e,D,p),t(D,Xa),t(D,ot),t(ot,Ya),t(D,Za),t(D,st),t(st,er),t(D,tr),f(e,Pt,p),f(e,$,p),u(be,$,null),t($,ar),t($,nt),t(nt,rr),t($,or),t($,ee),u($e,ee,null),t(ee,sr),t(ee,it),t(it,nr),t($,ir),t($,te),u(ye,te,null),t(te,lr),t(te,lt),t(lt,cr),t($,dr),t($,k),u(we,k,null),t(k,pr),t(k,ct),t(ct,fr),t(k,hr),t(k,dt),t(dt,mr),t($,ur),t($,ae),u(Ee,ae,null),t(ae,vr),t(ae,pt),t(pt,gr),f(e,St,p),f(e,T,p),t(T,re),t(re,ft),u(De,ft,null),t(T,_r),t(T,ht),t(ht,br),f(e,Ot,p),f(e,H,p),t(H,oe),t(oe,mt),u(ke,mt,null),t(H,$r),t(H,ut),t(ut,yr),Ct=!0},p:Mo,i(e){Ct||(v(ne.$$.fragment,e),v(ie.$$.fragment,e),v(le.$$.fragment,e),v(ce.$$.fragment,e),v(de.$$.fragment,e),v(pe.$$.fragment,e),v(fe.$$.fragment,e),v(he.$$.fragment,e),v(me.$$.fragment,e),v(ue.$$.fragment,e),v(ge.$$.fragment,e),v(_e.$$.fragment,e),v(be.$$.fragment,e),v($e.$$.fragment,e),v(ye.$$.fragment,e),v(we.$$.fragment,e),v(Ee.$$.fragment,e),v(De.$$.fragment,e),v(ke.$$.fragment,e),Ct=!0)},o(e){g(ne.$$.fragment,e),g(ie.$$.fragment,e),g(le.$$.fragment,e),g(ce.$$.fragment,e),g(de.$$.fragment,e),g(pe.$$.fragment,e),g(fe.$$.fragment,e),g(he.$$.fragment,e),g(me.$$.fragment,e),g(ue.$$.fragment,e),g(ge.$$.fragment,e),g(_e.$$.fragment,e),g(be.$$.fragment,e),g($e.$$.fragment,e),g(ye.$$.fragment,e),g(we.$$.fragment,e),g(Ee.$$.fragment,e),g(De.$$.fragment,e),g(ke.$$.fragment,e),Ct=!1},d(e){a(M),e&&a(vt),e&&a(x),_(ne),e&&a(gt),e&&a(N),_(ie),e&&a(_t),e&&a(A),_(le),e&&a(bt),e&&a(j),e&&a($t),e&&a(I),_(ce),e&&a(yt),e&&a(q),e&&a(wt),e&&a(P),_(de),e&&a(Et),e&&a(z),e&&a(Dt),e&&a(S),_(pe),e&&a(kt),e&&a(K),e&&a(Mt),e&&a(O),_(fe),e&&a(xt),e&&a(C),_(he),e&&a(Nt),e&&a(b),_(me),_(ue),_(ge),e&&a(At),e&&a(L),_(_e),e&&a(It),e&&a(D),e&&a(Pt),e&&a($),_(be),_($e),_(ye),_(we),_(Ee),e&&a(St),e&&a(T),_(De),e&&a(Ot),e&&a(H),_(ke)}}}const Ao={local:"main-classes",sections:[{local:"datasetinfo",title:"DatasetInfo"},{local:"dataset",title:"Dataset"},{local:"datasetdict",title:"DatasetDict"},{local:"iterabledataset",title:"IterableDataset"},{local:"iterabledatasetdict",title:"IterableDatasetDict"},{local:"features",title:"Features"},{local:"evaluate.MetricInfo",title:"MetricInfo"},{local:"evaluate.Metric",title:"Metric"},{local:"filesystems",title:"Filesystems"},{local:"fingerprint",title:"Fingerprint"}],title:"Main classes"};function Io(Er){return xo(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Co extends wo{constructor(M){super();Eo(this,M,Io,No,Do,{})}}export{Co as default,Ao as metadata};
