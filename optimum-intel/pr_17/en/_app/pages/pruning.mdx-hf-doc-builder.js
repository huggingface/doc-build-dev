import{S as ue,i as pe,s as ce,e as r,k as w,w as z,t as $,M as me,c as a,d as t,m as I,a as s,x as F,h as P,b as o,G as n,g as f,y as K,L as he,q as Q,o as W,B as X,v as fe}from"../chunks/vendor-hf-doc-builder.js";import{D as de}from"../chunks/Docstring-hf-doc-builder.js";import{I as ie}from"../chunks/IconCopyLink-hf-doc-builder.js";function ge(Y){let u,C,p,m,E,d,H,k,U,S,i,j,A,B,G,g,J,R,O,c,h,x,v,T,N,V,D,_,y,L;return d=new ie({}),v=new ie({}),y=new de({props:{name:"class optimum.IncPruner",anchor:"optimum.IncPruner",parameters:[{name:"config_path_or_obj",val:": typing.Union[str, optimum.intel.neural_compressor.configuration.IncPruningConfig]"},{name:"eval_func",val:": typing.Optional[typing.Callable] = None"},{name:"train_func",val:": typing.Optional[typing.Callable] = None"}],source:"https://github.com/huggingface/optimum.intel/blob/vr_17/src/optimum/intel/neural_compressor/pruning.py#L35"}}),{c(){u=r("meta"),C=w(),p=r("h1"),m=r("a"),E=r("span"),z(d.$$.fragment),H=w(),k=r("span"),U=$("Pruning"),S=w(),i=r("p"),j=$("\u{1F917} Optimum provides an "),A=r("code"),B=$("neural_compressor"),G=$(" package that enables you to apply magnitude pruning on many model hosted on the \u{1F917} hub using the "),g=r("a"),J=$("Intel Neural Compressor"),R=$(" pruning API."),O=w(),c=r("h2"),h=r("a"),x=r("span"),z(v.$$.fragment),T=w(),N=r("span"),V=$("IncPruner"),D=w(),_=r("div"),z(y.$$.fragment),this.h()},l(e){const l=me('[data-svelte="svelte-1phssyn"]',document.head);u=a(l,"META",{name:!0,content:!0}),l.forEach(t),C=I(e),p=a(e,"H1",{class:!0});var q=s(p);m=a(q,"A",{id:!0,class:!0,href:!0});var Z=s(m);E=a(Z,"SPAN",{});var ee=s(E);F(d.$$.fragment,ee),ee.forEach(t),Z.forEach(t),H=I(q),k=a(q,"SPAN",{});var te=s(k);U=P(te,"Pruning"),te.forEach(t),q.forEach(t),S=I(e),i=a(e,"P",{});var b=s(i);j=P(b,"\u{1F917} Optimum provides an "),A=a(b,"CODE",{});var ne=s(A);B=P(ne,"neural_compressor"),ne.forEach(t),G=P(b," package that enables you to apply magnitude pruning on many model hosted on the \u{1F917} hub using the "),g=a(b,"A",{href:!0,rel:!0});var re=s(g);J=P(re,"Intel Neural Compressor"),re.forEach(t),R=P(b," pruning API."),b.forEach(t),O=I(e),c=a(e,"H2",{class:!0});var M=s(c);h=a(M,"A",{id:!0,class:!0,href:!0});var ae=s(h);x=a(ae,"SPAN",{});var oe=s(x);F(v.$$.fragment,oe),oe.forEach(t),ae.forEach(t),T=I(M),N=a(M,"SPAN",{});var se=s(N);V=P(se,"IncPruner"),se.forEach(t),M.forEach(t),D=I(e),_=a(e,"DIV",{class:!0});var le=s(_);F(y.$$.fragment,le),le.forEach(t),this.h()},h(){o(u,"name","hf:doc:metadata"),o(u,"content",JSON.stringify(ve)),o(m,"id","pruning"),o(m,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(m,"href","#pruning"),o(p,"class","relative group"),o(g,"href","https://github.com/intel/neural-compressor"),o(g,"rel","nofollow"),o(h,"id","optimum.IncPruner"),o(h,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(h,"href","#optimum.IncPruner"),o(c,"class","relative group"),o(_,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,l){n(document.head,u),f(e,C,l),f(e,p,l),n(p,m),n(m,E),K(d,E,null),n(p,H),n(p,k),n(k,U),f(e,S,l),f(e,i,l),n(i,j),n(i,A),n(A,B),n(i,G),n(i,g),n(g,J),n(i,R),f(e,O,l),f(e,c,l),n(c,h),n(h,x),K(v,x,null),n(c,T),n(c,N),n(N,V),f(e,D,l),f(e,_,l),K(y,_,null),L=!0},p:he,i(e){L||(Q(d.$$.fragment,e),Q(v.$$.fragment,e),Q(y.$$.fragment,e),L=!0)},o(e){W(d.$$.fragment,e),W(v.$$.fragment,e),W(y.$$.fragment,e),L=!1},d(e){t(u),e&&t(C),e&&t(p),X(d),e&&t(S),e&&t(i),e&&t(O),e&&t(c),X(v),e&&t(D),e&&t(_),X(y)}}}const ve={local:"pruning",sections:[{local:"optimum.IncPruner",title:"IncPruner"}],title:"Pruning"};function _e(Y){return fe(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class be extends ue{constructor(u){super();pe(this,u,_e,ge,ce,{})}}export{be as default,ve as metadata};
