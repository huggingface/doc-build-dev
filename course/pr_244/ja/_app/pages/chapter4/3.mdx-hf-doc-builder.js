import{S as $h,i as kh,s as wh,e as s,k as u,w as E,t as l,l as bh,M as Eh,c as a,d as t,m as d,x as j,a as f,h as i,b as _,N as Ge,G as o,g as n,y as P,o as b,p as nt,q as y,B as z,v as jh,n as ft}from"../../chunks/vendor-hf-doc-builder.js";import{T as yh,D as vh}from"../../chunks/DocNotebookDropdown-hf-doc-builder.js";import{Y as Tu}from"../../chunks/Youtube-hf-doc-builder.js";import{I as sl}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as q}from"../../chunks/CodeBlock-hf-doc-builder.js";import{F as Ph}from"../../chunks/FrameworkSwitchCourse-hf-doc-builder.js";function zh(O){let p,m;return p=new vh({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Google Colab",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/master/course/chapter4/section3_tf.ipynb"},{label:"Aws Studio",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/master/course/chapter4/section3_tf.ipynb"}]}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Ah(O){let p,m;return p=new vh({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Google Colab",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/master/course/chapter4/section3_pt.ipynb"},{label:"Aws Studio",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/master/course/chapter4/section3_pt.ipynb"}]}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Th(O){let p,m;return p=new Tu({props:{id:"pUh5cGmNV8Y"}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Dh(O){let p,m;return p=new Tu({props:{id:"Zh0FfmVrKX0"}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Oh(O){let p,m,c,g,$,I,F,w,T,C,D,h,k,v,A,H,R,G,L,Q,J,U,B,te,ge,ue,X,V,oe,ce,be,de;return C=new q({props:{code:`from transformers import PushToHubCallback

callback = PushToHubCallback(
    "bert-finetuned-mrpc", save_strategy="epoch", tokenizer=tokenizer
)`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> PushToHubCallback

callback = PushToHubCallback(
    <span class="hljs-string">&quot;bert-finetuned-mrpc&quot;</span>, save_strategy=<span class="hljs-string">&quot;epoch&quot;</span>, tokenizer=tokenizer
)`}}),{c(){p=s("p"),m=l("\u30E2\u30C7\u30EB\u306E\u5B66\u7FD2\u306BKeras\u3092\u4F7F\u7528\u3057\u3066\u3044\u308B\u5834\u5408\u3001\u6700\u3082\u7C21\u5358\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u65B9\u6CD5\u306F"),c=s("code"),g=l("PushToHubCallback"),$=l("\u3092"),I=s("code"),F=l("model.fit()"),w=l("\u306B\u6E21\u3059\u3053\u3068\u3067\u3059\uFF1A"),T=u(),E(C.$$.fragment),D=u(),h=s("p"),k=l("\u305D\u3057\u3066\u3001"),v=s("code"),A=l("model.fit()"),H=l("\u306E\u547C\u3073\u51FA\u3057\u306B"),R=s("code"),G=l("callbacks=[callback]"),L=l("\u3092\u8FFD\u52A0\u3057\u3066\u304F\u3060\u3055\u3044\u3002\u30E2\u30C7\u30EB\u3092\u4FDD\u5B58\u3059\u308B\u5EA6\u306B\uFF08\u3053\u3053\u3067\u306F\u30A8\u30DD\u30C3\u30AF\u6BCE\u306B\uFF09\u30B3\u30FC\u30EB\u30D0\u30C3\u30AF\u306F\u30E2\u30C7\u30EB\u3092\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u307E\u3059\u3002\u3053\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306F\u51FA\u529B\u30C7\u30A3\u30EC\u30AF\u30C8\u30EA\u3068\u540C\u3058\u540D\u524D\u306B\u306A\u308A\u307E\u3059\u304C\uFF08\u3053\u306E\u4F8B\u3067\u306F"),Q=s("code"),J=l("bert-finetuned-mrpc"),U=l("\uFF09\u3001"),B=s("code"),te=l('hub_model_id = "a_different_name"'),ge=l("\u3068\u3059\u308B\u3053\u3068\u3067\u5225\u306E\u540D\u524D\u3092\u6307\u5B9A\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),ue=u(),X=s("p"),V=l("\u3042\u306A\u305F\u304C\u6240\u5C5E\u3059\u308B\u7D44\u7E54\u306B\u30E2\u30C7\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u306B\u306F\u3001"),oe=s("code"),ce=l('hub_model_id = "my_organization/my_repo_name"'),be=l("\u3068\u3059\u308C\u3070\u3088\u3044\u3067\u3059\u3002")},l(x){p=a(x,"P",{});var S=f(p);m=i(S,"\u30E2\u30C7\u30EB\u306E\u5B66\u7FD2\u306BKeras\u3092\u4F7F\u7528\u3057\u3066\u3044\u308B\u5834\u5408\u3001\u6700\u3082\u7C21\u5358\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u65B9\u6CD5\u306F"),c=a(S,"CODE",{});var ye=f(c);g=i(ye,"PushToHubCallback"),ye.forEach(t),$=i(S,"\u3092"),I=a(S,"CODE",{});var le=f(I);F=i(le,"model.fit()"),le.forEach(t),w=i(S,"\u306B\u6E21\u3059\u3053\u3068\u3067\u3059\uFF1A"),S.forEach(t),T=d(x),j(C.$$.fragment,x),D=d(x),h=a(x,"P",{});var K=f(h);k=i(K,"\u305D\u3057\u3066\u3001"),v=a(K,"CODE",{});var ve=f(v);A=i(ve,"model.fit()"),ve.forEach(t),H=i(K,"\u306E\u547C\u3073\u51FA\u3057\u306B"),R=a(K,"CODE",{});var Z=f(R);G=i(Z,"callbacks=[callback]"),Z.forEach(t),L=i(K,"\u3092\u8FFD\u52A0\u3057\u3066\u304F\u3060\u3055\u3044\u3002\u30E2\u30C7\u30EB\u3092\u4FDD\u5B58\u3059\u308B\u5EA6\u306B\uFF08\u3053\u3053\u3067\u306F\u30A8\u30DD\u30C3\u30AF\u6BCE\u306B\uFF09\u30B3\u30FC\u30EB\u30D0\u30C3\u30AF\u306F\u30E2\u30C7\u30EB\u3092\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u307E\u3059\u3002\u3053\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306F\u51FA\u529B\u30C7\u30A3\u30EC\u30AF\u30C8\u30EA\u3068\u540C\u3058\u540D\u524D\u306B\u306A\u308A\u307E\u3059\u304C\uFF08\u3053\u306E\u4F8B\u3067\u306F"),Q=a(K,"CODE",{});var Y=f(Q);J=i(Y,"bert-finetuned-mrpc"),Y.forEach(t),U=i(K,"\uFF09\u3001"),B=a(K,"CODE",{});var ee=f(B);te=i(ee,'hub_model_id = "a_different_name"'),ee.forEach(t),ge=i(K,"\u3068\u3059\u308B\u3053\u3068\u3067\u5225\u306E\u540D\u524D\u3092\u6307\u5B9A\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),K.forEach(t),ue=d(x),X=a(x,"P",{});var ie=f(X);V=i(ie,"\u3042\u306A\u305F\u304C\u6240\u5C5E\u3059\u308B\u7D44\u7E54\u306B\u30E2\u30C7\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u306B\u306F\u3001"),oe=a(ie,"CODE",{});var $e=f(oe);ce=i($e,'hub_model_id = "my_organization/my_repo_name"'),$e.forEach(t),be=i(ie,"\u3068\u3059\u308C\u3070\u3088\u3044\u3067\u3059\u3002"),ie.forEach(t)},m(x,S){n(x,p,S),o(p,m),o(p,c),o(c,g),o(p,$),o(p,I),o(I,F),o(p,w),n(x,T,S),P(C,x,S),n(x,D,S),n(x,h,S),o(h,k),o(h,v),o(v,A),o(h,H),o(h,R),o(R,G),o(h,L),o(h,Q),o(Q,J),o(h,U),o(h,B),o(B,te),o(h,ge),n(x,ue,S),n(x,X,S),o(X,V),o(X,oe),o(oe,ce),o(X,be),de=!0},i(x){de||(y(C.$$.fragment,x),de=!0)},o(x){b(C.$$.fragment,x),de=!1},d(x){x&&t(p),x&&t(T),z(C,x),x&&t(D),x&&t(h),x&&t(ue),x&&t(X)}}}function Ch(O){let p,m,c,g,$,I,F,w,T,C,D,h,k,v,A,H,R,G,L,Q,J,U,B,te,ge,ue,X,V,oe,ce,be,de,x,S,ye,le,K,ve,Z,Y,ee,ie,$e;return h=new q({props:{code:`from transformers import TrainingArguments

training_args = TrainingArguments(
    "bert-finetuned-mrpc", save_strategy="epoch", push_to_hub=True
)`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TrainingArguments

training_args = TrainingArguments(
    <span class="hljs-string">&quot;bert-finetuned-mrpc&quot;</span>, save_strategy=<span class="hljs-string">&quot;epoch&quot;</span>, push_to_hub=<span class="hljs-literal">True</span>
)`}}),{c(){p=s("p"),m=s("code"),c=l("Trainer"),g=l("API \u3092\u4F7F\u3063\u3066\u30E2\u30C7\u30EB\u3092\u5B66\u7FD2\u3055\u305B\u305F\u306E\u3067\u3042\u308C\u3070\u3001 "),$=s("code"),I=l("TrainingArguments"),F=l("\u306B\u304A\u3044\u3066"),w=s("code"),T=l("push_to_hub=True"),C=l("\u3068\u8A2D\u5B9A\u3059\u308B\u3053\u3068\u3067\u3001\u6700\u3082\u7C21\u5358\u306BHub\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\uFF1A"),D=u(),E(h.$$.fragment),k=u(),v=s("p"),A=s("code"),H=l("trainer.train()"),R=l("\u3092\u5B9F\u884C\u3059\u308B\u3068\u3001\u30E2\u30C7\u30EB\u3092\u4FDD\u5B58\u3059\u308B\u5EA6\u306B\uFF08\u3053\u3053\u3067\u306F\u30A8\u30DD\u30C3\u30AF\u6BCE\u306B\uFF09"),G=s("code"),L=l("Trainer"),Q=l("\u306F\u30E2\u30C7\u30EB\u3092\u30EC\u30DD\u30B8\u30C8\u30EA\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u307E\u3059\u3002\u3053\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306F\u51FA\u529B\u30C7\u30A3\u30EC\u30AF\u30C8\u30EA\u3068\u540C\u3058\u540D\u524D\u306B\u306A\u308A\u307E\u3059\u304C\uFF08\u3053\u306E\u4F8B\u3067\u306F"),J=s("code"),U=l("bert-finetuned-mrpc"),B=l("\uFF09\u3001"),te=s("code"),ge=l('hub_model_id = "a_different_name"'),ue=l("\u3068\u3059\u308B\u3053\u3068\u3067\u5225\u306E\u540D\u524D\u3092\u6307\u5B9A\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),X=u(),V=s("p"),oe=l("\u3042\u306A\u305F\u304C\u6240\u5C5E\u3059\u308B\u7D44\u7E54\u306B\u30E2\u30C7\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u306B\u306F\u3001"),ce=s("code"),be=l('hub_model_id = "my_organization/my_repo_name"'),de=l("\u3068\u3059\u308C\u3070\u3088\u3044\u3067\u3059\u3002"),x=u(),S=s("p"),ye=l("\u5B66\u7FD2\u304C\u7D42\u4E86\u3057\u305F\u3089\u3001\u6700\u5F8C\u306B "),le=s("code"),K=l("trainer.push_to_hub()"),ve=l(" \u3092\u5B9F\u884C\u3057\u3066\u3001\u30E2\u30C7\u30EB\u306E\u6700\u7D42\u7248\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u3066\u304F\u3060\u3055\u3044\u3002\u3053\u306E\u969B\u3001\u4F7F\u7528\u3057\u305F\u30CF\u30A4\u30D1\u30FC\u30D1\u30E9\u30E1\u30FC\u30BF\u3068\u8A55\u4FA1\u7D50\u679C\u306A\u3069\u3001\u5168\u3066\u306E\u95A2\u9023\u3059\u308B\u30E1\u30BF\u30C7\u30FC\u30BF\u3092\u542B\u3080\u30E2\u30C7\u30EB\u30AB\u30FC\u30C9\u304C\u751F\u6210\u3055\u308C\u307E\u3059\uFF01\u4EE5\u4E0B\u306B\u3001\u30E2\u30C7\u30EB\u30AB\u30FC\u30C9\u306B\u542B\u307E\u308C\u308B\u5185\u5BB9\u306E\u4F8B\u3092\u793A\u3057\u307E\u3059\u3002"),Z=u(),Y=s("div"),ee=s("img"),this.h()},l(M){p=a(M,"P",{});var N=f(p);m=a(N,"CODE",{});var al=f(m);c=i(al,"Trainer"),al.forEach(t),g=i(N,"API \u3092\u4F7F\u3063\u3066\u30E2\u30C7\u30EB\u3092\u5B66\u7FD2\u3055\u305B\u305F\u306E\u3067\u3042\u308C\u3070\u3001 "),$=a(N,"CODE",{});var nl=f($);I=i(nl,"TrainingArguments"),nl.forEach(t),F=i(N,"\u306B\u304A\u3044\u3066"),w=a(N,"CODE",{});var Wt=f(w);T=i(Wt,"push_to_hub=True"),Wt.forEach(t),C=i(N,"\u3068\u8A2D\u5B9A\u3059\u308B\u3053\u3068\u3067\u3001\u6700\u3082\u7C21\u5358\u306BHub\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\uFF1A"),N.forEach(t),D=d(M),j(h.$$.fragment,M),k=d(M),v=a(M,"P",{});var W=f(v);A=a(W,"CODE",{});var re=f(A);H=i(re,"trainer.train()"),re.forEach(t),R=i(W,"\u3092\u5B9F\u884C\u3059\u308B\u3068\u3001\u30E2\u30C7\u30EB\u3092\u4FDD\u5B58\u3059\u308B\u5EA6\u306B\uFF08\u3053\u3053\u3067\u306F\u30A8\u30DD\u30C3\u30AF\u6BCE\u306B\uFF09"),G=a(W,"CODE",{});var Qe=f(G);L=i(Qe,"Trainer"),Qe.forEach(t),Q=i(W,"\u306F\u30E2\u30C7\u30EB\u3092\u30EC\u30DD\u30B8\u30C8\u30EA\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u307E\u3059\u3002\u3053\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306F\u51FA\u529B\u30C7\u30A3\u30EC\u30AF\u30C8\u30EA\u3068\u540C\u3058\u540D\u524D\u306B\u306A\u308A\u307E\u3059\u304C\uFF08\u3053\u306E\u4F8B\u3067\u306F"),J=a(W,"CODE",{});var ke=f(J);U=i(ke,"bert-finetuned-mrpc"),ke.forEach(t),B=i(W,"\uFF09\u3001"),te=a(W,"CODE",{});var fl=f(te);ge=i(fl,'hub_model_id = "a_different_name"'),fl.forEach(t),ue=i(W,"\u3068\u3059\u308B\u3053\u3068\u3067\u5225\u306E\u540D\u524D\u3092\u6307\u5B9A\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),W.forEach(t),X=d(M),V=a(M,"P",{});var Le=f(V);oe=i(Le,"\u3042\u306A\u305F\u304C\u6240\u5C5E\u3059\u308B\u7D44\u7E54\u306B\u30E2\u30C7\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u306B\u306F\u3001"),ce=a(Le,"CODE",{});var cl=f(ce);be=i(cl,'hub_model_id = "my_organization/my_repo_name"'),cl.forEach(t),de=i(Le,"\u3068\u3059\u308C\u3070\u3088\u3044\u3067\u3059\u3002"),Le.forEach(t),x=d(M),S=a(M,"P",{});var ct=f(S);ye=i(ct,"\u5B66\u7FD2\u304C\u7D42\u4E86\u3057\u305F\u3089\u3001\u6700\u5F8C\u306B "),le=a(ct,"CODE",{});var Bt=f(le);K=i(Bt,"trainer.push_to_hub()"),Bt.forEach(t),ve=i(ct," \u3092\u5B9F\u884C\u3057\u3066\u3001\u30E2\u30C7\u30EB\u306E\u6700\u7D42\u7248\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u3066\u304F\u3060\u3055\u3044\u3002\u3053\u306E\u969B\u3001\u4F7F\u7528\u3057\u305F\u30CF\u30A4\u30D1\u30FC\u30D1\u30E9\u30E1\u30FC\u30BF\u3068\u8A55\u4FA1\u7D50\u679C\u306A\u3069\u3001\u5168\u3066\u306E\u95A2\u9023\u3059\u308B\u30E1\u30BF\u30C7\u30FC\u30BF\u3092\u542B\u3080\u30E2\u30C7\u30EB\u30AB\u30FC\u30C9\u304C\u751F\u6210\u3055\u308C\u307E\u3059\uFF01\u4EE5\u4E0B\u306B\u3001\u30E2\u30C7\u30EB\u30AB\u30FC\u30C9\u306B\u542B\u307E\u308C\u308B\u5185\u5BB9\u306E\u4F8B\u3092\u793A\u3057\u307E\u3059\u3002"),ct.forEach(t),Z=d(M),Y=a(M,"DIV",{class:!0});var pe=f(Y);ee=a(pe,"IMG",{src:!0,alt:!0,width:!0}),pe.forEach(t),this.h()},h(){Ge(ee.src,ie="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/model_card.png")||_(ee,"src",ie),_(ee,"alt","An example of an auto-generated model card."),_(ee,"width","100%"),_(Y,"class","flex justify-center")},m(M,N){n(M,p,N),o(p,m),o(m,c),o(p,g),o(p,$),o($,I),o(p,F),o(p,w),o(w,T),o(p,C),n(M,D,N),P(h,M,N),n(M,k,N),n(M,v,N),o(v,A),o(A,H),o(v,R),o(v,G),o(G,L),o(v,Q),o(v,J),o(J,U),o(v,B),o(v,te),o(te,ge),o(v,ue),n(M,X,N),n(M,V,N),o(V,oe),o(V,ce),o(ce,be),o(V,de),n(M,x,N),n(M,S,N),o(S,ye),o(S,le),o(le,K),o(S,ve),n(M,Z,N),n(M,Y,N),o(Y,ee),$e=!0},i(M){$e||(y(h.$$.fragment,M),$e=!0)},o(M){b(h.$$.fragment,M),$e=!1},d(M){M&&t(p),M&&t(D),z(h,M),M&&t(k),M&&t(v),M&&t(X),M&&t(V),M&&t(x),M&&t(S),M&&t(Z),M&&t(Y)}}}function Mh(O){let p,m;return p=new q({props:{code:`from transformers import TFAutoModelForMaskedLM, AutoTokenizer

checkpoint = "camembert-base"

model = TFAutoModelForMaskedLM.from_pretrained(checkpoint)
tokenizer = AutoTokenizer.from_pretrained(checkpoint)`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFAutoModelForMaskedLM, AutoTokenizer

checkpoint = <span class="hljs-string">&quot;camembert-base&quot;</span>

model = TFAutoModelForMaskedLM.from_pretrained(checkpoint)
tokenizer = AutoTokenizer.from_pretrained(checkpoint)`}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Ih(O){let p,m;return p=new q({props:{code:`from transformers import AutoModelForMaskedLM, AutoTokenizer

checkpoint = "camembert-base"

model = AutoModelForMaskedLM.from_pretrained(checkpoint)
tokenizer = AutoTokenizer.from_pretrained(checkpoint)`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModelForMaskedLM, AutoTokenizer

checkpoint = <span class="hljs-string">&quot;camembert-base&quot;</span>

model = AutoModelForMaskedLM.from_pretrained(checkpoint)
tokenizer = AutoTokenizer.from_pretrained(checkpoint)`}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function qh(O){let p,m,c;return{c(){p=s("div"),m=s("img"),this.h()},l(g){p=a(g,"DIV",{class:!0});var $=f(p);m=a($,"IMG",{src:!0,alt:!0,width:!0}),$.forEach(t),this.h()},h(){Ge(m.src,c="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/push_to_hub_dummy_model_tf.png")||_(m,"src",c),_(m,"alt","Dummy model containing both the tokenizer and model files."),_(m,"width","80%"),_(p,"class","flex justify-center")},m(g,$){n(g,p,$),o(p,m)},d(g){g&&t(p)}}}function Fh(O){let p,m,c;return{c(){p=s("div"),m=s("img"),this.h()},l(g){p=a(g,"DIV",{class:!0});var $=f(p);m=a($,"IMG",{src:!0,alt:!0,width:!0}),$.forEach(t),this.h()},h(){Ge(m.src,c="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/push_to_hub_dummy_model.png")||_(m,"src",c),_(m,"alt","Dummy model containing both the tokenizer and model files."),_(m,"width","80%"),_(p,"class","flex justify-center")},m(g,$){n(g,p,$),o(p,m)},d(g){g&&t(p)}}}function xh(O){let p,m,c,g,$,I,F,w,T,C,D;return{c(){p=s("p"),m=l("\u270F\uFE0F "),c=s("strong"),g=l("\u3084\u3063\u3066\u307F\u3088\u3046\uFF01"),$=u(),I=s("code"),F=l("bert-base-cased"),w=l("\u30C1\u30A7\u30C3\u30AF\u30DD\u30A4\u30F3\u30C8\u306B\u95A2\u9023\u4ED8\u3051\u3089\u308C\u305F\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u3001"),T=s("code"),C=l("push_to_hub()"),D=l("\u30E1\u30BD\u30C3\u30C9\u3092\u4F7F\u3063\u3066\u81EA\u5206\u306E\u30CD\u30FC\u30E0\u30B9\u30DA\u30FC\u30B9\u306B\u3042\u308B\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u307E\u3059\u3002\u30EC\u30DD\u30B8\u30C8\u30EA\u3092\u524A\u9664\u3059\u308B\u524D\u306B\u3001\u30EC\u30DD\u30B8\u30C8\u30EA\u304C\u3042\u306A\u305F\u306E\u30DA\u30FC\u30B8\u306B\u6B63\u3057\u304F\u8868\u793A\u3055\u308C\u308B\u3053\u3068\u3092\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044\u3002")},l(h){p=a(h,"P",{});var k=f(p);m=i(k,"\u270F\uFE0F "),c=a(k,"STRONG",{});var v=f(c);g=i(v,"\u3084\u3063\u3066\u307F\u3088\u3046\uFF01"),v.forEach(t),$=d(k),I=a(k,"CODE",{});var A=f(I);F=i(A,"bert-base-cased"),A.forEach(t),w=i(k,"\u30C1\u30A7\u30C3\u30AF\u30DD\u30A4\u30F3\u30C8\u306B\u95A2\u9023\u4ED8\u3051\u3089\u308C\u305F\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u3001"),T=a(k,"CODE",{});var H=f(T);C=i(H,"push_to_hub()"),H.forEach(t),D=i(k,"\u30E1\u30BD\u30C3\u30C9\u3092\u4F7F\u3063\u3066\u81EA\u5206\u306E\u30CD\u30FC\u30E0\u30B9\u30DA\u30FC\u30B9\u306B\u3042\u308B\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u307E\u3059\u3002\u30EC\u30DD\u30B8\u30C8\u30EA\u3092\u524A\u9664\u3059\u308B\u524D\u306B\u3001\u30EC\u30DD\u30B8\u30C8\u30EA\u304C\u3042\u306A\u305F\u306E\u30DA\u30FC\u30B8\u306B\u6B63\u3057\u304F\u8868\u793A\u3055\u308C\u308B\u3053\u3068\u3092\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044\u3002"),k.forEach(t)},m(h,k){n(h,p,k),o(p,m),o(p,c),o(c,g),o(p,$),o(p,I),o(I,F),o(p,w),o(p,T),o(T,C),o(p,D)},d(h){h&&t(p)}}}function Hh(O){let p,m;return p=new q({props:{code:`from transformers import TFAutoModelForMaskedLM, AutoTokenizer

checkpoint = "camembert-base"

model = TFAutoModelForMaskedLM.from_pretrained(checkpoint)
tokenizer = AutoTokenizer.from_pretrained(checkpoint)

# Do whatever with the model, train it, fine-tune it...

model.save_pretrained("<path_to_dummy_folder>")
tokenizer.save_pretrained("<path_to_dummy_folder>")`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> TFAutoModelForMaskedLM, AutoTokenizer

checkpoint = <span class="hljs-string">&quot;camembert-base&quot;</span>

model = TFAutoModelForMaskedLM.from_pretrained(checkpoint)
tokenizer = AutoTokenizer.from_pretrained(checkpoint)

<span class="hljs-comment"># Do whatever with the model, train it, fine-tune it...</span>

model.save_pretrained(<span class="hljs-string">&quot;&lt;path_to_dummy_folder&gt;&quot;</span>)
tokenizer.save_pretrained(<span class="hljs-string">&quot;&lt;path_to_dummy_folder&gt;&quot;</span>)`}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Gh(O){let p,m;return p=new q({props:{code:`from transformers import AutoModelForMaskedLM, AutoTokenizer

checkpoint = "camembert-base"

model = AutoModelForMaskedLM.from_pretrained(checkpoint)
tokenizer = AutoTokenizer.from_pretrained(checkpoint)

# Do whatever with the model, train it, fine-tune it...

model.save_pretrained("<path_to_dummy_folder>")
tokenizer.save_pretrained("<path_to_dummy_folder>")`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModelForMaskedLM, AutoTokenizer

checkpoint = <span class="hljs-string">&quot;camembert-base&quot;</span>

model = AutoModelForMaskedLM.from_pretrained(checkpoint)
tokenizer = AutoTokenizer.from_pretrained(checkpoint)

<span class="hljs-comment"># Do whatever with the model, train it, fine-tune it...</span>

model.save_pretrained(<span class="hljs-string">&quot;&lt;path_to_dummy_folder&gt;&quot;</span>)
tokenizer.save_pretrained(<span class="hljs-string">&quot;&lt;path_to_dummy_folder&gt;&quot;</span>)`}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Lh(O){let p,m,c,g,$,I,F,w,T,C,D;return p=new q({props:{code:"config.json  README.md  sentencepiece.bpe.model  special_tokens_map.json  tf_model.h5  tokenizer_config.json  tokenizer.json",highlighted:"config.json  README.md  sentencepiece.bpe.model  special_tokens_map.json  tf_model.h5  tokenizer_config.json  tokenizer.json"}}),{c(){E(p.$$.fragment),m=u(),c=s("p"),g=l("If you look at the file sizes (for example, with "),$=s("code"),I=l("ls -lh"),F=l("), you should see that the model state dict file ("),w=s("em"),T=l("t5_model.h5"),C=l(") is the only outlier, at more than 400 MB.")},l(h){j(p.$$.fragment,h),m=d(h),c=a(h,"P",{});var k=f(c);g=i(k,"If you look at the file sizes (for example, with "),$=a(k,"CODE",{});var v=f($);I=i(v,"ls -lh"),v.forEach(t),F=i(k,"), you should see that the model state dict file ("),w=a(k,"EM",{});var A=f(w);T=i(A,"t5_model.h5"),A.forEach(t),C=i(k,") is the only outlier, at more than 400 MB."),k.forEach(t)},m(h,k){P(p,h,k),n(h,m,k),n(h,c,k),o(c,g),o(c,$),o($,I),o(c,F),o(c,w),o(w,T),o(c,C),D=!0},i(h){D||(y(p.$$.fragment,h),D=!0)},o(h){b(p.$$.fragment,h),D=!1},d(h){z(p,h),h&&t(m),h&&t(c)}}}function Sh(O){let p,m,c,g,$,I,F,w,T,C,D;return p=new q({props:{code:"config.json  pytorch_model.bin  README.md  sentencepiece.bpe.model  special_tokens_map.json tokenizer_config.json  tokenizer.json",highlighted:"config.json  pytorch_model.bin  README.md  sentencepiece.bpe.model  special_tokens_map.json tokenizer_config.json  tokenizer.json"}}),{c(){E(p.$$.fragment),m=u(),c=s("p"),g=l("If you look at the file sizes (for example, with "),$=s("code"),I=l("ls -lh"),F=l("), you should see that the model state dict file ("),w=s("em"),T=l("pytorch_model.bin"),C=l(") is the only outlier, at more than 400 MB.")},l(h){j(p.$$.fragment,h),m=d(h),c=a(h,"P",{});var k=f(c);g=i(k,"If you look at the file sizes (for example, with "),$=a(k,"CODE",{});var v=f($);I=i(v,"ls -lh"),v.forEach(t),F=i(k,"), you should see that the model state dict file ("),w=a(k,"EM",{});var A=f(w);T=i(A,"pytorch_model.bin"),A.forEach(t),C=i(k,") is the only outlier, at more than 400 MB."),k.forEach(t)},m(h,k){P(p,h,k),n(h,m,k),n(h,c,k),o(c,g),o(c,$),o($,I),o(c,F),o(c,w),o(w,T),o(c,C),D=!0},i(h){D||(y(p.$$.fragment,h),D=!0)},o(h){b(p.$$.fragment,h),D=!1},d(h){z(p,h),h&&t(m),h&&t(c)}}}function Nh(O){let p;return{c(){p=l("\u270F\uFE0F When creating the repository from the web interface, the *.gitattributes* file is automatically set up to consider files with certain extensions, such as *.bin* and *.h5*, as large files, and git-lfs will track them with no necessary setup on your side.")},l(m){p=i(m,"\u270F\uFE0F When creating the repository from the web interface, the *.gitattributes* file is automatically set up to consider files with certain extensions, such as *.bin* and *.h5*, as large files, and git-lfs will track them with no necessary setup on your side.")},m(m,c){n(m,p,c)},d(m){m&&t(p)}}}function Rh(O){let p,m;return p=new q({props:{code:`On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
  modified:   .gitattributes
  	new file:   config.json
	new file:   sentencepiece.bpe.model
	new file:   special_tokens_map.json
	new file:   tf_model.h5
	new file:   tokenizer.json
	new file:   tokenizer_config.json`,highlighted:`On branch main
Your branch is up to <span class="hljs-built_in">date</span> with <span class="hljs-string">&#x27;origin/main&#x27;</span>.

Changes to be committed:
  (use <span class="hljs-string">&quot;git restore --staged &lt;file&gt;...&quot;</span> to unstage)
  modified:   .gitattributes
  	new file:   config.json
	new file:   sentencepiece.bpe.model
	new file:   special_tokens_map.json
	new file:   tf_model.h5
	new file:   tokenizer.json
	new file:   tokenizer_config.json`}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Uh(O){let p,m;return p=new q({props:{code:`On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
  modified:   .gitattributes
	new file:   config.json
	new file:   pytorch_model.bin
	new file:   sentencepiece.bpe.model
	new file:   special_tokens_map.json
	new file:   tokenizer.json
	new file:   tokenizer_config.json`,highlighted:`On branch main
Your branch is up to <span class="hljs-built_in">date</span> with <span class="hljs-string">&#x27;origin/main&#x27;</span>.

Changes to be committed:
  (use <span class="hljs-string">&quot;git restore --staged &lt;file&gt;...&quot;</span> to unstage)
  modified:   .gitattributes
	new file:   config.json
	new file:   pytorch_model.bin
	new file:   sentencepiece.bpe.model
	new file:   special_tokens_map.json
	new file:   tokenizer.json
	new file:   tokenizer_config.json`}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Wh(O){let p,m,c,g,$,I,F,w,T,C,D,h,k,v;return p=new q({props:{code:`On branch main
Objects to be pushed to origin/main:


Objects to be committed:

	config.json (Git: bc20ff2)
	sentencepiece.bpe.model (LFS: 988bc5a)
	special_tokens_map.json (Git: cb23931)
	tf_model.h5 (LFS: 86fce29)
	tokenizer.json (Git: 851ff3e)
	tokenizer_config.json (Git: f0f7783)

Objects not staged for commit:

`,highlighted:`On branch main
Objects to be pushed to origin/main:


Objects to be committed:

	config.json (Git: bc20ff2)
	sentencepiece.bpe.model (LFS: 988bc5a)
	special_tokens_map.json (Git: cb23931)
	tf_model.h5 (LFS: 86fce29)
	tokenizer.json (Git: 851ff3e)
	tokenizer_config.json (Git: f0f7783)

Objects not staged <span class="hljs-keyword">for</span> commit:

`}}),{c(){E(p.$$.fragment),m=u(),c=s("p"),g=l("We can see that all files have "),$=s("code"),I=l("Git"),F=l(" as a handler, except "),w=s("em"),T=l("t5_model.h5"),C=l(", which has "),D=s("code"),h=l("LFS"),k=l(". Great!")},l(A){j(p.$$.fragment,A),m=d(A),c=a(A,"P",{});var H=f(c);g=i(H,"We can see that all files have "),$=a(H,"CODE",{});var R=f($);I=i(R,"Git"),R.forEach(t),F=i(H," as a handler, except "),w=a(H,"EM",{});var G=f(w);T=i(G,"t5_model.h5"),G.forEach(t),C=i(H,", which has "),D=a(H,"CODE",{});var L=f(D);h=i(L,"LFS"),L.forEach(t),k=i(H,". Great!"),H.forEach(t)},m(A,H){P(p,A,H),n(A,m,H),n(A,c,H),o(c,g),o(c,$),o($,I),o(c,F),o(c,w),o(w,T),o(c,C),o(c,D),o(D,h),o(c,k),v=!0},i(A){v||(y(p.$$.fragment,A),v=!0)},o(A){b(p.$$.fragment,A),v=!1},d(A){z(p,A),A&&t(m),A&&t(c)}}}function Bh(O){let p,m,c,g,$,I,F,w,T,C,D,h,k,v,A,H,R;return p=new q({props:{code:`On branch main
Objects to be pushed to origin/main:


Objects to be committed:

	config.json (Git: bc20ff2)
	pytorch_model.bin (LFS: 35686c2)
	sentencepiece.bpe.model (LFS: 988bc5a)
	special_tokens_map.json (Git: cb23931)
	tokenizer.json (Git: 851ff3e)
	tokenizer_config.json (Git: f0f7783)

Objects not staged for commit:

`,highlighted:`On branch main
Objects to be pushed to origin/main:


Objects to be committed:

	config.json (Git: bc20ff2)
	pytorch_model.bin (LFS: 35686c2)
	sentencepiece.bpe.model (LFS: 988bc5a)
	special_tokens_map.json (Git: cb23931)
	tokenizer.json (Git: 851ff3e)
	tokenizer_config.json (Git: f0f7783)

Objects not staged <span class="hljs-keyword">for</span> commit:

`}}),{c(){E(p.$$.fragment),m=u(),c=s("p"),g=l("We can see that all files have "),$=s("code"),I=l("Git"),F=l(" as a handler, except "),w=s("em"),T=l("pytorch_model.bin"),C=l(" and "),D=s("em"),h=l("sentencepiece.bpe.model"),k=l(", which have "),v=s("code"),A=l("LFS"),H=l(". Great!")},l(G){j(p.$$.fragment,G),m=d(G),c=a(G,"P",{});var L=f(c);g=i(L,"We can see that all files have "),$=a(L,"CODE",{});var Q=f($);I=i(Q,"Git"),Q.forEach(t),F=i(L," as a handler, except "),w=a(L,"EM",{});var J=f(w);T=i(J,"pytorch_model.bin"),J.forEach(t),C=i(L," and "),D=a(L,"EM",{});var U=f(D);h=i(U,"sentencepiece.bpe.model"),U.forEach(t),k=i(L,", which have "),v=a(L,"CODE",{});var B=f(v);A=i(B,"LFS"),B.forEach(t),H=i(L,". Great!"),L.forEach(t)},m(G,L){P(p,G,L),n(G,m,L),n(G,c,L),o(c,g),o(c,$),o($,I),o(c,F),o(c,w),o(w,T),o(c,C),o(c,D),o(D,h),o(c,k),o(c,v),o(v,A),o(c,H),R=!0},i(G){R||(y(p.$$.fragment,G),R=!0)},o(G){b(p.$$.fragment,G),R=!1},d(G){z(p,G),G&&t(m),G&&t(c)}}}function Vh(O){let p,m;return p=new q({props:{code:`[main b08aab1] First model version
 6 files changed, 36 insertions(+)
 create mode 100644 config.json
 create mode 100644 sentencepiece.bpe.model
 create mode 100644 special_tokens_map.json
 create mode 100644 tf_model.h5
 create mode 100644 tokenizer.json
 create mode 100644 tokenizer_config.json`,highlighted:`[main b08aab1] First model version
 6 files changed, 36 insertions(+)
 create mode 100644 config.json
 create mode 100644 sentencepiece.bpe.model
 create mode 100644 special_tokens_map.json
 create mode 100644 tf_model.h5
 create mode 100644 tokenizer.json
 create mode 100644 tokenizer_config.json`}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Yh(O){let p,m;return p=new q({props:{code:`[main b08aab1] First model version
 7 files changed, 29027 insertions(+)
  6 files changed, 36 insertions(+)
 create mode 100644 config.json
 create mode 100644 pytorch_model.bin
 create mode 100644 sentencepiece.bpe.model
 create mode 100644 special_tokens_map.json
 create mode 100644 tokenizer.json
 create mode 100644 tokenizer_config.json`,highlighted:`[main b08aab1] First model version
 7 files changed, 29027 insertions(+)
  6 files changed, 36 insertions(+)
 create mode 100644 config.json
 create mode 100644 pytorch_model.bin
 create mode 100644 sentencepiece.bpe.model
 create mode 100644 special_tokens_map.json
 create mode 100644 tokenizer.json
 create mode 100644 tokenizer_config.json`}}),{c(){E(p.$$.fragment)},l(c){j(p.$$.fragment,c)},m(c,g){P(p,c,g),m=!0},i(c){m||(y(p.$$.fragment,c),m=!0)},o(c){b(p.$$.fragment,c),m=!1},d(c){z(p,c)}}}function Kh(O){let p,m,c,g,$,I,F,w,T,C,D;return{c(){p=l(`If we take a look at the model repository when this is finished, we can see all the recently added files:
`),m=s("div"),c=s("img"),$=u(),I=s("p"),F=l("The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),w=u(),T=s("div"),C=s("img"),this.h()},l(h){p=i(h,`If we take a look at the model repository when this is finished, we can see all the recently added files:
`),m=a(h,"DIV",{class:!0});var k=f(m);c=a(k,"IMG",{src:!0,alt:!0,width:!0}),k.forEach(t),$=d(h),I=a(h,"P",{});var v=f(I);F=i(v,"The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),v.forEach(t),w=d(h),T=a(h,"DIV",{class:!0});var A=f(T);C=a(A,"IMG",{src:!0,alt:!0,width:!0}),A.forEach(t),this.h()},h(){Ge(c.src,g="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/full_model_tf.png")||_(c,"src",g),_(c,"alt","The 'Files and versions' tab now contains all the recently uploaded files."),_(c,"width","80%"),_(m,"class","flex justify-center"),Ge(C.src,D="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/diffstf.gif")||_(C,"src",D),_(C,"alt","The diff introduced by the recent commit."),_(C,"width","80%"),_(T,"class","flex justify-center")},m(h,k){n(h,p,k),n(h,m,k),o(m,c),n(h,$,k),n(h,I,k),o(I,F),n(h,w,k),n(h,T,k),o(T,C)},d(h){h&&t(p),h&&t(m),h&&t($),h&&t(I),h&&t(w),h&&t(T)}}}function Jh(O){let p,m,c,g,$,I,F,w,T,C,D,h,k;return{c(){p=s("p"),m=l("If we take a look at the model repository when this is finished, we can see all the recently added files:"),c=u(),g=s("div"),$=s("img"),F=u(),w=s("p"),T=l("The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),C=u(),D=s("div"),h=s("img"),this.h()},l(v){p=a(v,"P",{});var A=f(p);m=i(A,"If we take a look at the model repository when this is finished, we can see all the recently added files:"),A.forEach(t),c=d(v),g=a(v,"DIV",{class:!0});var H=f(g);$=a(H,"IMG",{src:!0,alt:!0,width:!0}),H.forEach(t),F=d(v),w=a(v,"P",{});var R=f(w);T=i(R,"The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),R.forEach(t),C=d(v),D=a(v,"DIV",{class:!0});var G=f(D);h=a(G,"IMG",{src:!0,alt:!0,width:!0}),G.forEach(t),this.h()},h(){Ge($.src,I="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/full_model.png")||_($,"src",I),_($,"alt","The 'Files and versions' tab now contains all the recently uploaded files."),_($,"width","80%"),_(g,"class","flex justify-center"),Ge(h.src,k="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/diffs.gif")||_(h,"src",k),_(h,"alt","The diff introduced by the recent commit."),_(h,"width","80%"),_(D,"class","flex justify-center")},m(v,A){n(v,p,A),o(p,m),n(v,c,A),n(v,g,A),o(g,$),n(v,F,A),n(v,w,A),o(w,T),n(v,C,A),n(v,D,A),o(D,h)},d(v){v&&t(p),v&&t(c),v&&t(g),v&&t(F),v&&t(w),v&&t(C),v&&t(D)}}}function Xh(O){let p,m,c,g,$,I,F,w,T,C,D,h,k,v,A,H,R,G,L,Q,J,U,B,te,ge,ue,X,V,oe,ce,be,de,x,S,ye,le,K,ve,Z,Y,ee,ie,$e,M,N,al,nl,Wt,W,re,Qe,ke,fl,Le,cl,ct,Bt,pe,_n,hi,gn,bn,pl,yn,vn,xr,Vt,Hr,ul,$n,Gr,Yt,Lr,pt,kn,Kt,wn,En,Sr,dl,jn,Nr,we,Ee,ml,ut,Pn,_i,zn,An,Rr,hl,Tn,Ur,je,Pe,_l,Se,Dn,gi,On,Cn,bi,Mn,In,Wr,Jt,Br,dt,qn,yi,Fn,xn,Vr,Xt,Yr,mt,Hn,vi,Gn,Ln,Kr,Zt,Jr,gl,Sn,Xr,Qt,Zr,ht,Nn,$i,eo,Rn,Un,Qr,bl,Wn,es,yl,_t,ts,Ne,Bn,ki,Vn,Yn,to,Kn,Jn,os,me,Xn,wi,Zn,Qn,oo,Ei,ef,tf,lo,ji,of,lf,ls,vl,rf,is,et,gt,Pi,io,sf,$l,zi,af,nf,rs,ro,Ai,ff,cf,ss,he,pf,Ti,uf,df,Di,mf,hf,Oi,_f,gf,as,so,ns,bt,bf,Ci,yf,vf,fs,ao,cs,yt,$f,Mi,kf,wf,ps,vt,Ef,Ii,jf,Pf,us,no,ds,Re,zf,qi,Af,Tf,Fi,Df,Of,ms,fo,hs,Ue,Cf,xi,Mf,If,Hi,qf,Ff,_s,We,kl,Gi,xf,Hf,Gf,wl,Li,Lf,Sf,Nf,se,Si,Rf,Uf,Ni,Wf,Bf,Ri,Vf,Yf,Ui,Kf,Jf,Wi,Xf,Zf,gs,El,Qf,bs,tt,$t,Bi,co,ec,Vi,tc,ys,jl,oc,vs,kt,lc,po,ic,rc,$s,uo,mo,Du,ks,Pl,sc,ws,zl,ac,Es,Al,nc,js,ho,_o,Ou,Ps,Tl,fc,zs,go,bo,Cu,As,Dl,cc,Ts,Be,pc,Yi,uc,dc,Ki,mc,hc,Ds,yo,vo,Mu,Os,Ol,_c,Cs,ot,wt,Ji,$o,gc,Xi,bc,Ms,Et,yc,ko,vc,$c,Is,jt,kc,Zi,wc,Ec,qs,lt,Pt,Qi,wo,jc,Eo,Pc,er,zc,Ac,Fs,zt,Tc,tr,Dc,Oc,xs,Cl,Cc,Hs,jo,Gs,ae,Mc,or,Ic,qc,lr,Fc,xc,ir,Hc,Gc,rr,Lc,Sc,Ls,At,Ml,sr,Nc,Rc,Uc,ne,ar,Wc,Bc,nr,Vc,Yc,fr,Kc,Jc,cr,Xc,Zc,pr,Qc,ep,Ss,it,Tt,ur,Po,tp,zo,op,dr,lp,ip,Ns,Dt,rp,mr,sp,ap,Rs,Ot,np,Ao,fp,cp,Us,Il,pp,Ws,To,Bs,_e,up,hr,dp,mp,_r,hp,_p,gr,gp,bp,Vs,ql,yp,Ys,Do,Ks,Ve,vp,br,$p,kp,Oo,wp,Ep,Js,Fl,jp,Xs,xl,Pp,Zs,Co,Qs,Hl,zp,ea,Mo,ta,Ct,Ap,yr,Tp,Dp,oa,Io,la,Gl,Op,ia,rt,Mt,vr,qo,Cp,$r,Mp,ra,Ll,Ip,sa,It,qp,Fo,Fp,xp,aa,Sl,Hp,na,xo,fa,Ho,ca,Nl,Gp,pa,Go,ua,Ye,Lp,kr,Sp,Np,wr,Rp,Up,da,Lo,ma,Ke,Wp,Er,Bp,Vp,jr,Yp,Kp,ha,So,_a,No,ga,fe,Jp,Pr,Xp,Zp,zr,Qp,eu,Ar,tu,ou,Tr,lu,iu,ba,qt,ru,Dr,su,au,ya,Rl,nu,va,ze,Ae,Ul,Ft,fu,Or,cu,pu,$a,Ro,ka,Te,De,Wl,xt,wa,Ht,uu,Cr,du,mu,Ea,Uo,ja,Bl,hu,Pa,Wo,za,Oe,Ce,Vl,Gt,_u,Mr,gu,bu,Aa,Bo,Ta,Me,Ie,Yl,Lt,yu,Ir,vu,$u,Da,Vo,Oa,qe,Fe,Kl,Jl,ku,Ca,Yo,Ma,Ko,Ia,Xl,qa;c=new Ph({props:{fw:O[0]}});const Iu=[Ah,zh],Jo=[];function qu(e,r){return e[0]==="pt"?0:1}w=qu(O),T=Jo[w]=Iu[w](O),v=new Tu({props:{id:"9yY3RB_GSPM"}}),ie=new sl({});const Fu=[Dh,Th],Xo=[];function xu(e,r){return e[0]==="pt"?0:1}W=xu(O),re=Xo[W]=Fu[W](O),Vt=new q({props:{code:`from huggingface_hub import notebook_login

notebook_login()`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login

notebook_login()`}}),Yt=new q({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}});const Hu=[Ch,Oh],Zo=[];function Gu(e,r){return e[0]==="pt"?0:1}we=Gu(O),Ee=Zo[we]=Hu[we](O);const Lu=[Ih,Mh],Qo=[];function Su(e,r){return e[0]==="pt"?0:1}je=Su(O),Pe=Qo[je]=Lu[je](O),Jt=new q({props:{code:'model.push_to_hub("dummy-model")',highlighted:'model.push_to_hub(<span class="hljs-string">&quot;dummy-model&quot;</span>)'}}),Xt=new q({props:{code:'tokenizer.push_to_hub("dummy-model")',highlighted:'tokenizer.push_to_hub(<span class="hljs-string">&quot;dummy-model&quot;</span>)'}}),Zt=new q({props:{code:'tokenizer.push_to_hub("dummy-model", organization="huggingface")',highlighted:'tokenizer.push_to_hub(<span class="hljs-string">&quot;dummy-model&quot;</span>, organization=<span class="hljs-string">&quot;huggingface&quot;</span>)'}}),Qt=new q({props:{code:'tokenizer.push_to_hub("dummy-model", organization="huggingface", use_auth_token="<TOKEN>")',highlighted:'tokenizer.push_to_hub(<span class="hljs-string">&quot;dummy-model&quot;</span>, organization=<span class="hljs-string">&quot;huggingface&quot;</span>, use_auth_token=<span class="hljs-string">&quot;&lt;TOKEN&gt;&quot;</span>)'}});function Nu(e,r){return e[0]==="pt"?Fh:qh}let Fa=Nu(O),st=Fa(O);_t=new yh({props:{$$slots:{default:[xh]},$$scope:{ctx:O}}}),io=new sl({}),so=new q({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}}),ao=new q({props:{code:`from huggingface_hub import (
    # User management
    login,
    logout,
    whoami,

    # Repository creation and management
    create_repo,
    delete_repo,
    update_repo_visibility,

    # And some methods to retrieve/change information about the content
    list_models,
    list_datasets,
    list_metrics,
    list_repo_files,
    upload_file,
    delete_file,
)`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> (
    <span class="hljs-comment"># User management</span>
    login,
    logout,
    whoami,

    <span class="hljs-comment"># Repository creation and management</span>
    create_repo,
    delete_repo,
    update_repo_visibility,

    <span class="hljs-comment"># And some methods to retrieve/change information about the content</span>
    list_models,
    list_datasets,
    list_metrics,
    list_repo_files,
    upload_file,
    delete_file,
)`}}),no=new q({props:{code:`from huggingface_hub import create_repo

create_repo("dummy-model")`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_repo

create_repo(<span class="hljs-string">&quot;dummy-model&quot;</span>)`}}),fo=new q({props:{code:`from huggingface_hub import create_repo

create_repo("dummy-model", organization="huggingface")`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_repo

create_repo(<span class="hljs-string">&quot;dummy-model&quot;</span>, organization=<span class="hljs-string">&quot;huggingface&quot;</span>)`}}),co=new sl({}),$o=new sl({}),wo=new sl({}),jo=new q({props:{code:`from huggingface_hub import upload_file

upload_file(
    "<path_to_file>/config.json",
    path_in_repo="config.json",
    repo_id="<namespace>/dummy-model",
)`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> upload_file

upload_file(
    <span class="hljs-string">&quot;&lt;path_to_file&gt;/config.json&quot;</span>,
    path_in_repo=<span class="hljs-string">&quot;config.json&quot;</span>,
    repo_id=<span class="hljs-string">&quot;&lt;namespace&gt;/dummy-model&quot;</span>,
)`}}),Po=new sl({}),To=new q({props:{code:`from huggingface_hub import Repository

repo = Repository("<path_to_dummy_folder>", clone_from="<namespace>/dummy-model")`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> Repository

repo = Repository(<span class="hljs-string">&quot;&lt;path_to_dummy_folder&gt;&quot;</span>, clone_from=<span class="hljs-string">&quot;&lt;namespace&gt;/dummy-model&quot;</span>)`}}),Do=new q({props:{code:`repo.git_pull()
repo.git_add()
repo.git_commit()
repo.git_push()
repo.git_tag()`,highlighted:`repo.git_pull()
repo.git_add()
repo.git_commit()
repo.git_push()
repo.git_tag()`}}),Co=new q({props:{code:"repo.git_pull()",highlighted:"repo.git_pull()"}}),Mo=new q({props:{code:`model.save_pretrained("<path_to_dummy_folder>")
tokenizer.save_pretrained("<path_to_dummy_folder>")`,highlighted:`model.save_pretrained(<span class="hljs-string">&quot;&lt;path_to_dummy_folder&gt;&quot;</span>)
tokenizer.save_pretrained(<span class="hljs-string">&quot;&lt;path_to_dummy_folder&gt;&quot;</span>)`}}),Io=new q({props:{code:`repo.git_add()
repo.git_commit("Add model and tokenizer files")
repo.git_push()`,highlighted:`repo.git_add()
repo.git_commit(<span class="hljs-string">&quot;Add model and tokenizer files&quot;</span>)
repo.git_push()`}}),qo=new sl({}),xo=new q({props:{code:"git lfs install",highlighted:"git lfs install"}}),Ho=new q({props:{code:`Updated git hooks.
Git LFS initialized.`,highlighted:`Updated git hooks.
Git LFS initialized.`}}),Go=new q({props:{code:"git clone https://huggingface.co/<namespace>/<your-model-id>",highlighted:'git <span class="hljs-built_in">clone</span> https://huggingface.co/&lt;namespace&gt;/&lt;your-model-id&gt;'}}),Lo=new q({props:{code:"git clone https://huggingface.co/lysandre/dummy",highlighted:'git clone https:<span class="hljs-regexp">//</span>huggingface.co<span class="hljs-regexp">/lysandre/</span>dummy'}}),So=new q({props:{code:"cd dummy && ls",highlighted:'<span class="hljs-built_in">cd</span> dummy &amp;&amp; <span class="hljs-built_in">ls</span>'}}),No=new q({props:{code:"README.md",highlighted:"README.md"}});const Ru=[Gh,Hh],el=[];function Uu(e,r){return e[0]==="pt"?0:1}ze=Uu(O),Ae=el[ze]=Ru[ze](O),Ro=new q({props:{code:"ls",highlighted:'<span class="hljs-built_in">ls</span>'}});const Wu=[Sh,Lh],tl=[];function Bu(e,r){return e[0]==="pt"?0:1}Te=Bu(O),De=tl[Te]=Wu[Te](O),xt=new yh({props:{$$slots:{default:[Nh]},$$scope:{ctx:O}}}),Uo=new q({props:{code:"git add .",highlighted:"git add ."}}),Wo=new q({props:{code:"git status",highlighted:"git status"}});const Vu=[Uh,Rh],ol=[];function Yu(e,r){return e[0]==="pt"?0:1}Oe=Yu(O),Ce=ol[Oe]=Vu[Oe](O),Bo=new q({props:{code:"git lfs status",highlighted:"git lfs status"}});const Ku=[Bh,Wh],ll=[];function Ju(e,r){return e[0]==="pt"?0:1}Me=Ju(O),Ie=ll[Me]=Ku[Me](O),Vo=new q({props:{code:'git commit -m "First model version"',highlighted:'git commit -m <span class="hljs-string">&quot;First model version&quot;</span>'}});const Xu=[Yh,Vh],il=[];function Zu(e,r){return e[0]==="pt"?0:1}qe=Zu(O),Fe=il[qe]=Xu[qe](O),Yo=new q({props:{code:"git push",highlighted:"git push"}}),Ko=new q({props:{code:`Uploading LFS objects: 100% (1/1), 433 MB | 1.3 MB/s, done.
Enumerating objects: 11, done.
Counting objects: 100% (11/11), done.
Delta compression using up to 12 threads
Compressing objects: 100% (9/9), done.
Writing objects: 100% (9/9), 288.27 KiB | 6.27 MiB/s, done.
Total 9 (delta 1), reused 0 (delta 0), pack-reused 0
To https://huggingface.co/lysandre/dummy
   891b41d..b08aab1  main -> main`,highlighted:`Uploading LFS objects: 100% (1/1), 433 MB | 1.3 MB/s, <span class="hljs-keyword">done</span>.
Enumerating objects: 11, <span class="hljs-keyword">done</span>.
Counting objects: 100% (11/11), <span class="hljs-keyword">done</span>.
Delta compression using up to 12 threads
Compressing objects: 100% (9/9), <span class="hljs-keyword">done</span>.
Writing objects: 100% (9/9), 288.27 KiB | 6.27 MiB/s, <span class="hljs-keyword">done</span>.
Total 9 (delta 1), reused 0 (delta 0), pack-reused 0
To https://huggingface.co/lysandre/dummy
   891b41d..b08aab1  main -&gt; main`}});function Qu(e,r){return e[0]==="pt"?Jh:Kh}let xa=Qu(O),at=xa(O);return{c(){p=s("meta"),m=u(),E(c.$$.fragment),g=u(),$=s("h1"),I=l("\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u3092\u5171\u6709\u3059\u308B"),F=u(),T.c(),C=u(),D=s("p"),h=l("\u4EE5\u4E0B\u306E\u30B9\u30C6\u30C3\u30D7\u3067\u306F\u3001\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u3092\u{1F917}Hub\u306B\u5171\u6709\u3059\u308B\u6700\u3082\u7C21\u5358\u306A\u65B9\u6CD5\u306B\u3064\u3044\u3066\u898B\u3066\u3044\u304D\u307E\u3059\u3002Hub\u4E0A\u3067\u76F4\u63A5\u30E2\u30C7\u30EB\u3092\u5171\u6709\u3057\u3001\u66F4\u65B0\u3067\u304D\u308B\u30C4\u30FC\u30EB\u3084\u30E6\u30FC\u30C6\u30A3\u30EA\u30C6\u30A3\u304C\u7528\u610F\u3055\u308C\u3066\u3044\u307E\u3059\u306E\u3067\u3001\u4EE5\u4E0B\u3001\u305D\u308C\u3092\u898B\u3066\u3044\u304D\u307E\u3059\u3002"),k=u(),E(v.$$.fragment),A=u(),H=s("p"),R=l("\u305F\u3068\u3048\u975E\u5E38\u306B\u7279\u6B8A\u306A\u30C7\u30FC\u30BF\u30BB\u30C3\u30C8\u3067\u5B66\u7FD2\u3055\u305B\u305F\u3068\u3057\u3066\u3082\u3001\u30E2\u30C7\u30EB\u3092\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306B\u5171\u6709\u3059\u308B\u3053\u3068\u3092\u304A\u52E7\u3081\u3057\u307E\u3059\u3002\u4ED6\u306E\u30E6\u30FC\u30B6\u30FC\u306E\u6642\u9593\u3068\u8A08\u7B97\u8CC7\u6E90\u3092\u7BC0\u7D04\u3057\u3001\u6709\u7528\u306A\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u3092\u63D0\u4F9B\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u308B\u304B\u3089\u3067\u3059\u3002\u4EE3\u308F\u308A\u306B\u3001\u4ED6\u306E\u4EBA\u306E\u6210\u679C\u7269\u306E\u6069\u6075\u3092\u53D7\u3051\u308B\u3053\u3068\u3082\u3067\u304D\u307E\u3059\uFF01"),G=u(),L=s("p"),Q=l("\u65B0\u3057\u3044\u30E2\u30C7\u30EB\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F5C\u6210\u3059\u308B\u306B\u306F\u3001\u6B21\u306E3\u3064\u306E\u65B9\u6CD5\u304C\u3042\u308A\u307E\u3059\uFF1A"),J=u(),U=s("ul"),B=s("li"),te=s("code"),ge=l("push_to_hub"),ue=l(" API\u3092\u4F7F\u7528\u3059\u308B"),X=u(),V=s("li"),oe=s("code"),ce=l("huggingface_hub"),be=l(" Python\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u4F7F\u7528\u3059\u308B"),de=u(),x=s("li"),S=l("Web\u30A4\u30F3\u30BF\u30FC\u30D5\u30A7\u30A4\u30B9\u3092\u4F7F\u7528\u3059\u308B"),ye=u(),le=s("p"),K=l("\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F5C\u6210\u3057\u305F\u3089\u3001git \u3068 git-lfs \u3092\u4F7F\u3063\u3066\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u4EE5\u4E0B\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u30E2\u30C7\u30EB\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F5C\u6210\u3057\u3001\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u65B9\u6CD5\u3092\u8AAC\u660E\u3057\u307E\u3059\u3002"),ve=u(),Z=s("h2"),Y=s("a"),ee=s("span"),E(ie.$$.fragment),$e=u(),M=s("span"),N=s("code"),al=l("push_to_hub"),nl=l(" API\u3092\u4F7F\u7528\u3059\u308B"),Wt=u(),re.c(),Qe=u(),ke=s("p"),fl=l("Hub \u306B\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u6700\u3082\u7C21\u5358\u306A\u65B9\u6CD5\u306F\u3001"),Le=s("code"),cl=l("push_to_hub"),ct=l(" API \u3092\u4F7F\u3046\u3053\u3068\u3067\u3059\u3002"),Bt=u(),pe=s("p"),_n=l("\u5148\u306B\u9032\u3080\u524D\u306B\u3001\u3042\u306A\u305F\u304C\u8AB0\u3067\u3001\u3069\u306E\u30CD\u30FC\u30E0\u30B9\u30DA\u30FC\u30B9\u306B\u66F8\u304D\u8FBC\u307F\u6A29\u9650\u304C\u3042\u308B\u306E\u304B\u3092\u901A\u77E5\u3059\u308B\u305F\u3081\u306B\u3001\u8A8D\u8A3C\u30C8\u30FC\u30AF\u30F3\u3092\u751F\u6210\u3057\u307E\u3057\u3087\u3046\u3002"),hi=s("code"),gn=l("transformers"),bn=l("\u304C\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\u3055\u308C\u3066\u3044\u308B\u74B0\u5883\u3067\u3042\u308B\u3053\u3068\u3092\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044\uFF08"),pl=s("a"),yn=l("\u30BB\u30C3\u30C8\u30A2\u30C3\u30D7"),vn=l("\u3092\u53C2\u7167\u306E\u3053\u3068\uFF09\u3002\u30CE\u30FC\u30C8\u30D6\u30C3\u30AF\u306E\u5834\u5408\u306F\u3001\u4EE5\u4E0B\u306E\u95A2\u6570\u3092\u4F7F\u3063\u3066\u30ED\u30B0\u30A4\u30F3\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\uFF1A"),xr=u(),E(Vt.$$.fragment),Hr=u(),ul=s("p"),$n=l("\u30BF\u30FC\u30DF\u30CA\u30EB\u4E0A\u3067\u306F\u6B21\u306E\u901A\u308A\u3067\u3059:"),Gr=u(),E(Yt.$$.fragment),Lr=u(),pt=s("p"),kn=l("\u3069\u3061\u3089\u306E\u5834\u5408\u3082\u3001\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u306E\u5165\u529B\u3092\u6C42\u3081\u3089\u308C\u307E\u3059\u304C\u3001\u3053\u308C\u306F Hub \u306B\u30ED\u30B0\u30A4\u30F3\u3059\u308B\u3068\u304D\u306B\u4F7F\u7528\u3059\u308B\u3082\u306E\u3068\u540C\u3058\u3067\u3059\u3002\u3060Hub\u306E\u30D7\u30ED\u30D5\u30A3\u30FC\u30EB\u3092\u304A\u6301\u3061\u3067\u306A\u3044\u65B9\u306F\u3001"),Kt=s("a"),wn=l("\u3053\u3061\u3089"),En=l("\u304B\u3089\u4F5C\u6210\u3057\u3066\u304F\u3060\u3055\u3044\u3002"),Sr=u(),dl=s("p"),jn=l("\u3053\u308C\u3067\u3001\u8A8D\u8A3C\u30C8\u30FC\u30AF\u30F3\u304C\u30AD\u30E3\u30C3\u30B7\u30E5\u30D5\u30A9\u30EB\u30C0\u306B\u4FDD\u5B58\u3055\u308C\u307E\u3057\u305F\u3002\u305D\u308C\u3067\u306F\u3001\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F5C\u6210\u3057\u307E\u3057\u3087\u3046\uFF01"),Nr=u(),Ee.c(),ml=u(),ut=s("p"),Pn=l("\u3088\u308A\u4F4E\u3044\u30EC\u30D9\u30EB\u3067\u306F\u3001\u30E2\u30C7\u30EB\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3001\u304A\u3088\u3073\u8A2D\u5B9A\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u306E "),_i=s("code"),zn=l("push_to_hub()"),An=l(" \u30E1\u30BD\u30C3\u30C9\u3092\u901A\u3058\u3066\u3001\u30E2\u30C7\u30EBHub\u3078\u306E\u30A2\u30AF\u30BB\u30B9\u3092\u76F4\u63A5\u884C\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u3053\u306E\u30E1\u30BD\u30C3\u30C9\u306F\u3001\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u4F5C\u6210\u3068\u3001\u30E2\u30C7\u30EB\u3084\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3078\u306E\u30D7\u30C3\u30B7\u30E5\u306E\u4E21\u65B9\u3092\u884C\u3044\u307E\u3059\u3002\u5F8C\u8FF0\u3059\u308BAPI\u3068\u306F\u7570\u306A\u308A\u3001\u624B\u52D5\u3067\u64CD\u4F5C\u3059\u308B\u5FC5\u8981\u306F\u3042\u308A\u307E\u305B\u3093\u3002"),Rr=u(),hl=s("p"),Tn=l("\u305D\u306E\u4ED5\u7D44\u307F\u3092\u7406\u89E3\u3059\u308B\u305F\u3081\u306B\u3001\u307E\u305A\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u521D\u671F\u5316\u3057\u3066\u307F\u307E\u3057\u3087\u3046\uFF1A"),Ur=u(),Pe.c(),_l=u(),Se=s("p"),Dn=l("\u3053\u308C\u3089\u3092\u4F7F\u3063\u3066\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B\u30C8\u30FC\u30AF\u30F3\u3092\u8FFD\u52A0\u3057\u305F\u308A\u3001\u30E2\u30C7\u30EB\u3092\u5B66\u7FD2\u3055\u305B\u305F\u308A\u3001\u5FAE\u8ABF\u6574\u3057\u305F\u308A\u3068\u3001\u597D\u304D\u306A\u3053\u3068\u3092\u81EA\u7531\u306B\u884C\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u51FA\u6765\u4E0A\u304C\u3063\u305F\u30E2\u30C7\u30EB\u3001\u91CD\u307F\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B\u6E80\u8DB3\u3057\u305F\u3089\u3001"),gi=s("code"),On=l("model"),Cn=l(" \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304B\u3089\u76F4\u63A5\u5229\u7528\u3067\u304D\u308B"),bi=s("code"),Mn=l("push_to_hub()"),In=l("\u30E1\u30BD\u30C3\u30C9\u3092\u6D3B\u7528\u3067\u304D\u307E\u3059\uFF1A"),Wr=u(),E(Jt.$$.fragment),Br=u(),dt=s("p"),qn=l("\u3053\u308C\u3067\u3042\u306A\u305F\u306E\u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u306B\u65B0\u3057\u3044\u30EA\u30DD\u30B8\u30C8\u30EA "),yi=s("code"),Fn=l("dummy-model"),xn=l(" \u304C\u4F5C\u6210\u3055\u308C\u3001\u30E2\u30C7\u30EB\u30D5\u30A1\u30A4\u30EB\u304C\u305D\u3053\u306B\u683C\u7D0D\u3055\u308C\u307E\u3059\u3002\u3059\u3079\u3066\u306E\u30D5\u30A1\u30A4\u30EB\u304C\u3053\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3067\u5229\u7528\u3067\u304D\u308B\u3088\u3046\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B\u3082\u540C\u69D8\u306B\u5B9F\u884C\u3057\u3066\u304F\u3060\u3055\u3044\uFF1A"),Vr=u(),E(Xt.$$.fragment),Yr=u(),mt=s("p"),Hn=l("\u7D44\u7E54\u306B\u6240\u5C5E\u3057\u3066\u3044\u308B\u5834\u5408\u3001"),vi=s("code"),Gn=l("organization"),Ln=l("\u5F15\u6570\u3092\u6307\u5B9A\u3059\u308B\u3053\u3068\u3067\u5F53\u8A72\u7D44\u7E54\u306E\u30CD\u30FC\u30E0\u30B9\u30DA\u30FC\u30B9\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3067\u304D\u307E\u3059\uFF1A"),Kr=u(),E(Zt.$$.fragment),Jr=u(),gl=s("p"),Sn=l("\u7279\u5B9A\u306EHugging Face\u30C8\u30FC\u30AF\u30F3\u3092\u4F7F\u3046\u3053\u3068\u3082\u3067\u304D\u307E\u3059\uFF1A"),Xr=u(),E(Qt.$$.fragment),Zr=u(),ht=s("p"),Nn=l("\u3055\u3042\u3001\u65B0\u3057\u304F\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u305F\u30E2\u30C7\u30EB\u3092\u30E2\u30C7\u30EBHub\u3067\u898B\u3066\u307F\u307E\u3057\u3087\u3046\uFF1A"),$i=s("em"),eo=s("a"),Rn=l("https://huggingface.co/user-or-organization/dummy-model"),Un=l("."),Qr=u(),bl=s("p"),Wn=l("\u201CFiles and versions\u201D\u30BF\u30D6\u3092\u30AF\u30EA\u30C3\u30AF\u3059\u308B\u3068\u3001\u3053\u308C\u3089\u306E\u30D5\u30A1\u30A4\u30EB\u304C\u8868\u793A\u3055\u308C\u308B\u306F\u305A\u3067\u3059\uFF1A"),es=u(),st.c(),yl=u(),E(_t.$$.fragment),ts=u(),Ne=s("p"),Bn=l("\u3053\u308C\u307E\u3067\u898B\u3066\u304D\u305F\u3088\u3046\u306B\u3001"),ki=s("code"),Vn=l("push_to_hub()"),Yn=l("\u30E1\u30BD\u30C3\u30C9\u306F\u3044\u304F\u3064\u304B\u306E\u5F15\u6570\u3092\u3068\u308B\u306E\u3067\u3001\u7279\u5B9A\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3084\u7D44\u7E54\u306E\u30CD\u30FC\u30E0\u30B9\u30DA\u30FC\u30B9\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u305F\u308A\u3001\u5225\u306EAPI \u30C8\u30FC\u30AF\u30F3\u3092\u4F7F\u7528\u3057\u305F\u308A\u3059\u308B\u3053\u3068\u304C\u53EF\u80FD\u3067\u3059\u3002\u8A73\u7D30\u306B\u3064\u3044\u3066\u306F\u3001"),to=s("a"),Kn=l("\u{1F917} Transformers documentation"),Jn=l("\u3067\u4ED5\u69D8\u3092\u78BA\u8A8D\u3059\u308B\u3053\u3068\u3092\u304A\u52E7\u3081\u3057\u307E\u3059\u3002"),os=u(),me=s("p"),Xn=l("\u3053\u306E"),wi=s("code"),Zn=l("push_to_hub()"),Qn=l("\u30E1\u30BD\u30C3\u30C9\u306F\u3001Hugging Face Hub\u306B\u76F4\u63A5\u30A2\u30AF\u30BB\u30B9\u3067\u304D\u308B"),oo=s("a"),Ei=s("code"),ef=l("huggingface_hub"),tf=l(" Python\u30D1\u30C3\u30B1\u30FC\u30B8\u3067\u5B9F\u88C5\u3055\u308C\u3066\u304A\u308A\u3001\u{1F917} Transformers\u3084\u3001"),lo=s("a"),ji=s("code"),of=l("allenlp"),lf=l("\u3068\u3044\u3063\u305F\u3001\u4ED6\u306E\u6A5F\u68B0\u5B66\u7FD2\u30E9\u30A4\u30D6\u30E9\u30EA\u306B\u7D71\u5408\u3055\u308C\u3066\u3044\u307E\u3059\u3002\u3053\u306E\u7AE0\u3067\u306F\u{1F917} Transformers\u306B\u7126\u70B9\u3092\u5F53\u3066\u307E\u3059\u304C\u3001\u3042\u306A\u305F\u81EA\u8EAB\u306E\u30B3\u30FC\u30C9\u3084\u30E9\u30A4\u30D6\u30E9\u30EA\u306B\u7D71\u5408\u3059\u308B\u3053\u3068\u306F\u7C21\u5358\u3067\u3059\u3002"),ls=u(),vl=s("p"),rf=l("\u6700\u5F8C\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u306B\u79FB\u52D5\u3057\u3066\u3001\u65B0\u3057\u304F\u4F5C\u6210\u3057\u305F\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u65B9\u6CD5\u3092\u3054\u89A7\u304F\u3060\u3055\u3044\uFF01"),is=u(),et=s("h2"),gt=s("a"),Pi=s("span"),E(io.$$.fragment),sf=u(),$l=s("span"),zi=s("code"),af=l("huggingface_hub"),nf=l(" Python\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u4F7F\u7528\u3059\u308B"),rs=u(),ro=s("p"),Ai=s("code"),ff=l("huggingface_hub"),cf=l(" Python\u30E9\u30A4\u30D6\u30E9\u30EA\u306F\u3001\u30E2\u30C7\u30EB\u3068\u30C7\u30FC\u30BF\u30BB\u30C3\u30C8\u306E\u30CF\u30D6\u306E\u305F\u3081\u306E\u30C4\u30FC\u30EB\u30BB\u30C3\u30C8\u3092\u63D0\u4F9B\u3059\u308B\u30D1\u30C3\u30B1\u30FC\u30B8\u3067\u3059\u3002\u30CF\u30D6\u4E0A\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u95A2\u3059\u308B\u60C5\u5831\u3092\u53D6\u5F97\u3057\u3001\u305D\u308C\u3089\u3092\u7BA1\u7406\u3059\u308B\u3088\u3046\u306A\u4E00\u822C\u7684\u306A\u30BF\u30B9\u30AF\u306E\u305F\u3081\u306E\u30B7\u30F3\u30D7\u30EB\u306A\u30E1\u30BD\u30C3\u30C9\u3068\u30AF\u30E9\u30B9\u3092\u63D0\u4F9B\u3057\u307E\u3059\u3002\u307E\u305F\u3001\u3053\u308C\u3089\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u30B3\u30F3\u30C6\u30F3\u30C4\u3092\u7BA1\u7406\u3057\u3001\u3042\u306A\u305F\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u3084\u30E9\u30A4\u30D6\u30E9\u30EA\u306BHub\u3092\u7D71\u5408\u3059\u308B\u305F\u3081\u306B\u3001git\u306E\u4E0A\u3067\u52D5\u4F5C\u3059\u308B\u30B7\u30F3\u30D7\u30EB\u306AAPI\u3092\u63D0\u4F9B\u3057\u307E\u3059\u3002"),ss=u(),he=s("p"),pf=l("Similarly to using the "),Ti=s("code"),uf=l("push_to_hub"),df=l(" API, this will require you to have your API token saved in your cache. In order to do this, you will need to use the "),Di=s("code"),mf=l("login"),hf=l(" command from the CLI, as mentioned in the previous section (again, make sure to prepend these commands with the "),Oi=s("code"),_f=l("!"),gf=l(" character if running in Google Colab):"),as=u(),E(so.$$.fragment),ns=u(),bt=s("p"),bf=l("The "),Ci=s("code"),yf=l("huggingface_hub"),vf=l(" package offers several methods and classes which are useful for our purpose. Firstly, there are a few methods to manage repository creation, deletion, and others:"),fs=u(),E(ao.$$.fragment),cs=u(),yt=s("p"),$f=l("Additionally, it offers the very powerful "),Mi=s("code"),kf=l("Repository"),wf=l(" class to manage a local repository. We will explore these methods and that class in the next few section to understand how to leverage them."),ps=u(),vt=s("p"),Ef=l("The "),Ii=s("code"),jf=l("create_repo"),Pf=l(" method can be used to create a new repository on the hub:"),us=u(),E(no.$$.fragment),ds=u(),Re=s("p"),zf=l("This will create the repository "),qi=s("code"),Af=l("dummy-model"),Tf=l(" in your namespace. If you like, you can specify which organization the repository should belong to using the "),Fi=s("code"),Df=l("organization"),Of=l(" argument:"),ms=u(),E(fo.$$.fragment),hs=u(),Ue=s("p"),Cf=l("This will create the "),xi=s("code"),Mf=l("dummy-model"),If=l(" repository in the "),Hi=s("code"),qf=l("huggingface"),Ff=l(` namespace, assuming you belong to that organization.
Other arguments which may be useful are:`),_s=u(),We=s("ul"),kl=s("li"),Gi=s("code"),xf=l("private"),Hf=l(", in order to specify if the repository should be visible from others or not."),Gf=u(),wl=s("li"),Li=s("code"),Lf=l("token"),Sf=l(", if you would like to override the token stored in your cache by a given token."),Nf=u(),se=s("li"),Si=s("code"),Rf=l("repo_type"),Uf=l(", if you would like to create a "),Ni=s("code"),Wf=l("dataset"),Bf=l(" or a "),Ri=s("code"),Vf=l("space"),Yf=l(" instead of a model. Accepted values are "),Ui=s("code"),Kf=l('"dataset"'),Jf=l(" and "),Wi=s("code"),Xf=l('"space"'),Zf=l("."),gs=u(),El=s("p"),Qf=l("Once the repository is created, we should add files to it! Jump to the next section to see the three ways this can be handled."),bs=u(),tt=s("h2"),$t=s("a"),Bi=s("span"),E(co.$$.fragment),ec=u(),Vi=s("span"),tc=l("Using the web interface"),ys=u(),jl=s("p"),oc=l("The web interface offers tools to manage repositories directly in the Hub. Using the interface, you can easily create repositories, add files (even large ones!), explore models, visualize diffs, and much more."),vs=u(),kt=s("p"),lc=l("To create a new repository, visit "),po=s("a"),ic=l("huggingface.co/new"),rc=l(":"),$s=u(),uo=s("div"),mo=s("img"),ks=u(),Pl=s("p"),sc=l("First, specify the owner of the repository: this can be either you or any of the organizations you\u2019re affiliated with. If you choose an organization, the model will be featured on the organization\u2019s page and every member of the organization will have the ability to contribute to the repository."),ws=u(),zl=s("p"),ac=l("Next, enter your model\u2019s name. This will also be the name of the repository. Finally, you can specify whether you want your model to be public or private. Private models are hidden from public view."),Es=u(),Al=s("p"),nc=l("After creating your model repository, you should see a page like this:"),js=u(),ho=s("div"),_o=s("img"),Ps=u(),Tl=s("p"),fc=l("This is where your model will be hosted. To start populating it, you can add a README file directly from the web interface."),zs=u(),go=s("div"),bo=s("img"),As=u(),Dl=s("p"),cc=l("The README file is in Markdown \u2014 feel free to go wild with it! The third part of this chapter is dedicated to building a model card. These are of prime importance in bringing value to your model, as they\u2019re where you tell others what it can do."),Ts=u(),Be=s("p"),pc=l("If you look at the \u201CFiles and versions\u201D tab, you\u2019ll see that there aren\u2019t many files there yet \u2014 just the "),Yi=s("em"),uc=l("README.md"),dc=l(" you just created and the "),Ki=s("em"),mc=l(".gitattributes"),hc=l(" file that keeps track of large files."),Ds=u(),yo=s("div"),vo=s("img"),Os=u(),Ol=s("p"),_c=l("We\u2019ll take a look at how to add some new files next."),Cs=u(),ot=s("h2"),wt=s("a"),Ji=s("span"),E($o.$$.fragment),gc=u(),Xi=s("span"),bc=l("Uploading the model files"),Ms=u(),Et=s("p"),yc=l("The system to manage files on the Hugging Face Hub is based on git for regular files, and git-lfs (which stands for "),ko=s("a"),vc=l("Git Large File Storage"),$c=l(") for larger files."),Is=u(),jt=s("p"),kc=l("In the next section, we go over three different ways of uploading files to the Hub: through "),Zi=s("code"),wc=l("huggingface_hub"),Ec=l(" and through git commands."),qs=u(),lt=s("h3"),Pt=s("a"),Qi=s("span"),E(wo.$$.fragment),jc=u(),Eo=s("span"),Pc=l("The "),er=s("code"),zc=l("upload_file"),Ac=l(" approach"),Fs=u(),zt=s("p"),Tc=l("Using "),tr=s("code"),Dc=l("upload_file"),Oc=l(` does not require git and git-lfs to be installed on your system. It pushes files directly to the \u{1F917} Hub using HTTP POST requests. A limitation of this approach is that it doesn\u2019t handle files that are larger than 5GB in size.
If your files are larger than 5GB, please follow the two other methods detailed below.`),xs=u(),Cl=s("p"),Cc=l("The API may be used as follows:"),Hs=u(),E(jo.$$.fragment),Gs=u(),ae=s("p"),Mc=l("This will upload the file "),or=s("code"),Ic=l("config.json"),qc=l(" available at "),lr=s("code"),Fc=l("<path_to_file>"),xc=l(" to the root of the repository as "),ir=s("code"),Hc=l("config.json"),Gc=l(", to the "),rr=s("code"),Lc=l("dummy-model"),Sc=l(` repository.
Other arguments which may be useful are:`),Ls=u(),At=s("ul"),Ml=s("li"),sr=s("code"),Nc=l("token"),Rc=l(", if you would like to override the token stored in your cache by a given token."),Uc=u(),ne=s("li"),ar=s("code"),Wc=l("repo_type"),Bc=l(", if you would like to upload to a "),nr=s("code"),Vc=l("dataset"),Yc=l(" or a "),fr=s("code"),Kc=l("space"),Jc=l(" instead of a model. Accepted values are "),cr=s("code"),Xc=l('"dataset"'),Zc=l(" and "),pr=s("code"),Qc=l('"space"'),ep=l("."),Ss=u(),it=s("h3"),Tt=s("a"),ur=s("span"),E(Po.$$.fragment),tp=u(),zo=s("span"),op=l("The "),dr=s("code"),lp=l("Repository"),ip=l(" class"),Ns=u(),Dt=s("p"),rp=l("The "),mr=s("code"),sp=l("Repository"),ap=l(" class manages a local repository in a git-like manner. It abstracts most of the pain points one may have with git to provide all features that we require."),Rs=u(),Ot=s("p"),np=l("Using this class requires having git and git-lfs installed, so make sure you have git-lfs installed (see "),Ao=s("a"),fp=l("here"),cp=l(" for installation instructions) and set up before you begin."),Us=u(),Il=s("p"),pp=l("In order to start playing around with the repository we have just created, we can start by initialising it into a local folder by cloning the remote repository:"),Ws=u(),E(To.$$.fragment),Bs=u(),_e=s("p"),up=l("This created the folder "),hr=s("code"),dp=l("<path_to_dummy_folder>"),mp=l(" in our working directory. This folder only contains the "),_r=s("code"),hp=l(".gitattributes"),_p=l(" file as that\u2019s the only file created when instantiating the repository through "),gr=s("code"),gp=l("create_repo"),bp=l("."),Vs=u(),ql=s("p"),yp=l("From this point on, we may leverage several of the traditional git methods:"),Ys=u(),E(Do.$$.fragment),Ks=u(),Ve=s("p"),vp=l("And others! We recommend taking a look at the "),br=s("code"),$p=l("Repository"),kp=l(" documentation available "),Oo=s("a"),wp=l("here"),Ep=l(" for an overview of all available methods."),Js=u(),Fl=s("p"),jp=l("At present, we have a model and a tokenizer that we would like to push to the hub. We have successfully cloned the repository, we can therefore save the files within that repository."),Xs=u(),xl=s("p"),Pp=l("We first make sure that our local clone is up to date by pulling the latest changes:"),Zs=u(),E(Co.$$.fragment),Qs=u(),Hl=s("p"),zp=l("Once that is done, we save the model and tokenizer files:"),ea=u(),E(Mo.$$.fragment),ta=u(),Ct=s("p"),Ap=l("The "),yr=s("code"),Tp=l("<path_to_dummy_folder>"),Dp=l(" now contains all the model and tokenizer files. We follow the usual git workflow by adding files to the staging area, committing them and pushing them to the hub:"),oa=u(),E(Io.$$.fragment),la=u(),Gl=s("p"),Op=l("Congratulations! You just pushed your first files on the hub."),ia=u(),rt=s("h3"),Mt=s("a"),vr=s("span"),E(qo.$$.fragment),Cp=u(),$r=s("span"),Mp=l("The git-based approach"),ra=u(),Ll=s("p"),Ip=l("This is the very barebones approach to uploading files: we\u2019ll do so with git and git-lfs directly. Most of the difficulty is abstracted away by previous approaches, but there are a few caveats with the following method so we\u2019ll follow a more complex use-case."),sa=u(),It=s("p"),qp=l("Using this class requires having git and git-lfs installed, so make sure you have "),Fo=s("a"),Fp=l("git-lfs"),xp=l(" installed (see here for installation instructions) and set up before you begin."),aa=u(),Sl=s("p"),Hp=l("First start by initializing git-lfs:"),na=u(),E(xo.$$.fragment),fa=u(),E(Ho.$$.fragment),ca=u(),Nl=s("p"),Gp=l("Once that\u2019s done, the first step is to clone your model repository:"),pa=u(),E(Go.$$.fragment),ua=u(),Ye=s("p"),Lp=l("My username is "),kr=s("code"),Sp=l("lysandre"),Np=l(" and I\u2019ve used the model name "),wr=s("code"),Rp=l("dummy"),Up=l(", so for me the command ends up looking like the following:"),da=u(),E(Lo.$$.fragment),ma=u(),Ke=s("p"),Wp=l("I now have a folder named "),Er=s("em"),Bp=l("dummy"),Vp=l(" in my working directory. I can "),jr=s("code"),Yp=l("cd"),Kp=l(" into the folder and have a look at the contents:"),ha=u(),E(So.$$.fragment),_a=u(),E(No.$$.fragment),ga=u(),fe=s("p"),Jp=l("If you just created your repository using Hugging Face Hub\u2019s "),Pr=s("code"),Xp=l("create_repo"),Zp=l(" method, this folder should only contain a hidden "),zr=s("code"),Qp=l(".gitattributes"),eu=l(" file. If you followed the instructions in the previous section to create a repository using the web interface, the folder should contain a single "),Ar=s("em"),tu=l("README.md"),ou=l(" file alongside the hidden "),Tr=s("code"),lu=l(".gitattributes"),iu=l(" file, as shown here."),ba=u(),qt=s("p"),ru=l("Adding a regular-sized file, such as a configuration file, a vocabulary file, or basically any file under a few megabytes, is done exactly as one would do it in any git-based system. However, bigger files must be registered through git-lfs in order to push them to "),Dr=s("em"),su=l("huggingface.co"),au=l("."),ya=u(),Rl=s("p"),nu=l("Let\u2019s go back to Python for a bit to generate a model and tokenizer that we\u2019d like to commit to our dummy repository:"),va=u(),Ae.c(),Ul=u(),Ft=s("p"),fu=l("Now that we\u2019ve saved some model and tokenizer artifacts, let\u2019s take another look at the "),Or=s("em"),cu=l("dummy"),pu=l(" folder:"),$a=u(),E(Ro.$$.fragment),ka=u(),De.c(),Wl=u(),E(xt.$$.fragment),wa=u(),Ht=s("p"),uu=l("We can now go ahead and proceed like we would usually do with traditional Git repositories. We can add all the files to Git\u2019s staging environment using the "),Cr=s("code"),du=l("git add"),mu=l(" command:"),Ea=u(),E(Uo.$$.fragment),ja=u(),Bl=s("p"),hu=l("We can then have a look at the files that are currently staged:"),Pa=u(),E(Wo.$$.fragment),za=u(),Ce.c(),Vl=u(),Gt=s("p"),_u=l("Similarly, we can make sure that git-lfs is tracking the correct files by using its "),Mr=s("code"),gu=l("status"),bu=l(" command:"),Aa=u(),E(Bo.$$.fragment),Ta=u(),Ie.c(),Yl=u(),Lt=s("p"),yu=l("Let\u2019s proceed to the final steps, committing and pushing to the "),Ir=s("em"),vu=l("huggingface.co"),$u=l(" remote repository:"),Da=u(),E(Vo.$$.fragment),Oa=u(),Fe.c(),Kl=u(),Jl=s("p"),ku=l("Pushing can take a bit of time, depending on the speed of your internet connection and the size of your files:"),Ca=u(),E(Yo.$$.fragment),Ma=u(),E(Ko.$$.fragment),Ia=u(),at.c(),Xl=bh(),this.h()},l(e){const r=Eh('[data-svelte="svelte-1phssyn"]',document.head);p=a(r,"META",{name:!0,content:!0}),r.forEach(t),m=d(e),j(c.$$.fragment,e),g=d(e),$=a(e,"H1",{id:!0});var qr=f($);I=i(qr,"\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u3092\u5171\u6709\u3059\u308B"),qr.forEach(t),F=d(e),T.l(e),C=d(e),D=a(e,"P",{});var Zl=f(D);h=i(Zl,"\u4EE5\u4E0B\u306E\u30B9\u30C6\u30C3\u30D7\u3067\u306F\u3001\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u3092\u{1F917}Hub\u306B\u5171\u6709\u3059\u308B\u6700\u3082\u7C21\u5358\u306A\u65B9\u6CD5\u306B\u3064\u3044\u3066\u898B\u3066\u3044\u304D\u307E\u3059\u3002Hub\u4E0A\u3067\u76F4\u63A5\u30E2\u30C7\u30EB\u3092\u5171\u6709\u3057\u3001\u66F4\u65B0\u3067\u304D\u308B\u30C4\u30FC\u30EB\u3084\u30E6\u30FC\u30C6\u30A3\u30EA\u30C6\u30A3\u304C\u7528\u610F\u3055\u308C\u3066\u3044\u307E\u3059\u306E\u3067\u3001\u4EE5\u4E0B\u3001\u305D\u308C\u3092\u898B\u3066\u3044\u304D\u307E\u3059\u3002"),Zl.forEach(t),k=d(e),j(v.$$.fragment,e),A=d(e),H=a(e,"P",{});var Ql=f(H);R=i(Ql,"\u305F\u3068\u3048\u975E\u5E38\u306B\u7279\u6B8A\u306A\u30C7\u30FC\u30BF\u30BB\u30C3\u30C8\u3067\u5B66\u7FD2\u3055\u305B\u305F\u3068\u3057\u3066\u3082\u3001\u30E2\u30C7\u30EB\u3092\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306B\u5171\u6709\u3059\u308B\u3053\u3068\u3092\u304A\u52E7\u3081\u3057\u307E\u3059\u3002\u4ED6\u306E\u30E6\u30FC\u30B6\u30FC\u306E\u6642\u9593\u3068\u8A08\u7B97\u8CC7\u6E90\u3092\u7BC0\u7D04\u3057\u3001\u6709\u7528\u306A\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u3092\u63D0\u4F9B\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u308B\u304B\u3089\u3067\u3059\u3002\u4EE3\u308F\u308A\u306B\u3001\u4ED6\u306E\u4EBA\u306E\u6210\u679C\u7269\u306E\u6069\u6075\u3092\u53D7\u3051\u308B\u3053\u3068\u3082\u3067\u304D\u307E\u3059\uFF01"),Ql.forEach(t),G=d(e),L=a(e,"P",{});var ei=f(L);Q=i(ei,"\u65B0\u3057\u3044\u30E2\u30C7\u30EB\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F5C\u6210\u3059\u308B\u306B\u306F\u3001\u6B21\u306E3\u3064\u306E\u65B9\u6CD5\u304C\u3042\u308A\u307E\u3059\uFF1A"),ei.forEach(t),J=d(e),U=a(e,"UL",{});var Je=f(U);B=a(Je,"LI",{});var ti=f(B);te=a(ti,"CODE",{});var oi=f(te);ge=i(oi,"push_to_hub"),oi.forEach(t),ue=i(ti," API\u3092\u4F7F\u7528\u3059\u308B"),ti.forEach(t),X=d(Je),V=a(Je,"LI",{});var rl=f(V);oe=a(rl,"CODE",{});var Fr=f(oe);ce=i(Fr,"huggingface_hub"),Fr.forEach(t),be=i(rl," Python\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u4F7F\u7528\u3059\u308B"),rl.forEach(t),de=d(Je),x=a(Je,"LI",{});var li=f(x);S=i(li,"Web\u30A4\u30F3\u30BF\u30FC\u30D5\u30A7\u30A4\u30B9\u3092\u4F7F\u7528\u3059\u308B"),li.forEach(t),Je.forEach(t),ye=d(e),le=a(e,"P",{});var ii=f(le);K=i(ii,"\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F5C\u6210\u3057\u305F\u3089\u3001git \u3068 git-lfs \u3092\u4F7F\u3063\u3066\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u4EE5\u4E0B\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u30E2\u30C7\u30EB\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F5C\u6210\u3057\u3001\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u65B9\u6CD5\u3092\u8AAC\u660E\u3057\u307E\u3059\u3002"),ii.forEach(t),ve=d(e),Z=a(e,"H2",{class:!0});var St=f(Z);Y=a(St,"A",{id:!0,class:!0,href:!0});var ed=f(Y);ee=a(ed,"SPAN",{});var td=f(ee);j(ie.$$.fragment,td),td.forEach(t),ed.forEach(t),$e=d(St),M=a(St,"SPAN",{});var wu=f(M);N=a(wu,"CODE",{});var od=f(N);al=i(od,"push_to_hub"),od.forEach(t),nl=i(wu," API\u3092\u4F7F\u7528\u3059\u308B"),wu.forEach(t),St.forEach(t),Wt=d(e),re.l(e),Qe=d(e),ke=a(e,"P",{});var Ha=f(ke);fl=i(Ha,"Hub \u306B\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u6700\u3082\u7C21\u5358\u306A\u65B9\u6CD5\u306F\u3001"),Le=a(Ha,"CODE",{});var ld=f(Le);cl=i(ld,"push_to_hub"),ld.forEach(t),ct=i(Ha," API \u3092\u4F7F\u3046\u3053\u3068\u3067\u3059\u3002"),Ha.forEach(t),Bt=d(e),pe=a(e,"P",{});var ri=f(pe);_n=i(ri,"\u5148\u306B\u9032\u3080\u524D\u306B\u3001\u3042\u306A\u305F\u304C\u8AB0\u3067\u3001\u3069\u306E\u30CD\u30FC\u30E0\u30B9\u30DA\u30FC\u30B9\u306B\u66F8\u304D\u8FBC\u307F\u6A29\u9650\u304C\u3042\u308B\u306E\u304B\u3092\u901A\u77E5\u3059\u308B\u305F\u3081\u306B\u3001\u8A8D\u8A3C\u30C8\u30FC\u30AF\u30F3\u3092\u751F\u6210\u3057\u307E\u3057\u3087\u3046\u3002"),hi=a(ri,"CODE",{});var id=f(hi);gn=i(id,"transformers"),id.forEach(t),bn=i(ri,"\u304C\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\u3055\u308C\u3066\u3044\u308B\u74B0\u5883\u3067\u3042\u308B\u3053\u3068\u3092\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044\uFF08"),pl=a(ri,"A",{href:!0});var rd=f(pl);yn=i(rd,"\u30BB\u30C3\u30C8\u30A2\u30C3\u30D7"),rd.forEach(t),vn=i(ri,"\u3092\u53C2\u7167\u306E\u3053\u3068\uFF09\u3002\u30CE\u30FC\u30C8\u30D6\u30C3\u30AF\u306E\u5834\u5408\u306F\u3001\u4EE5\u4E0B\u306E\u95A2\u6570\u3092\u4F7F\u3063\u3066\u30ED\u30B0\u30A4\u30F3\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\uFF1A"),ri.forEach(t),xr=d(e),j(Vt.$$.fragment,e),Hr=d(e),ul=a(e,"P",{});var sd=f(ul);$n=i(sd,"\u30BF\u30FC\u30DF\u30CA\u30EB\u4E0A\u3067\u306F\u6B21\u306E\u901A\u308A\u3067\u3059:"),sd.forEach(t),Gr=d(e),j(Yt.$$.fragment,e),Lr=d(e),pt=a(e,"P",{});var Ga=f(pt);kn=i(Ga,"\u3069\u3061\u3089\u306E\u5834\u5408\u3082\u3001\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u306E\u5165\u529B\u3092\u6C42\u3081\u3089\u308C\u307E\u3059\u304C\u3001\u3053\u308C\u306F Hub \u306B\u30ED\u30B0\u30A4\u30F3\u3059\u308B\u3068\u304D\u306B\u4F7F\u7528\u3059\u308B\u3082\u306E\u3068\u540C\u3058\u3067\u3059\u3002\u3060Hub\u306E\u30D7\u30ED\u30D5\u30A3\u30FC\u30EB\u3092\u304A\u6301\u3061\u3067\u306A\u3044\u65B9\u306F\u3001"),Kt=a(Ga,"A",{href:!0,rel:!0});var ad=f(Kt);wn=i(ad,"\u3053\u3061\u3089"),ad.forEach(t),En=i(Ga,"\u304B\u3089\u4F5C\u6210\u3057\u3066\u304F\u3060\u3055\u3044\u3002"),Ga.forEach(t),Sr=d(e),dl=a(e,"P",{});var nd=f(dl);jn=i(nd,"\u3053\u308C\u3067\u3001\u8A8D\u8A3C\u30C8\u30FC\u30AF\u30F3\u304C\u30AD\u30E3\u30C3\u30B7\u30E5\u30D5\u30A9\u30EB\u30C0\u306B\u4FDD\u5B58\u3055\u308C\u307E\u3057\u305F\u3002\u305D\u308C\u3067\u306F\u3001\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F5C\u6210\u3057\u307E\u3057\u3087\u3046\uFF01"),nd.forEach(t),Nr=d(e),Ee.l(e),ml=d(e),ut=a(e,"P",{});var La=f(ut);Pn=i(La,"\u3088\u308A\u4F4E\u3044\u30EC\u30D9\u30EB\u3067\u306F\u3001\u30E2\u30C7\u30EB\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3001\u304A\u3088\u3073\u8A2D\u5B9A\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u306E "),_i=a(La,"CODE",{});var fd=f(_i);zn=i(fd,"push_to_hub()"),fd.forEach(t),An=i(La," \u30E1\u30BD\u30C3\u30C9\u3092\u901A\u3058\u3066\u3001\u30E2\u30C7\u30EBHub\u3078\u306E\u30A2\u30AF\u30BB\u30B9\u3092\u76F4\u63A5\u884C\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u3053\u306E\u30E1\u30BD\u30C3\u30C9\u306F\u3001\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u4F5C\u6210\u3068\u3001\u30E2\u30C7\u30EB\u3084\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3078\u306E\u30D7\u30C3\u30B7\u30E5\u306E\u4E21\u65B9\u3092\u884C\u3044\u307E\u3059\u3002\u5F8C\u8FF0\u3059\u308BAPI\u3068\u306F\u7570\u306A\u308A\u3001\u624B\u52D5\u3067\u64CD\u4F5C\u3059\u308B\u5FC5\u8981\u306F\u3042\u308A\u307E\u305B\u3093\u3002"),La.forEach(t),Rr=d(e),hl=a(e,"P",{});var cd=f(hl);Tn=i(cd,"\u305D\u306E\u4ED5\u7D44\u307F\u3092\u7406\u89E3\u3059\u308B\u305F\u3081\u306B\u3001\u307E\u305A\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u521D\u671F\u5316\u3057\u3066\u307F\u307E\u3057\u3087\u3046\uFF1A"),cd.forEach(t),Ur=d(e),Pe.l(e),_l=d(e),Se=a(e,"P",{});var si=f(Se);Dn=i(si,"\u3053\u308C\u3089\u3092\u4F7F\u3063\u3066\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B\u30C8\u30FC\u30AF\u30F3\u3092\u8FFD\u52A0\u3057\u305F\u308A\u3001\u30E2\u30C7\u30EB\u3092\u5B66\u7FD2\u3055\u305B\u305F\u308A\u3001\u5FAE\u8ABF\u6574\u3057\u305F\u308A\u3068\u3001\u597D\u304D\u306A\u3053\u3068\u3092\u81EA\u7531\u306B\u884C\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u51FA\u6765\u4E0A\u304C\u3063\u305F\u30E2\u30C7\u30EB\u3001\u91CD\u307F\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B\u6E80\u8DB3\u3057\u305F\u3089\u3001"),gi=a(si,"CODE",{});var pd=f(gi);On=i(pd,"model"),pd.forEach(t),Cn=i(si," \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304B\u3089\u76F4\u63A5\u5229\u7528\u3067\u304D\u308B"),bi=a(si,"CODE",{});var ud=f(bi);Mn=i(ud,"push_to_hub()"),ud.forEach(t),In=i(si,"\u30E1\u30BD\u30C3\u30C9\u3092\u6D3B\u7528\u3067\u304D\u307E\u3059\uFF1A"),si.forEach(t),Wr=d(e),j(Jt.$$.fragment,e),Br=d(e),dt=a(e,"P",{});var Sa=f(dt);qn=i(Sa,"\u3053\u308C\u3067\u3042\u306A\u305F\u306E\u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u306B\u65B0\u3057\u3044\u30EA\u30DD\u30B8\u30C8\u30EA "),yi=a(Sa,"CODE",{});var dd=f(yi);Fn=i(dd,"dummy-model"),dd.forEach(t),xn=i(Sa," \u304C\u4F5C\u6210\u3055\u308C\u3001\u30E2\u30C7\u30EB\u30D5\u30A1\u30A4\u30EB\u304C\u305D\u3053\u306B\u683C\u7D0D\u3055\u308C\u307E\u3059\u3002\u3059\u3079\u3066\u306E\u30D5\u30A1\u30A4\u30EB\u304C\u3053\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3067\u5229\u7528\u3067\u304D\u308B\u3088\u3046\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B\u3082\u540C\u69D8\u306B\u5B9F\u884C\u3057\u3066\u304F\u3060\u3055\u3044\uFF1A"),Sa.forEach(t),Vr=d(e),j(Xt.$$.fragment,e),Yr=d(e),mt=a(e,"P",{});var Na=f(mt);Hn=i(Na,"\u7D44\u7E54\u306B\u6240\u5C5E\u3057\u3066\u3044\u308B\u5834\u5408\u3001"),vi=a(Na,"CODE",{});var md=f(vi);Gn=i(md,"organization"),md.forEach(t),Ln=i(Na,"\u5F15\u6570\u3092\u6307\u5B9A\u3059\u308B\u3053\u3068\u3067\u5F53\u8A72\u7D44\u7E54\u306E\u30CD\u30FC\u30E0\u30B9\u30DA\u30FC\u30B9\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3067\u304D\u307E\u3059\uFF1A"),Na.forEach(t),Kr=d(e),j(Zt.$$.fragment,e),Jr=d(e),gl=a(e,"P",{});var hd=f(gl);Sn=i(hd,"\u7279\u5B9A\u306EHugging Face\u30C8\u30FC\u30AF\u30F3\u3092\u4F7F\u3046\u3053\u3068\u3082\u3067\u304D\u307E\u3059\uFF1A"),hd.forEach(t),Xr=d(e),j(Qt.$$.fragment,e),Zr=d(e),ht=a(e,"P",{});var Ra=f(ht);Nn=i(Ra,"\u3055\u3042\u3001\u65B0\u3057\u304F\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u305F\u30E2\u30C7\u30EB\u3092\u30E2\u30C7\u30EBHub\u3067\u898B\u3066\u307F\u307E\u3057\u3087\u3046\uFF1A"),$i=a(Ra,"EM",{});var _d=f($i);eo=a(_d,"A",{href:!0,rel:!0});var gd=f(eo);Rn=i(gd,"https://huggingface.co/user-or-organization/dummy-model"),gd.forEach(t),_d.forEach(t),Un=i(Ra,"."),Ra.forEach(t),Qr=d(e),bl=a(e,"P",{});var bd=f(bl);Wn=i(bd,"\u201CFiles and versions\u201D\u30BF\u30D6\u3092\u30AF\u30EA\u30C3\u30AF\u3059\u308B\u3068\u3001\u3053\u308C\u3089\u306E\u30D5\u30A1\u30A4\u30EB\u304C\u8868\u793A\u3055\u308C\u308B\u306F\u305A\u3067\u3059\uFF1A"),bd.forEach(t),es=d(e),st.l(e),yl=d(e),j(_t.$$.fragment,e),ts=d(e),Ne=a(e,"P",{});var ai=f(Ne);Bn=i(ai,"\u3053\u308C\u307E\u3067\u898B\u3066\u304D\u305F\u3088\u3046\u306B\u3001"),ki=a(ai,"CODE",{});var yd=f(ki);Vn=i(yd,"push_to_hub()"),yd.forEach(t),Yn=i(ai,"\u30E1\u30BD\u30C3\u30C9\u306F\u3044\u304F\u3064\u304B\u306E\u5F15\u6570\u3092\u3068\u308B\u306E\u3067\u3001\u7279\u5B9A\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3084\u7D44\u7E54\u306E\u30CD\u30FC\u30E0\u30B9\u30DA\u30FC\u30B9\u306B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u305F\u308A\u3001\u5225\u306EAPI \u30C8\u30FC\u30AF\u30F3\u3092\u4F7F\u7528\u3057\u305F\u308A\u3059\u308B\u3053\u3068\u304C\u53EF\u80FD\u3067\u3059\u3002\u8A73\u7D30\u306B\u3064\u3044\u3066\u306F\u3001"),to=a(ai,"A",{href:!0,rel:!0});var vd=f(to);Kn=i(vd,"\u{1F917} Transformers documentation"),vd.forEach(t),Jn=i(ai,"\u3067\u4ED5\u69D8\u3092\u78BA\u8A8D\u3059\u308B\u3053\u3068\u3092\u304A\u52E7\u3081\u3057\u307E\u3059\u3002"),ai.forEach(t),os=d(e),me=a(e,"P",{});var Nt=f(me);Xn=i(Nt,"\u3053\u306E"),wi=a(Nt,"CODE",{});var $d=f(wi);Zn=i($d,"push_to_hub()"),$d.forEach(t),Qn=i(Nt,"\u30E1\u30BD\u30C3\u30C9\u306F\u3001Hugging Face Hub\u306B\u76F4\u63A5\u30A2\u30AF\u30BB\u30B9\u3067\u304D\u308B"),oo=a(Nt,"A",{href:!0,rel:!0});var kd=f(oo);Ei=a(kd,"CODE",{});var wd=f(Ei);ef=i(wd,"huggingface_hub"),wd.forEach(t),kd.forEach(t),tf=i(Nt," Python\u30D1\u30C3\u30B1\u30FC\u30B8\u3067\u5B9F\u88C5\u3055\u308C\u3066\u304A\u308A\u3001\u{1F917} Transformers\u3084\u3001"),lo=a(Nt,"A",{href:!0,rel:!0});var Ed=f(lo);ji=a(Ed,"CODE",{});var jd=f(ji);of=i(jd,"allenlp"),jd.forEach(t),Ed.forEach(t),lf=i(Nt,"\u3068\u3044\u3063\u305F\u3001\u4ED6\u306E\u6A5F\u68B0\u5B66\u7FD2\u30E9\u30A4\u30D6\u30E9\u30EA\u306B\u7D71\u5408\u3055\u308C\u3066\u3044\u307E\u3059\u3002\u3053\u306E\u7AE0\u3067\u306F\u{1F917} Transformers\u306B\u7126\u70B9\u3092\u5F53\u3066\u307E\u3059\u304C\u3001\u3042\u306A\u305F\u81EA\u8EAB\u306E\u30B3\u30FC\u30C9\u3084\u30E9\u30A4\u30D6\u30E9\u30EA\u306B\u7D71\u5408\u3059\u308B\u3053\u3068\u306F\u7C21\u5358\u3067\u3059\u3002"),Nt.forEach(t),ls=d(e),vl=a(e,"P",{});var Pd=f(vl);rf=i(Pd,"\u6700\u5F8C\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u306B\u79FB\u52D5\u3057\u3066\u3001\u65B0\u3057\u304F\u4F5C\u6210\u3057\u305F\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3059\u308B\u65B9\u6CD5\u3092\u3054\u89A7\u304F\u3060\u3055\u3044\uFF01"),Pd.forEach(t),is=d(e),et=a(e,"H2",{class:!0});var Ua=f(et);gt=a(Ua,"A",{id:!0,class:!0,href:!0});var zd=f(gt);Pi=a(zd,"SPAN",{});var Ad=f(Pi);j(io.$$.fragment,Ad),Ad.forEach(t),zd.forEach(t),sf=d(Ua),$l=a(Ua,"SPAN",{});var Eu=f($l);zi=a(Eu,"CODE",{});var Td=f(zi);af=i(Td,"huggingface_hub"),Td.forEach(t),nf=i(Eu," Python\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u4F7F\u7528\u3059\u308B"),Eu.forEach(t),Ua.forEach(t),rs=d(e),ro=a(e,"P",{});var ju=f(ro);Ai=a(ju,"CODE",{});var Dd=f(Ai);ff=i(Dd,"huggingface_hub"),Dd.forEach(t),cf=i(ju," Python\u30E9\u30A4\u30D6\u30E9\u30EA\u306F\u3001\u30E2\u30C7\u30EB\u3068\u30C7\u30FC\u30BF\u30BB\u30C3\u30C8\u306E\u30CF\u30D6\u306E\u305F\u3081\u306E\u30C4\u30FC\u30EB\u30BB\u30C3\u30C8\u3092\u63D0\u4F9B\u3059\u308B\u30D1\u30C3\u30B1\u30FC\u30B8\u3067\u3059\u3002\u30CF\u30D6\u4E0A\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u95A2\u3059\u308B\u60C5\u5831\u3092\u53D6\u5F97\u3057\u3001\u305D\u308C\u3089\u3092\u7BA1\u7406\u3059\u308B\u3088\u3046\u306A\u4E00\u822C\u7684\u306A\u30BF\u30B9\u30AF\u306E\u305F\u3081\u306E\u30B7\u30F3\u30D7\u30EB\u306A\u30E1\u30BD\u30C3\u30C9\u3068\u30AF\u30E9\u30B9\u3092\u63D0\u4F9B\u3057\u307E\u3059\u3002\u307E\u305F\u3001\u3053\u308C\u3089\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u30B3\u30F3\u30C6\u30F3\u30C4\u3092\u7BA1\u7406\u3057\u3001\u3042\u306A\u305F\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u3084\u30E9\u30A4\u30D6\u30E9\u30EA\u306BHub\u3092\u7D71\u5408\u3059\u308B\u305F\u3081\u306B\u3001git\u306E\u4E0A\u3067\u52D5\u4F5C\u3059\u308B\u30B7\u30F3\u30D7\u30EB\u306AAPI\u3092\u63D0\u4F9B\u3057\u307E\u3059\u3002"),ju.forEach(t),ss=d(e),he=a(e,"P",{});var Rt=f(he);pf=i(Rt,"Similarly to using the "),Ti=a(Rt,"CODE",{});var Od=f(Ti);uf=i(Od,"push_to_hub"),Od.forEach(t),df=i(Rt," API, this will require you to have your API token saved in your cache. In order to do this, you will need to use the "),Di=a(Rt,"CODE",{});var Cd=f(Di);mf=i(Cd,"login"),Cd.forEach(t),hf=i(Rt," command from the CLI, as mentioned in the previous section (again, make sure to prepend these commands with the "),Oi=a(Rt,"CODE",{});var Md=f(Oi);_f=i(Md,"!"),Md.forEach(t),gf=i(Rt," character if running in Google Colab):"),Rt.forEach(t),as=d(e),j(so.$$.fragment,e),ns=d(e),bt=a(e,"P",{});var Wa=f(bt);bf=i(Wa,"The "),Ci=a(Wa,"CODE",{});var Id=f(Ci);yf=i(Id,"huggingface_hub"),Id.forEach(t),vf=i(Wa," package offers several methods and classes which are useful for our purpose. Firstly, there are a few methods to manage repository creation, deletion, and others:"),Wa.forEach(t),fs=d(e),j(ao.$$.fragment,e),cs=d(e),yt=a(e,"P",{});var Ba=f(yt);$f=i(Ba,"Additionally, it offers the very powerful "),Mi=a(Ba,"CODE",{});var qd=f(Mi);kf=i(qd,"Repository"),qd.forEach(t),wf=i(Ba," class to manage a local repository. We will explore these methods and that class in the next few section to understand how to leverage them."),Ba.forEach(t),ps=d(e),vt=a(e,"P",{});var Va=f(vt);Ef=i(Va,"The "),Ii=a(Va,"CODE",{});var Fd=f(Ii);jf=i(Fd,"create_repo"),Fd.forEach(t),Pf=i(Va," method can be used to create a new repository on the hub:"),Va.forEach(t),us=d(e),j(no.$$.fragment,e),ds=d(e),Re=a(e,"P",{});var ni=f(Re);zf=i(ni,"This will create the repository "),qi=a(ni,"CODE",{});var xd=f(qi);Af=i(xd,"dummy-model"),xd.forEach(t),Tf=i(ni," in your namespace. If you like, you can specify which organization the repository should belong to using the "),Fi=a(ni,"CODE",{});var Hd=f(Fi);Df=i(Hd,"organization"),Hd.forEach(t),Of=i(ni," argument:"),ni.forEach(t),ms=d(e),j(fo.$$.fragment,e),hs=d(e),Ue=a(e,"P",{});var fi=f(Ue);Cf=i(fi,"This will create the "),xi=a(fi,"CODE",{});var Gd=f(xi);Mf=i(Gd,"dummy-model"),Gd.forEach(t),If=i(fi," repository in the "),Hi=a(fi,"CODE",{});var Ld=f(Hi);qf=i(Ld,"huggingface"),Ld.forEach(t),Ff=i(fi,` namespace, assuming you belong to that organization.
Other arguments which may be useful are:`),fi.forEach(t),_s=d(e),We=a(e,"UL",{});var ci=f(We);kl=a(ci,"LI",{});var Pu=f(kl);Gi=a(Pu,"CODE",{});var Sd=f(Gi);xf=i(Sd,"private"),Sd.forEach(t),Hf=i(Pu,", in order to specify if the repository should be visible from others or not."),Pu.forEach(t),Gf=d(ci),wl=a(ci,"LI",{});var zu=f(wl);Li=a(zu,"CODE",{});var Nd=f(Li);Lf=i(Nd,"token"),Nd.forEach(t),Sf=i(zu,", if you would like to override the token stored in your cache by a given token."),zu.forEach(t),Nf=d(ci),se=a(ci,"LI",{});var xe=f(se);Si=a(xe,"CODE",{});var Rd=f(Si);Rf=i(Rd,"repo_type"),Rd.forEach(t),Uf=i(xe,", if you would like to create a "),Ni=a(xe,"CODE",{});var Ud=f(Ni);Wf=i(Ud,"dataset"),Ud.forEach(t),Bf=i(xe," or a "),Ri=a(xe,"CODE",{});var Wd=f(Ri);Vf=i(Wd,"space"),Wd.forEach(t),Yf=i(xe," instead of a model. Accepted values are "),Ui=a(xe,"CODE",{});var Bd=f(Ui);Kf=i(Bd,'"dataset"'),Bd.forEach(t),Jf=i(xe," and "),Wi=a(xe,"CODE",{});var Vd=f(Wi);Xf=i(Vd,'"space"'),Vd.forEach(t),Zf=i(xe,"."),xe.forEach(t),ci.forEach(t),gs=d(e),El=a(e,"P",{});var Yd=f(El);Qf=i(Yd,"Once the repository is created, we should add files to it! Jump to the next section to see the three ways this can be handled."),Yd.forEach(t),bs=d(e),tt=a(e,"H2",{class:!0});var Ya=f(tt);$t=a(Ya,"A",{id:!0,class:!0,href:!0});var Kd=f($t);Bi=a(Kd,"SPAN",{});var Jd=f(Bi);j(co.$$.fragment,Jd),Jd.forEach(t),Kd.forEach(t),ec=d(Ya),Vi=a(Ya,"SPAN",{});var Xd=f(Vi);tc=i(Xd,"Using the web interface"),Xd.forEach(t),Ya.forEach(t),ys=d(e),jl=a(e,"P",{});var Zd=f(jl);oc=i(Zd,"The web interface offers tools to manage repositories directly in the Hub. Using the interface, you can easily create repositories, add files (even large ones!), explore models, visualize diffs, and much more."),Zd.forEach(t),vs=d(e),kt=a(e,"P",{});var Ka=f(kt);lc=i(Ka,"To create a new repository, visit "),po=a(Ka,"A",{href:!0,rel:!0});var Qd=f(po);ic=i(Qd,"huggingface.co/new"),Qd.forEach(t),rc=i(Ka,":"),Ka.forEach(t),$s=d(e),uo=a(e,"DIV",{class:!0});var em=f(uo);mo=a(em,"IMG",{src:!0,alt:!0,width:!0}),em.forEach(t),ks=d(e),Pl=a(e,"P",{});var tm=f(Pl);sc=i(tm,"First, specify the owner of the repository: this can be either you or any of the organizations you\u2019re affiliated with. If you choose an organization, the model will be featured on the organization\u2019s page and every member of the organization will have the ability to contribute to the repository."),tm.forEach(t),ws=d(e),zl=a(e,"P",{});var om=f(zl);ac=i(om,"Next, enter your model\u2019s name. This will also be the name of the repository. Finally, you can specify whether you want your model to be public or private. Private models are hidden from public view."),om.forEach(t),Es=d(e),Al=a(e,"P",{});var lm=f(Al);nc=i(lm,"After creating your model repository, you should see a page like this:"),lm.forEach(t),js=d(e),ho=a(e,"DIV",{class:!0});var im=f(ho);_o=a(im,"IMG",{src:!0,alt:!0,width:!0}),im.forEach(t),Ps=d(e),Tl=a(e,"P",{});var rm=f(Tl);fc=i(rm,"This is where your model will be hosted. To start populating it, you can add a README file directly from the web interface."),rm.forEach(t),zs=d(e),go=a(e,"DIV",{class:!0});var sm=f(go);bo=a(sm,"IMG",{src:!0,alt:!0,width:!0}),sm.forEach(t),As=d(e),Dl=a(e,"P",{});var am=f(Dl);cc=i(am,"The README file is in Markdown \u2014 feel free to go wild with it! The third part of this chapter is dedicated to building a model card. These are of prime importance in bringing value to your model, as they\u2019re where you tell others what it can do."),am.forEach(t),Ts=d(e),Be=a(e,"P",{});var pi=f(Be);pc=i(pi,"If you look at the \u201CFiles and versions\u201D tab, you\u2019ll see that there aren\u2019t many files there yet \u2014 just the "),Yi=a(pi,"EM",{});var nm=f(Yi);uc=i(nm,"README.md"),nm.forEach(t),dc=i(pi," you just created and the "),Ki=a(pi,"EM",{});var fm=f(Ki);mc=i(fm,".gitattributes"),fm.forEach(t),hc=i(pi," file that keeps track of large files."),pi.forEach(t),Ds=d(e),yo=a(e,"DIV",{class:!0});var cm=f(yo);vo=a(cm,"IMG",{src:!0,alt:!0,width:!0}),cm.forEach(t),Os=d(e),Ol=a(e,"P",{});var pm=f(Ol);_c=i(pm,"We\u2019ll take a look at how to add some new files next."),pm.forEach(t),Cs=d(e),ot=a(e,"H2",{class:!0});var Ja=f(ot);wt=a(Ja,"A",{id:!0,class:!0,href:!0});var um=f(wt);Ji=a(um,"SPAN",{});var dm=f(Ji);j($o.$$.fragment,dm),dm.forEach(t),um.forEach(t),gc=d(Ja),Xi=a(Ja,"SPAN",{});var mm=f(Xi);bc=i(mm,"Uploading the model files"),mm.forEach(t),Ja.forEach(t),Ms=d(e),Et=a(e,"P",{});var Xa=f(Et);yc=i(Xa,"The system to manage files on the Hugging Face Hub is based on git for regular files, and git-lfs (which stands for "),ko=a(Xa,"A",{href:!0,rel:!0});var hm=f(ko);vc=i(hm,"Git Large File Storage"),hm.forEach(t),$c=i(Xa,") for larger files."),Xa.forEach(t),Is=d(e),jt=a(e,"P",{});var Za=f(jt);kc=i(Za,"In the next section, we go over three different ways of uploading files to the Hub: through "),Zi=a(Za,"CODE",{});var _m=f(Zi);wc=i(_m,"huggingface_hub"),_m.forEach(t),Ec=i(Za," and through git commands."),Za.forEach(t),qs=d(e),lt=a(e,"H3",{class:!0});var Qa=f(lt);Pt=a(Qa,"A",{id:!0,class:!0,href:!0});var gm=f(Pt);Qi=a(gm,"SPAN",{});var bm=f(Qi);j(wo.$$.fragment,bm),bm.forEach(t),gm.forEach(t),jc=d(Qa),Eo=a(Qa,"SPAN",{});var en=f(Eo);Pc=i(en,"The "),er=a(en,"CODE",{});var ym=f(er);zc=i(ym,"upload_file"),ym.forEach(t),Ac=i(en," approach"),en.forEach(t),Qa.forEach(t),Fs=d(e),zt=a(e,"P",{});var tn=f(zt);Tc=i(tn,"Using "),tr=a(tn,"CODE",{});var vm=f(tr);Dc=i(vm,"upload_file"),vm.forEach(t),Oc=i(tn,` does not require git and git-lfs to be installed on your system. It pushes files directly to the \u{1F917} Hub using HTTP POST requests. A limitation of this approach is that it doesn\u2019t handle files that are larger than 5GB in size.
If your files are larger than 5GB, please follow the two other methods detailed below.`),tn.forEach(t),xs=d(e),Cl=a(e,"P",{});var $m=f(Cl);Cc=i($m,"The API may be used as follows:"),$m.forEach(t),Hs=d(e),j(jo.$$.fragment,e),Gs=d(e),ae=a(e,"P",{});var Xe=f(ae);Mc=i(Xe,"This will upload the file "),or=a(Xe,"CODE",{});var km=f(or);Ic=i(km,"config.json"),km.forEach(t),qc=i(Xe," available at "),lr=a(Xe,"CODE",{});var wm=f(lr);Fc=i(wm,"<path_to_file>"),wm.forEach(t),xc=i(Xe," to the root of the repository as "),ir=a(Xe,"CODE",{});var Em=f(ir);Hc=i(Em,"config.json"),Em.forEach(t),Gc=i(Xe,", to the "),rr=a(Xe,"CODE",{});var jm=f(rr);Lc=i(jm,"dummy-model"),jm.forEach(t),Sc=i(Xe,` repository.
Other arguments which may be useful are:`),Xe.forEach(t),Ls=d(e),At=a(e,"UL",{});var on=f(At);Ml=a(on,"LI",{});var Au=f(Ml);sr=a(Au,"CODE",{});var Pm=f(sr);Nc=i(Pm,"token"),Pm.forEach(t),Rc=i(Au,", if you would like to override the token stored in your cache by a given token."),Au.forEach(t),Uc=d(on),ne=a(on,"LI",{});var He=f(ne);ar=a(He,"CODE",{});var zm=f(ar);Wc=i(zm,"repo_type"),zm.forEach(t),Bc=i(He,", if you would like to upload to a "),nr=a(He,"CODE",{});var Am=f(nr);Vc=i(Am,"dataset"),Am.forEach(t),Yc=i(He," or a "),fr=a(He,"CODE",{});var Tm=f(fr);Kc=i(Tm,"space"),Tm.forEach(t),Jc=i(He," instead of a model. Accepted values are "),cr=a(He,"CODE",{});var Dm=f(cr);Xc=i(Dm,'"dataset"'),Dm.forEach(t),Zc=i(He," and "),pr=a(He,"CODE",{});var Om=f(pr);Qc=i(Om,'"space"'),Om.forEach(t),ep=i(He,"."),He.forEach(t),on.forEach(t),Ss=d(e),it=a(e,"H3",{class:!0});var ln=f(it);Tt=a(ln,"A",{id:!0,class:!0,href:!0});var Cm=f(Tt);ur=a(Cm,"SPAN",{});var Mm=f(ur);j(Po.$$.fragment,Mm),Mm.forEach(t),Cm.forEach(t),tp=d(ln),zo=a(ln,"SPAN",{});var rn=f(zo);op=i(rn,"The "),dr=a(rn,"CODE",{});var Im=f(dr);lp=i(Im,"Repository"),Im.forEach(t),ip=i(rn," class"),rn.forEach(t),ln.forEach(t),Ns=d(e),Dt=a(e,"P",{});var sn=f(Dt);rp=i(sn,"The "),mr=a(sn,"CODE",{});var qm=f(mr);sp=i(qm,"Repository"),qm.forEach(t),ap=i(sn," class manages a local repository in a git-like manner. It abstracts most of the pain points one may have with git to provide all features that we require."),sn.forEach(t),Rs=d(e),Ot=a(e,"P",{});var an=f(Ot);np=i(an,"Using this class requires having git and git-lfs installed, so make sure you have git-lfs installed (see "),Ao=a(an,"A",{href:!0,rel:!0});var Fm=f(Ao);fp=i(Fm,"here"),Fm.forEach(t),cp=i(an," for installation instructions) and set up before you begin."),an.forEach(t),Us=d(e),Il=a(e,"P",{});var xm=f(Il);pp=i(xm,"In order to start playing around with the repository we have just created, we can start by initialising it into a local folder by cloning the remote repository:"),xm.forEach(t),Ws=d(e),j(To.$$.fragment,e),Bs=d(e),_e=a(e,"P",{});var Ut=f(_e);up=i(Ut,"This created the folder "),hr=a(Ut,"CODE",{});var Hm=f(hr);dp=i(Hm,"<path_to_dummy_folder>"),Hm.forEach(t),mp=i(Ut," in our working directory. This folder only contains the "),_r=a(Ut,"CODE",{});var Gm=f(_r);hp=i(Gm,".gitattributes"),Gm.forEach(t),_p=i(Ut," file as that\u2019s the only file created when instantiating the repository through "),gr=a(Ut,"CODE",{});var Lm=f(gr);gp=i(Lm,"create_repo"),Lm.forEach(t),bp=i(Ut,"."),Ut.forEach(t),Vs=d(e),ql=a(e,"P",{});var Sm=f(ql);yp=i(Sm,"From this point on, we may leverage several of the traditional git methods:"),Sm.forEach(t),Ys=d(e),j(Do.$$.fragment,e),Ks=d(e),Ve=a(e,"P",{});var ui=f(Ve);vp=i(ui,"And others! We recommend taking a look at the "),br=a(ui,"CODE",{});var Nm=f(br);$p=i(Nm,"Repository"),Nm.forEach(t),kp=i(ui," documentation available "),Oo=a(ui,"A",{href:!0,rel:!0});var Rm=f(Oo);wp=i(Rm,"here"),Rm.forEach(t),Ep=i(ui," for an overview of all available methods."),ui.forEach(t),Js=d(e),Fl=a(e,"P",{});var Um=f(Fl);jp=i(Um,"At present, we have a model and a tokenizer that we would like to push to the hub. We have successfully cloned the repository, we can therefore save the files within that repository."),Um.forEach(t),Xs=d(e),xl=a(e,"P",{});var Wm=f(xl);Pp=i(Wm,"We first make sure that our local clone is up to date by pulling the latest changes:"),Wm.forEach(t),Zs=d(e),j(Co.$$.fragment,e),Qs=d(e),Hl=a(e,"P",{});var Bm=f(Hl);zp=i(Bm,"Once that is done, we save the model and tokenizer files:"),Bm.forEach(t),ea=d(e),j(Mo.$$.fragment,e),ta=d(e),Ct=a(e,"P",{});var nn=f(Ct);Ap=i(nn,"The "),yr=a(nn,"CODE",{});var Vm=f(yr);Tp=i(Vm,"<path_to_dummy_folder>"),Vm.forEach(t),Dp=i(nn," now contains all the model and tokenizer files. We follow the usual git workflow by adding files to the staging area, committing them and pushing them to the hub:"),nn.forEach(t),oa=d(e),j(Io.$$.fragment,e),la=d(e),Gl=a(e,"P",{});var Ym=f(Gl);Op=i(Ym,"Congratulations! You just pushed your first files on the hub."),Ym.forEach(t),ia=d(e),rt=a(e,"H3",{class:!0});var fn=f(rt);Mt=a(fn,"A",{id:!0,class:!0,href:!0});var Km=f(Mt);vr=a(Km,"SPAN",{});var Jm=f(vr);j(qo.$$.fragment,Jm),Jm.forEach(t),Km.forEach(t),Cp=d(fn),$r=a(fn,"SPAN",{});var Xm=f($r);Mp=i(Xm,"The git-based approach"),Xm.forEach(t),fn.forEach(t),ra=d(e),Ll=a(e,"P",{});var Zm=f(Ll);Ip=i(Zm,"This is the very barebones approach to uploading files: we\u2019ll do so with git and git-lfs directly. Most of the difficulty is abstracted away by previous approaches, but there are a few caveats with the following method so we\u2019ll follow a more complex use-case."),Zm.forEach(t),sa=d(e),It=a(e,"P",{});var cn=f(It);qp=i(cn,"Using this class requires having git and git-lfs installed, so make sure you have "),Fo=a(cn,"A",{href:!0,rel:!0});var Qm=f(Fo);Fp=i(Qm,"git-lfs"),Qm.forEach(t),xp=i(cn," installed (see here for installation instructions) and set up before you begin."),cn.forEach(t),aa=d(e),Sl=a(e,"P",{});var eh=f(Sl);Hp=i(eh,"First start by initializing git-lfs:"),eh.forEach(t),na=d(e),j(xo.$$.fragment,e),fa=d(e),j(Ho.$$.fragment,e),ca=d(e),Nl=a(e,"P",{});var th=f(Nl);Gp=i(th,"Once that\u2019s done, the first step is to clone your model repository:"),th.forEach(t),pa=d(e),j(Go.$$.fragment,e),ua=d(e),Ye=a(e,"P",{});var di=f(Ye);Lp=i(di,"My username is "),kr=a(di,"CODE",{});var oh=f(kr);Sp=i(oh,"lysandre"),oh.forEach(t),Np=i(di," and I\u2019ve used the model name "),wr=a(di,"CODE",{});var lh=f(wr);Rp=i(lh,"dummy"),lh.forEach(t),Up=i(di,", so for me the command ends up looking like the following:"),di.forEach(t),da=d(e),j(Lo.$$.fragment,e),ma=d(e),Ke=a(e,"P",{});var mi=f(Ke);Wp=i(mi,"I now have a folder named "),Er=a(mi,"EM",{});var ih=f(Er);Bp=i(ih,"dummy"),ih.forEach(t),Vp=i(mi," in my working directory. I can "),jr=a(mi,"CODE",{});var rh=f(jr);Yp=i(rh,"cd"),rh.forEach(t),Kp=i(mi," into the folder and have a look at the contents:"),mi.forEach(t),ha=d(e),j(So.$$.fragment,e),_a=d(e),j(No.$$.fragment,e),ga=d(e),fe=a(e,"P",{});var Ze=f(fe);Jp=i(Ze,"If you just created your repository using Hugging Face Hub\u2019s "),Pr=a(Ze,"CODE",{});var sh=f(Pr);Xp=i(sh,"create_repo"),sh.forEach(t),Zp=i(Ze," method, this folder should only contain a hidden "),zr=a(Ze,"CODE",{});var ah=f(zr);Qp=i(ah,".gitattributes"),ah.forEach(t),eu=i(Ze," file. If you followed the instructions in the previous section to create a repository using the web interface, the folder should contain a single "),Ar=a(Ze,"EM",{});var nh=f(Ar);tu=i(nh,"README.md"),nh.forEach(t),ou=i(Ze," file alongside the hidden "),Tr=a(Ze,"CODE",{});var fh=f(Tr);lu=i(fh,".gitattributes"),fh.forEach(t),iu=i(Ze," file, as shown here."),Ze.forEach(t),ba=d(e),qt=a(e,"P",{});var pn=f(qt);ru=i(pn,"Adding a regular-sized file, such as a configuration file, a vocabulary file, or basically any file under a few megabytes, is done exactly as one would do it in any git-based system. However, bigger files must be registered through git-lfs in order to push them to "),Dr=a(pn,"EM",{});var ch=f(Dr);su=i(ch,"huggingface.co"),ch.forEach(t),au=i(pn,"."),pn.forEach(t),ya=d(e),Rl=a(e,"P",{});var ph=f(Rl);nu=i(ph,"Let\u2019s go back to Python for a bit to generate a model and tokenizer that we\u2019d like to commit to our dummy repository:"),ph.forEach(t),va=d(e),Ae.l(e),Ul=d(e),Ft=a(e,"P",{});var un=f(Ft);fu=i(un,"Now that we\u2019ve saved some model and tokenizer artifacts, let\u2019s take another look at the "),Or=a(un,"EM",{});var uh=f(Or);cu=i(uh,"dummy"),uh.forEach(t),pu=i(un," folder:"),un.forEach(t),$a=d(e),j(Ro.$$.fragment,e),ka=d(e),De.l(e),Wl=d(e),j(xt.$$.fragment,e),wa=d(e),Ht=a(e,"P",{});var dn=f(Ht);uu=i(dn,"We can now go ahead and proceed like we would usually do with traditional Git repositories. We can add all the files to Git\u2019s staging environment using the "),Cr=a(dn,"CODE",{});var dh=f(Cr);du=i(dh,"git add"),dh.forEach(t),mu=i(dn," command:"),dn.forEach(t),Ea=d(e),j(Uo.$$.fragment,e),ja=d(e),Bl=a(e,"P",{});var mh=f(Bl);hu=i(mh,"We can then have a look at the files that are currently staged:"),mh.forEach(t),Pa=d(e),j(Wo.$$.fragment,e),za=d(e),Ce.l(e),Vl=d(e),Gt=a(e,"P",{});var mn=f(Gt);_u=i(mn,"Similarly, we can make sure that git-lfs is tracking the correct files by using its "),Mr=a(mn,"CODE",{});var hh=f(Mr);gu=i(hh,"status"),hh.forEach(t),bu=i(mn," command:"),mn.forEach(t),Aa=d(e),j(Bo.$$.fragment,e),Ta=d(e),Ie.l(e),Yl=d(e),Lt=a(e,"P",{});var hn=f(Lt);yu=i(hn,"Let\u2019s proceed to the final steps, committing and pushing to the "),Ir=a(hn,"EM",{});var _h=f(Ir);vu=i(_h,"huggingface.co"),_h.forEach(t),$u=i(hn," remote repository:"),hn.forEach(t),Da=d(e),j(Vo.$$.fragment,e),Oa=d(e),Fe.l(e),Kl=d(e),Jl=a(e,"P",{});var gh=f(Jl);ku=i(gh,"Pushing can take a bit of time, depending on the speed of your internet connection and the size of your files:"),gh.forEach(t),Ca=d(e),j(Yo.$$.fragment,e),Ma=d(e),j(Ko.$$.fragment,e),Ia=d(e),at.l(e),Xl=bh(),this.h()},h(){_(p,"name","hf:doc:metadata"),_(p,"content",JSON.stringify(Zh)),_($,"id",""),_(Y,"id","pushtohub-api"),_(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(Y,"href","#pushtohub-api"),_(Z,"class","relative group"),_(pl,"href","/course/chapter0"),_(Kt,"href","https://huggingface.co/join"),_(Kt,"rel","nofollow"),_(eo,"href","https://huggingface.co/user-or-organization/dummy-model"),_(eo,"rel","nofollow"),_(to,"href","https://huggingface.co/transformers/model_sharing.html"),_(to,"rel","nofollow"),_(oo,"href","https://github.com/huggingface/huggingface_hub"),_(oo,"rel","nofollow"),_(lo,"href","https://github.com/allenai/allennlp"),_(lo,"rel","nofollow"),_(gt,"id","huggingfacehub-python"),_(gt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(gt,"href","#huggingfacehub-python"),_(et,"class","relative group"),_($t,"id","using-the-web-interface"),_($t,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_($t,"href","#using-the-web-interface"),_(tt,"class","relative group"),_(po,"href","https://huggingface.co/new"),_(po,"rel","nofollow"),Ge(mo.src,Du="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/new_model.png")||_(mo,"src",Du),_(mo,"alt","Page showcasing the model used for the creation of a new model repository."),_(mo,"width","80%"),_(uo,"class","flex justify-center"),Ge(_o.src,Ou="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/empty_model.png")||_(_o,"src",Ou),_(_o,"alt","An empty model page after creating a new repository."),_(_o,"width","80%"),_(ho,"class","flex justify-center"),Ge(bo.src,Cu="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/dummy_model.png")||_(bo,"src",Cu),_(bo,"alt","The README file showing the Markdown capabilities."),_(bo,"width","80%"),_(go,"class","flex justify-center"),Ge(vo.src,Mu="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter4/files.png")||_(vo,"src",Mu),_(vo,"alt","The 'Files and versions' tab only shows the .gitattributes and README.md files."),_(vo,"width","80%"),_(yo,"class","flex justify-center"),_(wt,"id","uploading-the-model-files"),_(wt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(wt,"href","#uploading-the-model-files"),_(ot,"class","relative group"),_(ko,"href","https://git-lfs.github.com/"),_(ko,"rel","nofollow"),_(Pt,"id","the-uploadfile-approach"),_(Pt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(Pt,"href","#the-uploadfile-approach"),_(lt,"class","relative group"),_(Tt,"id","the-repository-class"),_(Tt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(Tt,"href","#the-repository-class"),_(it,"class","relative group"),_(Ao,"href","https://git-lfs.github.com/"),_(Ao,"rel","nofollow"),_(Oo,"href","https://github.com/huggingface/huggingface_hub/tree/main/src/huggingface_hub#advanced-programmatic-repository-management"),_(Oo,"rel","nofollow"),_(Mt,"id","the-gitbased-approach"),_(Mt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(Mt,"href","#the-gitbased-approach"),_(rt,"class","relative group"),_(Fo,"href","https://git-lfs.github.com/"),_(Fo,"rel","nofollow")},m(e,r){o(document.head,p),n(e,m,r),P(c,e,r),n(e,g,r),n(e,$,r),o($,I),n(e,F,r),Jo[w].m(e,r),n(e,C,r),n(e,D,r),o(D,h),n(e,k,r),P(v,e,r),n(e,A,r),n(e,H,r),o(H,R),n(e,G,r),n(e,L,r),o(L,Q),n(e,J,r),n(e,U,r),o(U,B),o(B,te),o(te,ge),o(B,ue),o(U,X),o(U,V),o(V,oe),o(oe,ce),o(V,be),o(U,de),o(U,x),o(x,S),n(e,ye,r),n(e,le,r),o(le,K),n(e,ve,r),n(e,Z,r),o(Z,Y),o(Y,ee),P(ie,ee,null),o(Z,$e),o(Z,M),o(M,N),o(N,al),o(M,nl),n(e,Wt,r),Xo[W].m(e,r),n(e,Qe,r),n(e,ke,r),o(ke,fl),o(ke,Le),o(Le,cl),o(ke,ct),n(e,Bt,r),n(e,pe,r),o(pe,_n),o(pe,hi),o(hi,gn),o(pe,bn),o(pe,pl),o(pl,yn),o(pe,vn),n(e,xr,r),P(Vt,e,r),n(e,Hr,r),n(e,ul,r),o(ul,$n),n(e,Gr,r),P(Yt,e,r),n(e,Lr,r),n(e,pt,r),o(pt,kn),o(pt,Kt),o(Kt,wn),o(pt,En),n(e,Sr,r),n(e,dl,r),o(dl,jn),n(e,Nr,r),Zo[we].m(e,r),n(e,ml,r),n(e,ut,r),o(ut,Pn),o(ut,_i),o(_i,zn),o(ut,An),n(e,Rr,r),n(e,hl,r),o(hl,Tn),n(e,Ur,r),Qo[je].m(e,r),n(e,_l,r),n(e,Se,r),o(Se,Dn),o(Se,gi),o(gi,On),o(Se,Cn),o(Se,bi),o(bi,Mn),o(Se,In),n(e,Wr,r),P(Jt,e,r),n(e,Br,r),n(e,dt,r),o(dt,qn),o(dt,yi),o(yi,Fn),o(dt,xn),n(e,Vr,r),P(Xt,e,r),n(e,Yr,r),n(e,mt,r),o(mt,Hn),o(mt,vi),o(vi,Gn),o(mt,Ln),n(e,Kr,r),P(Zt,e,r),n(e,Jr,r),n(e,gl,r),o(gl,Sn),n(e,Xr,r),P(Qt,e,r),n(e,Zr,r),n(e,ht,r),o(ht,Nn),o(ht,$i),o($i,eo),o(eo,Rn),o(ht,Un),n(e,Qr,r),n(e,bl,r),o(bl,Wn),n(e,es,r),st.m(e,r),n(e,yl,r),P(_t,e,r),n(e,ts,r),n(e,Ne,r),o(Ne,Bn),o(Ne,ki),o(ki,Vn),o(Ne,Yn),o(Ne,to),o(to,Kn),o(Ne,Jn),n(e,os,r),n(e,me,r),o(me,Xn),o(me,wi),o(wi,Zn),o(me,Qn),o(me,oo),o(oo,Ei),o(Ei,ef),o(me,tf),o(me,lo),o(lo,ji),o(ji,of),o(me,lf),n(e,ls,r),n(e,vl,r),o(vl,rf),n(e,is,r),n(e,et,r),o(et,gt),o(gt,Pi),P(io,Pi,null),o(et,sf),o(et,$l),o($l,zi),o(zi,af),o($l,nf),n(e,rs,r),n(e,ro,r),o(ro,Ai),o(Ai,ff),o(ro,cf),n(e,ss,r),n(e,he,r),o(he,pf),o(he,Ti),o(Ti,uf),o(he,df),o(he,Di),o(Di,mf),o(he,hf),o(he,Oi),o(Oi,_f),o(he,gf),n(e,as,r),P(so,e,r),n(e,ns,r),n(e,bt,r),o(bt,bf),o(bt,Ci),o(Ci,yf),o(bt,vf),n(e,fs,r),P(ao,e,r),n(e,cs,r),n(e,yt,r),o(yt,$f),o(yt,Mi),o(Mi,kf),o(yt,wf),n(e,ps,r),n(e,vt,r),o(vt,Ef),o(vt,Ii),o(Ii,jf),o(vt,Pf),n(e,us,r),P(no,e,r),n(e,ds,r),n(e,Re,r),o(Re,zf),o(Re,qi),o(qi,Af),o(Re,Tf),o(Re,Fi),o(Fi,Df),o(Re,Of),n(e,ms,r),P(fo,e,r),n(e,hs,r),n(e,Ue,r),o(Ue,Cf),o(Ue,xi),o(xi,Mf),o(Ue,If),o(Ue,Hi),o(Hi,qf),o(Ue,Ff),n(e,_s,r),n(e,We,r),o(We,kl),o(kl,Gi),o(Gi,xf),o(kl,Hf),o(We,Gf),o(We,wl),o(wl,Li),o(Li,Lf),o(wl,Sf),o(We,Nf),o(We,se),o(se,Si),o(Si,Rf),o(se,Uf),o(se,Ni),o(Ni,Wf),o(se,Bf),o(se,Ri),o(Ri,Vf),o(se,Yf),o(se,Ui),o(Ui,Kf),o(se,Jf),o(se,Wi),o(Wi,Xf),o(se,Zf),n(e,gs,r),n(e,El,r),o(El,Qf),n(e,bs,r),n(e,tt,r),o(tt,$t),o($t,Bi),P(co,Bi,null),o(tt,ec),o(tt,Vi),o(Vi,tc),n(e,ys,r),n(e,jl,r),o(jl,oc),n(e,vs,r),n(e,kt,r),o(kt,lc),o(kt,po),o(po,ic),o(kt,rc),n(e,$s,r),n(e,uo,r),o(uo,mo),n(e,ks,r),n(e,Pl,r),o(Pl,sc),n(e,ws,r),n(e,zl,r),o(zl,ac),n(e,Es,r),n(e,Al,r),o(Al,nc),n(e,js,r),n(e,ho,r),o(ho,_o),n(e,Ps,r),n(e,Tl,r),o(Tl,fc),n(e,zs,r),n(e,go,r),o(go,bo),n(e,As,r),n(e,Dl,r),o(Dl,cc),n(e,Ts,r),n(e,Be,r),o(Be,pc),o(Be,Yi),o(Yi,uc),o(Be,dc),o(Be,Ki),o(Ki,mc),o(Be,hc),n(e,Ds,r),n(e,yo,r),o(yo,vo),n(e,Os,r),n(e,Ol,r),o(Ol,_c),n(e,Cs,r),n(e,ot,r),o(ot,wt),o(wt,Ji),P($o,Ji,null),o(ot,gc),o(ot,Xi),o(Xi,bc),n(e,Ms,r),n(e,Et,r),o(Et,yc),o(Et,ko),o(ko,vc),o(Et,$c),n(e,Is,r),n(e,jt,r),o(jt,kc),o(jt,Zi),o(Zi,wc),o(jt,Ec),n(e,qs,r),n(e,lt,r),o(lt,Pt),o(Pt,Qi),P(wo,Qi,null),o(lt,jc),o(lt,Eo),o(Eo,Pc),o(Eo,er),o(er,zc),o(Eo,Ac),n(e,Fs,r),n(e,zt,r),o(zt,Tc),o(zt,tr),o(tr,Dc),o(zt,Oc),n(e,xs,r),n(e,Cl,r),o(Cl,Cc),n(e,Hs,r),P(jo,e,r),n(e,Gs,r),n(e,ae,r),o(ae,Mc),o(ae,or),o(or,Ic),o(ae,qc),o(ae,lr),o(lr,Fc),o(ae,xc),o(ae,ir),o(ir,Hc),o(ae,Gc),o(ae,rr),o(rr,Lc),o(ae,Sc),n(e,Ls,r),n(e,At,r),o(At,Ml),o(Ml,sr),o(sr,Nc),o(Ml,Rc),o(At,Uc),o(At,ne),o(ne,ar),o(ar,Wc),o(ne,Bc),o(ne,nr),o(nr,Vc),o(ne,Yc),o(ne,fr),o(fr,Kc),o(ne,Jc),o(ne,cr),o(cr,Xc),o(ne,Zc),o(ne,pr),o(pr,Qc),o(ne,ep),n(e,Ss,r),n(e,it,r),o(it,Tt),o(Tt,ur),P(Po,ur,null),o(it,tp),o(it,zo),o(zo,op),o(zo,dr),o(dr,lp),o(zo,ip),n(e,Ns,r),n(e,Dt,r),o(Dt,rp),o(Dt,mr),o(mr,sp),o(Dt,ap),n(e,Rs,r),n(e,Ot,r),o(Ot,np),o(Ot,Ao),o(Ao,fp),o(Ot,cp),n(e,Us,r),n(e,Il,r),o(Il,pp),n(e,Ws,r),P(To,e,r),n(e,Bs,r),n(e,_e,r),o(_e,up),o(_e,hr),o(hr,dp),o(_e,mp),o(_e,_r),o(_r,hp),o(_e,_p),o(_e,gr),o(gr,gp),o(_e,bp),n(e,Vs,r),n(e,ql,r),o(ql,yp),n(e,Ys,r),P(Do,e,r),n(e,Ks,r),n(e,Ve,r),o(Ve,vp),o(Ve,br),o(br,$p),o(Ve,kp),o(Ve,Oo),o(Oo,wp),o(Ve,Ep),n(e,Js,r),n(e,Fl,r),o(Fl,jp),n(e,Xs,r),n(e,xl,r),o(xl,Pp),n(e,Zs,r),P(Co,e,r),n(e,Qs,r),n(e,Hl,r),o(Hl,zp),n(e,ea,r),P(Mo,e,r),n(e,ta,r),n(e,Ct,r),o(Ct,Ap),o(Ct,yr),o(yr,Tp),o(Ct,Dp),n(e,oa,r),P(Io,e,r),n(e,la,r),n(e,Gl,r),o(Gl,Op),n(e,ia,r),n(e,rt,r),o(rt,Mt),o(Mt,vr),P(qo,vr,null),o(rt,Cp),o(rt,$r),o($r,Mp),n(e,ra,r),n(e,Ll,r),o(Ll,Ip),n(e,sa,r),n(e,It,r),o(It,qp),o(It,Fo),o(Fo,Fp),o(It,xp),n(e,aa,r),n(e,Sl,r),o(Sl,Hp),n(e,na,r),P(xo,e,r),n(e,fa,r),P(Ho,e,r),n(e,ca,r),n(e,Nl,r),o(Nl,Gp),n(e,pa,r),P(Go,e,r),n(e,ua,r),n(e,Ye,r),o(Ye,Lp),o(Ye,kr),o(kr,Sp),o(Ye,Np),o(Ye,wr),o(wr,Rp),o(Ye,Up),n(e,da,r),P(Lo,e,r),n(e,ma,r),n(e,Ke,r),o(Ke,Wp),o(Ke,Er),o(Er,Bp),o(Ke,Vp),o(Ke,jr),o(jr,Yp),o(Ke,Kp),n(e,ha,r),P(So,e,r),n(e,_a,r),P(No,e,r),n(e,ga,r),n(e,fe,r),o(fe,Jp),o(fe,Pr),o(Pr,Xp),o(fe,Zp),o(fe,zr),o(zr,Qp),o(fe,eu),o(fe,Ar),o(Ar,tu),o(fe,ou),o(fe,Tr),o(Tr,lu),o(fe,iu),n(e,ba,r),n(e,qt,r),o(qt,ru),o(qt,Dr),o(Dr,su),o(qt,au),n(e,ya,r),n(e,Rl,r),o(Rl,nu),n(e,va,r),el[ze].m(e,r),n(e,Ul,r),n(e,Ft,r),o(Ft,fu),o(Ft,Or),o(Or,cu),o(Ft,pu),n(e,$a,r),P(Ro,e,r),n(e,ka,r),tl[Te].m(e,r),n(e,Wl,r),P(xt,e,r),n(e,wa,r),n(e,Ht,r),o(Ht,uu),o(Ht,Cr),o(Cr,du),o(Ht,mu),n(e,Ea,r),P(Uo,e,r),n(e,ja,r),n(e,Bl,r),o(Bl,hu),n(e,Pa,r),P(Wo,e,r),n(e,za,r),ol[Oe].m(e,r),n(e,Vl,r),n(e,Gt,r),o(Gt,_u),o(Gt,Mr),o(Mr,gu),o(Gt,bu),n(e,Aa,r),P(Bo,e,r),n(e,Ta,r),ll[Me].m(e,r),n(e,Yl,r),n(e,Lt,r),o(Lt,yu),o(Lt,Ir),o(Ir,vu),o(Lt,$u),n(e,Da,r),P(Vo,e,r),n(e,Oa,r),il[qe].m(e,r),n(e,Kl,r),n(e,Jl,r),o(Jl,ku),n(e,Ca,r),P(Yo,e,r),n(e,Ma,r),P(Ko,e,r),n(e,Ia,r),at.m(e,r),n(e,Xl,r),qa=!0},p(e,[r]){const qr={};r&1&&(qr.fw=e[0]),c.$set(qr);let Zl=w;w=qu(e),w!==Zl&&(ft(),b(Jo[Zl],1,1,()=>{Jo[Zl]=null}),nt(),T=Jo[w],T||(T=Jo[w]=Iu[w](e),T.c()),y(T,1),T.m(C.parentNode,C));let Ql=W;W=xu(e),W!==Ql&&(ft(),b(Xo[Ql],1,1,()=>{Xo[Ql]=null}),nt(),re=Xo[W],re||(re=Xo[W]=Fu[W](e),re.c()),y(re,1),re.m(Qe.parentNode,Qe));let ei=we;we=Gu(e),we!==ei&&(ft(),b(Zo[ei],1,1,()=>{Zo[ei]=null}),nt(),Ee=Zo[we],Ee||(Ee=Zo[we]=Hu[we](e),Ee.c()),y(Ee,1),Ee.m(ml.parentNode,ml));let Je=je;je=Su(e),je!==Je&&(ft(),b(Qo[Je],1,1,()=>{Qo[Je]=null}),nt(),Pe=Qo[je],Pe||(Pe=Qo[je]=Lu[je](e),Pe.c()),y(Pe,1),Pe.m(_l.parentNode,_l)),Fa!==(Fa=Nu(e))&&(st.d(1),st=Fa(e),st&&(st.c(),st.m(yl.parentNode,yl)));const ti={};r&2&&(ti.$$scope={dirty:r,ctx:e}),_t.$set(ti);let oi=ze;ze=Uu(e),ze!==oi&&(ft(),b(el[oi],1,1,()=>{el[oi]=null}),nt(),Ae=el[ze],Ae||(Ae=el[ze]=Ru[ze](e),Ae.c()),y(Ae,1),Ae.m(Ul.parentNode,Ul));let rl=Te;Te=Bu(e),Te!==rl&&(ft(),b(tl[rl],1,1,()=>{tl[rl]=null}),nt(),De=tl[Te],De||(De=tl[Te]=Wu[Te](e),De.c()),y(De,1),De.m(Wl.parentNode,Wl));const Fr={};r&2&&(Fr.$$scope={dirty:r,ctx:e}),xt.$set(Fr);let li=Oe;Oe=Yu(e),Oe!==li&&(ft(),b(ol[li],1,1,()=>{ol[li]=null}),nt(),Ce=ol[Oe],Ce||(Ce=ol[Oe]=Vu[Oe](e),Ce.c()),y(Ce,1),Ce.m(Vl.parentNode,Vl));let ii=Me;Me=Ju(e),Me!==ii&&(ft(),b(ll[ii],1,1,()=>{ll[ii]=null}),nt(),Ie=ll[Me],Ie||(Ie=ll[Me]=Ku[Me](e),Ie.c()),y(Ie,1),Ie.m(Yl.parentNode,Yl));let St=qe;qe=Zu(e),qe!==St&&(ft(),b(il[St],1,1,()=>{il[St]=null}),nt(),Fe=il[qe],Fe||(Fe=il[qe]=Xu[qe](e),Fe.c()),y(Fe,1),Fe.m(Kl.parentNode,Kl)),xa!==(xa=Qu(e))&&(at.d(1),at=xa(e),at&&(at.c(),at.m(Xl.parentNode,Xl)))},i(e){qa||(y(c.$$.fragment,e),y(T),y(v.$$.fragment,e),y(ie.$$.fragment,e),y(re),y(Vt.$$.fragment,e),y(Yt.$$.fragment,e),y(Ee),y(Pe),y(Jt.$$.fragment,e),y(Xt.$$.fragment,e),y(Zt.$$.fragment,e),y(Qt.$$.fragment,e),y(_t.$$.fragment,e),y(io.$$.fragment,e),y(so.$$.fragment,e),y(ao.$$.fragment,e),y(no.$$.fragment,e),y(fo.$$.fragment,e),y(co.$$.fragment,e),y($o.$$.fragment,e),y(wo.$$.fragment,e),y(jo.$$.fragment,e),y(Po.$$.fragment,e),y(To.$$.fragment,e),y(Do.$$.fragment,e),y(Co.$$.fragment,e),y(Mo.$$.fragment,e),y(Io.$$.fragment,e),y(qo.$$.fragment,e),y(xo.$$.fragment,e),y(Ho.$$.fragment,e),y(Go.$$.fragment,e),y(Lo.$$.fragment,e),y(So.$$.fragment,e),y(No.$$.fragment,e),y(Ae),y(Ro.$$.fragment,e),y(De),y(xt.$$.fragment,e),y(Uo.$$.fragment,e),y(Wo.$$.fragment,e),y(Ce),y(Bo.$$.fragment,e),y(Ie),y(Vo.$$.fragment,e),y(Fe),y(Yo.$$.fragment,e),y(Ko.$$.fragment,e),qa=!0)},o(e){b(c.$$.fragment,e),b(T),b(v.$$.fragment,e),b(ie.$$.fragment,e),b(re),b(Vt.$$.fragment,e),b(Yt.$$.fragment,e),b(Ee),b(Pe),b(Jt.$$.fragment,e),b(Xt.$$.fragment,e),b(Zt.$$.fragment,e),b(Qt.$$.fragment,e),b(_t.$$.fragment,e),b(io.$$.fragment,e),b(so.$$.fragment,e),b(ao.$$.fragment,e),b(no.$$.fragment,e),b(fo.$$.fragment,e),b(co.$$.fragment,e),b($o.$$.fragment,e),b(wo.$$.fragment,e),b(jo.$$.fragment,e),b(Po.$$.fragment,e),b(To.$$.fragment,e),b(Do.$$.fragment,e),b(Co.$$.fragment,e),b(Mo.$$.fragment,e),b(Io.$$.fragment,e),b(qo.$$.fragment,e),b(xo.$$.fragment,e),b(Ho.$$.fragment,e),b(Go.$$.fragment,e),b(Lo.$$.fragment,e),b(So.$$.fragment,e),b(No.$$.fragment,e),b(Ae),b(Ro.$$.fragment,e),b(De),b(xt.$$.fragment,e),b(Uo.$$.fragment,e),b(Wo.$$.fragment,e),b(Ce),b(Bo.$$.fragment,e),b(Ie),b(Vo.$$.fragment,e),b(Fe),b(Yo.$$.fragment,e),b(Ko.$$.fragment,e),qa=!1},d(e){t(p),e&&t(m),z(c,e),e&&t(g),e&&t($),e&&t(F),Jo[w].d(e),e&&t(C),e&&t(D),e&&t(k),z(v,e),e&&t(A),e&&t(H),e&&t(G),e&&t(L),e&&t(J),e&&t(U),e&&t(ye),e&&t(le),e&&t(ve),e&&t(Z),z(ie),e&&t(Wt),Xo[W].d(e),e&&t(Qe),e&&t(ke),e&&t(Bt),e&&t(pe),e&&t(xr),z(Vt,e),e&&t(Hr),e&&t(ul),e&&t(Gr),z(Yt,e),e&&t(Lr),e&&t(pt),e&&t(Sr),e&&t(dl),e&&t(Nr),Zo[we].d(e),e&&t(ml),e&&t(ut),e&&t(Rr),e&&t(hl),e&&t(Ur),Qo[je].d(e),e&&t(_l),e&&t(Se),e&&t(Wr),z(Jt,e),e&&t(Br),e&&t(dt),e&&t(Vr),z(Xt,e),e&&t(Yr),e&&t(mt),e&&t(Kr),z(Zt,e),e&&t(Jr),e&&t(gl),e&&t(Xr),z(Qt,e),e&&t(Zr),e&&t(ht),e&&t(Qr),e&&t(bl),e&&t(es),st.d(e),e&&t(yl),z(_t,e),e&&t(ts),e&&t(Ne),e&&t(os),e&&t(me),e&&t(ls),e&&t(vl),e&&t(is),e&&t(et),z(io),e&&t(rs),e&&t(ro),e&&t(ss),e&&t(he),e&&t(as),z(so,e),e&&t(ns),e&&t(bt),e&&t(fs),z(ao,e),e&&t(cs),e&&t(yt),e&&t(ps),e&&t(vt),e&&t(us),z(no,e),e&&t(ds),e&&t(Re),e&&t(ms),z(fo,e),e&&t(hs),e&&t(Ue),e&&t(_s),e&&t(We),e&&t(gs),e&&t(El),e&&t(bs),e&&t(tt),z(co),e&&t(ys),e&&t(jl),e&&t(vs),e&&t(kt),e&&t($s),e&&t(uo),e&&t(ks),e&&t(Pl),e&&t(ws),e&&t(zl),e&&t(Es),e&&t(Al),e&&t(js),e&&t(ho),e&&t(Ps),e&&t(Tl),e&&t(zs),e&&t(go),e&&t(As),e&&t(Dl),e&&t(Ts),e&&t(Be),e&&t(Ds),e&&t(yo),e&&t(Os),e&&t(Ol),e&&t(Cs),e&&t(ot),z($o),e&&t(Ms),e&&t(Et),e&&t(Is),e&&t(jt),e&&t(qs),e&&t(lt),z(wo),e&&t(Fs),e&&t(zt),e&&t(xs),e&&t(Cl),e&&t(Hs),z(jo,e),e&&t(Gs),e&&t(ae),e&&t(Ls),e&&t(At),e&&t(Ss),e&&t(it),z(Po),e&&t(Ns),e&&t(Dt),e&&t(Rs),e&&t(Ot),e&&t(Us),e&&t(Il),e&&t(Ws),z(To,e),e&&t(Bs),e&&t(_e),e&&t(Vs),e&&t(ql),e&&t(Ys),z(Do,e),e&&t(Ks),e&&t(Ve),e&&t(Js),e&&t(Fl),e&&t(Xs),e&&t(xl),e&&t(Zs),z(Co,e),e&&t(Qs),e&&t(Hl),e&&t(ea),z(Mo,e),e&&t(ta),e&&t(Ct),e&&t(oa),z(Io,e),e&&t(la),e&&t(Gl),e&&t(ia),e&&t(rt),z(qo),e&&t(ra),e&&t(Ll),e&&t(sa),e&&t(It),e&&t(aa),e&&t(Sl),e&&t(na),z(xo,e),e&&t(fa),z(Ho,e),e&&t(ca),e&&t(Nl),e&&t(pa),z(Go,e),e&&t(ua),e&&t(Ye),e&&t(da),z(Lo,e),e&&t(ma),e&&t(Ke),e&&t(ha),z(So,e),e&&t(_a),z(No,e),e&&t(ga),e&&t(fe),e&&t(ba),e&&t(qt),e&&t(ya),e&&t(Rl),e&&t(va),el[ze].d(e),e&&t(Ul),e&&t(Ft),e&&t($a),z(Ro,e),e&&t(ka),tl[Te].d(e),e&&t(Wl),z(xt,e),e&&t(wa),e&&t(Ht),e&&t(Ea),z(Uo,e),e&&t(ja),e&&t(Bl),e&&t(Pa),z(Wo,e),e&&t(za),ol[Oe].d(e),e&&t(Vl),e&&t(Gt),e&&t(Aa),z(Bo,e),e&&t(Ta),ll[Me].d(e),e&&t(Yl),e&&t(Lt),e&&t(Da),z(Vo,e),e&&t(Oa),il[qe].d(e),e&&t(Kl),e&&t(Jl),e&&t(Ca),z(Yo,e),e&&t(Ma),z(Ko,e),e&&t(Ia),at.d(e),e&&t(Xl)}}}const Zh={local:"",sections:[{local:"pushtohub-api",title:"`push_to_hub` API\u3092\u4F7F\u7528\u3059\u308B"},{local:"huggingfacehub-python",title:"`huggingface_hub` Python\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u4F7F\u7528\u3059\u308B"},{local:"using-the-web-interface",title:"Using the web interface"},{local:"uploading-the-model-files",sections:[{local:"the-uploadfile-approach",title:"The `upload_file` approach"},{local:"the-repository-class",title:"The `Repository` class"},{local:"the-gitbased-approach",title:"The git-based approach"}],title:"Uploading the model files"}],title:"\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u3092\u5171\u6709\u3059\u308B"};function Qh(O,p,m){let c="pt";return jh(()=>{const g=new URLSearchParams(window.location.search);m(0,c=g.get("fw")||"pt")}),[c]}class s_ extends $h{constructor(p){super();kh(this,p,Qh,Xh,wh,{})}}export{s_ as default,Zh as metadata};
