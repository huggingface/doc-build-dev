import{S as mi,i as gi,s as wi,e as i,k as u,t as r,w as _,M as bi,c as l,d as t,m as f,a as p,h as n,x as h,b as d,N as Go,G as s,g as a,y as m,q as g,o as w,B as b,v as ki}from"../../chunks/vendor-hf-doc-builder.js";import{T as Zn}from"../../chunks/Tip-hf-doc-builder.js";import{Y as ea}from"../../chunks/Youtube-hf-doc-builder.js";import{I as hi}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as $}from"../../chunks/CodeBlock-hf-doc-builder.js";import{D as $i}from"../../chunks/DocNotebookDropdown-hf-doc-builder.js";function vi(Y){let c,y;return{c(){c=i("p"),y=r("\u{1F6A8} Google Colab\u306E\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3067\u3001\u300C6frames\u300D\u306E\u3042\u305F\u308A\u306B\u9752\u3044\u67A0\u304C\u3042\u308B\u306E\u304C\u898B\u3048\u307E\u3059\u304B\uFF1F\u3053\u308C\u306FColab\u306E\u7279\u5225\u306A\u6A5F\u80FD\u3067\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3092 \u201C\u30D5\u30EC\u30FC\u30E0 \u201C\u306B\u5727\u7E2E\u3057\u3066\u3044\u308B\u306E\u3067\u3059\u3002\u3082\u3057\u30A8\u30E9\u30FC\u306E\u539F\u56E0\u304C\u8A73\u3057\u304F\u898B\u3064\u304B\u3089\u306A\u3044\u3088\u3046\u3067\u3042\u308C\u3070\u3001\u3053\u306E2\u3064\u306E\u5C0F\u3055\u306A\u77E2\u5370\u3092\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306E\u5168\u5BB9\u3092\u62E1\u5927\u3057\u3066\u307F\u3066\u304F\u3060\u3055\u3044\u3002")},l(k){c=l(k,"P",{});var q=p(c);y=n(q,"\u{1F6A8} Google Colab\u306E\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3067\u3001\u300C6frames\u300D\u306E\u3042\u305F\u308A\u306B\u9752\u3044\u67A0\u304C\u3042\u308B\u306E\u304C\u898B\u3048\u307E\u3059\u304B\uFF1F\u3053\u308C\u306FColab\u306E\u7279\u5225\u306A\u6A5F\u80FD\u3067\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3092 \u201C\u30D5\u30EC\u30FC\u30E0 \u201C\u306B\u5727\u7E2E\u3057\u3066\u3044\u308B\u306E\u3067\u3059\u3002\u3082\u3057\u30A8\u30E9\u30FC\u306E\u539F\u56E0\u304C\u8A73\u3057\u304F\u898B\u3064\u304B\u3089\u306A\u3044\u3088\u3046\u3067\u3042\u308C\u3070\u3001\u3053\u306E2\u3064\u306E\u5C0F\u3055\u306A\u77E2\u5370\u3092\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306E\u5168\u5BB9\u3092\u62E1\u5927\u3057\u3066\u307F\u3066\u304F\u3060\u3055\u3044\u3002"),q.forEach(t)},m(k,q){a(k,c,q),s(c,y)},d(k){k&&t(c)}}}function yi(Y){let c,y,k,q,O,v,x,P,H,G,ue;return{c(){c=i("p"),y=r("\u{1F4A1} \u7406\u89E3\u3057\u304C\u305F\u3044\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u8868\u793A\u3055\u308C\u305F\u5834\u5408\u306F\u3001\u305D\u306E\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u30B3\u30D4\u30FC\u3057\u3066Google \u307E\u305F\u306F "),k=i("a"),q=r("Stack Overflow"),O=r(" \u306E\u691C\u7D22\u30D0\u30FC\u306B\u8CBC\u308A\u4ED8\u3051\u3066\u304F\u3060\u3055\u3044\uFF01\u3000\u305D\u306E\u30A8\u30E9\u30FC\u306B\u906D\u9047\u3057\u305F\u306E\u306F\u3042\u306A\u305F\u304C\u521D\u3081\u3066\u3067\u306F\u306A\u3044\u53EF\u80FD\u6027\u304C\u9AD8\u3044\u3067\u3059\u3057\u3001\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306E\u4ED6\u306E\u4EBA\u304C\u6295\u7A3F\u3057\u305F\u89E3\u6C7A\u7B56\u3092\u898B\u3064\u3051\u308B\u826F\u3044\u65B9\u6CD5\u3067\u3059\u3002\u4F8B\u3048\u3070\u3001"),v=i("code"),x=r("OSError: Can't load config for"),P=r(" \u3092 Stack Overflow \u3067\u691C\u7D22\u3059\u308B\u3068\u3001\u3044\u304F\u3064\u304B\u306E "),H=i("a"),G=r("\u30D2\u30F3\u30C8"),ue=r(" \u304C\u898B\u4ED8\u3051\u3089\u308C\u307E\u3059\u3002\u3053\u308C\u306F\u3001\u554F\u984C\u89E3\u6C7A\u306E\u51FA\u767A\u70B9\u3068\u3057\u3066\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),this.h()},l(V){c=l(V,"P",{});var A=p(c);y=n(A,"\u{1F4A1} \u7406\u89E3\u3057\u304C\u305F\u3044\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u8868\u793A\u3055\u308C\u305F\u5834\u5408\u306F\u3001\u305D\u306E\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u30B3\u30D4\u30FC\u3057\u3066Google \u307E\u305F\u306F "),k=l(A,"A",{href:!0,rel:!0});var M=p(k);q=n(M,"Stack Overflow"),M.forEach(t),O=n(A," \u306E\u691C\u7D22\u30D0\u30FC\u306B\u8CBC\u308A\u4ED8\u3051\u3066\u304F\u3060\u3055\u3044\uFF01\u3000\u305D\u306E\u30A8\u30E9\u30FC\u306B\u906D\u9047\u3057\u305F\u306E\u306F\u3042\u306A\u305F\u304C\u521D\u3081\u3066\u3067\u306F\u306A\u3044\u53EF\u80FD\u6027\u304C\u9AD8\u3044\u3067\u3059\u3057\u3001\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306E\u4ED6\u306E\u4EBA\u304C\u6295\u7A3F\u3057\u305F\u89E3\u6C7A\u7B56\u3092\u898B\u3064\u3051\u308B\u826F\u3044\u65B9\u6CD5\u3067\u3059\u3002\u4F8B\u3048\u3070\u3001"),v=l(A,"CODE",{});var fe=p(v);x=n(fe,"OSError: Can't load config for"),fe.forEach(t),P=n(A," \u3092 Stack Overflow \u3067\u691C\u7D22\u3059\u308B\u3068\u3001\u3044\u304F\u3064\u304B\u306E "),H=l(A,"A",{href:!0,rel:!0});var D=p(H);G=n(D,"\u30D2\u30F3\u30C8"),D.forEach(t),ue=n(A," \u304C\u898B\u4ED8\u3051\u3089\u308C\u307E\u3059\u3002\u3053\u308C\u306F\u3001\u554F\u984C\u89E3\u6C7A\u306E\u51FA\u767A\u70B9\u3068\u3057\u3066\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),A.forEach(t),this.h()},h(){d(k,"href","https://stackoverflow.com/"),d(k,"rel","nofollow"),d(H,"href","https://stackoverflow.com/search?q=OSError%3A+Can%27t+load+config+for+"),d(H,"rel","nofollow")},m(V,A){a(V,c,A),s(c,y),s(c,k),s(k,q),s(c,O),s(c,v),s(v,x),s(c,P),s(c,H),s(H,G),s(c,ue)},d(V){V&&t(c)}}}function qi(Y){let c,y,k,q,O;return{c(){c=i("p"),y=r("\u{1F6A8} \u540C\u50DA\u306F "),k=i("code"),q=r("distilbert-base-uncased"),O=r(" \u306E\u8A2D\u5B9A\u3092\u9593\u9055\u3048\u3066\u3044\u3058\u3063\u305F\u304B\u3082\u3057\u308C\u306A\u3044\u3067\u3059\u3002\u5B9F\u969B\u306E\u3068\u3053\u308D\u3001\u79C1\u305F\u3061\u306F\u307E\u305A\u5F7C\u3089\u306B\u78BA\u8A8D\u3057\u305F\u3044\u3068\u3053\u308D\u3067\u3059\u304C\u3001\u3053\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u306E\u76EE\u7684\u3067\u306F\u3001\u5F7C\u3089\u304C\u30C7\u30D5\u30A9\u30EB\u30C8\u306E\u8A2D\u5B9A\u3092\u4F7F\u7528\u3057\u305F\u3068\u4EEE\u5B9A\u3059\u308B\u3053\u3068\u306B\u3057\u307E\u3059\u3002")},l(v){c=l(v,"P",{});var x=p(c);y=n(x,"\u{1F6A8} \u540C\u50DA\u306F "),k=l(x,"CODE",{});var P=p(k);q=n(P,"distilbert-base-uncased"),P.forEach(t),O=n(x," \u306E\u8A2D\u5B9A\u3092\u9593\u9055\u3048\u3066\u3044\u3058\u3063\u305F\u304B\u3082\u3057\u308C\u306A\u3044\u3067\u3059\u3002\u5B9F\u969B\u306E\u3068\u3053\u308D\u3001\u79C1\u305F\u3061\u306F\u307E\u305A\u5F7C\u3089\u306B\u78BA\u8A8D\u3057\u305F\u3044\u3068\u3053\u308D\u3067\u3059\u304C\u3001\u3053\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u306E\u76EE\u7684\u3067\u306F\u3001\u5F7C\u3089\u304C\u30C7\u30D5\u30A9\u30EB\u30C8\u306E\u8A2D\u5B9A\u3092\u4F7F\u7528\u3057\u305F\u3068\u4EEE\u5B9A\u3059\u308B\u3053\u3068\u306B\u3057\u307E\u3059\u3002"),x.forEach(t)},m(v,x){a(v,c,x),s(c,y),s(c,k),s(k,q),s(c,O)},d(v){v&&t(c)}}}function Ei(Y){let c,y,k,q,O,v,x,P,H,G,ue,V,A,M,fe,D,Mo,de,No,Qo,ce,Lo,Ro,ds,_e,cs,nt,Fo,_s,he,hs,B,Vo,jt,Jo,Wo,ms,me,gs,ge,xt,Yo,Bo,ws,J,X,Pt,we,Xo,At,Uo,bs,at,Ko,ks,it,Ct,Zo,$s,U,er,Dt,tr,sr,vs,be,ys,ke,qs,N,or,Ot,rr,nr,Tt,ar,ir,Es,$e,ve,ta,js,Q,lr,zt,pr,ur,lt,fr,dr,xs,K,Ps,L,cr,St,_r,hr,It,mr,gr,As,ye,Cs,Z,Ds,pt,wr,Os,qe,Ee,sa,Ts,ut,br,zs,je,xe,oa,Ss,ft,kr,Is,Pe,Hs,Ae,Gs,R,$r,Ht,vr,yr,Gt,qr,Er,Ms,Ce,Ns,De,Qs,E,jr,Mt,xr,Pr,Nt,Ar,Cr,Oe,Qt,Dr,Or,dt,Tr,zr,Lt,Sr,Ir,Ls,Te,Rs,ee,Fs,te,Hr,Rt,Gr,Mr,Vs,ze,Js,se,Nr,Ft,Qr,Lr,Ws,Se,Ys,Ie,Bs,ct,Rr,Xs,T,He,Fr,Vt,Vr,Jr,Wr,Ge,Yr,Jt,Br,Xr,Ur,Wt,Kr,Zr,_t,Yt,en,tn,Us,ht,sn,Ks,W,oe,Bt,Me,on,Xt,rn,Zs,re,nn,Ut,an,ln,eo,Ne,to,mt,pn,so,Qe,oo,Le,gt,un,fn,ro,Re,no,Fe,ao,wt,dn,io,Ve,lo,bt,cn,po,Je,uo,C,_n,Kt,hn,mn,Zt,gn,wn,es,bn,kn,ts,$n,vn,fo,We,co,Ye,_o,ne,yn,ss,qn,En,ho,Be,mo,Xe,go,j,jn,os,xn,Pn,kt,An,Cn,rs,Dn,On,ns,Tn,zn,as,Sn,In,wo,Ue,bo,z,Hn,is,Gn,Mn,ls,Nn,Qn,Ke,Ln,Rn,ko,Ze,et,ra,$o,ae,Fn,ps,Vn,Jn,vo,tt,yo,st,qo,ie,Wn,ot,Yn,Bn,Eo;return v=new $i({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Google Colab",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/master/course/chapter8/section2.ipynb"},{label:"Aws Studio",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/master/course/chapter8/section2.ipynb"}]}}),M=new ea({props:{id:"DQ-CpJn6Rc4"}}),_e=new $({props:{code:`from huggingface_hub import notebook_login

notebook_login()`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login

notebook_login()`}}),he=new $({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}}),me=new $({props:{code:`from distutils.dir_util import copy_tree
from huggingface_hub import Repository, snapshot_download, create_repo, get_full_repo_name


def copy_repository_template():
    # Clone the repo and extract the local path
    template_repo_id = "lewtun/distilbert-base-uncased-finetuned-squad-d5716d28"
    commit_hash = "be3eaffc28669d7932492681cd5f3e8905e358b4"
    template_repo_dir = snapshot_download(template_repo_id, revision=commit_hash)
    # Create an empty repo on the Hub
    model_name = template_repo_id.split("/")[1]
    create_repo(model_name, exist_ok=True)
    # Clone the empty repo
    new_repo_id = get_full_repo_name(model_name)
    new_repo_dir = model_name
    repo = Repository(local_dir=new_repo_dir, clone_from=new_repo_id)
    # Copy files
    copy_tree(template_repo_dir, new_repo_dir)
    # Push to Hub
    repo.push_to_hub()`,highlighted:`<span class="hljs-keyword">from</span> distutils.dir_util <span class="hljs-keyword">import</span> copy_tree
<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> Repository, snapshot_download, create_repo, get_full_repo_name


<span class="hljs-keyword">def</span> <span class="hljs-title function_">copy_repository_template</span>():
    <span class="hljs-comment"># Clone the repo and extract the local path</span>
    template_repo_id = <span class="hljs-string">&quot;lewtun/distilbert-base-uncased-finetuned-squad-d5716d28&quot;</span>
    commit_hash = <span class="hljs-string">&quot;be3eaffc28669d7932492681cd5f3e8905e358b4&quot;</span>
    template_repo_dir = snapshot_download(template_repo_id, revision=commit_hash)
    <span class="hljs-comment"># Create an empty repo on the Hub</span>
    model_name = template_repo_id.split(<span class="hljs-string">&quot;/&quot;</span>)[<span class="hljs-number">1</span>]
    create_repo(model_name, exist_ok=<span class="hljs-literal">True</span>)
    <span class="hljs-comment"># Clone the empty repo</span>
    new_repo_id = get_full_repo_name(model_name)
    new_repo_dir = model_name
    repo = Repository(local_dir=new_repo_dir, clone_from=new_repo_id)
    <span class="hljs-comment"># Copy files</span>
    copy_tree(template_repo_dir, new_repo_dir)
    <span class="hljs-comment"># Push to Hub</span>
    repo.push_to_hub()`}}),we=new hi({}),be=new $({props:{code:`from transformers import pipeline

model_checkpoint = get_full_repo_name("distillbert-base-uncased-finetuned-squad-d5716d28")
reader = pipeline("question-answering", model=model_checkpoint)`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

model_checkpoint = get_full_repo_name(<span class="hljs-string">&quot;distillbert-base-uncased-finetuned-squad-d5716d28&quot;</span>)
reader = pipeline(<span class="hljs-string">&quot;question-answering&quot;</span>, model=model_checkpoint)`}}),ke=new $({props:{code:`"""
OSError: Can't load config for 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28'. Make sure that:

- 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28' is a correct model identifier listed on 'https://huggingface.co/models'

- or 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28' is the correct path to a directory containing a config.json file
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
OSError: Can&#x27;t load config for &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27;. Make sure that:

- &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27; is a correct model identifier listed on &#x27;https://huggingface.co/models&#x27;

- or &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27; is the correct path to a directory containing a config.json file
&quot;&quot;&quot;</span>`}}),K=new Zn({props:{$$slots:{default:[vi]},$$scope:{ctx:Y}}}),ye=new $({props:{code:`"""
Make sure that:

- 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28' is a correct model identifier listed on 'https://huggingface.co/models'

- or 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28' is the correct path to a directory containing a config.json file
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
Make sure that:

- &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27; is a correct model identifier listed on &#x27;https://huggingface.co/models&#x27;

- or &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27; is the correct path to a directory containing a config.json file
&quot;&quot;&quot;</span>`}}),Z=new Zn({props:{$$slots:{default:[yi]},$$scope:{ctx:Y}}}),Pe=new $({props:{code:`model_checkpoint = get_full_repo_name("distilbert-base-uncased-finetuned-squad-d5716d28")
reader = pipeline("question-answering", model=model_checkpoint)`,highlighted:`model_checkpoint = get_full_repo_name(<span class="hljs-string">&quot;distilbert-base-uncased-finetuned-squad-d5716d28&quot;</span>)
reader = pipeline(<span class="hljs-string">&quot;question-answering&quot;</span>, model=model_checkpoint)`}}),Ae=new $({props:{code:`"""
OSError: Can't load config for 'lewtun/distilbert-base-uncased-finetuned-squad-d5716d28'. Make sure that:

- 'lewtun/distilbert-base-uncased-finetuned-squad-d5716d28' is a correct model identifier listed on 'https://huggingface.co/models'

- or 'lewtun/distilbert-base-uncased-finetuned-squad-d5716d28' is the correct path to a directory containing a config.json file
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
OSError: Can&#x27;t load config for &#x27;lewtun/distilbert-base-uncased-finetuned-squad-d5716d28&#x27;. Make sure that:

- &#x27;lewtun/distilbert-base-uncased-finetuned-squad-d5716d28&#x27; is a correct model identifier listed on &#x27;https://huggingface.co/models&#x27;

- or &#x27;lewtun/distilbert-base-uncased-finetuned-squad-d5716d28&#x27; is the correct path to a directory containing a config.json file
&quot;&quot;&quot;</span>`}}),Ce=new $({props:{code:`from huggingface_hub import list_repo_files

list_repo_files(repo_id=model_checkpoint)`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> list_repo_files

list_repo_files(repo_id=model_checkpoint)`}}),De=new $({props:{code:"['.gitattributes', 'README.md', 'pytorch_model.bin', 'special_tokens_map.json', 'tokenizer_config.json', 'training_args.bin', 'vocab.txt']",highlighted:'[<span class="hljs-string">&#x27;.gitattributes&#x27;</span>, <span class="hljs-string">&#x27;README.md&#x27;</span>, <span class="hljs-string">&#x27;pytorch_model.bin&#x27;</span>, <span class="hljs-string">&#x27;special_tokens_map.json&#x27;</span>, <span class="hljs-string">&#x27;tokenizer_config.json&#x27;</span>, <span class="hljs-string">&#x27;training_args.bin&#x27;</span>, <span class="hljs-string">&#x27;vocab.txt&#x27;</span>]'}}),Te=new $({props:{code:`from transformers import AutoConfig

pretrained_checkpoint = "distilbert-base-uncased"
config = AutoConfig.from_pretrained(pretrained_checkpoint)`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoConfig

pretrained_checkpoint = <span class="hljs-string">&quot;distilbert-base-uncased&quot;</span>
config = AutoConfig.from_pretrained(pretrained_checkpoint)`}}),ee=new Zn({props:{warning:!0,$$slots:{default:[qi]},$$scope:{ctx:Y}}}),ze=new $({props:{code:'\n```python\nconfig.push_to_hub(model_checkpoint, commit_message="Add config.json")',highlighted:'\n```python\nconfig.push_to_hub(model_checkpoint, commit_message=<span class="hljs-string">&quot;Add config.json&quot;</span>)'}}),Se=new $({props:{code:`reader = pipeline("question-answering", model=model_checkpoint, revision="main")

context = r"""
Extractive Question Answering is the task of extracting an answer from a text
given a question. An example of a question answering dataset is the SQuAD
dataset, which is entirely based on that task. If you would like to fine-tune a
model on a SQuAD task, you may leverage the
examples/pytorch/question-answering/run_squad.py script.

\u{1F917} Transformers is interoperable with the PyTorch, TensorFlow, and JAX
frameworks, so you can use your favourite tools for a wide variety of tasks!
"""

question = "What is extractive question answering?"
reader(question=question, context=context)`,highlighted:`reader = pipeline(<span class="hljs-string">&quot;question-answering&quot;</span>, model=model_checkpoint, revision=<span class="hljs-string">&quot;main&quot;</span>)

context = <span class="hljs-string">r&quot;&quot;&quot;
Extractive Question Answering is the task of extracting an answer from a text
given a question. An example of a question answering dataset is the SQuAD
dataset, which is entirely based on that task. If you would like to fine-tune a
model on a SQuAD task, you may leverage the
examples/pytorch/question-answering/run_squad.py script.

\u{1F917} Transformers is interoperable with the PyTorch, TensorFlow, and JAX
frameworks, so you can use your favourite tools for a wide variety of tasks!
&quot;&quot;&quot;</span>

question = <span class="hljs-string">&quot;What is extractive question answering?&quot;</span>
reader(question=question, context=context)`}}),Ie=new $({props:{code:`{'score': 0.38669535517692566,
 'start': 34,
 'end': 95,
 'answer': 'the task of extracting an answer from a text given a question'}`,highlighted:`{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.38669535517692566</span>,
 <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">34</span>,
 <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">95</span>,
 <span class="hljs-string">&#x27;answer&#x27;</span>: <span class="hljs-string">&#x27;the task of extracting an answer from a text given a question&#x27;</span>}`}}),Me=new hi({}),Ne=new $({props:{code:`tokenizer = reader.tokenizer
model = reader.model`,highlighted:`tokenizer = reader.tokenizer
model = reader.model`}}),Qe=new $({props:{code:'question = "Which frameworks can I use?"',highlighted:'question = <span class="hljs-string">&quot;Which frameworks can I use?&quot;</span>'}}),Re=new $({props:{code:`import torch

inputs = tokenizer(question, context, add_special_tokens=True)
input_ids = inputs["input_ids"][0]
outputs = model(**inputs)
answer_start_scores = outputs.start_logits
answer_end_scores = outputs.end_logits
<h1 class="relative group">
	<a 
		id="get-the-most-likely-beginning-of-answer-with-the-argmax-of-the-score" 
		class="header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full" 
		href="#get-the-most-likely-beginning-of-answer-with-the-argmax-of-the-score"
	>
		<span><IconCopyLink/></span>
	</a>
	<span>
		Get the most likely beginning of answer with the argmax of the score
	</span>
</h1>

answer_start = torch.argmax(answer_start_scores)
<h1 class="relative group">
	<a 
		id="get-the-most-likely-end-of-answer-with-the-argmax-of-the-score" 
		class="header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full" 
		href="#get-the-most-likely-end-of-answer-with-the-argmax-of-the-score"
	>
		<span><IconCopyLink/></span>
	</a>
	<span>
		Get the most likely end of answer with the argmax of the score
	</span>
</h1>

answer_end = torch.argmax(answer_end_scores) + 1
answer = tokenizer.convert_tokens_to_string(
    tokenizer.convert_ids_to_tokens(input_ids[answer_start:answer_end])
)
print(f"Question: {question}")
print(f"Answer: {answer}")`,highlighted:`<span class="hljs-keyword">import</span> torch

inputs = tokenizer(question, context, add_special_tokens=<span class="hljs-literal">True</span>)
input_ids = inputs[<span class="hljs-string">&quot;input_ids&quot;</span>][<span class="hljs-number">0</span>]
outputs = model(**inputs)
answer_start_scores = outputs.start_logits
answer_end_scores = outputs.end_logits
&lt;h1 <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;get-the-most-likely-beginning-of-answer-with-the-argmax-of-the-score&quot;</span>&gt;Get the most likely beginning of answer <span class="hljs-keyword">with</span> the argmax of the score&lt;/h1&gt;
answer_start = torch.argmax(answer_start_scores)
&lt;h1 <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;get-the-most-likely-end-of-answer-with-the-argmax-of-the-score&quot;</span>&gt;Get the most likely end of answer <span class="hljs-keyword">with</span> the argmax of the score&lt;/h1&gt;
answer_end = torch.argmax(answer_end_scores) + <span class="hljs-number">1</span>
answer = tokenizer.convert_tokens_to_string(
    tokenizer.convert_ids_to_tokens(input_ids[answer_start:answer_end])
)
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Question: <span class="hljs-subst">{question}</span>&quot;</span>)
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Answer: <span class="hljs-subst">{answer}</span>&quot;</span>)`}}),Fe=new $({props:{code:`"""
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
/var/folders/28/k4cy5q7s2hs92xq7_h89_vgm0000gn/T/ipykernel_75743/2725838073.py in <module>
      1 inputs = tokenizer(question, text, add_special_tokens=True)
      2 input_ids = inputs["input_ids"]
----> 3 outputs = model(**inputs)
      4 answer_start_scores = outputs.start_logits
      5 answer_end_scores = outputs.end_logits

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)
   1049         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks
   1050                 or _global_forward_hooks or _global_forward_pre_hooks):
-> 1051             return forward_call(*input, **kwargs)
   1052         # Do not call functions when jit is used
   1053         full_backward_hooks, non_full_backward_hooks = [], []

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, start_positions, end_positions, output_attentions, output_hidden_states, return_dict)
    723         return_dict = return_dict if return_dict is not None else self.config.use_return_dict
    724
--> 725         distilbert_output = self.distilbert(
    726             input_ids=input_ids,
    727             attention_mask=attention_mask,

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)
   1049         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks
   1050                 or _global_forward_hooks or _global_forward_pre_hooks):
-> 1051             return forward_call(*input, **kwargs)
   1052         # Do not call functions when jit is used
   1053         full_backward_hooks, non_full_backward_hooks = [], []

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, output_attentions, output_hidden_states, return_dict)
    471             raise ValueError("You cannot specify both input_ids and inputs_embeds at the same time")
    472         elif input_ids is not None:
--> 473             input_shape = input_ids.size()
    474         elif inputs_embeds is not None:
    475             input_shape = inputs_embeds.size()[:-1]

AttributeError: 'list' object has no attribute 'size'
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
/var/folders/28/k4cy5q7s2hs92xq7_h89_vgm0000gn/T/ipykernel_75743/2725838073.py in &lt;module&gt;
      1 inputs = tokenizer(question, text, add_special_tokens=True)
      2 input_ids = inputs[&quot;input_ids&quot;]
----&gt; 3 outputs = model(**inputs)
      4 answer_start_scores = outputs.start_logits
      5 answer_end_scores = outputs.end_logits

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)
   1049         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks
   1050                 or _global_forward_hooks or _global_forward_pre_hooks):
-&gt; 1051             return forward_call(*input, **kwargs)
   1052         # Do not call functions when jit is used
   1053         full_backward_hooks, non_full_backward_hooks = [], []

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, start_positions, end_positions, output_attentions, output_hidden_states, return_dict)
    723         return_dict = return_dict if return_dict is not None else self.config.use_return_dict
    724
--&gt; 725         distilbert_output = self.distilbert(
    726             input_ids=input_ids,
    727             attention_mask=attention_mask,

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)
   1049         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks
   1050                 or _global_forward_hooks or _global_forward_pre_hooks):
-&gt; 1051             return forward_call(*input, **kwargs)
   1052         # Do not call functions when jit is used
   1053         full_backward_hooks, non_full_backward_hooks = [], []

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, output_attentions, output_hidden_states, return_dict)
    471             raise ValueError(&quot;You cannot specify both input_ids and inputs_embeds at the same time&quot;)
    472         elif input_ids is not None:
--&gt; 473             input_shape = input_ids.size()
    474         elif inputs_embeds is not None:
    475             input_shape = inputs_embeds.size()[:-1]

AttributeError: &#x27;list&#x27; object has no attribute &#x27;size&#x27;
&quot;&quot;&quot;</span>`}}),Ve=new ea({props:{id:"rSPyvPw0p9k"}}),Je=new ea({props:{id:"5PkZ4rbHL6c"}}),We=new $({props:{code:'inputs["input_ids"][:5]',highlighted:'inputs[<span class="hljs-string">&quot;input_ids&quot;</span>][:<span class="hljs-number">5</span>]'}}),Ye=new $({props:{code:"[101, 2029, 7705, 2015, 2064]",highlighted:'[<span class="hljs-number">101</span>, <span class="hljs-number">2029</span>, <span class="hljs-number">7705</span>, <span class="hljs-number">2015</span>, <span class="hljs-number">2064</span>]'}}),Be=new $({props:{code:'type(inputs["input_ids"])',highlighted:'<span class="hljs-built_in">type</span>(inputs[<span class="hljs-string">&quot;input_ids&quot;</span>])'}}),Xe=new $({props:{code:"list",highlighted:'<span class="hljs-built_in">list</span>'}}),Ue=new $({props:{code:`~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, output_attentions, output_hidden_states, return_dict)
    471             raise ValueError("You cannot specify both input_ids and inputs_embeds at the same time")
    472         elif input_ids is not None:
--> 473             input_shape = input_ids.size()
    474         elif inputs_embeds is not None:
    475             input_shape = inputs_embeds.size()[:-1]

AttributeError: 'list' object has no attribute 'size'`,highlighted:`~<span class="hljs-regexp">/miniconda3/</span>envs<span class="hljs-regexp">/huggingface/</span>lib<span class="hljs-regexp">/python3.8/</span>site-packages<span class="hljs-regexp">/transformers/m</span>odels<span class="hljs-regexp">/distilbert/m</span>odeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, output_attentions, output_hidden_states, return_dict)
    <span class="hljs-number">471</span>             raise ValueError(<span class="hljs-string">&quot;You cannot specify both input_ids and inputs_embeds at the same time&quot;</span>)
    <span class="hljs-number">472</span>         elif input_ids is not None:
--&gt; <span class="hljs-number">473</span>             input_shape = input_ids.<span class="hljs-keyword">size</span>()
    <span class="hljs-number">474</span>         elif inputs_embeds is not None:
    <span class="hljs-number">475</span>             input_shape = inputs_embeds.<span class="hljs-keyword">size</span>()[:-<span class="hljs-number">1</span>]

AttributeError: <span class="hljs-string">&#x27;list&#x27;</span> object has no attribute <span class="hljs-string">&#x27;size&#x27;</span>`}}),tt=new $({props:{code:`inputs = tokenizer(question, context, add_special_tokens=True, return_tensors="pt")
input_ids = inputs["input_ids"][0]
outputs = model(**inputs)
answer_start_scores = outputs.start_logits
answer_end_scores = outputs.end_logits
<h1 class="relative group">
	<a 
		id="get-the-most-likely-beginning-of-answer-with-the-argmax-of-the-score" 
		class="header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full" 
		href="#get-the-most-likely-beginning-of-answer-with-the-argmax-of-the-score"
	>
		<span><IconCopyLink/></span>
	</a>
	<span>
		Get the most likely beginning of answer with the argmax of the score
	</span>
</h1>

answer_start = torch.argmax(answer_start_scores)
<h1 class="relative group">
	<a 
		id="get-the-most-likely-end-of-answer-with-the-argmax-of-the-score" 
		class="header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full" 
		href="#get-the-most-likely-end-of-answer-with-the-argmax-of-the-score"
	>
		<span><IconCopyLink/></span>
	</a>
	<span>
		Get the most likely end of answer with the argmax of the score
	</span>
</h1>

answer_end = torch.argmax(answer_end_scores) + 1
answer = tokenizer.convert_tokens_to_string(
    tokenizer.convert_ids_to_tokens(input_ids[answer_start:answer_end])
)
print(f"Question: {question}")
print(f"Answer: {answer}")`,highlighted:`inputs = tokenizer(question, context, add_special_tokens=<span class="hljs-literal">True</span>, return_tensors=<span class="hljs-string">&quot;pt&quot;</span>)
input_ids = inputs[<span class="hljs-string">&quot;input_ids&quot;</span>][<span class="hljs-number">0</span>]
outputs = model(**inputs)
answer_start_scores = outputs.start_logits
answer_end_scores = outputs.end_logits
&lt;h1 <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;get-the-most-likely-beginning-of-answer-with-the-argmax-of-the-score&quot;</span>&gt;Get the most likely beginning of answer <span class="hljs-keyword">with</span> the argmax of the score&lt;/h1&gt;
answer_start = torch.argmax(answer_start_scores)
&lt;h1 <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;get-the-most-likely-end-of-answer-with-the-argmax-of-the-score&quot;</span>&gt;Get the most likely end of answer <span class="hljs-keyword">with</span> the argmax of the score&lt;/h1&gt;
answer_end = torch.argmax(answer_end_scores) + <span class="hljs-number">1</span>
answer = tokenizer.convert_tokens_to_string(
    tokenizer.convert_ids_to_tokens(input_ids[answer_start:answer_end])
)
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Question: <span class="hljs-subst">{question}</span>&quot;</span>)
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Answer: <span class="hljs-subst">{answer}</span>&quot;</span>)`}}),st=new $({props:{code:`"""
Question: Which frameworks can I use?
Answer: pytorch, tensorflow, and jax
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
Question: Which frameworks can I use?
Answer: pytorch, tensorflow, and jax
&quot;&quot;&quot;</span>`}}),{c(){c=i("meta"),y=u(),k=i("h1"),q=r("\u30A8\u30E9\u30FC\u3092\u898B\u3064\u3051\u305F\u6642\u306B\u6700\u521D\u306B\u3059\u308B\u3053\u3068"),O=u(),_(v.$$.fragment),x=u(),P=i("p"),H=r("\u3053\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u65B0\u3057\u304F\u30C1\u30E5\u30FC\u30CB\u30F3\u30B0\u3055\u308C\u305FTransformer\u30E2\u30C7\u30EB\u304B\u3089\u4E88\u6E2C\u3092\u751F\u6210\u3057\u3088\u3046\u3068\u3059\u308B\u3068\u304D\u306B\u8D77\u3053\u308B\u4E8B\u304C\u3067\u304D\u308B\u3001\u3044\u304F\u3064\u304B\u306E\u4E00\u822C\u7684\u306A\u30A8\u30E9\u30FC\u306B\u3064\u3044\u3066\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002\u3053\u308C\u306F"),G=i("a"),ue=r("\u30BB\u30AF\u30B7\u30E7\u30F34"),V=r("\u306E\u6E96\u5099\u3068\u306A\u308A\u3001\u5B66\u7FD2\u6BB5\u968E\u3092\u30C7\u30D0\u30C3\u30B0\u3059\u308B\u65B9\u6CD5\u3092\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002"),A=u(),_(M.$$.fragment),fe=u(),D=i("p"),Mo=r("\u3053\u306E\u7AE0\u306E\u70BA\u306B"),de=i("a"),No=r("\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EC\u30DD\u30B8\u30C8\u30EA\u30FC"),Qo=r("\u3092\u7528\u610F\u3057\u307E\u3057\u305F\u3002\u3053\u306E\u7AE0\u306E\u30B3\u30FC\u30C9\u3092\u5B9F\u884C\u3057\u305F\u3044\u5834\u5408\u306F\u3001\u307E\u305A\u30E2\u30C7\u30EB\u3092"),ce=i("a"),Lo=r("\u30CF\u30AE\u30F3\u30B0\u30D5\u30A7\u30A4\u30B9\u30CF\u30D6\uFF08Hugging Face Hub\uFF09"),Ro=r("\u306E\u30A2\u30AB\u30A6\u30F3\u30C8\u306B\u30B3\u30D4\u30FC\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u307E\u305AJupyterNotebook\u3067\u30ED\u30B0\u30A4\u30F3\u3057\u307E\u3057\u3087\u3046"),ds=u(),_(_e.$$.fragment),cs=u(),nt=i("p"),Fo=r("\u305D\u308C\u3068\u3082\u3001\u30BF\u30FC\u30DF\u30CA\u30EB\u3092\u4F7F\u3044\u306A\u304C\u3089:"),_s=u(),_(he.$$.fragment),hs=u(),B=i("p"),Vo=r("\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u5165\u529B\u3059\u308B\u753B\u9762\u304C\u8868\u793A\u3055\u308C\u307E\u3059\u3002Authentification token \u304C "),jt=i("em"),Jo=r("~/.cache/huggingface/"),Wo=r("\u306E\u4E2D\u306B\u30BB\u30FC\u30D6\u3055\u308C\u307E\u3059\u3002\u30ED\u30B0\u30A4\u30F3\u3057\u305F\u5F8C\u306B\u4EE5\u4E0B\u306E\u6A5F\u80FD\u3067\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u30B3\u30D4\u30FC\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059"),ms=u(),_(me.$$.fragment),gs=u(),ge=i("p"),xt=i("code"),Yo=r("copy_repository_template()"),Bo=r("\u6A5F\u80FD\u306F\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EC\u30DD\u30B8\u30C8\u30EA\u30FC\u3092\u30A2\u30AB\u30F3\u30A6\u30C8\u306B\u30B3\u30D4\u30FC\u3057\u307E\u3059\u3002"),ws=u(),J=i("h2"),X=i("a"),Pt=i("span"),_(we.$$.fragment),Xo=u(),At=i("span"),Uo=r("\u{1F917} Transformers\u3000\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30B0"),bs=u(),at=i("p"),Ko=r("Transformer\u30E2\u30C7\u30EB\u3068\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30B0\u3068\u3044\u3046\u7D20\u6674\u3089\u3057\u3044\u4E16\u754C\u3078\u306E\u65C5\u3092\u59CB\u3081\u308B\u306B\u3042\u305F\u308A\u3001\u6B21\u306E\u3088\u3046\u306A\u30B7\u30CA\u30EA\u30AA\u3092\u8003\u3048\u3066\u307F\u307E\u3057\u3087\u3046\u3002\u3042\u306A\u305F\u306F\u540C\u50DA\u3068\u4E00\u7DD2\u306B\u3001\u3042\u308Be\u30B3\u30DE\u30FC\u30B9\u30B5\u30A4\u30C8\u306B\u95A2\u3059\u308B\u304A\u5BA2\u3055\u3093\u306E\u7B54\u3048\u3092\u898B\u3064\u3051\u3089\u308C\u308B\u3088\u3046\u306B\u3001\u2018Question Answering\u2019\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306B\u53D6\u308A\u7D44\u3093\u3067\u3044\u307E\u3059\u3002\u3042\u306A\u305F\u306E\u540C\u50DA\u306F\u3053\u3093\u306A\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u9001\u308A\u307E\u3057\u305F\u3002"),ks=u(),it=i("blockquote"),Ct=i("p"),Zo=r("\u3069\u3046\u3082! \u5148\u307B\u3069\u3001\u3010\u7B2C7\u7AE0\u3011(/course/chapter7/7)\u3000\u306E\u30C6\u30AF\u30CB\u30C3\u30AF\u3092\u4F7F\u3063\u3066\u5B9F\u9A13\u3092\u3057\u305F\u3068\u3053\u308D\u3001SQuAD\u30C7\u30FC\u30BF\u30BB\u30C3\u30C8\u3067\u7D20\u6674\u3089\u3057\u3044\u7D50\u679C\u304C\u5F97\u3089\u308C\u307E\u3057\u305F!Hub\u4E0A\u306E\u30E2\u30C7\u30EBID\u306F\u201Dlewtun/distilbert-base-uncased-finetuned-squad-d5716d28\u201D\u3067\u3059\u3002\u3053\u306E\u30E2\u30C7\u30EB\u3092\u305C\u3072\u30C6\u30B9\u30C8\u3057\u3066\u307F\u307E\u3057\u3087\u3046!"),$s=u(),U=i("p"),er=r("\u3055\u3066\u3001\u{1F917} Transformers \u3067\u30E2\u30C7\u30EB\u3092\u30ED\u30FC\u30C9\u3059\u308B\u305F\u3081\u306B\u3000 "),Dt=i("code"),tr=r("pipeline"),sr=r(" \u3092\u4F7F\u3044\u307E\u3057\u3087\u3046\uFF01"),vs=u(),_(be.$$.fragment),ys=u(),_(ke.$$.fragment),qs=u(),N=i("p"),or=r("\u6B8B\u5FF5\uFF01\u3069\u3046\u3057\u3066\u3082\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002\u30D7\u30ED\u30B0\u30E9\u30DF\u30F3\u30B0\u304C\u521D\u3081\u3066\u306E\u65B9\u306F\u3053\u3093\u306A\u30E1\u30C3\u30BB\u30FC\u30B8\u306F\u6016\u305D\u3046\u306B\u898B\u3048\u307E\u3059\u3002("),Ot=i("code"),rr=r("OSError"),nr=r("\u306F\u4F55\uFF1F)\u3002\u3053\u306E\u3088\u3046\u306A\u30A8\u30E9\u30FC\u306F\u3001"),Tt=i("em"),ar=r("Python traceback"),ir=r(" \u3068\u547C\u3070\u308C\u308B\u3001\u3088\u308A\u5927\u304D\u306A\u30A8\u30E9\u30FC\u30EC\u30DD\u30FC\u30C8\u306E\u6700\u5F8C\u306E\u90E8\u5206\u3067\u3059\u3002\u3053\u306E\u30A8\u30E9\u30FC\u306F\u3001Google Colab\u3067\u5B9F\u884C\u3057\u305F\u5834\u5408\u306B\u306F\u3001\u6B21\u306E\u3088\u3046\u306A\u753B\u50CF\u304C\u8868\u793A\u3055\u308C\u307E\u3059\u3002"),Es=u(),$e=i("div"),ve=i("img"),js=u(),Q=i("p"),lr=r("\u3053\u306E\u30EC\u30DD\u30FC\u30C8\u306B\u306F\u591A\u304F\u306E\u60C5\u5831\u304C\u542B\u307E\u308C\u3066\u3044\u308B\u306E\u3067\u3001\u4E3B\u8981\u306A\u90E8\u5206\u3092\u4E00\u7DD2\u306B\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002\u307E\u305A\u6CE8\u610F\u3059\u3079\u304D\u306F\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306F\u4E0B\u304B\u3089\u4E0A\u3078\u8AAD\u3080\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uFF08\u65E5\u672C\u8A9E\u306E\u9006\u306E\u8AAD\u307F\u65B9\u3067\u3059\u306D\uFF01\uFF09\u3002\u3053\u308C\u306F\u3001\u30A8\u30E9\u30FC\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u304C\u3001\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3059\u308B\u3068\u304D\u306B "),zt=i("code"),pr=r("pipeline"),ur=r(" \u304C\u884C\u3046\u4E00\u9023\u306E\u95A2\u6570\u547C\u3073\u51FA\u3057\u3092\u53CD\u6620\u3057\u3066\u3044\u307E\u3059\u3044\u307E\u3059\uFF08\u8A73\u3057\u304F\u306F"),lt=i("a"),fr=r("\u7B2C\uFF12\u7AE0"),dr=r("\uFF09\u3092\u3054\u89A7\u4E0B\u3055\u3044\u3002"),xs=u(),_(K.$$.fragment),Ps=u(),L=i("p"),cr=r("\u3053\u308C\u306F\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306E\u6700\u5F8C\u306E\u884C\u304C\u3001\u767A\u751F\u3057\u305F\u30A8\u30E9\u30FC\u306E\u540D\u524D\u3092\u4E0E\u3048\u308B\u3053\u3068\u3092\u3057\u307E\u3059\u3002\u30A8\u30E9\u30FC\u306E\u30BF\u30A4\u30D7\u306F "),St=i("code"),_r=r("OSError"),hr=r(" \u3067\u3001\u3053\u308C\u306F\u30B7\u30B9\u30C6\u30E0\u95A2\u9023\u306E\u30A8\u30E9\u30FC\u3092\u793A\u3057\u3066\u3044\u307E\u3059\u3002\u4ED8\u5C5E\u306E\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8AAD\u3080\u3068\u3001\u30E2\u30C7\u30EB\u306E "),It=i("em"),mr=r("config.json"),gr=r(" \u30D5\u30A1\u30A4\u30EB\u306B\u554F\u984C\u304C\u3042\u308B\u3088\u3046\u3067\u3001\u305D\u308C\u3092\u4FEE\u6B63\u3059\u308B\u305F\u3081\u306E2\u3064\u306E\u63D0\u6848\u3092\u4E0E\u3048\u3089\u308C\u3066\u3044\u307E\u3059\u3002"),As=u(),_(ye.$$.fragment),Cs=u(),_(Z.$$.fragment),Ds=u(),pt=i("p"),wr=r("\u6700\u521D\u306E\u63D0\u6848\u306F\u3001\u30E2\u30C7\u30EBID\u304C\u5B9F\u969B\u306B\u6B63\u3057\u3044\u304B\u3069\u3046\u304B\u3092\u78BA\u8A8D\u3059\u308B\u3088\u3046\u6C42\u3081\u3066\u3044\u308B\u306E\u3067\u3001\u307E\u305A\u3001\u8B58\u5225\u5B50\u3092\u30B3\u30D4\u30FC\u3057\u3066Hub\u306E\u691C\u7D22\u30D0\u30FC\u306B\u8CBC\u308A\u4ED8\u3051\u307E\u3057\u3087\u3046\u3002"),Os=u(),qe=i("div"),Ee=i("img"),Ts=u(),ut=i("p"),br=r("\u3046\u30FC\u3093\u3001\u78BA\u304B\u306B\u540C\u50DA\u306E\u30E2\u30C7\u30EB\u306FHub\u306B\u306A\u3044\u3088\u3046\u3060\u2026\u3057\u304B\u3057\u3001\u30E2\u30C7\u30EB\u306E\u540D\u524D\u306B\u30BF\u30A4\u30D7\u30DF\u30B9\u304C\u3042\u308B! DistilBERT\u306E\u540D\u524D\u306B\u306F\u300Cl\u300D\u304C1\u3064\u3057\u304B\u306A\u3044\u306E\u3067\u3001\u305D\u308C\u3092\u76F4\u3057\u3066\u3001\u4EE3\u308F\u308A\u306B\u300Clewtun/distilbert-base-uncased-finetuned-squad-d5716d28\u300D\u3092\u63A2\u305D\u3046\uFF01"),zs=u(),je=i("div"),xe=i("img"),Ss=u(),ft=i("p"),kr=r("\u3055\u3066\u3001\u3053\u308C\u3067\u30D2\u30C3\u30C8\u3057\u307E\u3057\u305F\u3002\u3067\u306F\u3001\u6B63\u3057\u3044\u30E2\u30C7\u30EBID\u3067\u518D\u5EA6\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3092\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Is=u(),_(Pe.$$.fragment),Hs=u(),_(Ae.$$.fragment),Gs=u(),R=i("p"),$r=r("\u3042\u3042\u3001\u307E\u305F\u5931\u6557\u3060\u3002\u6A5F\u68B0\u5B66\u7FD2\u30A8\u30F3\u30B8\u30CB\u30A2\u306E\u65E5\u5E38\u3078\u3088\u3046\u3053\u305D\uFF01 \u30E2\u30C7\u30EBID\u306F\u4FEE\u6B63\u3067\u304D\u305F\u306E\u3067\u3001\u554F\u984C\u306F\u30EA\u30DD\u30B8\u30C8\u30EA\u81EA\u4F53\u306B\u3042\u308B\u306F\u305A\u3067\u3059\u3002\u{1F917} Hub\u4E0A\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u5185\u5BB9\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u7C21\u5358\u306A\u65B9\u6CD5\u306F\u3001"),Ht=i("code"),vr=r("huggingface_hub"),yr=r("\u30E9\u30A4\u30D6\u30E9\u30EA\u306E "),Gt=i("code"),qr=r("list_repo_files()"),Er=r(" \u95A2\u6570\u3092\u4F7F\u7528\u3059\u308B\u3053\u3068\u3067\u3059\u3002"),Ms=u(),_(Ce.$$.fragment),Ns=u(),_(De.$$.fragment),Qs=u(),E=i("p"),jr=r("\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u306F "),Mt=i("em"),xr=r("config.json"),Pr=r(" \u30D5\u30A1\u30A4\u30EB\u304C\u306A\u3044\u3088\u3046\u3067\u3059! \u3069\u3046\u308A\u3067 "),Nt=i("code"),Ar=r("pipeline"),Cr=r(" \u304C\u30E2\u30C7\u30EB\u3092\u8AAD\u307F\u8FBC\u3081\u306A\u3044\u308F\u3051\u3067\u3059\u3002\u540C\u50DA\u304C\u3053\u306E\u30D5\u30A1\u30A4\u30EB\u3092Hub\u306B\u30D7\u30C3\u30B7\u30E5\u3059\u308B\u306E\u3092\u5FD8\u308C\u305F\u306B\u9055\u3044\u3042\u308A\u307E\u305B\u3093\u3002\u3053\u306E\u5834\u5408\u3001\u554F\u984C\u3092\u89E3\u6C7A\u3059\u308B\u306E\u306F\u7C21\u5358\u3067\u3059\u3002\u30D5\u30A1\u30A4\u30EB\u3092\u8FFD\u52A0\u3059\u308B\u3088\u3046\u306B\u4F9D\u983C\u3059\u308B\u304B\u3001\u30E2\u30C7\u30EBID\u304B\u3089\u4F7F\u7528\u3055\u308C\u305F\u4E8B\u524D\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u304C"),Oe=i("a"),Qt=i("code"),Dr=r("distilbert-base-uncased"),Or=r("\u3067\u3042\u308B\u3053\u3068\u304C\u308F\u304B\u308B\u306E\u3067\u3001\u305D\u306E\u30E2\u30C7\u30EB\u306Econfig\uFF08\u8A2D\u5B9A\uFF09\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3057\u3001\u6211\u3005\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D7\u30C3\u30B7\u30E5\u3057\u3066\u554F\u984C\u304C\u89E3\u6C7A\u3059\u308B\u304B\u78BA\u8A8D\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u305D\u308C\u3067\u306F\u8A66\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),dt=i("a"),Tr=r("\u7B2C2\u7AE0"),zr=r("\u3067\u5B66\u3093\u3060\u30C6\u30AF\u30CB\u30C3\u30AF\u3092\u4F7F\u3063\u3066\u3001"),Lt=i("code"),Sr=r("AutoConfig"),Ir=r("\u30AF\u30E9\u30B9\u3067\u30E2\u30C7\u30EB\u306E\u8A2D\u5B9A\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),Ls=u(),_(Te.$$.fragment),Rs=u(),_(ee.$$.fragment),Fs=u(),te=i("p"),Hr=r("\u305D\u308C\u3067"),Rt=i("code"),Gr=r("push_to_hub()"),Mr=r("\u3000\u6A5F\u80FD\u3067\u30E2\u30C7\u30EB\u306E\u8A2D\u5B9A\u3092\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D7\u30C3\u30B7\u30E5\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),Vs=u(),_(ze.$$.fragment),Js=u(),se=i("p"),Nr=r("\u305D\u3057\u3066\u306F\u3001\u6700\u65B0\u306E\u30B3\u30DF\u30C3\u30C8\u3092 "),Ft=i("code"),Qr=r("main"),Lr=r(" \u30D6\u30E9\u30F3\u30C1\u304B\u3089\u8AAD\u307F\u8FBC\u3053\u3093\u3067\u307F\u307E\u3057\u3087\u3046\u3002"),Ws=u(),_(Se.$$.fragment),Ys=u(),_(Ie.$$.fragment),Bs=u(),ct=i("p"),Rr=r("\u3084\u3063\u305F\u306D\uFF01 \u3053\u308C\u3067\u3001\u304A\u75B2\u308C\u69D8\u3067\u3057\u305F\u3002\u4ECA\u307E\u3067\u306E\u3053\u3068\u3092\u4E00\u7DD2\u306B\u632F\u308A\u8FD4\u3063\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Xs=u(),T=i("ul"),He=i("li"),Fr=r("Python\u306E\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u306F\u3000"),Vt=i("strong"),Vr=r("traceback"),Jr=r("\u3000\u3068\u547C\u3070\u308C\u3001\u4E0B\u304B\u3089\u4E0A\u3078\u3068\u8AAD\u307F\u4E0A\u3052\u3089\u308C\u307E\u3059\u3002\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u306E\u6700\u5F8C\u306E\u884C\u306F\u4E00\u756A\u5FC5\u8981\u306A\u60C5\u5831\u3092\u542B\u3093\u3067\u3044\u307E\u3059\u3002"),Wr=u(),Ge=i("li"),Yr=r("\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u8907\u96D1\u306A\u5834\u5408\u306F\u3001"),Jt=i("strong"),Br=r("traceback"),Xr=r("\u3000\u3092\u8AAD\u307F\u4E0A\u3052\u306A\u304C\u3089\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u305F\u30BD\u30FC\u30B9\u30B3\u30FC\u30C9\u30D5\u30A1\u30A4\u30EB\u540D\u3084\u884C\u756A\u53F7\u3092\u6307\u5B9A\u3057\u3066\u3001\u30A8\u30E9\u30FC\u306E\u539F\u56E0\u3092\u8AAD\u307F\u53D6\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),Ur=u(),Wt=i("li"),Kr=r("\u305D\u306E\u5834\u5408\u3067\u3082\u30C7\u30D0\u30B0\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u306A\u3044\u306A\u3089\u3001\u30A4\u30F3\u30BF\u30FC\u30CD\u30C3\u30C8\u4E0A\u306B\u3092\u691C\u7D22\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Zr=u(),_t=i("li"),Yt=i("code"),en=r("huggingface_hub"),tn=r(" \u30E9\u30A4\u30D6\u30E9\u30EA\u306F\u3001Hub\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F7F\u7528\u3059\u308B\u305F\u3081\u4E00\u9023\u306E\u30C4\u30FC\u30EB\u3092\u63D0\u4F9B\u3057\u307E\u3059\u3002\u30C7\u30D0\u30C3\u30B0\u3059\u308B\u305F\u3081\u306B\u4F7F\u7528\u3067\u304D\u308B\u306E\u30C4\u30FC\u30EB\u3082\u542B\u3081\u3066\u3044\u307E\u3059\u3002"),Us=u(),ht=i("p"),sn=r("\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30C3\u30B0\u65B9\u6CD5\u304C\u308F\u304B\u3063\u305F\u3068\u3053\u308D\u3067\u3001\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3067\u96E3\u3057\u3044\u4F8B\u3092\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Ks=u(),W=i("h2"),oe=i("a"),Bt=i("span"),_(Me.$$.fragment),on=u(),Xt=i("span"),rn=r("\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3092\u30C7\u30D0\u30C3\u30B0"),Zs=u(),re=i("p"),nn=r("\u6642\u306B\u306F\u30E2\u30C7\u30EB\u306E\u30ED\u30B8\u30C3\u30C8\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\uFF08\u4F8B\u3048\u3070\u3001\u30AB\u30B9\u30BF\u30E0\u306A\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u3092\u4F7F\u3044\u305F\u3044\u5834\u5408\u3067\uFF09\u3002\u3053\u306E\u3088\u3046\u306A\u5834\u5408\u3001\u4F55\u304C\u554F\u984C\u306B\u306A\u308B\u304B\u3092\u77E5\u308B\u305F\u3081\u306B\u3001\u307E\u305A "),Ut=i("code"),an=r("pipeline"),ln=r(" \u304B\u3089\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u53D6\u5F97\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),eo=u(),_(Ne.$$.fragment),to=u(),mt=i("p"),pn=r("\u6B21\u306B\u5FC5\u8981\u306A\u306E\u306F\u3001\u304A\u6C17\u306B\u5165\u308A\u306E\u30D5\u30EC\u30FC\u30E0\u30EF\u30FC\u30AF\u304C\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u308B\u304B\u3069\u3046\u304B\u3068\u3044\u3046\u8CEA\u554F\u3067\u3059\u3002"),so=u(),_(Qe.$$.fragment),oo=u(),Le=i("p"),gt=i("a"),un=r("\u7B2C7\u7AE0"),fn=r("\u3067\u898B\u305F\u3088\u3046\u306B\u3001\u901A\u5E38\u5FC5\u8981\u306A\u30B9\u30C6\u30C3\u30D7\u306F\u3001\u5165\u529B\u306E\u30C8\u30FC\u30AF\u30F3\u3001\u958B\u59CB\u3068\u7D42\u4E86\u30C8\u30FC\u30AF\u30F3\u306E\u30ED\u30B8\u30C3\u30C8\u3001\u305D\u3057\u3066\u89E3\u7B54\u30B9\u30D1\u30F3\u306E\u30C7\u30B3\u30FC\u30C9\u3067\u3059\u3002"),ro=u(),_(Re.$$.fragment),no=u(),_(Fe.$$.fragment),ao=u(),wt=i("p"),dn=r("\u304A\u3084\u304A\u3084\u3001\u3069\u3046\u3084\u3089\u30B3\u30FC\u30C9\u306B\u30D0\u30B0\u304C\u3042\u308B\u3088\u3046\u3067\u3059\u306D\u3002\u3067\u3082\u3001\u3061\u3087\u3063\u3068\u3057\u305F\u30C7\u30D0\u30C3\u30B0\u306F\u6016\u304F\u3042\u308A\u307E\u305B\u3093\u3002Python\u306E\u30C7\u30D0\u30C3\u30AC\u3092\u30CE\u30FC\u30C8\u30D6\u30C3\u30AF\u3067\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u308B\u306E\u3067\u3059\u3002"),io=u(),_(Ve.$$.fragment),lo=u(),bt=i("p"),cn=r("\u305D\u308C\u3068\u3082\u3001\u30BF\u30FC\u30DF\u30CA\u30EB\u3067\u30C7\u30D0\u30C3\u30B0\u3092\u884C\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059:"),po=u(),_(Je.$$.fragment),uo=u(),C=i("p"),_n=r("\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8AAD\u3080\u3068\u3001 "),Kt=i("code"),hn=r("'list' object has no attribute 'size'"),mn=r(" \u3068\u3001 "),Zt=i("code"),gn=r("-->"),wn=r(" \u77E2\u5370\u304C "),es=i("code"),bn=r("model(**inputs)"),kn=r(" \u306E\u4E2D\u3067\u554F\u984C\u304C\u767A\u751F\u3057\u305F\u884C\u3092\u6307\u3057\u3066\u3044\u308B\u3053\u3068\u304C\u5206\u304B\u308A\u307E\u3059\u3002Python\u30C7\u30D0\u30C3\u30AC\u3092\u4F7F\u3063\u3066\u30A4\u30F3\u30BF\u30E9\u30AF\u30C6\u30A3\u30D6\u306B\u30C7\u30D0\u30C3\u30B0\u3067\u304D\u307E\u3059\u304C\u3001\u4ECA\u306F\u5358\u306B "),ts=i("code"),$n=r("inputs"),vn=r(" \u306E\u30B9\u30E9\u30A4\u30B9\u3092\u8868\u793A\u3057\u3066\u4F55\u304C\u3042\u308B\u304B\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),fo=u(),_(We.$$.fragment),co=u(),_(Ye.$$.fragment),_o=u(),ne=i("p"),yn=r("\u3053\u308C\u306F\u78BA\u304B\u306B\u666E\u901A\u306EPython\u306E "),ss=i("code"),qn=r("list"),En=r(" \u306E\u3088\u3046\u306B\u898B\u3048\u307E\u3059\u304C\u3001\u518D\u78BA\u8A8D\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),ho=u(),_(Be.$$.fragment),mo=u(),_(Xe.$$.fragment),go=u(),j=i("p"),jn=r("\u3053\u308C\u306F\u78BA\u304B\u306BPython\u306E"),os=i("code"),xn=r("list"),Pn=r("\u3067\u3059\u306D\u3002\u3067\u306F\u4F55\u304C\u3044\u3051\u306A\u304B\u3063\u305F\u306E\u304B\uFF1F"),kt=i("a"),An=r("\u7B2C2\u7AE0"),Cn=r("\u3067\u3001\u{1F917} Transformers\u306E "),rs=i("code"),Dn=r("AutoModelForXxx"),On=r(" \u30AF\u30E9\u30B9\u306F "),ns=i("em"),Tn=r("tensor"),zn=r(" (PyTorch \u307E\u305F\u306F TensorFlow \u306E\u3044\u305A\u308C\u304B)\u3092\u4F7F\u3044\u306A\u304C\u3089\u3001\u4F8B\u3048\u3070PyTorch\u306E "),as=i("code"),Sn=r("Tensor.size()"),In=r("\u6A5F\u80FD\u3092\u547C\u3073\u51FA\u3057\u3066\u3044\u307E\u3059\u3002\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3092\u3082\u3046\u4E00\u5EA6\u898B\u3066\u3001\u3069\u306E\u884C\u3067\u4F8B\u5916\u304C\u767A\u751F\u3057\u305F\u304B\u3092\u78BA\u8A8D\u3057\u307E\u3057\u3087\u3046\u3002"),wo=u(),_(Ue.$$.fragment),bo=u(),z=i("p"),Hn=r("\u79C1\u305F\u3061\u306E\u30B3\u30FC\u30C9\u306F "),is=i("code"),Gn=r("input_ids.size()"),Mn=r(" \u3092\u547C\u3073\u51FA\u305D\u3046\u3068\u3057\u305F\u3088\u3046\u3067\u3059\u304C\u3001\u3053\u308C\u306F\u660E\u3089\u304B\u306BPython\u306E "),ls=i("code"),Nn=r("list"),Qn=r(" \u306B\u5BFE\u3057\u3066\u52D5\u4F5C\u3057\u307E\u305B\u3093\u3002\u3069\u3046\u3059\u308C\u3070\u3053\u306E\u554F\u984C\u3092\u89E3\u6C7A\u3067\u304D\u308B\u3067\u3057\u3087\u3046\u304B\uFF1FStack Overflow\u3067\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u691C\u7D22\u3059\u308B\u3068\u3001\u95A2\u9023\u3059\u308B"),Ke=i("a"),Ln=r("\u30D2\u30F3\u30C8"),Rn=r(" \u304C\u304B\u306A\u308A\u898B\u3064\u304B\u308A\u307E\u3059\u3002"),ko=u(),Ze=i("div"),et=i("img"),$o=u(),ae=i("p"),Fn=r("\u56DE\u7B54\u3067\u306F\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B "),ps=i("code"),Vn=r("return_tensors='pt'"),Jn=r(" \u3092\u8FFD\u52A0\u3059\u308B\u3053\u3068\u304C\u63A8\u5968\u3055\u308C\u3066\u3044\u308B\u306E\u3067\u3001\u3053\u308C\u304C\u3046\u307E\u304F\u3044\u304F\u304B\u3069\u3046\u304B\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),vo=u(),_(tt.$$.fragment),yo=u(),_(st.$$.fragment),qo=u(),ie=i("p"),Wn=r("Stack Overflow\u304C\u3044\u304B\u306B\u6709\u7528\u3067\u3042\u308B\u304B\u3092\u793A\u3059\u7D20\u6674\u3089\u3057\u3044\u4F8B\u3067\u3059\u3002\u540C\u69D8\u306E\u554F\u984C\u3092\u7279\u5B9A\u3059\u308B\u3053\u3068\u3067\u3001\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306E\u4ED6\u306E\u4EBA\u3005\u306E\u7D4C\u9A13\u304B\u3089\u6069\u6075\u3092\u53D7\u3051\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3057\u305F\u3002\u3057\u304B\u3057\u3001\u3053\u306E\u3088\u3046\u306A\u691C\u7D22\u3067\u306F\u3001\u5E38\u306B\u9069\u5207\u306A\u56DE\u7B54\u304C\u5F97\u3089\u308C\u308B\u3068\u306F\u9650\u308A\u307E\u305B\u3093\u3002\u3067\u306F\u3001\u3053\u306E\u3088\u3046\u306A\u5834\u5408\u3001\u3069\u3046\u3059\u308C\u3070\u3044\u3044\u306E\u3067\u3057\u3087\u3046\u304B\uFF1F\u5E78\u3044\u3001"),ot=i("a"),Yn=r("\u30CF\u30AE\u30F3\u30B0\u30D5\u30A7\u30A4\u30B9\u30D5\u30A9\u30FC\u30E9\u30E0\uFF08Hugging Face forums\uFF09"),Bn=r("\u306B\u306F\u3001\u958B\u767A\u8005\u305F\u3061\u306E\u6B53\u8FCE\u3059\u308B\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u304C\u3042\u308A\u3001\u3042\u306A\u305F\u3092\u52A9\u3051\u3066\u304F\u308C\u308B\u3067\u3057\u3087\u3046\u3002\u6B21\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u56DE\u7B54\u304C\u5F97\u3089\u308C\u308B\u53EF\u80FD\u6027\u306E\u9AD8\u3044\u3001\u826F\u3044\u30D5\u30A9\u30FC\u30E9\u30E0\u306E\u8CEA\u554F\u3092\u4F5C\u6210\u3059\u308B\u65B9\u6CD5\u3092\u898B\u3066\u3044\u304D\u307E\u3059\u3002"),this.h()},l(e){const o=bi('[data-svelte="svelte-1phssyn"]',document.head);c=l(o,"META",{name:!0,content:!0}),o.forEach(t),y=f(e),k=l(e,"H1",{id:!0});var us=p(k);q=n(us,"\u30A8\u30E9\u30FC\u3092\u898B\u3064\u3051\u305F\u6642\u306B\u6700\u521D\u306B\u3059\u308B\u3053\u3068"),us.forEach(t),O=f(e),h(v.$$.fragment,e),x=f(e),P=l(e,"P",{});var rt=p(P);H=n(rt,"\u3053\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u65B0\u3057\u304F\u30C1\u30E5\u30FC\u30CB\u30F3\u30B0\u3055\u308C\u305FTransformer\u30E2\u30C7\u30EB\u304B\u3089\u4E88\u6E2C\u3092\u751F\u6210\u3057\u3088\u3046\u3068\u3059\u308B\u3068\u304D\u306B\u8D77\u3053\u308B\u4E8B\u304C\u3067\u304D\u308B\u3001\u3044\u304F\u3064\u304B\u306E\u4E00\u822C\u7684\u306A\u30A8\u30E9\u30FC\u306B\u3064\u3044\u3066\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002\u3053\u308C\u306F"),G=l(rt,"A",{href:!0});var fs=p(G);ue=n(fs,"\u30BB\u30AF\u30B7\u30E7\u30F34"),fs.forEach(t),V=n(rt,"\u306E\u6E96\u5099\u3068\u306A\u308A\u3001\u5B66\u7FD2\u6BB5\u968E\u3092\u30C7\u30D0\u30C3\u30B0\u3059\u308B\u65B9\u6CD5\u3092\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002"),rt.forEach(t),A=f(e),h(M.$$.fragment,e),fe=f(e),D=l(e,"P",{});var $t=p(D);Mo=n($t,"\u3053\u306E\u7AE0\u306E\u70BA\u306B"),de=l($t,"A",{href:!0,rel:!0});var na=p(de);No=n(na,"\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EC\u30DD\u30B8\u30C8\u30EA\u30FC"),na.forEach(t),Qo=n($t,"\u3092\u7528\u610F\u3057\u307E\u3057\u305F\u3002\u3053\u306E\u7AE0\u306E\u30B3\u30FC\u30C9\u3092\u5B9F\u884C\u3057\u305F\u3044\u5834\u5408\u306F\u3001\u307E\u305A\u30E2\u30C7\u30EB\u3092"),ce=l($t,"A",{href:!0,rel:!0});var aa=p(ce);Lo=n(aa,"\u30CF\u30AE\u30F3\u30B0\u30D5\u30A7\u30A4\u30B9\u30CF\u30D6\uFF08Hugging Face Hub\uFF09"),aa.forEach(t),Ro=n($t,"\u306E\u30A2\u30AB\u30A6\u30F3\u30C8\u306B\u30B3\u30D4\u30FC\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u307E\u305AJupyterNotebook\u3067\u30ED\u30B0\u30A4\u30F3\u3057\u307E\u3057\u3087\u3046"),$t.forEach(t),ds=f(e),h(_e.$$.fragment,e),cs=f(e),nt=l(e,"P",{});var ia=p(nt);Fo=n(ia,"\u305D\u308C\u3068\u3082\u3001\u30BF\u30FC\u30DF\u30CA\u30EB\u3092\u4F7F\u3044\u306A\u304C\u3089:"),ia.forEach(t),_s=f(e),h(he.$$.fragment,e),hs=f(e),B=l(e,"P",{});var jo=p(B);Vo=n(jo,"\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u5165\u529B\u3059\u308B\u753B\u9762\u304C\u8868\u793A\u3055\u308C\u307E\u3059\u3002Authentification token \u304C "),jt=l(jo,"EM",{});var la=p(jt);Jo=n(la,"~/.cache/huggingface/"),la.forEach(t),Wo=n(jo,"\u306E\u4E2D\u306B\u30BB\u30FC\u30D6\u3055\u308C\u307E\u3059\u3002\u30ED\u30B0\u30A4\u30F3\u3057\u305F\u5F8C\u306B\u4EE5\u4E0B\u306E\u6A5F\u80FD\u3067\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u30B3\u30D4\u30FC\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059"),jo.forEach(t),ms=f(e),h(me.$$.fragment,e),gs=f(e),ge=l(e,"P",{});var Xn=p(ge);xt=l(Xn,"CODE",{});var pa=p(xt);Yo=n(pa,"copy_repository_template()"),pa.forEach(t),Bo=n(Xn,"\u6A5F\u80FD\u306F\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EC\u30DD\u30B8\u30C8\u30EA\u30FC\u3092\u30A2\u30AB\u30F3\u30A6\u30C8\u306B\u30B3\u30D4\u30FC\u3057\u307E\u3059\u3002"),Xn.forEach(t),ws=f(e),J=l(e,"H2",{class:!0});var xo=p(J);X=l(xo,"A",{id:!0,class:!0,href:!0});var ua=p(X);Pt=l(ua,"SPAN",{});var fa=p(Pt);h(we.$$.fragment,fa),fa.forEach(t),ua.forEach(t),Xo=f(xo),At=l(xo,"SPAN",{});var da=p(At);Uo=n(da,"\u{1F917} Transformers\u3000\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30B0"),da.forEach(t),xo.forEach(t),bs=f(e),at=l(e,"P",{});var ca=p(at);Ko=n(ca,"Transformer\u30E2\u30C7\u30EB\u3068\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30B0\u3068\u3044\u3046\u7D20\u6674\u3089\u3057\u3044\u4E16\u754C\u3078\u306E\u65C5\u3092\u59CB\u3081\u308B\u306B\u3042\u305F\u308A\u3001\u6B21\u306E\u3088\u3046\u306A\u30B7\u30CA\u30EA\u30AA\u3092\u8003\u3048\u3066\u307F\u307E\u3057\u3087\u3046\u3002\u3042\u306A\u305F\u306F\u540C\u50DA\u3068\u4E00\u7DD2\u306B\u3001\u3042\u308Be\u30B3\u30DE\u30FC\u30B9\u30B5\u30A4\u30C8\u306B\u95A2\u3059\u308B\u304A\u5BA2\u3055\u3093\u306E\u7B54\u3048\u3092\u898B\u3064\u3051\u3089\u308C\u308B\u3088\u3046\u306B\u3001\u2018Question Answering\u2019\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306B\u53D6\u308A\u7D44\u3093\u3067\u3044\u307E\u3059\u3002\u3042\u306A\u305F\u306E\u540C\u50DA\u306F\u3053\u3093\u306A\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u9001\u308A\u307E\u3057\u305F\u3002"),ca.forEach(t),ks=f(e),it=l(e,"BLOCKQUOTE",{});var _a=p(it);Ct=l(_a,"P",{});var ha=p(Ct);Zo=n(ha,"\u3069\u3046\u3082! \u5148\u307B\u3069\u3001\u3010\u7B2C7\u7AE0\u3011(/course/chapter7/7)\u3000\u306E\u30C6\u30AF\u30CB\u30C3\u30AF\u3092\u4F7F\u3063\u3066\u5B9F\u9A13\u3092\u3057\u305F\u3068\u3053\u308D\u3001SQuAD\u30C7\u30FC\u30BF\u30BB\u30C3\u30C8\u3067\u7D20\u6674\u3089\u3057\u3044\u7D50\u679C\u304C\u5F97\u3089\u308C\u307E\u3057\u305F!Hub\u4E0A\u306E\u30E2\u30C7\u30EBID\u306F\u201Dlewtun/distilbert-base-uncased-finetuned-squad-d5716d28\u201D\u3067\u3059\u3002\u3053\u306E\u30E2\u30C7\u30EB\u3092\u305C\u3072\u30C6\u30B9\u30C8\u3057\u3066\u307F\u307E\u3057\u3087\u3046!"),ha.forEach(t),_a.forEach(t),$s=f(e),U=l(e,"P",{});var Po=p(U);er=n(Po,"\u3055\u3066\u3001\u{1F917} Transformers \u3067\u30E2\u30C7\u30EB\u3092\u30ED\u30FC\u30C9\u3059\u308B\u305F\u3081\u306B\u3000 "),Dt=l(Po,"CODE",{});var ma=p(Dt);tr=n(ma,"pipeline"),ma.forEach(t),sr=n(Po," \u3092\u4F7F\u3044\u307E\u3057\u3087\u3046\uFF01"),Po.forEach(t),vs=f(e),h(be.$$.fragment,e),ys=f(e),h(ke.$$.fragment,e),qs=f(e),N=l(e,"P",{});var vt=p(N);or=n(vt,"\u6B8B\u5FF5\uFF01\u3069\u3046\u3057\u3066\u3082\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002\u30D7\u30ED\u30B0\u30E9\u30DF\u30F3\u30B0\u304C\u521D\u3081\u3066\u306E\u65B9\u306F\u3053\u3093\u306A\u30E1\u30C3\u30BB\u30FC\u30B8\u306F\u6016\u305D\u3046\u306B\u898B\u3048\u307E\u3059\u3002("),Ot=l(vt,"CODE",{});var ga=p(Ot);rr=n(ga,"OSError"),ga.forEach(t),nr=n(vt,"\u306F\u4F55\uFF1F)\u3002\u3053\u306E\u3088\u3046\u306A\u30A8\u30E9\u30FC\u306F\u3001"),Tt=l(vt,"EM",{});var wa=p(Tt);ar=n(wa,"Python traceback"),wa.forEach(t),ir=n(vt," \u3068\u547C\u3070\u308C\u308B\u3001\u3088\u308A\u5927\u304D\u306A\u30A8\u30E9\u30FC\u30EC\u30DD\u30FC\u30C8\u306E\u6700\u5F8C\u306E\u90E8\u5206\u3067\u3059\u3002\u3053\u306E\u30A8\u30E9\u30FC\u306F\u3001Google Colab\u3067\u5B9F\u884C\u3057\u305F\u5834\u5408\u306B\u306F\u3001\u6B21\u306E\u3088\u3046\u306A\u753B\u50CF\u304C\u8868\u793A\u3055\u308C\u307E\u3059\u3002"),vt.forEach(t),Es=f(e),$e=l(e,"DIV",{class:!0});var ba=p($e);ve=l(ba,"IMG",{src:!0,alt:!0,width:!0}),ba.forEach(t),js=f(e),Q=l(e,"P",{});var yt=p(Q);lr=n(yt,"\u3053\u306E\u30EC\u30DD\u30FC\u30C8\u306B\u306F\u591A\u304F\u306E\u60C5\u5831\u304C\u542B\u307E\u308C\u3066\u3044\u308B\u306E\u3067\u3001\u4E3B\u8981\u306A\u90E8\u5206\u3092\u4E00\u7DD2\u306B\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002\u307E\u305A\u6CE8\u610F\u3059\u3079\u304D\u306F\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306F\u4E0B\u304B\u3089\u4E0A\u3078\u8AAD\u3080\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uFF08\u65E5\u672C\u8A9E\u306E\u9006\u306E\u8AAD\u307F\u65B9\u3067\u3059\u306D\uFF01\uFF09\u3002\u3053\u308C\u306F\u3001\u30A8\u30E9\u30FC\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u304C\u3001\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3059\u308B\u3068\u304D\u306B "),zt=l(yt,"CODE",{});var ka=p(zt);pr=n(ka,"pipeline"),ka.forEach(t),ur=n(yt," \u304C\u884C\u3046\u4E00\u9023\u306E\u95A2\u6570\u547C\u3073\u51FA\u3057\u3092\u53CD\u6620\u3057\u3066\u3044\u307E\u3059\u3044\u307E\u3059\uFF08\u8A73\u3057\u304F\u306F"),lt=l(yt,"A",{href:!0});var $a=p(lt);fr=n($a,"\u7B2C\uFF12\u7AE0"),$a.forEach(t),dr=n(yt,"\uFF09\u3092\u3054\u89A7\u4E0B\u3055\u3044\u3002"),yt.forEach(t),xs=f(e),h(K.$$.fragment,e),Ps=f(e),L=l(e,"P",{});var qt=p(L);cr=n(qt,"\u3053\u308C\u306F\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306E\u6700\u5F8C\u306E\u884C\u304C\u3001\u767A\u751F\u3057\u305F\u30A8\u30E9\u30FC\u306E\u540D\u524D\u3092\u4E0E\u3048\u308B\u3053\u3068\u3092\u3057\u307E\u3059\u3002\u30A8\u30E9\u30FC\u306E\u30BF\u30A4\u30D7\u306F "),St=l(qt,"CODE",{});var va=p(St);_r=n(va,"OSError"),va.forEach(t),hr=n(qt," \u3067\u3001\u3053\u308C\u306F\u30B7\u30B9\u30C6\u30E0\u95A2\u9023\u306E\u30A8\u30E9\u30FC\u3092\u793A\u3057\u3066\u3044\u307E\u3059\u3002\u4ED8\u5C5E\u306E\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8AAD\u3080\u3068\u3001\u30E2\u30C7\u30EB\u306E "),It=l(qt,"EM",{});var ya=p(It);mr=n(ya,"config.json"),ya.forEach(t),gr=n(qt," \u30D5\u30A1\u30A4\u30EB\u306B\u554F\u984C\u304C\u3042\u308B\u3088\u3046\u3067\u3001\u305D\u308C\u3092\u4FEE\u6B63\u3059\u308B\u305F\u3081\u306E2\u3064\u306E\u63D0\u6848\u3092\u4E0E\u3048\u3089\u308C\u3066\u3044\u307E\u3059\u3002"),qt.forEach(t),As=f(e),h(ye.$$.fragment,e),Cs=f(e),h(Z.$$.fragment,e),Ds=f(e),pt=l(e,"P",{});var qa=p(pt);wr=n(qa,"\u6700\u521D\u306E\u63D0\u6848\u306F\u3001\u30E2\u30C7\u30EBID\u304C\u5B9F\u969B\u306B\u6B63\u3057\u3044\u304B\u3069\u3046\u304B\u3092\u78BA\u8A8D\u3059\u308B\u3088\u3046\u6C42\u3081\u3066\u3044\u308B\u306E\u3067\u3001\u307E\u305A\u3001\u8B58\u5225\u5B50\u3092\u30B3\u30D4\u30FC\u3057\u3066Hub\u306E\u691C\u7D22\u30D0\u30FC\u306B\u8CBC\u308A\u4ED8\u3051\u307E\u3057\u3087\u3046\u3002"),qa.forEach(t),Os=f(e),qe=l(e,"DIV",{class:!0});var Ea=p(qe);Ee=l(Ea,"IMG",{src:!0,alt:!0,width:!0}),Ea.forEach(t),Ts=f(e),ut=l(e,"P",{});var ja=p(ut);br=n(ja,"\u3046\u30FC\u3093\u3001\u78BA\u304B\u306B\u540C\u50DA\u306E\u30E2\u30C7\u30EB\u306FHub\u306B\u306A\u3044\u3088\u3046\u3060\u2026\u3057\u304B\u3057\u3001\u30E2\u30C7\u30EB\u306E\u540D\u524D\u306B\u30BF\u30A4\u30D7\u30DF\u30B9\u304C\u3042\u308B! DistilBERT\u306E\u540D\u524D\u306B\u306F\u300Cl\u300D\u304C1\u3064\u3057\u304B\u306A\u3044\u306E\u3067\u3001\u305D\u308C\u3092\u76F4\u3057\u3066\u3001\u4EE3\u308F\u308A\u306B\u300Clewtun/distilbert-base-uncased-finetuned-squad-d5716d28\u300D\u3092\u63A2\u305D\u3046\uFF01"),ja.forEach(t),zs=f(e),je=l(e,"DIV",{class:!0});var xa=p(je);xe=l(xa,"IMG",{src:!0,alt:!0,width:!0}),xa.forEach(t),Ss=f(e),ft=l(e,"P",{});var Pa=p(ft);kr=n(Pa,"\u3055\u3066\u3001\u3053\u308C\u3067\u30D2\u30C3\u30C8\u3057\u307E\u3057\u305F\u3002\u3067\u306F\u3001\u6B63\u3057\u3044\u30E2\u30C7\u30EBID\u3067\u518D\u5EA6\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3092\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Pa.forEach(t),Is=f(e),h(Pe.$$.fragment,e),Hs=f(e),h(Ae.$$.fragment,e),Gs=f(e),R=l(e,"P",{});var Et=p(R);$r=n(Et,"\u3042\u3042\u3001\u307E\u305F\u5931\u6557\u3060\u3002\u6A5F\u68B0\u5B66\u7FD2\u30A8\u30F3\u30B8\u30CB\u30A2\u306E\u65E5\u5E38\u3078\u3088\u3046\u3053\u305D\uFF01 \u30E2\u30C7\u30EBID\u306F\u4FEE\u6B63\u3067\u304D\u305F\u306E\u3067\u3001\u554F\u984C\u306F\u30EA\u30DD\u30B8\u30C8\u30EA\u81EA\u4F53\u306B\u3042\u308B\u306F\u305A\u3067\u3059\u3002\u{1F917} Hub\u4E0A\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u5185\u5BB9\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u7C21\u5358\u306A\u65B9\u6CD5\u306F\u3001"),Ht=l(Et,"CODE",{});var Aa=p(Ht);vr=n(Aa,"huggingface_hub"),Aa.forEach(t),yr=n(Et,"\u30E9\u30A4\u30D6\u30E9\u30EA\u306E "),Gt=l(Et,"CODE",{});var Ca=p(Gt);qr=n(Ca,"list_repo_files()"),Ca.forEach(t),Er=n(Et," \u95A2\u6570\u3092\u4F7F\u7528\u3059\u308B\u3053\u3068\u3067\u3059\u3002"),Et.forEach(t),Ms=f(e),h(Ce.$$.fragment,e),Ns=f(e),h(De.$$.fragment,e),Qs=f(e),E=l(e,"P",{});var S=p(E);jr=n(S,"\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u306F "),Mt=l(S,"EM",{});var Da=p(Mt);xr=n(Da,"config.json"),Da.forEach(t),Pr=n(S," \u30D5\u30A1\u30A4\u30EB\u304C\u306A\u3044\u3088\u3046\u3067\u3059! \u3069\u3046\u308A\u3067 "),Nt=l(S,"CODE",{});var Oa=p(Nt);Ar=n(Oa,"pipeline"),Oa.forEach(t),Cr=n(S," \u304C\u30E2\u30C7\u30EB\u3092\u8AAD\u307F\u8FBC\u3081\u306A\u3044\u308F\u3051\u3067\u3059\u3002\u540C\u50DA\u304C\u3053\u306E\u30D5\u30A1\u30A4\u30EB\u3092Hub\u306B\u30D7\u30C3\u30B7\u30E5\u3059\u308B\u306E\u3092\u5FD8\u308C\u305F\u306B\u9055\u3044\u3042\u308A\u307E\u305B\u3093\u3002\u3053\u306E\u5834\u5408\u3001\u554F\u984C\u3092\u89E3\u6C7A\u3059\u308B\u306E\u306F\u7C21\u5358\u3067\u3059\u3002\u30D5\u30A1\u30A4\u30EB\u3092\u8FFD\u52A0\u3059\u308B\u3088\u3046\u306B\u4F9D\u983C\u3059\u308B\u304B\u3001\u30E2\u30C7\u30EBID\u304B\u3089\u4F7F\u7528\u3055\u308C\u305F\u4E8B\u524D\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u304C"),Oe=l(S,"A",{href:!0,rel:!0});var Ta=p(Oe);Qt=l(Ta,"CODE",{});var za=p(Qt);Dr=n(za,"distilbert-base-uncased"),za.forEach(t),Ta.forEach(t),Or=n(S,"\u3067\u3042\u308B\u3053\u3068\u304C\u308F\u304B\u308B\u306E\u3067\u3001\u305D\u306E\u30E2\u30C7\u30EB\u306Econfig\uFF08\u8A2D\u5B9A\uFF09\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3057\u3001\u6211\u3005\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D7\u30C3\u30B7\u30E5\u3057\u3066\u554F\u984C\u304C\u89E3\u6C7A\u3059\u308B\u304B\u78BA\u8A8D\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u305D\u308C\u3067\u306F\u8A66\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),dt=l(S,"A",{href:!0});var Sa=p(dt);Tr=n(Sa,"\u7B2C2\u7AE0"),Sa.forEach(t),zr=n(S,"\u3067\u5B66\u3093\u3060\u30C6\u30AF\u30CB\u30C3\u30AF\u3092\u4F7F\u3063\u3066\u3001"),Lt=l(S,"CODE",{});var Ia=p(Lt);Sr=n(Ia,"AutoConfig"),Ia.forEach(t),Ir=n(S,"\u30AF\u30E9\u30B9\u3067\u30E2\u30C7\u30EB\u306E\u8A2D\u5B9A\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),S.forEach(t),Ls=f(e),h(Te.$$.fragment,e),Rs=f(e),h(ee.$$.fragment,e),Fs=f(e),te=l(e,"P",{});var Ao=p(te);Hr=n(Ao,"\u305D\u308C\u3067"),Rt=l(Ao,"CODE",{});var Ha=p(Rt);Gr=n(Ha,"push_to_hub()"),Ha.forEach(t),Mr=n(Ao,"\u3000\u6A5F\u80FD\u3067\u30E2\u30C7\u30EB\u306E\u8A2D\u5B9A\u3092\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D7\u30C3\u30B7\u30E5\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),Ao.forEach(t),Vs=f(e),h(ze.$$.fragment,e),Js=f(e),se=l(e,"P",{});var Co=p(se);Nr=n(Co,"\u305D\u3057\u3066\u306F\u3001\u6700\u65B0\u306E\u30B3\u30DF\u30C3\u30C8\u3092 "),Ft=l(Co,"CODE",{});var Ga=p(Ft);Qr=n(Ga,"main"),Ga.forEach(t),Lr=n(Co," \u30D6\u30E9\u30F3\u30C1\u304B\u3089\u8AAD\u307F\u8FBC\u3053\u3093\u3067\u307F\u307E\u3057\u3087\u3046\u3002"),Co.forEach(t),Ws=f(e),h(Se.$$.fragment,e),Ys=f(e),h(Ie.$$.fragment,e),Bs=f(e),ct=l(e,"P",{});var Ma=p(ct);Rr=n(Ma,"\u3084\u3063\u305F\u306D\uFF01 \u3053\u308C\u3067\u3001\u304A\u75B2\u308C\u69D8\u3067\u3057\u305F\u3002\u4ECA\u307E\u3067\u306E\u3053\u3068\u3092\u4E00\u7DD2\u306B\u632F\u308A\u8FD4\u3063\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Ma.forEach(t),Xs=f(e),T=l(e,"UL",{});var le=p(T);He=l(le,"LI",{});var Do=p(He);Fr=n(Do,"Python\u306E\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u306F\u3000"),Vt=l(Do,"STRONG",{});var Na=p(Vt);Vr=n(Na,"traceback"),Na.forEach(t),Jr=n(Do,"\u3000\u3068\u547C\u3070\u308C\u3001\u4E0B\u304B\u3089\u4E0A\u3078\u3068\u8AAD\u307F\u4E0A\u3052\u3089\u308C\u307E\u3059\u3002\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u306E\u6700\u5F8C\u306E\u884C\u306F\u4E00\u756A\u5FC5\u8981\u306A\u60C5\u5831\u3092\u542B\u3093\u3067\u3044\u307E\u3059\u3002"),Do.forEach(t),Wr=f(le),Ge=l(le,"LI",{});var Oo=p(Ge);Yr=n(Oo,"\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u8907\u96D1\u306A\u5834\u5408\u306F\u3001"),Jt=l(Oo,"STRONG",{});var Qa=p(Jt);Br=n(Qa,"traceback"),Qa.forEach(t),Xr=n(Oo,"\u3000\u3092\u8AAD\u307F\u4E0A\u3052\u306A\u304C\u3089\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u305F\u30BD\u30FC\u30B9\u30B3\u30FC\u30C9\u30D5\u30A1\u30A4\u30EB\u540D\u3084\u884C\u756A\u53F7\u3092\u6307\u5B9A\u3057\u3066\u3001\u30A8\u30E9\u30FC\u306E\u539F\u56E0\u3092\u8AAD\u307F\u53D6\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),Oo.forEach(t),Ur=f(le),Wt=l(le,"LI",{});var La=p(Wt);Kr=n(La,"\u305D\u306E\u5834\u5408\u3067\u3082\u30C7\u30D0\u30B0\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u306A\u3044\u306A\u3089\u3001\u30A4\u30F3\u30BF\u30FC\u30CD\u30C3\u30C8\u4E0A\u306B\u3092\u691C\u7D22\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),La.forEach(t),Zr=f(le),_t=l(le,"LI",{});var Un=p(_t);Yt=l(Un,"CODE",{});var Ra=p(Yt);en=n(Ra,"huggingface_hub"),Ra.forEach(t),tn=n(Un," \u30E9\u30A4\u30D6\u30E9\u30EA\u306F\u3001Hub\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F7F\u7528\u3059\u308B\u305F\u3081\u4E00\u9023\u306E\u30C4\u30FC\u30EB\u3092\u63D0\u4F9B\u3057\u307E\u3059\u3002\u30C7\u30D0\u30C3\u30B0\u3059\u308B\u305F\u3081\u306B\u4F7F\u7528\u3067\u304D\u308B\u306E\u30C4\u30FC\u30EB\u3082\u542B\u3081\u3066\u3044\u307E\u3059\u3002"),Un.forEach(t),le.forEach(t),Us=f(e),ht=l(e,"P",{});var Fa=p(ht);sn=n(Fa,"\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30C3\u30B0\u65B9\u6CD5\u304C\u308F\u304B\u3063\u305F\u3068\u3053\u308D\u3067\u3001\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3067\u96E3\u3057\u3044\u4F8B\u3092\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Fa.forEach(t),Ks=f(e),W=l(e,"H2",{class:!0});var To=p(W);oe=l(To,"A",{id:!0,class:!0,href:!0});var Va=p(oe);Bt=l(Va,"SPAN",{});var Ja=p(Bt);h(Me.$$.fragment,Ja),Ja.forEach(t),Va.forEach(t),on=f(To),Xt=l(To,"SPAN",{});var Wa=p(Xt);rn=n(Wa,"\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3092\u30C7\u30D0\u30C3\u30B0"),Wa.forEach(t),To.forEach(t),Zs=f(e),re=l(e,"P",{});var zo=p(re);nn=n(zo,"\u6642\u306B\u306F\u30E2\u30C7\u30EB\u306E\u30ED\u30B8\u30C3\u30C8\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\uFF08\u4F8B\u3048\u3070\u3001\u30AB\u30B9\u30BF\u30E0\u306A\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u3092\u4F7F\u3044\u305F\u3044\u5834\u5408\u3067\uFF09\u3002\u3053\u306E\u3088\u3046\u306A\u5834\u5408\u3001\u4F55\u304C\u554F\u984C\u306B\u306A\u308B\u304B\u3092\u77E5\u308B\u305F\u3081\u306B\u3001\u307E\u305A "),Ut=l(zo,"CODE",{});var Ya=p(Ut);an=n(Ya,"pipeline"),Ya.forEach(t),ln=n(zo," \u304B\u3089\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u53D6\u5F97\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),zo.forEach(t),eo=f(e),h(Ne.$$.fragment,e),to=f(e),mt=l(e,"P",{});var Ba=p(mt);pn=n(Ba,"\u6B21\u306B\u5FC5\u8981\u306A\u306E\u306F\u3001\u304A\u6C17\u306B\u5165\u308A\u306E\u30D5\u30EC\u30FC\u30E0\u30EF\u30FC\u30AF\u304C\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u308B\u304B\u3069\u3046\u304B\u3068\u3044\u3046\u8CEA\u554F\u3067\u3059\u3002"),Ba.forEach(t),so=f(e),h(Qe.$$.fragment,e),oo=f(e),Le=l(e,"P",{});var Kn=p(Le);gt=l(Kn,"A",{href:!0});var Xa=p(gt);un=n(Xa,"\u7B2C7\u7AE0"),Xa.forEach(t),fn=n(Kn,"\u3067\u898B\u305F\u3088\u3046\u306B\u3001\u901A\u5E38\u5FC5\u8981\u306A\u30B9\u30C6\u30C3\u30D7\u306F\u3001\u5165\u529B\u306E\u30C8\u30FC\u30AF\u30F3\u3001\u958B\u59CB\u3068\u7D42\u4E86\u30C8\u30FC\u30AF\u30F3\u306E\u30ED\u30B8\u30C3\u30C8\u3001\u305D\u3057\u3066\u89E3\u7B54\u30B9\u30D1\u30F3\u306E\u30C7\u30B3\u30FC\u30C9\u3067\u3059\u3002"),Kn.forEach(t),ro=f(e),h(Re.$$.fragment,e),no=f(e),h(Fe.$$.fragment,e),ao=f(e),wt=l(e,"P",{});var Ua=p(wt);dn=n(Ua,"\u304A\u3084\u304A\u3084\u3001\u3069\u3046\u3084\u3089\u30B3\u30FC\u30C9\u306B\u30D0\u30B0\u304C\u3042\u308B\u3088\u3046\u3067\u3059\u306D\u3002\u3067\u3082\u3001\u3061\u3087\u3063\u3068\u3057\u305F\u30C7\u30D0\u30C3\u30B0\u306F\u6016\u304F\u3042\u308A\u307E\u305B\u3093\u3002Python\u306E\u30C7\u30D0\u30C3\u30AC\u3092\u30CE\u30FC\u30C8\u30D6\u30C3\u30AF\u3067\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u308B\u306E\u3067\u3059\u3002"),Ua.forEach(t),io=f(e),h(Ve.$$.fragment,e),lo=f(e),bt=l(e,"P",{});var Ka=p(bt);cn=n(Ka,"\u305D\u308C\u3068\u3082\u3001\u30BF\u30FC\u30DF\u30CA\u30EB\u3067\u30C7\u30D0\u30C3\u30B0\u3092\u884C\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059:"),Ka.forEach(t),po=f(e),h(Je.$$.fragment,e),uo=f(e),C=l(e,"P",{});var F=p(C);_n=n(F,"\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8AAD\u3080\u3068\u3001 "),Kt=l(F,"CODE",{});var Za=p(Kt);hn=n(Za,"'list' object has no attribute 'size'"),Za.forEach(t),mn=n(F," \u3068\u3001 "),Zt=l(F,"CODE",{});var ei=p(Zt);gn=n(ei,"-->"),ei.forEach(t),wn=n(F," \u77E2\u5370\u304C "),es=l(F,"CODE",{});var ti=p(es);bn=n(ti,"model(**inputs)"),ti.forEach(t),kn=n(F," \u306E\u4E2D\u3067\u554F\u984C\u304C\u767A\u751F\u3057\u305F\u884C\u3092\u6307\u3057\u3066\u3044\u308B\u3053\u3068\u304C\u5206\u304B\u308A\u307E\u3059\u3002Python\u30C7\u30D0\u30C3\u30AC\u3092\u4F7F\u3063\u3066\u30A4\u30F3\u30BF\u30E9\u30AF\u30C6\u30A3\u30D6\u306B\u30C7\u30D0\u30C3\u30B0\u3067\u304D\u307E\u3059\u304C\u3001\u4ECA\u306F\u5358\u306B "),ts=l(F,"CODE",{});var si=p(ts);$n=n(si,"inputs"),si.forEach(t),vn=n(F," \u306E\u30B9\u30E9\u30A4\u30B9\u3092\u8868\u793A\u3057\u3066\u4F55\u304C\u3042\u308B\u304B\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),F.forEach(t),fo=f(e),h(We.$$.fragment,e),co=f(e),h(Ye.$$.fragment,e),_o=f(e),ne=l(e,"P",{});var So=p(ne);yn=n(So,"\u3053\u308C\u306F\u78BA\u304B\u306B\u666E\u901A\u306EPython\u306E "),ss=l(So,"CODE",{});var oi=p(ss);qn=n(oi,"list"),oi.forEach(t),En=n(So," \u306E\u3088\u3046\u306B\u898B\u3048\u307E\u3059\u304C\u3001\u518D\u78BA\u8A8D\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),So.forEach(t),ho=f(e),h(Be.$$.fragment,e),mo=f(e),h(Xe.$$.fragment,e),go=f(e),j=l(e,"P",{});var I=p(j);jn=n(I,"\u3053\u308C\u306F\u78BA\u304B\u306BPython\u306E"),os=l(I,"CODE",{});var ri=p(os);xn=n(ri,"list"),ri.forEach(t),Pn=n(I,"\u3067\u3059\u306D\u3002\u3067\u306F\u4F55\u304C\u3044\u3051\u306A\u304B\u3063\u305F\u306E\u304B\uFF1F"),kt=l(I,"A",{href:!0});var ni=p(kt);An=n(ni,"\u7B2C2\u7AE0"),ni.forEach(t),Cn=n(I,"\u3067\u3001\u{1F917} Transformers\u306E "),rs=l(I,"CODE",{});var ai=p(rs);Dn=n(ai,"AutoModelForXxx"),ai.forEach(t),On=n(I," \u30AF\u30E9\u30B9\u306F "),ns=l(I,"EM",{});var ii=p(ns);Tn=n(ii,"tensor"),ii.forEach(t),zn=n(I," (PyTorch \u307E\u305F\u306F TensorFlow \u306E\u3044\u305A\u308C\u304B)\u3092\u4F7F\u3044\u306A\u304C\u3089\u3001\u4F8B\u3048\u3070PyTorch\u306E "),as=l(I,"CODE",{});var li=p(as);Sn=n(li,"Tensor.size()"),li.forEach(t),In=n(I,"\u6A5F\u80FD\u3092\u547C\u3073\u51FA\u3057\u3066\u3044\u307E\u3059\u3002\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3092\u3082\u3046\u4E00\u5EA6\u898B\u3066\u3001\u3069\u306E\u884C\u3067\u4F8B\u5916\u304C\u767A\u751F\u3057\u305F\u304B\u3092\u78BA\u8A8D\u3057\u307E\u3057\u3087\u3046\u3002"),I.forEach(t),wo=f(e),h(Ue.$$.fragment,e),bo=f(e),z=l(e,"P",{});var pe=p(z);Hn=n(pe,"\u79C1\u305F\u3061\u306E\u30B3\u30FC\u30C9\u306F "),is=l(pe,"CODE",{});var pi=p(is);Gn=n(pi,"input_ids.size()"),pi.forEach(t),Mn=n(pe," \u3092\u547C\u3073\u51FA\u305D\u3046\u3068\u3057\u305F\u3088\u3046\u3067\u3059\u304C\u3001\u3053\u308C\u306F\u660E\u3089\u304B\u306BPython\u306E "),ls=l(pe,"CODE",{});var ui=p(ls);Nn=n(ui,"list"),ui.forEach(t),Qn=n(pe," \u306B\u5BFE\u3057\u3066\u52D5\u4F5C\u3057\u307E\u305B\u3093\u3002\u3069\u3046\u3059\u308C\u3070\u3053\u306E\u554F\u984C\u3092\u89E3\u6C7A\u3067\u304D\u308B\u3067\u3057\u3087\u3046\u304B\uFF1FStack Overflow\u3067\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u691C\u7D22\u3059\u308B\u3068\u3001\u95A2\u9023\u3059\u308B"),Ke=l(pe,"A",{href:!0,rel:!0});var fi=p(Ke);Ln=n(fi,"\u30D2\u30F3\u30C8"),fi.forEach(t),Rn=n(pe," \u304C\u304B\u306A\u308A\u898B\u3064\u304B\u308A\u307E\u3059\u3002"),pe.forEach(t),ko=f(e),Ze=l(e,"DIV",{class:!0});var di=p(Ze);et=l(di,"IMG",{src:!0,alt:!0,width:!0}),di.forEach(t),$o=f(e),ae=l(e,"P",{});var Io=p(ae);Fn=n(Io,"\u56DE\u7B54\u3067\u306F\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B "),ps=l(Io,"CODE",{});var ci=p(ps);Vn=n(ci,"return_tensors='pt'"),ci.forEach(t),Jn=n(Io," \u3092\u8FFD\u52A0\u3059\u308B\u3053\u3068\u304C\u63A8\u5968\u3055\u308C\u3066\u3044\u308B\u306E\u3067\u3001\u3053\u308C\u304C\u3046\u307E\u304F\u3044\u304F\u304B\u3069\u3046\u304B\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Io.forEach(t),vo=f(e),h(tt.$$.fragment,e),yo=f(e),h(st.$$.fragment,e),qo=f(e),ie=l(e,"P",{});var Ho=p(ie);Wn=n(Ho,"Stack Overflow\u304C\u3044\u304B\u306B\u6709\u7528\u3067\u3042\u308B\u304B\u3092\u793A\u3059\u7D20\u6674\u3089\u3057\u3044\u4F8B\u3067\u3059\u3002\u540C\u69D8\u306E\u554F\u984C\u3092\u7279\u5B9A\u3059\u308B\u3053\u3068\u3067\u3001\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306E\u4ED6\u306E\u4EBA\u3005\u306E\u7D4C\u9A13\u304B\u3089\u6069\u6075\u3092\u53D7\u3051\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3057\u305F\u3002\u3057\u304B\u3057\u3001\u3053\u306E\u3088\u3046\u306A\u691C\u7D22\u3067\u306F\u3001\u5E38\u306B\u9069\u5207\u306A\u56DE\u7B54\u304C\u5F97\u3089\u308C\u308B\u3068\u306F\u9650\u308A\u307E\u305B\u3093\u3002\u3067\u306F\u3001\u3053\u306E\u3088\u3046\u306A\u5834\u5408\u3001\u3069\u3046\u3059\u308C\u3070\u3044\u3044\u306E\u3067\u3057\u3087\u3046\u304B\uFF1F\u5E78\u3044\u3001"),ot=l(Ho,"A",{href:!0,rel:!0});var _i=p(ot);Yn=n(_i,"\u30CF\u30AE\u30F3\u30B0\u30D5\u30A7\u30A4\u30B9\u30D5\u30A9\u30FC\u30E9\u30E0\uFF08Hugging Face forums\uFF09"),_i.forEach(t),Bn=n(Ho,"\u306B\u306F\u3001\u958B\u767A\u8005\u305F\u3061\u306E\u6B53\u8FCE\u3059\u308B\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u304C\u3042\u308A\u3001\u3042\u306A\u305F\u3092\u52A9\u3051\u3066\u304F\u308C\u308B\u3067\u3057\u3087\u3046\u3002\u6B21\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u56DE\u7B54\u304C\u5F97\u3089\u308C\u308B\u53EF\u80FD\u6027\u306E\u9AD8\u3044\u3001\u826F\u3044\u30D5\u30A9\u30FC\u30E9\u30E0\u306E\u8CEA\u554F\u3092\u4F5C\u6210\u3059\u308B\u65B9\u6CD5\u3092\u898B\u3066\u3044\u304D\u307E\u3059\u3002"),Ho.forEach(t),this.h()},h(){d(c,"name","hf:doc:metadata"),d(c,"content",JSON.stringify(ji)),d(k,"id",""),d(G,"href","/course/chapter8/section4"),d(de,"href","https://huggingface.co/lewtun/distilbert-base-uncased-finetuned-squad-d5716d28"),d(de,"rel","nofollow"),d(ce,"href","https://huggingface.co"),d(ce,"rel","nofollow"),d(X,"id","transformers"),d(X,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(X,"href","#transformers"),d(J,"class","relative group"),Go(ve.src,ta="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter8/traceback.png")||d(ve,"src",ta),d(ve,"alt","A Python traceback."),d(ve,"width","100%"),d($e,"class","flex justify-center"),d(lt,"href","/course/chapter2"),Go(Ee.src,sa="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter8/wrong-model-id.png")||d(Ee,"src",sa),d(Ee,"alt","The wrong model name."),d(Ee,"width","100%"),d(qe,"class","flex justify-center"),Go(xe.src,oa="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter8/true-model-id.png")||d(xe,"src",oa),d(xe,"alt","The right model name."),d(xe,"width","100%"),d(je,"class","flex justify-center"),d(Oe,"href","https://huggingface.co/distilbert-base-uncased"),d(Oe,"rel","nofollow"),d(dt,"href","/course/chapter2"),d(oe,"id","\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3092\u30C7\u30D0\u30C3\u30B0"),d(oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(oe,"href","#\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3092\u30C7\u30D0\u30C3\u30B0"),d(W,"class","relative group"),d(gt,"href","/course/chapter7"),d(kt,"href","/course/chapter2"),d(Ke,"href","https://stackoverflow.com/search?q=AttributeError%3A+%27list%27+object+has+no+attribute+%27size%27&s=c15ec54c-63cb-481d-a749-408920073e8f"),d(Ke,"rel","nofollow"),Go(et.src,ra="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter8/stack-overflow.png")||d(et,"src",ra),d(et,"alt","An answer from Stack Overflow."),d(et,"width","100%"),d(Ze,"class","flex justify-center"),d(ot,"href","https://discuss.huggingface.co/"),d(ot,"rel","nofollow")},m(e,o){s(document.head,c),a(e,y,o),a(e,k,o),s(k,q),a(e,O,o),m(v,e,o),a(e,x,o),a(e,P,o),s(P,H),s(P,G),s(G,ue),s(P,V),a(e,A,o),m(M,e,o),a(e,fe,o),a(e,D,o),s(D,Mo),s(D,de),s(de,No),s(D,Qo),s(D,ce),s(ce,Lo),s(D,Ro),a(e,ds,o),m(_e,e,o),a(e,cs,o),a(e,nt,o),s(nt,Fo),a(e,_s,o),m(he,e,o),a(e,hs,o),a(e,B,o),s(B,Vo),s(B,jt),s(jt,Jo),s(B,Wo),a(e,ms,o),m(me,e,o),a(e,gs,o),a(e,ge,o),s(ge,xt),s(xt,Yo),s(ge,Bo),a(e,ws,o),a(e,J,o),s(J,X),s(X,Pt),m(we,Pt,null),s(J,Xo),s(J,At),s(At,Uo),a(e,bs,o),a(e,at,o),s(at,Ko),a(e,ks,o),a(e,it,o),s(it,Ct),s(Ct,Zo),a(e,$s,o),a(e,U,o),s(U,er),s(U,Dt),s(Dt,tr),s(U,sr),a(e,vs,o),m(be,e,o),a(e,ys,o),m(ke,e,o),a(e,qs,o),a(e,N,o),s(N,or),s(N,Ot),s(Ot,rr),s(N,nr),s(N,Tt),s(Tt,ar),s(N,ir),a(e,Es,o),a(e,$e,o),s($e,ve),a(e,js,o),a(e,Q,o),s(Q,lr),s(Q,zt),s(zt,pr),s(Q,ur),s(Q,lt),s(lt,fr),s(Q,dr),a(e,xs,o),m(K,e,o),a(e,Ps,o),a(e,L,o),s(L,cr),s(L,St),s(St,_r),s(L,hr),s(L,It),s(It,mr),s(L,gr),a(e,As,o),m(ye,e,o),a(e,Cs,o),m(Z,e,o),a(e,Ds,o),a(e,pt,o),s(pt,wr),a(e,Os,o),a(e,qe,o),s(qe,Ee),a(e,Ts,o),a(e,ut,o),s(ut,br),a(e,zs,o),a(e,je,o),s(je,xe),a(e,Ss,o),a(e,ft,o),s(ft,kr),a(e,Is,o),m(Pe,e,o),a(e,Hs,o),m(Ae,e,o),a(e,Gs,o),a(e,R,o),s(R,$r),s(R,Ht),s(Ht,vr),s(R,yr),s(R,Gt),s(Gt,qr),s(R,Er),a(e,Ms,o),m(Ce,e,o),a(e,Ns,o),m(De,e,o),a(e,Qs,o),a(e,E,o),s(E,jr),s(E,Mt),s(Mt,xr),s(E,Pr),s(E,Nt),s(Nt,Ar),s(E,Cr),s(E,Oe),s(Oe,Qt),s(Qt,Dr),s(E,Or),s(E,dt),s(dt,Tr),s(E,zr),s(E,Lt),s(Lt,Sr),s(E,Ir),a(e,Ls,o),m(Te,e,o),a(e,Rs,o),m(ee,e,o),a(e,Fs,o),a(e,te,o),s(te,Hr),s(te,Rt),s(Rt,Gr),s(te,Mr),a(e,Vs,o),m(ze,e,o),a(e,Js,o),a(e,se,o),s(se,Nr),s(se,Ft),s(Ft,Qr),s(se,Lr),a(e,Ws,o),m(Se,e,o),a(e,Ys,o),m(Ie,e,o),a(e,Bs,o),a(e,ct,o),s(ct,Rr),a(e,Xs,o),a(e,T,o),s(T,He),s(He,Fr),s(He,Vt),s(Vt,Vr),s(He,Jr),s(T,Wr),s(T,Ge),s(Ge,Yr),s(Ge,Jt),s(Jt,Br),s(Ge,Xr),s(T,Ur),s(T,Wt),s(Wt,Kr),s(T,Zr),s(T,_t),s(_t,Yt),s(Yt,en),s(_t,tn),a(e,Us,o),a(e,ht,o),s(ht,sn),a(e,Ks,o),a(e,W,o),s(W,oe),s(oe,Bt),m(Me,Bt,null),s(W,on),s(W,Xt),s(Xt,rn),a(e,Zs,o),a(e,re,o),s(re,nn),s(re,Ut),s(Ut,an),s(re,ln),a(e,eo,o),m(Ne,e,o),a(e,to,o),a(e,mt,o),s(mt,pn),a(e,so,o),m(Qe,e,o),a(e,oo,o),a(e,Le,o),s(Le,gt),s(gt,un),s(Le,fn),a(e,ro,o),m(Re,e,o),a(e,no,o),m(Fe,e,o),a(e,ao,o),a(e,wt,o),s(wt,dn),a(e,io,o),m(Ve,e,o),a(e,lo,o),a(e,bt,o),s(bt,cn),a(e,po,o),m(Je,e,o),a(e,uo,o),a(e,C,o),s(C,_n),s(C,Kt),s(Kt,hn),s(C,mn),s(C,Zt),s(Zt,gn),s(C,wn),s(C,es),s(es,bn),s(C,kn),s(C,ts),s(ts,$n),s(C,vn),a(e,fo,o),m(We,e,o),a(e,co,o),m(Ye,e,o),a(e,_o,o),a(e,ne,o),s(ne,yn),s(ne,ss),s(ss,qn),s(ne,En),a(e,ho,o),m(Be,e,o),a(e,mo,o),m(Xe,e,o),a(e,go,o),a(e,j,o),s(j,jn),s(j,os),s(os,xn),s(j,Pn),s(j,kt),s(kt,An),s(j,Cn),s(j,rs),s(rs,Dn),s(j,On),s(j,ns),s(ns,Tn),s(j,zn),s(j,as),s(as,Sn),s(j,In),a(e,wo,o),m(Ue,e,o),a(e,bo,o),a(e,z,o),s(z,Hn),s(z,is),s(is,Gn),s(z,Mn),s(z,ls),s(ls,Nn),s(z,Qn),s(z,Ke),s(Ke,Ln),s(z,Rn),a(e,ko,o),a(e,Ze,o),s(Ze,et),a(e,$o,o),a(e,ae,o),s(ae,Fn),s(ae,ps),s(ps,Vn),s(ae,Jn),a(e,vo,o),m(tt,e,o),a(e,yo,o),m(st,e,o),a(e,qo,o),a(e,ie,o),s(ie,Wn),s(ie,ot),s(ot,Yn),s(ie,Bn),Eo=!0},p(e,[o]){const us={};o&2&&(us.$$scope={dirty:o,ctx:e}),K.$set(us);const rt={};o&2&&(rt.$$scope={dirty:o,ctx:e}),Z.$set(rt);const fs={};o&2&&(fs.$$scope={dirty:o,ctx:e}),ee.$set(fs)},i(e){Eo||(g(v.$$.fragment,e),g(M.$$.fragment,e),g(_e.$$.fragment,e),g(he.$$.fragment,e),g(me.$$.fragment,e),g(we.$$.fragment,e),g(be.$$.fragment,e),g(ke.$$.fragment,e),g(K.$$.fragment,e),g(ye.$$.fragment,e),g(Z.$$.fragment,e),g(Pe.$$.fragment,e),g(Ae.$$.fragment,e),g(Ce.$$.fragment,e),g(De.$$.fragment,e),g(Te.$$.fragment,e),g(ee.$$.fragment,e),g(ze.$$.fragment,e),g(Se.$$.fragment,e),g(Ie.$$.fragment,e),g(Me.$$.fragment,e),g(Ne.$$.fragment,e),g(Qe.$$.fragment,e),g(Re.$$.fragment,e),g(Fe.$$.fragment,e),g(Ve.$$.fragment,e),g(Je.$$.fragment,e),g(We.$$.fragment,e),g(Ye.$$.fragment,e),g(Be.$$.fragment,e),g(Xe.$$.fragment,e),g(Ue.$$.fragment,e),g(tt.$$.fragment,e),g(st.$$.fragment,e),Eo=!0)},o(e){w(v.$$.fragment,e),w(M.$$.fragment,e),w(_e.$$.fragment,e),w(he.$$.fragment,e),w(me.$$.fragment,e),w(we.$$.fragment,e),w(be.$$.fragment,e),w(ke.$$.fragment,e),w(K.$$.fragment,e),w(ye.$$.fragment,e),w(Z.$$.fragment,e),w(Pe.$$.fragment,e),w(Ae.$$.fragment,e),w(Ce.$$.fragment,e),w(De.$$.fragment,e),w(Te.$$.fragment,e),w(ee.$$.fragment,e),w(ze.$$.fragment,e),w(Se.$$.fragment,e),w(Ie.$$.fragment,e),w(Me.$$.fragment,e),w(Ne.$$.fragment,e),w(Qe.$$.fragment,e),w(Re.$$.fragment,e),w(Fe.$$.fragment,e),w(Ve.$$.fragment,e),w(Je.$$.fragment,e),w(We.$$.fragment,e),w(Ye.$$.fragment,e),w(Be.$$.fragment,e),w(Xe.$$.fragment,e),w(Ue.$$.fragment,e),w(tt.$$.fragment,e),w(st.$$.fragment,e),Eo=!1},d(e){t(c),e&&t(y),e&&t(k),e&&t(O),b(v,e),e&&t(x),e&&t(P),e&&t(A),b(M,e),e&&t(fe),e&&t(D),e&&t(ds),b(_e,e),e&&t(cs),e&&t(nt),e&&t(_s),b(he,e),e&&t(hs),e&&t(B),e&&t(ms),b(me,e),e&&t(gs),e&&t(ge),e&&t(ws),e&&t(J),b(we),e&&t(bs),e&&t(at),e&&t(ks),e&&t(it),e&&t($s),e&&t(U),e&&t(vs),b(be,e),e&&t(ys),b(ke,e),e&&t(qs),e&&t(N),e&&t(Es),e&&t($e),e&&t(js),e&&t(Q),e&&t(xs),b(K,e),e&&t(Ps),e&&t(L),e&&t(As),b(ye,e),e&&t(Cs),b(Z,e),e&&t(Ds),e&&t(pt),e&&t(Os),e&&t(qe),e&&t(Ts),e&&t(ut),e&&t(zs),e&&t(je),e&&t(Ss),e&&t(ft),e&&t(Is),b(Pe,e),e&&t(Hs),b(Ae,e),e&&t(Gs),e&&t(R),e&&t(Ms),b(Ce,e),e&&t(Ns),b(De,e),e&&t(Qs),e&&t(E),e&&t(Ls),b(Te,e),e&&t(Rs),b(ee,e),e&&t(Fs),e&&t(te),e&&t(Vs),b(ze,e),e&&t(Js),e&&t(se),e&&t(Ws),b(Se,e),e&&t(Ys),b(Ie,e),e&&t(Bs),e&&t(ct),e&&t(Xs),e&&t(T),e&&t(Us),e&&t(ht),e&&t(Ks),e&&t(W),b(Me),e&&t(Zs),e&&t(re),e&&t(eo),b(Ne,e),e&&t(to),e&&t(mt),e&&t(so),b(Qe,e),e&&t(oo),e&&t(Le),e&&t(ro),b(Re,e),e&&t(no),b(Fe,e),e&&t(ao),e&&t(wt),e&&t(io),b(Ve,e),e&&t(lo),e&&t(bt),e&&t(po),b(Je,e),e&&t(uo),e&&t(C),e&&t(fo),b(We,e),e&&t(co),b(Ye,e),e&&t(_o),e&&t(ne),e&&t(ho),b(Be,e),e&&t(mo),b(Xe,e),e&&t(go),e&&t(j),e&&t(wo),b(Ue,e),e&&t(bo),e&&t(z),e&&t(ko),e&&t(Ze),e&&t($o),e&&t(ae),e&&t(vo),b(tt,e),e&&t(yo),b(st,e),e&&t(qo),e&&t(ie)}}}const ji={local:"get-the-most-likely-end-of-answer-with-the-argmax-of-the-score",title:"Get the most likely end of answer with the argmax of the score"};function xi(Y){return ki(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class zi extends mi{constructor(c){super();gi(this,c,xi,Ei,wi,{})}}export{zi as default,ji as metadata};
