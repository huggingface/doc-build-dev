import{S as aa,i as la,s as pa,e as a,k as u,t as r,w as c,M as ua,c as l,d as t,m as f,a as p,h as n,x as m,b as _,N as To,G as s,g as i,y as h,q as b,o as g,B as w,v as fa}from"../../chunks/vendor-hf-doc-builder.js";import{T as Wn}from"../../chunks/Tip-hf-doc-builder.js";import{Y as Yn}from"../../chunks/Youtube-hf-doc-builder.js";import{C as k,I as _a}from"../../chunks/CodeBlock-hf-doc-builder.js";import{D as da}from"../../chunks/DocNotebookDropdown-hf-doc-builder.js";function ca(W){let d,q;return{c(){d=a("p"),q=r("\u{1F6A8} Google Colab\u306E\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3067\u3001\u300C6frames\u300D\u306E\u3042\u305F\u308A\u306B\u9752\u3044\u67A0\u304C\u3042\u308B\u306E\u304C\u898B\u3048\u307E\u3059\u304B\uFF1F\u3053\u308C\u306FColab\u306E\u7279\u5225\u306A\u6A5F\u80FD\u3067\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3092 \u201C\u30D5\u30EC\u30FC\u30E0 \u201C\u306B\u5727\u7E2E\u3057\u3066\u3044\u308B\u306E\u3067\u3059\u3002\u3082\u3057\u30A8\u30E9\u30FC\u306E\u539F\u56E0\u304C\u8A73\u3057\u304F\u898B\u3064\u304B\u3089\u306A\u3044\u3088\u3046\u3067\u3042\u308C\u3070\u3001\u3053\u306E2\u3064\u306E\u5C0F\u3055\u306A\u77E2\u5370\u3092\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306E\u5168\u5BB9\u3092\u62E1\u5927\u3057\u3066\u307F\u3066\u304F\u3060\u3055\u3044\u3002")},l($){d=l($,"P",{});var E=p(d);q=n(E,"\u{1F6A8} Google Colab\u306E\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3067\u3001\u300C6frames\u300D\u306E\u3042\u305F\u308A\u306B\u9752\u3044\u67A0\u304C\u3042\u308B\u306E\u304C\u898B\u3048\u307E\u3059\u304B\uFF1F\u3053\u308C\u306FColab\u306E\u7279\u5225\u306A\u6A5F\u80FD\u3067\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3092 \u201C\u30D5\u30EC\u30FC\u30E0 \u201C\u306B\u5727\u7E2E\u3057\u3066\u3044\u308B\u306E\u3067\u3059\u3002\u3082\u3057\u30A8\u30E9\u30FC\u306E\u539F\u56E0\u304C\u8A73\u3057\u304F\u898B\u3064\u304B\u3089\u306A\u3044\u3088\u3046\u3067\u3042\u308C\u3070\u3001\u3053\u306E2\u3064\u306E\u5C0F\u3055\u306A\u77E2\u5370\u3092\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306E\u5168\u5BB9\u3092\u62E1\u5927\u3057\u3066\u307F\u3066\u304F\u3060\u3055\u3044\u3002"),E.forEach(t)},m($,E){i($,d,E),s(d,q)},d($){$&&t(d)}}}function ma(W){let d,q,$,E,O,v,x,P,H,G,le;return{c(){d=a("p"),q=r("\u{1F4A1} \u7406\u89E3\u3057\u304C\u305F\u3044\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u8868\u793A\u3055\u308C\u305F\u5834\u5408\u306F\u3001\u305D\u306E\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u30B3\u30D4\u30FC\u3057\u3066Google \u307E\u305F\u306F "),$=a("a"),E=r("Stack Overflow"),O=r(" \u306E\u691C\u7D22\u30D0\u30FC\u306B\u8CBC\u308A\u4ED8\u3051\u3066\u304F\u3060\u3055\u3044\uFF01\u3000\u305D\u306E\u30A8\u30E9\u30FC\u306B\u906D\u9047\u3057\u305F\u306E\u306F\u3042\u306A\u305F\u304C\u521D\u3081\u3066\u3067\u306F\u306A\u3044\u53EF\u80FD\u6027\u304C\u9AD8\u3044\u3067\u3059\u3057\u3001\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306E\u4ED6\u306E\u4EBA\u304C\u6295\u7A3F\u3057\u305F\u89E3\u6C7A\u7B56\u3092\u898B\u3064\u3051\u308B\u826F\u3044\u65B9\u6CD5\u3067\u3059\u3002\u4F8B\u3048\u3070\u3001"),v=a("code"),x=r("OSError: Can't load config for"),P=r(" \u3092 Stack Overflow \u3067\u691C\u7D22\u3059\u308B\u3068\u3001\u3044\u304F\u3064\u304B\u306E "),H=a("a"),G=r("\u30D2\u30F3\u30C8"),le=r(" \u304C\u898B\u4ED8\u3051\u3089\u308C\u307E\u3059\u3002\u3053\u308C\u306F\u3001\u554F\u984C\u89E3\u6C7A\u306E\u51FA\u767A\u70B9\u3068\u3057\u3066\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),this.h()},l(V){d=l(V,"P",{});var A=p(d);q=n(A,"\u{1F4A1} \u7406\u89E3\u3057\u304C\u305F\u3044\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u8868\u793A\u3055\u308C\u305F\u5834\u5408\u306F\u3001\u305D\u306E\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u30B3\u30D4\u30FC\u3057\u3066Google \u307E\u305F\u306F "),$=l(A,"A",{href:!0,rel:!0});var M=p($);E=n(M,"Stack Overflow"),M.forEach(t),O=n(A," \u306E\u691C\u7D22\u30D0\u30FC\u306B\u8CBC\u308A\u4ED8\u3051\u3066\u304F\u3060\u3055\u3044\uFF01\u3000\u305D\u306E\u30A8\u30E9\u30FC\u306B\u906D\u9047\u3057\u305F\u306E\u306F\u3042\u306A\u305F\u304C\u521D\u3081\u3066\u3067\u306F\u306A\u3044\u53EF\u80FD\u6027\u304C\u9AD8\u3044\u3067\u3059\u3057\u3001\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306E\u4ED6\u306E\u4EBA\u304C\u6295\u7A3F\u3057\u305F\u89E3\u6C7A\u7B56\u3092\u898B\u3064\u3051\u308B\u826F\u3044\u65B9\u6CD5\u3067\u3059\u3002\u4F8B\u3048\u3070\u3001"),v=l(A,"CODE",{});var pe=p(v);x=n(pe,"OSError: Can't load config for"),pe.forEach(t),P=n(A," \u3092 Stack Overflow \u3067\u691C\u7D22\u3059\u308B\u3068\u3001\u3044\u304F\u3064\u304B\u306E "),H=l(A,"A",{href:!0,rel:!0});var D=p(H);G=n(D,"\u30D2\u30F3\u30C8"),D.forEach(t),le=n(A," \u304C\u898B\u4ED8\u3051\u3089\u308C\u307E\u3059\u3002\u3053\u308C\u306F\u3001\u554F\u984C\u89E3\u6C7A\u306E\u51FA\u767A\u70B9\u3068\u3057\u3066\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),A.forEach(t),this.h()},h(){_($,"href","https://stackoverflow.com/"),_($,"rel","nofollow"),_(H,"href","https://stackoverflow.com/search?q=OSError%3A+Can%27t+load+config+for+"),_(H,"rel","nofollow")},m(V,A){i(V,d,A),s(d,q),s(d,$),s($,E),s(d,O),s(d,v),s(v,x),s(d,P),s(d,H),s(H,G),s(d,le)},d(V){V&&t(d)}}}function ha(W){let d,q,$,E,O;return{c(){d=a("p"),q=r("\u{1F6A8} \u540C\u50DA\u306F "),$=a("code"),E=r("distilbert-base-uncased"),O=r(" \u306E\u8A2D\u5B9A\u3092\u9593\u9055\u3048\u3066\u3044\u3058\u3063\u305F\u304B\u3082\u3057\u308C\u306A\u3044\u3067\u3059\u3002\u5B9F\u969B\u306E\u3068\u3053\u308D\u3001\u79C1\u305F\u3061\u306F\u307E\u305A\u5F7C\u3089\u306B\u78BA\u8A8D\u3057\u305F\u3044\u3068\u3053\u308D\u3067\u3059\u304C\u3001\u3053\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u306E\u76EE\u7684\u3067\u306F\u3001\u5F7C\u3089\u304C\u30C7\u30D5\u30A9\u30EB\u30C8\u306E\u8A2D\u5B9A\u3092\u4F7F\u7528\u3057\u305F\u3068\u4EEE\u5B9A\u3059\u308B\u3053\u3068\u306B\u3057\u307E\u3059\u3002")},l(v){d=l(v,"P",{});var x=p(d);q=n(x,"\u{1F6A8} \u540C\u50DA\u306F "),$=l(x,"CODE",{});var P=p($);E=n(P,"distilbert-base-uncased"),P.forEach(t),O=n(x," \u306E\u8A2D\u5B9A\u3092\u9593\u9055\u3048\u3066\u3044\u3058\u3063\u305F\u304B\u3082\u3057\u308C\u306A\u3044\u3067\u3059\u3002\u5B9F\u969B\u306E\u3068\u3053\u308D\u3001\u79C1\u305F\u3061\u306F\u307E\u305A\u5F7C\u3089\u306B\u78BA\u8A8D\u3057\u305F\u3044\u3068\u3053\u308D\u3067\u3059\u304C\u3001\u3053\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u306E\u76EE\u7684\u3067\u306F\u3001\u5F7C\u3089\u304C\u30C7\u30D5\u30A9\u30EB\u30C8\u306E\u8A2D\u5B9A\u3092\u4F7F\u7528\u3057\u305F\u3068\u4EEE\u5B9A\u3059\u308B\u3053\u3068\u306B\u3057\u307E\u3059\u3002"),x.forEach(t)},m(v,x){i(v,d,x),s(d,q),s(d,$),s($,E),s(d,O)},d(v){v&&t(d)}}}function ba(W){let d,q,$,E,O,v,x,P,H,G,le,V,A,M,pe,D,zo,ue,So,Io,fe,Ho,Go,ls,_e,ps,ot,Mo,us,de,fs,Y,No,Et,Qo,Ro,_s,ce,ds,me,yt,Fo,Lo,cs,J,B,jt,he,Vo,xt,Jo,ms,rt,Wo,hs,nt,Pt,Yo,bs,X,Bo,At,Xo,Uo,gs,be,ws,ge,$s,N,Ko,Ct,Zo,er,Dt,tr,sr,ks,we,$e,Bn,vs,Q,or,Ot,rr,nr,it,ir,ar,qs,U,Es,R,lr,Tt,pr,ur,zt,fr,_r,ys,ke,js,K,xs,at,dr,Ps,ve,qe,Xn,As,lt,cr,Cs,Ee,ye,Un,Ds,pt,mr,Os,je,Ts,xe,zs,F,hr,St,br,gr,It,wr,$r,Ss,Pe,Is,Ae,Hs,y,kr,Ht,vr,qr,Gt,Er,yr,Ce,Mt,jr,xr,ut,Pr,Ar,Nt,Cr,Dr,Gs,De,Ms,Z,Ns,ee,Or,Qt,Tr,zr,Qs,Oe,Rs,te,Sr,Rt,Ir,Hr,Fs,Te,Ls,ze,Vs,ft,Gr,Js,T,Se,Mr,Ft,Nr,Qr,Rr,Ie,Fr,Lt,Lr,Vr,Jr,Vt,Wr,Yr,_t,Jt,Br,Xr,Ws,dt,Ur,Ys,He,Kr,Bs,se,Zr,Wt,en,tn,Xs,Ge,Us,ct,sn,Ks,Me,Zs,Ne,mt,on,rn,eo,Qe,to,Re,so,ht,nn,oo,Fe,ro,bt,an,no,Le,io,C,ln,Yt,pn,un,Bt,fn,_n,Xt,dn,cn,Ut,mn,hn,ao,Ve,lo,Je,po,oe,bn,Kt,gn,wn,uo,We,fo,Ye,_o,j,$n,Zt,kn,vn,gt,qn,En,es,yn,jn,ts,xn,Pn,ss,An,Cn,co,Be,mo,z,Dn,os,On,Tn,rs,zn,Sn,Xe,In,Hn,ho,Ue,Ke,Kn,bo,re,Gn,ns,Mn,Nn,go,Ze,wo,et,$o,ne,Qn,tt,Rn,Fn,ko;return v=new da({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Google Colab",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/master/course/chapter8/section2.ipynb"},{label:"Aws Studio",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/master/course/chapter8/section2.ipynb"}]}}),M=new Yn({props:{id:"DQ-CpJn6Rc4"}}),_e=new k({props:{code:`from huggingface_hub import notebook_login

notebook_login()`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login

notebook_login()`}}),de=new k({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}}),ce=new k({props:{code:`from distutils.dir_util import copy_tree
from huggingface_hub import Repository, snapshot_download, create_repo, get_full_repo_name


def copy_repository_template():
    # Clone the repo and extract the local path
    template_repo_id = "lewtun/distilbert-base-uncased-finetuned-squad-d5716d28"
    commit_hash = "be3eaffc28669d7932492681cd5f3e8905e358b4"
    template_repo_dir = snapshot_download(template_repo_id, revision=commit_hash)
    # Create an empty repo on the Hub
    model_name = template_repo_id.split("/")[1]
    create_repo(model_name, exist_ok=True)
    # Clone the empty repo
    new_repo_id = get_full_repo_name(model_name)
    new_repo_dir = model_name
    repo = Repository(local_dir=new_repo_dir, clone_from=new_repo_id)
    # Copy files
    copy_tree(template_repo_dir, new_repo_dir)
    # Push to Hub
    repo.push_to_hub()`,highlighted:`<span class="hljs-keyword">from</span> distutils.dir_util <span class="hljs-keyword">import</span> copy_tree
<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> Repository, snapshot_download, create_repo, get_full_repo_name


<span class="hljs-keyword">def</span> <span class="hljs-title function_">copy_repository_template</span>():
    <span class="hljs-comment"># Clone the repo and extract the local path</span>
    template_repo_id = <span class="hljs-string">&quot;lewtun/distilbert-base-uncased-finetuned-squad-d5716d28&quot;</span>
    commit_hash = <span class="hljs-string">&quot;be3eaffc28669d7932492681cd5f3e8905e358b4&quot;</span>
    template_repo_dir = snapshot_download(template_repo_id, revision=commit_hash)
    <span class="hljs-comment"># Create an empty repo on the Hub</span>
    model_name = template_repo_id.split(<span class="hljs-string">&quot;/&quot;</span>)[<span class="hljs-number">1</span>]
    create_repo(model_name, exist_ok=<span class="hljs-literal">True</span>)
    <span class="hljs-comment"># Clone the empty repo</span>
    new_repo_id = get_full_repo_name(model_name)
    new_repo_dir = model_name
    repo = Repository(local_dir=new_repo_dir, clone_from=new_repo_id)
    <span class="hljs-comment"># Copy files</span>
    copy_tree(template_repo_dir, new_repo_dir)
    <span class="hljs-comment"># Push to Hub</span>
    repo.push_to_hub()`}}),he=new _a({}),be=new k({props:{code:`from transformers import pipeline

model_checkpoint = get_full_repo_name("distillbert-base-uncased-finetuned-squad-d5716d28")
reader = pipeline("question-answering", model=model_checkpoint)`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

model_checkpoint = get_full_repo_name(<span class="hljs-string">&quot;distillbert-base-uncased-finetuned-squad-d5716d28&quot;</span>)
reader = pipeline(<span class="hljs-string">&quot;question-answering&quot;</span>, model=model_checkpoint)`}}),ge=new k({props:{code:`"""
OSError: Can't load config for 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28'. Make sure that:

- 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28' is a correct model identifier listed on 'https://huggingface.co/models'

- or 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28' is the correct path to a directory containing a config.json file
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
OSError: Can&#x27;t load config for &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27;. Make sure that:

- &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27; is a correct model identifier listed on &#x27;https://huggingface.co/models&#x27;

- or &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27; is the correct path to a directory containing a config.json file
&quot;&quot;&quot;</span>`}}),U=new Wn({props:{$$slots:{default:[ca]},$$scope:{ctx:W}}}),ke=new k({props:{code:`"""
Make sure that:

- 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28' is a correct model identifier listed on 'https://huggingface.co/models'

- or 'lewtun/distillbert-base-uncased-finetuned-squad-d5716d28' is the correct path to a directory containing a config.json file
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
Make sure that:

- &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27; is a correct model identifier listed on &#x27;https://huggingface.co/models&#x27;

- or &#x27;lewtun/distillbert-base-uncased-finetuned-squad-d5716d28&#x27; is the correct path to a directory containing a config.json file
&quot;&quot;&quot;</span>`}}),K=new Wn({props:{$$slots:{default:[ma]},$$scope:{ctx:W}}}),je=new k({props:{code:`model_checkpoint = get_full_repo_name("distilbert-base-uncased-finetuned-squad-d5716d28")
reader = pipeline("question-answering", model=model_checkpoint)`,highlighted:`model_checkpoint = get_full_repo_name(<span class="hljs-string">&quot;distilbert-base-uncased-finetuned-squad-d5716d28&quot;</span>)
reader = pipeline(<span class="hljs-string">&quot;question-answering&quot;</span>, model=model_checkpoint)`}}),xe=new k({props:{code:`"""
OSError: Can't load config for 'lewtun/distilbert-base-uncased-finetuned-squad-d5716d28'. Make sure that:

- 'lewtun/distilbert-base-uncased-finetuned-squad-d5716d28' is a correct model identifier listed on 'https://huggingface.co/models'

- or 'lewtun/distilbert-base-uncased-finetuned-squad-d5716d28' is the correct path to a directory containing a config.json file
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
OSError: Can&#x27;t load config for &#x27;lewtun/distilbert-base-uncased-finetuned-squad-d5716d28&#x27;. Make sure that:

- &#x27;lewtun/distilbert-base-uncased-finetuned-squad-d5716d28&#x27; is a correct model identifier listed on &#x27;https://huggingface.co/models&#x27;

- or &#x27;lewtun/distilbert-base-uncased-finetuned-squad-d5716d28&#x27; is the correct path to a directory containing a config.json file
&quot;&quot;&quot;</span>`}}),Pe=new k({props:{code:`from huggingface_hub import list_repo_files

list_repo_files(repo_id=model_checkpoint)`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> list_repo_files

list_repo_files(repo_id=model_checkpoint)`}}),Ae=new k({props:{code:"['.gitattributes', 'README.md', 'pytorch_model.bin', 'special_tokens_map.json', 'tokenizer_config.json', 'training_args.bin', 'vocab.txt']",highlighted:'[<span class="hljs-string">&#x27;.gitattributes&#x27;</span>, <span class="hljs-string">&#x27;README.md&#x27;</span>, <span class="hljs-string">&#x27;pytorch_model.bin&#x27;</span>, <span class="hljs-string">&#x27;special_tokens_map.json&#x27;</span>, <span class="hljs-string">&#x27;tokenizer_config.json&#x27;</span>, <span class="hljs-string">&#x27;training_args.bin&#x27;</span>, <span class="hljs-string">&#x27;vocab.txt&#x27;</span>]'}}),De=new k({props:{code:`from transformers import AutoConfig

pretrained_checkpoint = "distilbert-base-uncased"
config = AutoConfig.from_pretrained(pretrained_checkpoint)`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoConfig

pretrained_checkpoint = <span class="hljs-string">&quot;distilbert-base-uncased&quot;</span>
config = AutoConfig.from_pretrained(pretrained_checkpoint)`}}),Z=new Wn({props:{warning:!0,$$slots:{default:[ha]},$$scope:{ctx:W}}}),Oe=new k({props:{code:'config.push_to_hub(model_checkpoint, commit_message="Add config.json")',highlighted:'config.push_to_hub(model_checkpoint, commit_message=<span class="hljs-string">&quot;Add config.json&quot;</span>)'}}),Te=new k({props:{code:`reader = pipeline("question-answering", model=model_checkpoint, revision="main")

context = r"""
Extractive Question Answering is the task of extracting an answer from a text
given a question. An example of a question answering dataset is the SQuAD
dataset, which is entirely based on that task. If you would like to fine-tune a
model on a SQuAD task, you may leverage the
examples/pytorch/question-answering/run_squad.py script.

\u{1F917} Transformers is interoperable with the PyTorch, TensorFlow, and JAX
frameworks, so you can use your favourite tools for a wide variety of tasks!
"""

question = "What is extractive question answering?"
reader(question=question, context=context)`,highlighted:`reader = pipeline(<span class="hljs-string">&quot;question-answering&quot;</span>, model=model_checkpoint, revision=<span class="hljs-string">&quot;main&quot;</span>)

context = <span class="hljs-string">r&quot;&quot;&quot;
Extractive Question Answering is the task of extracting an answer from a text
given a question. An example of a question answering dataset is the SQuAD
dataset, which is entirely based on that task. If you would like to fine-tune a
model on a SQuAD task, you may leverage the
examples/pytorch/question-answering/run_squad.py script.

\u{1F917} Transformers is interoperable with the PyTorch, TensorFlow, and JAX
frameworks, so you can use your favourite tools for a wide variety of tasks!
&quot;&quot;&quot;</span>

question = <span class="hljs-string">&quot;What is extractive question answering?&quot;</span>
reader(question=question, context=context)`}}),ze=new k({props:{code:`{'score': 0.38669535517692566,
 'start': 34,
 'end': 95,
 'answer': 'the task of extracting an answer from a text given a question'}`,highlighted:`{<span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">0.38669535517692566</span>,
 <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-number">34</span>,
 <span class="hljs-string">&#x27;end&#x27;</span>: <span class="hljs-number">95</span>,
 <span class="hljs-string">&#x27;answer&#x27;</span>: <span class="hljs-string">&#x27;the task of extracting an answer from a text given a question&#x27;</span>}`}}),Ge=new k({props:{code:`tokenizer = reader.tokenizer
model = reader.model`,highlighted:`tokenizer = reader.tokenizer
model = reader.model`}}),Me=new k({props:{code:'question = "Which frameworks can I use?"',highlighted:'question = <span class="hljs-string">&quot;Which frameworks can I use?&quot;</span>'}}),Qe=new k({props:{code:`import torch

inputs = tokenizer(question, context, add_special_tokens=True)
input_ids = inputs["input_ids"][0]
outputs = model(**inputs)
answer_start_scores = outputs.start_logits
answer_end_scores = outputs.end_logits
# Get the most likely beginning of answer with the argmax of the score
answer_start = torch.argmax(answer_start_scores)
# Get the most likely end of answer with the argmax of the score
answer_end = torch.argmax(answer_end_scores) + 1
answer = tokenizer.convert_tokens_to_string(
    tokenizer.convert_ids_to_tokens(input_ids[answer_start:answer_end])
)
print(f"Question: {question}")
print(f"Answer: {answer}")`,highlighted:`<span class="hljs-keyword">import</span> torch

inputs = tokenizer(question, context, add_special_tokens=<span class="hljs-literal">True</span>)
input_ids = inputs[<span class="hljs-string">&quot;input_ids&quot;</span>][<span class="hljs-number">0</span>]
outputs = model(**inputs)
answer_start_scores = outputs.start_logits
answer_end_scores = outputs.end_logits
<span class="hljs-comment"># Get the most likely beginning of answer with the argmax of the score</span>
answer_start = torch.argmax(answer_start_scores)
<span class="hljs-comment"># Get the most likely end of answer with the argmax of the score</span>
answer_end = torch.argmax(answer_end_scores) + <span class="hljs-number">1</span>
answer = tokenizer.convert_tokens_to_string(
    tokenizer.convert_ids_to_tokens(input_ids[answer_start:answer_end])
)
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Question: <span class="hljs-subst">{question}</span>&quot;</span>)
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Answer: <span class="hljs-subst">{answer}</span>&quot;</span>)`}}),Re=new k({props:{code:`"""
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
/var/folders/28/k4cy5q7s2hs92xq7_h89_vgm0000gn/T/ipykernel_75743/2725838073.py in <module>
      1 inputs = tokenizer(question, text, add_special_tokens=True)
      2 input_ids = inputs["input_ids"]
----> 3 outputs = model(**inputs)
      4 answer_start_scores = outputs.start_logits
      5 answer_end_scores = outputs.end_logits

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)
   1049         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks
   1050                 or _global_forward_hooks or _global_forward_pre_hooks):
-> 1051             return forward_call(*input, **kwargs)
   1052         # Do not call functions when jit is used
   1053         full_backward_hooks, non_full_backward_hooks = [], []

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, start_positions, end_positions, output_attentions, output_hidden_states, return_dict)
    723         return_dict = return_dict if return_dict is not None else self.config.use_return_dict
    724
--> 725         distilbert_output = self.distilbert(
    726             input_ids=input_ids,
    727             attention_mask=attention_mask,

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)
   1049         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks
   1050                 or _global_forward_hooks or _global_forward_pre_hooks):
-> 1051             return forward_call(*input, **kwargs)
   1052         # Do not call functions when jit is used
   1053         full_backward_hooks, non_full_backward_hooks = [], []

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, output_attentions, output_hidden_states, return_dict)
    471             raise ValueError("You cannot specify both input_ids and inputs_embeds at the same time")
    472         elif input_ids is not None:
--> 473             input_shape = input_ids.size()
    474         elif inputs_embeds is not None:
    475             input_shape = inputs_embeds.size()[:-1]

AttributeError: 'list' object has no attribute 'size'
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
/var/folders/28/k4cy5q7s2hs92xq7_h89_vgm0000gn/T/ipykernel_75743/2725838073.py in &lt;module&gt;
      1 inputs = tokenizer(question, text, add_special_tokens=True)
      2 input_ids = inputs[&quot;input_ids&quot;]
----&gt; 3 outputs = model(**inputs)
      4 answer_start_scores = outputs.start_logits
      5 answer_end_scores = outputs.end_logits

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)
   1049         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks
   1050                 or _global_forward_hooks or _global_forward_pre_hooks):
-&gt; 1051             return forward_call(*input, **kwargs)
   1052         # Do not call functions when jit is used
   1053         full_backward_hooks, non_full_backward_hooks = [], []

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, start_positions, end_positions, output_attentions, output_hidden_states, return_dict)
    723         return_dict = return_dict if return_dict is not None else self.config.use_return_dict
    724
--&gt; 725         distilbert_output = self.distilbert(
    726             input_ids=input_ids,
    727             attention_mask=attention_mask,

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs)
   1049         if not (self._backward_hooks or self._forward_hooks or self._forward_pre_hooks or _global_backward_hooks
   1050                 or _global_forward_hooks or _global_forward_pre_hooks):
-&gt; 1051             return forward_call(*input, **kwargs)
   1052         # Do not call functions when jit is used
   1053         full_backward_hooks, non_full_backward_hooks = [], []

~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, output_attentions, output_hidden_states, return_dict)
    471             raise ValueError(&quot;You cannot specify both input_ids and inputs_embeds at the same time&quot;)
    472         elif input_ids is not None:
--&gt; 473             input_shape = input_ids.size()
    474         elif inputs_embeds is not None:
    475             input_shape = inputs_embeds.size()[:-1]

AttributeError: &#x27;list&#x27; object has no attribute &#x27;size&#x27;
&quot;&quot;&quot;</span>`}}),Fe=new Yn({props:{id:"rSPyvPw0p9k"}}),Le=new Yn({props:{id:"5PkZ4rbHL6c"}}),Ve=new k({props:{code:'inputs["input_ids"][:5]',highlighted:'inputs[<span class="hljs-string">&quot;input_ids&quot;</span>][:<span class="hljs-number">5</span>]'}}),Je=new k({props:{code:"[101, 2029, 7705, 2015, 2064]",highlighted:'[<span class="hljs-number">101</span>, <span class="hljs-number">2029</span>, <span class="hljs-number">7705</span>, <span class="hljs-number">2015</span>, <span class="hljs-number">2064</span>]'}}),We=new k({props:{code:'type(inputs["input_ids"])',highlighted:'<span class="hljs-built_in">type</span>(inputs[<span class="hljs-string">&quot;input_ids&quot;</span>])'}}),Ye=new k({props:{code:"list",highlighted:'<span class="hljs-built_in">list</span>'}}),Be=new k({props:{code:`~/miniconda3/envs/huggingface/lib/python3.8/site-packages/transformers/models/distilbert/modeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, output_attentions, output_hidden_states, return_dict)
    471             raise ValueError("You cannot specify both input_ids and inputs_embeds at the same time")
    472         elif input_ids is not None:
--> 473             input_shape = input_ids.size()
    474         elif inputs_embeds is not None:
    475             input_shape = inputs_embeds.size()[:-1]

AttributeError: 'list' object has no attribute 'size'`,highlighted:`~<span class="hljs-regexp">/miniconda3/</span>envs<span class="hljs-regexp">/huggingface/</span>lib<span class="hljs-regexp">/python3.8/</span>site-packages<span class="hljs-regexp">/transformers/m</span>odels<span class="hljs-regexp">/distilbert/m</span>odeling_distilbert.py in forward(self, input_ids, attention_mask, head_mask, inputs_embeds, output_attentions, output_hidden_states, return_dict)
    <span class="hljs-number">471</span>             raise ValueError(<span class="hljs-string">&quot;You cannot specify both input_ids and inputs_embeds at the same time&quot;</span>)
    <span class="hljs-number">472</span>         elif input_ids is not None:
--&gt; <span class="hljs-number">473</span>             input_shape = input_ids.<span class="hljs-keyword">size</span>()
    <span class="hljs-number">474</span>         elif inputs_embeds is not None:
    <span class="hljs-number">475</span>             input_shape = inputs_embeds.<span class="hljs-keyword">size</span>()[:-<span class="hljs-number">1</span>]

AttributeError: <span class="hljs-string">&#x27;list&#x27;</span> object has no attribute <span class="hljs-string">&#x27;size&#x27;</span>`}}),Ze=new k({props:{code:`inputs = tokenizer(question, context, add_special_tokens=True, return_tensors="pt")
input_ids = inputs["input_ids"][0]
outputs = model(**inputs)
answer_start_scores = outputs.start_logits
answer_end_scores = outputs.end_logits
# Get the most likely beginning of answer with the argmax of the score
answer_start = torch.argmax(answer_start_scores)
# Get the most likely end of answer with the argmax of the score
answer_end = torch.argmax(answer_end_scores) + 1
answer = tokenizer.convert_tokens_to_string(
    tokenizer.convert_ids_to_tokens(input_ids[answer_start:answer_end])
)
print(f"Question: {question}")
print(f"Answer: {answer}")`,highlighted:`inputs = tokenizer(question, context, add_special_tokens=<span class="hljs-literal">True</span>, return_tensors=<span class="hljs-string">&quot;pt&quot;</span>)
input_ids = inputs[<span class="hljs-string">&quot;input_ids&quot;</span>][<span class="hljs-number">0</span>]
outputs = model(**inputs)
answer_start_scores = outputs.start_logits
answer_end_scores = outputs.end_logits
<span class="hljs-comment"># Get the most likely beginning of answer with the argmax of the score</span>
answer_start = torch.argmax(answer_start_scores)
<span class="hljs-comment"># Get the most likely end of answer with the argmax of the score</span>
answer_end = torch.argmax(answer_end_scores) + <span class="hljs-number">1</span>
answer = tokenizer.convert_tokens_to_string(
    tokenizer.convert_ids_to_tokens(input_ids[answer_start:answer_end])
)
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Question: <span class="hljs-subst">{question}</span>&quot;</span>)
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Answer: <span class="hljs-subst">{answer}</span>&quot;</span>)`}}),et=new k({props:{code:`"""
Question: Which frameworks can I use?
Answer: pytorch, tensorflow, and jax
"""`,highlighted:`<span class="hljs-string">&quot;&quot;&quot;
Question: Which frameworks can I use?
Answer: pytorch, tensorflow, and jax
&quot;&quot;&quot;</span>`}}),{c(){d=a("meta"),q=u(),$=a("h1"),E=r("\u30A8\u30E9\u30FC\u3092\u898B\u3064\u3051\u305F\u6642\u306B\u6700\u521D\u306B\u3059\u308B\u3053\u3068"),O=u(),c(v.$$.fragment),x=u(),P=a("p"),H=r("\u3053\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u65B0\u3057\u304F\u30C1\u30E5\u30FC\u30CB\u30F3\u30B0\u3055\u308C\u305FTransformer\u30E2\u30C7\u30EB\u304B\u3089\u4E88\u6E2C\u3092\u751F\u6210\u3057\u3088\u3046\u3068\u3059\u308B\u3068\u304D\u306B\u8D77\u3053\u308B\u4E8B\u304C\u3067\u304D\u308B\u3001\u3044\u304F\u3064\u304B\u306E\u4E00\u822C\u7684\u306A\u30A8\u30E9\u30FC\u306B\u3064\u3044\u3066\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002\u3053\u308C\u306F"),G=a("a"),le=r("\u30BB\u30AF\u30B7\u30E7\u30F34"),V=r("\u306E\u6E96\u5099\u3068\u306A\u308A\u3001\u5B66\u7FD2\u6BB5\u968E\u3092\u30C7\u30D0\u30C3\u30B0\u3059\u308B\u65B9\u6CD5\u3092\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002"),A=u(),c(M.$$.fragment),pe=u(),D=a("p"),zo=r("\u3053\u306E\u7AE0\u306E\u70BA\u306B"),ue=a("a"),So=r("\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EC\u30DD\u30B8\u30C8\u30EA\u30FC"),Io=r("\u3092\u7528\u610F\u3057\u307E\u3057\u305F\u3002\u3053\u306E\u7AE0\u306E\u30B3\u30FC\u30C9\u3092\u5B9F\u884C\u3057\u305F\u3044\u5834\u5408\u306F\u3001\u307E\u305A\u30E2\u30C7\u30EB\u3092"),fe=a("a"),Ho=r("\u30CF\u30AE\u30F3\u30B0\u30D5\u30A7\u30A4\u30B9\u30CF\u30D6\uFF08Hugging Face Hub\uFF09"),Go=r("\u306E\u30A2\u30AB\u30A6\u30F3\u30C8\u306B\u30B3\u30D4\u30FC\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u307E\u305AJupyterNotebook\u3067\u30ED\u30B0\u30A4\u30F3\u3057\u307E\u3057\u3087\u3046"),ls=u(),c(_e.$$.fragment),ps=u(),ot=a("p"),Mo=r("\u305D\u308C\u3068\u3082\u3001\u30BF\u30FC\u30DF\u30CA\u30EB\u3092\u4F7F\u3044\u306A\u304C\u3089:"),us=u(),c(de.$$.fragment),fs=u(),Y=a("p"),No=r("\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u5165\u529B\u3059\u308B\u753B\u9762\u304C\u8868\u793A\u3055\u308C\u307E\u3059\u3002Authentification token \u304C "),Et=a("em"),Qo=r("~/.cache/huggingface/"),Ro=r("\u306E\u4E2D\u306B\u30BB\u30FC\u30D6\u3055\u308C\u307E\u3059\u3002\u30ED\u30B0\u30A4\u30F3\u3057\u305F\u5F8C\u306B\u4EE5\u4E0B\u306E\u6A5F\u80FD\u3067\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u30B3\u30D4\u30FC\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059"),_s=u(),c(ce.$$.fragment),ds=u(),me=a("p"),yt=a("code"),Fo=r("copy_repository_template()"),Lo=r("\u6A5F\u80FD\u306F\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EC\u30DD\u30B8\u30C8\u30EA\u30FC\u3092\u30A2\u30AB\u30A6\u30F3\u30C8\u306B\u30B3\u30D4\u30FC\u3057\u307E\u3059\u3002"),cs=u(),J=a("h2"),B=a("a"),jt=a("span"),c(he.$$.fragment),Vo=u(),xt=a("span"),Jo=r("\u{1F917} Transformers\u3000\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30B0"),ms=u(),rt=a("p"),Wo=r("Transformer\u30E2\u30C7\u30EB\u3068\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30C3\u30B0\u3068\u3044\u3046\u7D20\u6674\u3089\u3057\u3044\u4E16\u754C\u3078\u306E\u65C5\u3092\u59CB\u3081\u308B\u306B\u3042\u305F\u308A\u3001\u6B21\u306E\u3088\u3046\u306A\u30B7\u30CA\u30EA\u30AA\u3092\u8003\u3048\u3066\u307F\u307E\u3057\u3087\u3046\u3002\u3042\u306A\u305F\u306F\u540C\u50DA\u3068\u4E00\u7DD2\u306B\u3001\u3042\u308Be\u30B3\u30DE\u30FC\u30B9\u30B5\u30A4\u30C8\u306B\u95A2\u3059\u308B\u304A\u5BA2\u3055\u3093\u306E\u7B54\u3048\u3092\u898B\u3064\u3051\u3089\u308C\u308B\u3088\u3046\u306B\u3001\u2018Question Answering\u2019\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306B\u53D6\u308A\u7D44\u3093\u3067\u3044\u307E\u3059\u3002\u3042\u306A\u305F\u306E\u540C\u50DA\u306F\u3053\u3093\u306A\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u9001\u308A\u307E\u3057\u305F\u3002"),hs=u(),nt=a("blockquote"),Pt=a("p"),Yo=r("\u3069\u3046\u3082! \u5148\u307B\u3069\u3001\u3010\u7B2C7\u7AE0\u3011(/course/chapter7/7)\u3000\u306E\u30C6\u30AF\u30CB\u30C3\u30AF\u3092\u4F7F\u3063\u3066\u5B9F\u9A13\u3092\u3057\u305F\u3068\u3053\u308D\u3001SQuAD\u30C7\u30FC\u30BF\u30BB\u30C3\u30C8\u3067\u7D20\u6674\u3089\u3057\u3044\u7D50\u679C\u304C\u5F97\u3089\u308C\u307E\u3057\u305F!Hub\u4E0A\u306E\u30E2\u30C7\u30EBID\u306F\u201Dlewtun/distilbert-base-uncased-finetuned-squad-d5716d28\u201D\u3067\u3059\u3002\u3053\u306E\u30E2\u30C7\u30EB\u3092\u305C\u3072\u30C6\u30B9\u30C8\u3057\u3066\u307F\u307E\u3057\u3087\u3046!"),bs=u(),X=a("p"),Bo=r("\u3055\u3066\u3001\u{1F917} Transformers \u3067\u30E2\u30C7\u30EB\u3092\u30ED\u30FC\u30C9\u3059\u308B\u305F\u3081\u306B\u3000 "),At=a("code"),Xo=r("pipeline"),Uo=r(" \u3092\u4F7F\u3044\u307E\u3057\u3087\u3046\uFF01"),gs=u(),c(be.$$.fragment),ws=u(),c(ge.$$.fragment),$s=u(),N=a("p"),Ko=r("\u6B8B\u5FF5\uFF01\u3069\u3046\u3057\u3066\u3082\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002\u30D7\u30ED\u30B0\u30E9\u30DF\u30F3\u30B0\u304C\u521D\u3081\u3066\u306E\u65B9\u306F\u3053\u3093\u306A\u30E1\u30C3\u30BB\u30FC\u30B8\u306F\u6016\u305D\u3046\u306B\u898B\u3048\u307E\u3059\u3002("),Ct=a("code"),Zo=r("OSError"),er=r("\u306F\u4F55\uFF1F)\u3002\u3053\u306E\u3088\u3046\u306A\u30A8\u30E9\u30FC\u306F\u3001"),Dt=a("em"),tr=r("Python traceback"),sr=r(" \u3068\u547C\u3070\u308C\u308B\u3001\u3088\u308A\u5927\u304D\u306A\u30A8\u30E9\u30FC\u30EC\u30DD\u30FC\u30C8\u306E\u6700\u5F8C\u306E\u90E8\u5206\u3067\u3059\u3002\u3053\u306E\u30A8\u30E9\u30FC\u306F\u3001Google Colab\u3067\u5B9F\u884C\u3057\u305F\u5834\u5408\u306B\u306F\u3001\u6B21\u306E\u3088\u3046\u306A\u753B\u50CF\u304C\u8868\u793A\u3055\u308C\u307E\u3059\u3002"),ks=u(),we=a("div"),$e=a("img"),vs=u(),Q=a("p"),or=r("\u3053\u306E\u30EC\u30DD\u30FC\u30C8\u306B\u306F\u591A\u304F\u306E\u60C5\u5831\u304C\u542B\u307E\u308C\u3066\u3044\u308B\u306E\u3067\u3001\u4E3B\u8981\u306A\u90E8\u5206\u3092\u4E00\u7DD2\u306B\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002\u307E\u305A\u6CE8\u610F\u3059\u3079\u304D\u306F\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306F\u4E0B\u304B\u3089\u4E0A\u3078\u8AAD\u3080\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uFF08\u65E5\u672C\u8A9E\u306E\u9006\u306E\u8AAD\u307F\u65B9\u3067\u3059\u306D\uFF01\uFF09\u3002\u3053\u308C\u306F\u3001\u30A8\u30E9\u30FC\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u304C\u3001\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3059\u308B\u3068\u304D\u306B "),Ot=a("code"),rr=r("pipeline"),nr=r(" \u304C\u884C\u3046\u4E00\u9023\u306E\u95A2\u6570\u547C\u3073\u51FA\u3057\u3092\u53CD\u6620\u3057\u3066\u3044\u307E\u3059\u3044\u307E\u3059\uFF08\u8A73\u3057\u304F\u306F"),it=a("a"),ir=r("\u7B2C\uFF12\u7AE0"),ar=r("\uFF09\u3092\u3054\u89A7\u4E0B\u3055\u3044\u3002"),qs=u(),c(U.$$.fragment),Es=u(),R=a("p"),lr=r("\u3053\u308C\u306F\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306E\u6700\u5F8C\u306E\u884C\u304C\u3001\u767A\u751F\u3057\u305F\u30A8\u30E9\u30FC\u306E\u540D\u524D\u3092\u4E0E\u3048\u308B\u3053\u3068\u3092\u3057\u307E\u3059\u3002\u30A8\u30E9\u30FC\u306E\u30BF\u30A4\u30D7\u306F "),Tt=a("code"),pr=r("OSError"),ur=r(" \u3067\u3001\u3053\u308C\u306F\u30B7\u30B9\u30C6\u30E0\u95A2\u9023\u306E\u30A8\u30E9\u30FC\u3092\u793A\u3057\u3066\u3044\u307E\u3059\u3002\u4ED8\u5C5E\u306E\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8AAD\u3080\u3068\u3001\u30E2\u30C7\u30EB\u306E "),zt=a("em"),fr=r("config.json"),_r=r(" \u30D5\u30A1\u30A4\u30EB\u306B\u554F\u984C\u304C\u3042\u308B\u3088\u3046\u3067\u3001\u305D\u308C\u3092\u4FEE\u6B63\u3059\u308B\u305F\u3081\u306E2\u3064\u306E\u63D0\u6848\u3092\u4E0E\u3048\u3089\u308C\u3066\u3044\u307E\u3059\u3002"),ys=u(),c(ke.$$.fragment),js=u(),c(K.$$.fragment),xs=u(),at=a("p"),dr=r("\u6700\u521D\u306E\u63D0\u6848\u306F\u3001\u30E2\u30C7\u30EBID\u304C\u5B9F\u969B\u306B\u6B63\u3057\u3044\u304B\u3069\u3046\u304B\u3092\u78BA\u8A8D\u3059\u308B\u3088\u3046\u6C42\u3081\u3066\u3044\u308B\u306E\u3067\u3001\u307E\u305A\u3001\u8B58\u5225\u5B50\u3092\u30B3\u30D4\u30FC\u3057\u3066Hub\u306E\u691C\u7D22\u30D0\u30FC\u306B\u8CBC\u308A\u4ED8\u3051\u307E\u3057\u3087\u3046\u3002"),Ps=u(),ve=a("div"),qe=a("img"),As=u(),lt=a("p"),cr=r("\u3046\u30FC\u3093\u3001\u78BA\u304B\u306B\u540C\u50DA\u306E\u30E2\u30C7\u30EB\u306F\u30CF\u30D6\u306B\u306A\u3044\u3088\u3046\u3060\u2026\u3057\u304B\u3057\u3001\u30E2\u30C7\u30EB\u306E\u540D\u524D\u306B\u30BF\u30A4\u30D7\u30DF\u30B9\u304C\u3042\u308B! DistilBERT\u306E\u540D\u524D\u306B\u306F\u300Cl\u300D\u304C1\u3064\u3057\u304B\u306A\u3044\u306E\u3067\u3001\u305D\u308C\u3092\u76F4\u3057\u3066\u3001\u4EE3\u308F\u308A\u306B\u300Clewtun/distilbert-base-uncased-finetuned-squad-d5716d28\u300D\u3092\u63A2\u305D\u3046\uFF01"),Cs=u(),Ee=a("div"),ye=a("img"),Ds=u(),pt=a("p"),mr=r("\u3055\u3066\u3001\u3053\u308C\u3067\u30D2\u30C3\u30C8\u3057\u307E\u3057\u305F\u3002\u3067\u306F\u3001\u6B63\u3057\u3044\u30E2\u30C7\u30EBID\u3067\u518D\u5EA6\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3092\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Os=u(),c(je.$$.fragment),Ts=u(),c(xe.$$.fragment),zs=u(),F=a("p"),hr=r("\u3042\u3042\u3001\u307E\u305F\u5931\u6557\u3060\u3002\u6A5F\u68B0\u5B66\u7FD2\u30A8\u30F3\u30B8\u30CB\u30A2\u306E\u65E5\u5E38\u3078\u3088\u3046\u3053\u305D\uFF01 \u30E2\u30C7\u30EBID\u306F\u4FEE\u6B63\u3067\u304D\u305F\u306E\u3067\u3001\u554F\u984C\u306F\u30EA\u30DD\u30B8\u30C8\u30EA\u81EA\u4F53\u306B\u3042\u308B\u306F\u305A\u3067\u3059\u3002\u{1F917} Hub\u4E0A\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u5185\u5BB9\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u7C21\u5358\u306A\u65B9\u6CD5\u306F\u3001"),St=a("code"),br=r("huggingface_hub"),gr=r("\u30E9\u30A4\u30D6\u30E9\u30EA\u306E "),It=a("code"),wr=r("list_repo_files()"),$r=r(" \u95A2\u6570\u3092\u4F7F\u7528\u3059\u308B\u3053\u3068\u3067\u3059\u3002"),Ss=u(),c(Pe.$$.fragment),Is=u(),c(Ae.$$.fragment),Hs=u(),y=a("p"),kr=r("\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u306F "),Ht=a("em"),vr=r("config.json"),qr=r(" \u30D5\u30A1\u30A4\u30EB\u304C\u306A\u3044\u3088\u3046\u3067\u3059! \u3069\u3046\u308A\u3067 "),Gt=a("code"),Er=r("pipeline"),yr=r(" \u304C\u30E2\u30C7\u30EB\u3092\u8AAD\u307F\u8FBC\u3081\u306A\u3044\u308F\u3051\u3067\u3059\u3002\u540C\u50DA\u304C\u3053\u306E\u30D5\u30A1\u30A4\u30EB\u3092Hub\u306B\u30D7\u30C3\u30B7\u30E5\u3059\u308B\u306E\u3092\u5FD8\u308C\u305F\u306B\u9055\u3044\u3042\u308A\u307E\u305B\u3093\u3002\u3053\u306E\u5834\u5408\u3001\u554F\u984C\u3092\u89E3\u6C7A\u3059\u308B\u306E\u306F\u7C21\u5358\u3067\u3059\u3002\u30D5\u30A1\u30A4\u30EB\u3092\u8FFD\u52A0\u3059\u308B\u3088\u3046\u306B\u4F9D\u983C\u3059\u308B\u304B\u3001\u30E2\u30C7\u30EBID\u304B\u3089\u4F7F\u7528\u3055\u308C\u305F\u4E8B\u524D\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u304C"),Ce=a("a"),Mt=a("code"),jr=r("distilbert-base-uncased"),xr=r("\u3067\u3042\u308B\u3053\u3068\u304C\u308F\u304B\u308B\u306E\u3067\u3001\u305D\u306E\u30E2\u30C7\u30EB\u306Econfig\uFF08\u8A2D\u5B9A\uFF09\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3057\u3001\u6211\u3005\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D7\u30C3\u30B7\u30E5\u3057\u3066\u554F\u984C\u304C\u89E3\u6C7A\u3059\u308B\u304B\u78BA\u8A8D\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u305D\u308C\u3067\u306F\u8A66\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),ut=a("a"),Pr=r("\u7B2C2\u7AE0"),Ar=r("\u3067\u5B66\u3093\u3060\u30C6\u30AF\u30CB\u30C3\u30AF\u3092\u4F7F\u3063\u3066\u3001"),Nt=a("code"),Cr=r("AutoConfig"),Dr=r("\u30AF\u30E9\u30B9\u3067\u30E2\u30C7\u30EB\u306E\u8A2D\u5B9A\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),Gs=u(),c(De.$$.fragment),Ms=u(),c(Z.$$.fragment),Ns=u(),ee=a("p"),Or=r("\u305D\u308C\u3067"),Qt=a("code"),Tr=r("push_to_hub()"),zr=r("\u3000\u6A5F\u80FD\u3067\u30E2\u30C7\u30EB\u306E\u8A2D\u5B9A\u3092\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D7\u30C3\u30B7\u30E5\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),Qs=u(),c(Oe.$$.fragment),Rs=u(),te=a("p"),Sr=r("\u305D\u3057\u3066\u306F\u3001\u6700\u65B0\u306E\u30B3\u30DF\u30C3\u30C8\u3092 "),Rt=a("code"),Ir=r("main"),Hr=r(" \u30D6\u30E9\u30F3\u30C1\u304B\u3089\u8AAD\u307F\u8FBC\u3053\u3093\u3067\u307F\u307E\u3057\u3087\u3046\u3002"),Fs=u(),c(Te.$$.fragment),Ls=u(),c(ze.$$.fragment),Vs=u(),ft=a("p"),Gr=r("\u3084\u3063\u305F\u306D\uFF01 \u3053\u308C\u3067\u3001\u304A\u75B2\u308C\u69D8\u3067\u3057\u305F\u3002\u4ECA\u307E\u3067\u306E\u3053\u3068\u3092\u4E00\u7DD2\u306B\u632F\u308A\u8FD4\u3063\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Js=u(),T=a("ul"),Se=a("li"),Mr=r("Python\u306E\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u306F\u3000"),Ft=a("strong"),Nr=r("traceback"),Qr=r("\u3000\u3068\u547C\u3070\u308C\u3001\u4E0B\u304B\u3089\u4E0A\u3078\u3068\u8AAD\u307F\u4E0A\u3052\u3089\u308C\u307E\u3059\u3002\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u306E\u6700\u5F8C\u306E\u884C\u306F\u4E00\u756A\u5FC5\u8981\u306A\u60C5\u5831\u3092\u542B\u3093\u3067\u3044\u307E\u3059\u3002"),Rr=u(),Ie=a("li"),Fr=r("\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u8907\u96D1\u306A\u5834\u5408\u306F\u3001"),Lt=a("strong"),Lr=r("traceback"),Vr=r("\u3000\u3092\u8AAD\u307F\u4E0A\u3052\u306A\u304C\u3089\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u305F\u30BD\u30FC\u30B9\u30B3\u30FC\u30C9\u30D5\u30A1\u30A4\u30EB\u540D\u3084\u884C\u756A\u53F7\u3092\u6307\u5B9A\u3057\u3066\u3001\u30A8\u30E9\u30FC\u306E\u539F\u56E0\u3092\u8AAD\u307F\u53D6\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),Jr=u(),Vt=a("li"),Wr=r("\u305D\u306E\u5834\u5408\u3067\u3082\u30C7\u30D0\u30B0\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u306A\u3044\u306A\u3089\u3001\u30A4\u30F3\u30BF\u30FC\u30CD\u30C3\u30C8\u4E0A\u306B\u3092\u691C\u7D22\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Yr=u(),_t=a("li"),Jt=a("code"),Br=r("huggingface_hub"),Xr=r(" \u30E9\u30A4\u30D6\u30E9\u30EA\u306F\u3001Hub\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F7F\u7528\u3059\u308B\u305F\u3081\u4E00\u9023\u306E\u30C4\u30FC\u30EB\u3092\u63D0\u4F9B\u3057\u307E\u3059\u3002\u30C7\u30D0\u30C3\u30B0\u3059\u308B\u305F\u3081\u306B\u4F7F\u7528\u3067\u304D\u308B\u306E\u30C4\u30FC\u30EB\u3082\u542B\u3081\u3066\u3044\u307E\u3059\u3002"),Ws=u(),dt=a("p"),Ur=r("\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30C3\u30B0\u65B9\u6CD5\u304C\u308F\u304B\u3063\u305F\u3068\u3053\u308D\u3067\u3001\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3067\u96E3\u3057\u3044\u4F8B\u3092\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Ys=u(),He=a("h2"),Kr=r("\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3092\u30C7\u30D0\u30C3\u30B0"),Bs=u(),se=a("p"),Zr=r("\u6642\u306B\u306F\u30E2\u30C7\u30EB\u306E\u30ED\u30B8\u30C3\u30C8\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\uFF08\u4F8B\u3048\u3070\u3001\u30AB\u30B9\u30BF\u30E0\u306A\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u3092\u4F7F\u3044\u305F\u3044\u5834\u5408\u3067\uFF09\u3002\u3053\u306E\u3088\u3046\u306A\u5834\u5408\u3001\u4F55\u304C\u554F\u984C\u306B\u306A\u308B\u304B\u3092\u77E5\u308B\u305F\u3081\u306B\u3001\u307E\u305A "),Wt=a("code"),en=r("pipeline"),tn=r(" \u304B\u3089\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u53D6\u5F97\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Xs=u(),c(Ge.$$.fragment),Us=u(),ct=a("p"),sn=r("\u6B21\u306B\u5FC5\u8981\u306A\u306E\u306F\u3001\u304A\u6C17\u306B\u5165\u308A\u306E\u30D5\u30EC\u30FC\u30E0\u30EF\u30FC\u30AF\u304C\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u308B\u304B\u3069\u3046\u304B\u3068\u3044\u3046\u8CEA\u554F\u3067\u3059\u3002"),Ks=u(),c(Me.$$.fragment),Zs=u(),Ne=a("p"),mt=a("a"),on=r("\u7B2C7\u7AE0"),rn=r("\u3067\u898B\u305F\u3088\u3046\u306B\u3001\u901A\u5E38\u5FC5\u8981\u306A\u30B9\u30C6\u30C3\u30D7\u306F\u3001\u5165\u529B\u306E\u30C8\u30FC\u30AF\u30F3\u3001\u958B\u59CB\u3068\u7D42\u4E86\u30C8\u30FC\u30AF\u30F3\u306E\u30ED\u30B8\u30C3\u30C8\u3001\u305D\u3057\u3066\u89E3\u7B54\u30B9\u30D1\u30F3\u306E\u30C7\u30B3\u30FC\u30C9\u3067\u3059\u3002"),eo=u(),c(Qe.$$.fragment),to=u(),c(Re.$$.fragment),so=u(),ht=a("p"),nn=r("\u304A\u3084\u304A\u3084\u3001\u3069\u3046\u3084\u3089\u30B3\u30FC\u30C9\u306B\u30D0\u30B0\u304C\u3042\u308B\u3088\u3046\u3067\u3059\u306D\u3002\u3067\u3082\u3001\u3061\u3087\u3063\u3068\u3057\u305F\u30C7\u30D0\u30C3\u30B0\u306F\u6016\u304F\u3042\u308A\u307E\u305B\u3093\u3002Python\u306E\u30C7\u30D0\u30C3\u30AC\u3092\u30CE\u30FC\u30C8\u30D6\u30C3\u30AF\u3067\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u308B\u306E\u3067\u3059\u3002"),oo=u(),c(Fe.$$.fragment),ro=u(),bt=a("p"),an=r("\u305D\u308C\u3068\u3082\u3001\u30BF\u30FC\u30DF\u30CA\u30EB\u3067\u30C7\u30D0\u30C3\u30B0\u3092\u884C\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059:"),no=u(),c(Le.$$.fragment),io=u(),C=a("p"),ln=r("\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8AAD\u3080\u3068\u3001 "),Yt=a("code"),pn=r("'list' object has no attribute 'size'"),un=r(" \u3068\u3001 "),Bt=a("code"),fn=r("-->"),_n=r(" \u77E2\u5370\u304C "),Xt=a("code"),dn=r("model(**inputs)"),cn=r(" \u306E\u4E2D\u3067\u554F\u984C\u304C\u767A\u751F\u3057\u305F\u884C\u3092\u6307\u3057\u3066\u3044\u308B\u3053\u3068\u304C\u5206\u304B\u308A\u307E\u3059\u3002Python\u30C7\u30D0\u30C3\u30AC\u3092\u4F7F\u3063\u3066\u30A4\u30F3\u30BF\u30E9\u30AF\u30C6\u30A3\u30D6\u306B\u30C7\u30D0\u30C3\u30B0\u3067\u304D\u307E\u3059\u304C\u3001\u4ECA\u306F\u5358\u306B "),Ut=a("code"),mn=r("inputs"),hn=r(" \u306E\u30B9\u30E9\u30A4\u30B9\u3092\u8868\u793A\u3057\u3066\u4F55\u304C\u3042\u308B\u304B\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),ao=u(),c(Ve.$$.fragment),lo=u(),c(Je.$$.fragment),po=u(),oe=a("p"),bn=r("\u3053\u308C\u306F\u78BA\u304B\u306B\u666E\u901A\u306EPython\u306E "),Kt=a("code"),gn=r("list"),wn=r(" \u306E\u3088\u3046\u306B\u898B\u3048\u307E\u3059\u304C\u3001\u518D\u78BA\u8A8D\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),uo=u(),c(We.$$.fragment),fo=u(),c(Ye.$$.fragment),_o=u(),j=a("p"),$n=r("\u3053\u308C\u306F\u78BA\u304B\u306BPython\u306E"),Zt=a("code"),kn=r("list"),vn=r("\u3067\u3059\u306D\u3002\u3067\u306F\u4F55\u304C\u3044\u3051\u306A\u304B\u3063\u305F\u306E\u304B\uFF1F"),gt=a("a"),qn=r("\u7B2C2\u7AE0"),En=r("\u3067\u3001\u{1F917} Transformers\u306E "),es=a("code"),yn=r("AutoModelForXxx"),jn=r(" \u30AF\u30E9\u30B9\u306F "),ts=a("em"),xn=r("tensor"),Pn=r(" (PyTorch \u307E\u305F\u306F TensorFlow \u306E\u3044\u305A\u308C\u304B)\u3092\u4F7F\u3044\u306A\u304C\u3089\u3001\u4F8B\u3048\u3070PyTorch\u306E "),ss=a("code"),An=r("Tensor.size()"),Cn=r("\u6A5F\u80FD\u3092\u547C\u3073\u51FA\u3057\u3066\u3044\u307E\u3059\u3002\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3092\u3082\u3046\u4E00\u5EA6\u898B\u3066\u3001\u3069\u306E\u884C\u3067\u4F8B\u5916\u304C\u767A\u751F\u3057\u305F\u304B\u3092\u78BA\u8A8D\u3057\u307E\u3057\u3087\u3046\u3002"),co=u(),c(Be.$$.fragment),mo=u(),z=a("p"),Dn=r("\u79C1\u305F\u3061\u306E\u30B3\u30FC\u30C9\u306F "),os=a("code"),On=r("input_ids.size()"),Tn=r(" \u3092\u547C\u3073\u51FA\u305D\u3046\u3068\u3057\u305F\u3088\u3046\u3067\u3059\u304C\u3001\u3053\u308C\u306F\u660E\u3089\u304B\u306BPython\u306E "),rs=a("code"),zn=r("list"),Sn=r(" \u306B\u5BFE\u3057\u3066\u52D5\u4F5C\u3057\u307E\u305B\u3093\u3002\u3069\u3046\u3059\u308C\u3070\u3053\u306E\u554F\u984C\u3092\u89E3\u6C7A\u3067\u304D\u308B\u3067\u3057\u3087\u3046\u304B\uFF1FStack Overflow\u3067\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u691C\u7D22\u3059\u308B\u3068\u3001\u95A2\u9023\u3059\u308B"),Xe=a("a"),In=r("\u30D2\u30F3\u30C8"),Hn=r(" \u304C\u304B\u306A\u308A\u898B\u3064\u304B\u308A\u307E\u3059\u3002"),ho=u(),Ue=a("div"),Ke=a("img"),bo=u(),re=a("p"),Gn=r("\u56DE\u7B54\u3067\u306F\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B "),ns=a("code"),Mn=r("return_tensors='pt'"),Nn=r(" \u3092\u8FFD\u52A0\u3059\u308B\u3053\u3068\u304C\u63A8\u5968\u3055\u308C\u3066\u3044\u308B\u306E\u3067\u3001\u3053\u308C\u304C\u3046\u307E\u304F\u3044\u304F\u304B\u3069\u3046\u304B\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),go=u(),c(Ze.$$.fragment),wo=u(),c(et.$$.fragment),$o=u(),ne=a("p"),Qn=r("Stack Overflow\u304C\u3044\u304B\u306B\u6709\u7528\u3067\u3042\u308B\u304B\u3092\u793A\u3059\u7D20\u6674\u3089\u3057\u3044\u4F8B\u3067\u3059\u3002\u540C\u69D8\u306E\u554F\u984C\u3092\u7279\u5B9A\u3059\u308B\u3053\u3068\u3067\u3001\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306E\u4ED6\u306E\u4EBA\u3005\u306E\u7D4C\u9A13\u304B\u3089\u6069\u6075\u3092\u53D7\u3051\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3057\u305F\u3002\u3057\u304B\u3057\u3001\u3053\u306E\u3088\u3046\u306A\u691C\u7D22\u3067\u306F\u3001\u5E38\u306B\u9069\u5207\u306A\u56DE\u7B54\u304C\u5F97\u3089\u308C\u308B\u3068\u306F\u9650\u308A\u307E\u305B\u3093\u3002\u3067\u306F\u3001\u3053\u306E\u3088\u3046\u306A\u5834\u5408\u3001\u3069\u3046\u3059\u308C\u3070\u3044\u3044\u306E\u3067\u3057\u3087\u3046\u304B\uFF1F\u5E78\u3044\u3001"),tt=a("a"),Rn=r("\u30CF\u30AE\u30F3\u30B0\u30D5\u30A7\u30A4\u30B9\u30D5\u30A9\u30FC\u30E9\u30E0\uFF08Hugging Face forums\uFF09"),Fn=r("\u306B\u306F\u3001\u958B\u767A\u8005\u305F\u3061\u306E\u6B53\u8FCE\u3059\u308B\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u304C\u3042\u308A\u3001\u3042\u306A\u305F\u3092\u52A9\u3051\u3066\u304F\u308C\u308B\u3067\u3057\u3087\u3046\u3002\u6B21\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u56DE\u7B54\u304C\u5F97\u3089\u308C\u308B\u53EF\u80FD\u6027\u306E\u9AD8\u3044\u3001\u826F\u3044\u30D5\u30A9\u30FC\u30E9\u30E0\u306E\u8CEA\u554F\u3092\u4F5C\u6210\u3059\u308B\u65B9\u6CD5\u3092\u898B\u3066\u3044\u304D\u307E\u3059\u3002"),this.h()},l(e){const o=ua('[data-svelte="svelte-1phssyn"]',document.head);d=l(o,"META",{name:!0,content:!0}),o.forEach(t),q=f(e),$=l(e,"H1",{id:!0});var is=p($);E=n(is,"\u30A8\u30E9\u30FC\u3092\u898B\u3064\u3051\u305F\u6642\u306B\u6700\u521D\u306B\u3059\u308B\u3053\u3068"),is.forEach(t),O=f(e),m(v.$$.fragment,e),x=f(e),P=l(e,"P",{});var st=p(P);H=n(st,"\u3053\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u65B0\u3057\u304F\u30C1\u30E5\u30FC\u30CB\u30F3\u30B0\u3055\u308C\u305FTransformer\u30E2\u30C7\u30EB\u304B\u3089\u4E88\u6E2C\u3092\u751F\u6210\u3057\u3088\u3046\u3068\u3059\u308B\u3068\u304D\u306B\u8D77\u3053\u308B\u4E8B\u304C\u3067\u304D\u308B\u3001\u3044\u304F\u3064\u304B\u306E\u4E00\u822C\u7684\u306A\u30A8\u30E9\u30FC\u306B\u3064\u3044\u3066\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002\u3053\u308C\u306F"),G=l(st,"A",{href:!0});var as=p(G);le=n(as,"\u30BB\u30AF\u30B7\u30E7\u30F34"),as.forEach(t),V=n(st,"\u306E\u6E96\u5099\u3068\u306A\u308A\u3001\u5B66\u7FD2\u6BB5\u968E\u3092\u30C7\u30D0\u30C3\u30B0\u3059\u308B\u65B9\u6CD5\u3092\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002"),st.forEach(t),A=f(e),m(M.$$.fragment,e),pe=f(e),D=l(e,"P",{});var wt=p(D);zo=n(wt,"\u3053\u306E\u7AE0\u306E\u70BA\u306B"),ue=l(wt,"A",{href:!0,rel:!0});var Zn=p(ue);So=n(Zn,"\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EC\u30DD\u30B8\u30C8\u30EA\u30FC"),Zn.forEach(t),Io=n(wt,"\u3092\u7528\u610F\u3057\u307E\u3057\u305F\u3002\u3053\u306E\u7AE0\u306E\u30B3\u30FC\u30C9\u3092\u5B9F\u884C\u3057\u305F\u3044\u5834\u5408\u306F\u3001\u307E\u305A\u30E2\u30C7\u30EB\u3092"),fe=l(wt,"A",{href:!0,rel:!0});var ei=p(fe);Ho=n(ei,"\u30CF\u30AE\u30F3\u30B0\u30D5\u30A7\u30A4\u30B9\u30CF\u30D6\uFF08Hugging Face Hub\uFF09"),ei.forEach(t),Go=n(wt,"\u306E\u30A2\u30AB\u30A6\u30F3\u30C8\u306B\u30B3\u30D4\u30FC\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u307E\u305AJupyterNotebook\u3067\u30ED\u30B0\u30A4\u30F3\u3057\u307E\u3057\u3087\u3046"),wt.forEach(t),ls=f(e),m(_e.$$.fragment,e),ps=f(e),ot=l(e,"P",{});var ti=p(ot);Mo=n(ti,"\u305D\u308C\u3068\u3082\u3001\u30BF\u30FC\u30DF\u30CA\u30EB\u3092\u4F7F\u3044\u306A\u304C\u3089:"),ti.forEach(t),us=f(e),m(de.$$.fragment,e),fs=f(e),Y=l(e,"P",{});var vo=p(Y);No=n(vo,"\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u5165\u529B\u3059\u308B\u753B\u9762\u304C\u8868\u793A\u3055\u308C\u307E\u3059\u3002Authentification token \u304C "),Et=l(vo,"EM",{});var si=p(Et);Qo=n(si,"~/.cache/huggingface/"),si.forEach(t),Ro=n(vo,"\u306E\u4E2D\u306B\u30BB\u30FC\u30D6\u3055\u308C\u307E\u3059\u3002\u30ED\u30B0\u30A4\u30F3\u3057\u305F\u5F8C\u306B\u4EE5\u4E0B\u306E\u6A5F\u80FD\u3067\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u30B3\u30D4\u30FC\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059"),vo.forEach(t),_s=f(e),m(ce.$$.fragment,e),ds=f(e),me=l(e,"P",{});var Ln=p(me);yt=l(Ln,"CODE",{});var oi=p(yt);Fo=n(oi,"copy_repository_template()"),oi.forEach(t),Lo=n(Ln,"\u6A5F\u80FD\u306F\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u30EC\u30DD\u30B8\u30C8\u30EA\u30FC\u3092\u30A2\u30AB\u30A6\u30F3\u30C8\u306B\u30B3\u30D4\u30FC\u3057\u307E\u3059\u3002"),Ln.forEach(t),cs=f(e),J=l(e,"H2",{class:!0});var qo=p(J);B=l(qo,"A",{id:!0,class:!0,href:!0});var ri=p(B);jt=l(ri,"SPAN",{});var ni=p(jt);m(he.$$.fragment,ni),ni.forEach(t),ri.forEach(t),Vo=f(qo),xt=l(qo,"SPAN",{});var ii=p(xt);Jo=n(ii,"\u{1F917} Transformers\u3000\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30B0"),ii.forEach(t),qo.forEach(t),ms=f(e),rt=l(e,"P",{});var ai=p(rt);Wo=n(ai,"Transformer\u30E2\u30C7\u30EB\u3068\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30C3\u30B0\u3068\u3044\u3046\u7D20\u6674\u3089\u3057\u3044\u4E16\u754C\u3078\u306E\u65C5\u3092\u59CB\u3081\u308B\u306B\u3042\u305F\u308A\u3001\u6B21\u306E\u3088\u3046\u306A\u30B7\u30CA\u30EA\u30AA\u3092\u8003\u3048\u3066\u307F\u307E\u3057\u3087\u3046\u3002\u3042\u306A\u305F\u306F\u540C\u50DA\u3068\u4E00\u7DD2\u306B\u3001\u3042\u308Be\u30B3\u30DE\u30FC\u30B9\u30B5\u30A4\u30C8\u306B\u95A2\u3059\u308B\u304A\u5BA2\u3055\u3093\u306E\u7B54\u3048\u3092\u898B\u3064\u3051\u3089\u308C\u308B\u3088\u3046\u306B\u3001\u2018Question Answering\u2019\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306B\u53D6\u308A\u7D44\u3093\u3067\u3044\u307E\u3059\u3002\u3042\u306A\u305F\u306E\u540C\u50DA\u306F\u3053\u3093\u306A\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u9001\u308A\u307E\u3057\u305F\u3002"),ai.forEach(t),hs=f(e),nt=l(e,"BLOCKQUOTE",{});var li=p(nt);Pt=l(li,"P",{});var pi=p(Pt);Yo=n(pi,"\u3069\u3046\u3082! \u5148\u307B\u3069\u3001\u3010\u7B2C7\u7AE0\u3011(/course/chapter7/7)\u3000\u306E\u30C6\u30AF\u30CB\u30C3\u30AF\u3092\u4F7F\u3063\u3066\u5B9F\u9A13\u3092\u3057\u305F\u3068\u3053\u308D\u3001SQuAD\u30C7\u30FC\u30BF\u30BB\u30C3\u30C8\u3067\u7D20\u6674\u3089\u3057\u3044\u7D50\u679C\u304C\u5F97\u3089\u308C\u307E\u3057\u305F!Hub\u4E0A\u306E\u30E2\u30C7\u30EBID\u306F\u201Dlewtun/distilbert-base-uncased-finetuned-squad-d5716d28\u201D\u3067\u3059\u3002\u3053\u306E\u30E2\u30C7\u30EB\u3092\u305C\u3072\u30C6\u30B9\u30C8\u3057\u3066\u307F\u307E\u3057\u3087\u3046!"),pi.forEach(t),li.forEach(t),bs=f(e),X=l(e,"P",{});var Eo=p(X);Bo=n(Eo,"\u3055\u3066\u3001\u{1F917} Transformers \u3067\u30E2\u30C7\u30EB\u3092\u30ED\u30FC\u30C9\u3059\u308B\u305F\u3081\u306B\u3000 "),At=l(Eo,"CODE",{});var ui=p(At);Xo=n(ui,"pipeline"),ui.forEach(t),Uo=n(Eo," \u3092\u4F7F\u3044\u307E\u3057\u3087\u3046\uFF01"),Eo.forEach(t),gs=f(e),m(be.$$.fragment,e),ws=f(e),m(ge.$$.fragment,e),$s=f(e),N=l(e,"P",{});var $t=p(N);Ko=n($t,"\u6B8B\u5FF5\uFF01\u3069\u3046\u3057\u3066\u3082\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002\u30D7\u30ED\u30B0\u30E9\u30DF\u30F3\u30B0\u304C\u521D\u3081\u3066\u306E\u65B9\u306F\u3053\u3093\u306A\u30E1\u30C3\u30BB\u30FC\u30B8\u306F\u6016\u305D\u3046\u306B\u898B\u3048\u307E\u3059\u3002("),Ct=l($t,"CODE",{});var fi=p(Ct);Zo=n(fi,"OSError"),fi.forEach(t),er=n($t,"\u306F\u4F55\uFF1F)\u3002\u3053\u306E\u3088\u3046\u306A\u30A8\u30E9\u30FC\u306F\u3001"),Dt=l($t,"EM",{});var _i=p(Dt);tr=n(_i,"Python traceback"),_i.forEach(t),sr=n($t," \u3068\u547C\u3070\u308C\u308B\u3001\u3088\u308A\u5927\u304D\u306A\u30A8\u30E9\u30FC\u30EC\u30DD\u30FC\u30C8\u306E\u6700\u5F8C\u306E\u90E8\u5206\u3067\u3059\u3002\u3053\u306E\u30A8\u30E9\u30FC\u306F\u3001Google Colab\u3067\u5B9F\u884C\u3057\u305F\u5834\u5408\u306B\u306F\u3001\u6B21\u306E\u3088\u3046\u306A\u753B\u50CF\u304C\u8868\u793A\u3055\u308C\u307E\u3059\u3002"),$t.forEach(t),ks=f(e),we=l(e,"DIV",{class:!0});var di=p(we);$e=l(di,"IMG",{src:!0,alt:!0,width:!0}),di.forEach(t),vs=f(e),Q=l(e,"P",{});var kt=p(Q);or=n(kt,"\u3053\u306E\u30EC\u30DD\u30FC\u30C8\u306B\u306F\u591A\u304F\u306E\u60C5\u5831\u304C\u542B\u307E\u308C\u3066\u3044\u308B\u306E\u3067\u3001\u4E3B\u8981\u306A\u90E8\u5206\u3092\u4E00\u7DD2\u306B\u898B\u3066\u3044\u304D\u307E\u3057\u3087\u3046\u3002\u307E\u305A\u6CE8\u610F\u3059\u3079\u304D\u306F\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306F\u4E0B\u304B\u3089\u4E0A\u3078\u8AAD\u3080\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uFF08\u65E5\u672C\u8A9E\u306E\u9006\u306E\u8AAD\u307F\u65B9\u3067\u3059\u306D\uFF01\uFF09\u3002\u3053\u308C\u306F\u3001\u30A8\u30E9\u30FC\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u304C\u3001\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3059\u308B\u3068\u304D\u306B "),Ot=l(kt,"CODE",{});var ci=p(Ot);rr=n(ci,"pipeline"),ci.forEach(t),nr=n(kt," \u304C\u884C\u3046\u4E00\u9023\u306E\u95A2\u6570\u547C\u3073\u51FA\u3057\u3092\u53CD\u6620\u3057\u3066\u3044\u307E\u3059\u3044\u307E\u3059\uFF08\u8A73\u3057\u304F\u306F"),it=l(kt,"A",{href:!0});var mi=p(it);ir=n(mi,"\u7B2C\uFF12\u7AE0"),mi.forEach(t),ar=n(kt,"\uFF09\u3092\u3054\u89A7\u4E0B\u3055\u3044\u3002"),kt.forEach(t),qs=f(e),m(U.$$.fragment,e),Es=f(e),R=l(e,"P",{});var vt=p(R);lr=n(vt,"\u3053\u308C\u306F\u3001\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u306E\u6700\u5F8C\u306E\u884C\u304C\u3001\u767A\u751F\u3057\u305F\u30A8\u30E9\u30FC\u306E\u540D\u524D\u3092\u4E0E\u3048\u308B\u3053\u3068\u3092\u3057\u307E\u3059\u3002\u30A8\u30E9\u30FC\u306E\u30BF\u30A4\u30D7\u306F "),Tt=l(vt,"CODE",{});var hi=p(Tt);pr=n(hi,"OSError"),hi.forEach(t),ur=n(vt," \u3067\u3001\u3053\u308C\u306F\u30B7\u30B9\u30C6\u30E0\u95A2\u9023\u306E\u30A8\u30E9\u30FC\u3092\u793A\u3057\u3066\u3044\u307E\u3059\u3002\u4ED8\u5C5E\u306E\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8AAD\u3080\u3068\u3001\u30E2\u30C7\u30EB\u306E "),zt=l(vt,"EM",{});var bi=p(zt);fr=n(bi,"config.json"),bi.forEach(t),_r=n(vt," \u30D5\u30A1\u30A4\u30EB\u306B\u554F\u984C\u304C\u3042\u308B\u3088\u3046\u3067\u3001\u305D\u308C\u3092\u4FEE\u6B63\u3059\u308B\u305F\u3081\u306E2\u3064\u306E\u63D0\u6848\u3092\u4E0E\u3048\u3089\u308C\u3066\u3044\u307E\u3059\u3002"),vt.forEach(t),ys=f(e),m(ke.$$.fragment,e),js=f(e),m(K.$$.fragment,e),xs=f(e),at=l(e,"P",{});var gi=p(at);dr=n(gi,"\u6700\u521D\u306E\u63D0\u6848\u306F\u3001\u30E2\u30C7\u30EBID\u304C\u5B9F\u969B\u306B\u6B63\u3057\u3044\u304B\u3069\u3046\u304B\u3092\u78BA\u8A8D\u3059\u308B\u3088\u3046\u6C42\u3081\u3066\u3044\u308B\u306E\u3067\u3001\u307E\u305A\u3001\u8B58\u5225\u5B50\u3092\u30B3\u30D4\u30FC\u3057\u3066Hub\u306E\u691C\u7D22\u30D0\u30FC\u306B\u8CBC\u308A\u4ED8\u3051\u307E\u3057\u3087\u3046\u3002"),gi.forEach(t),Ps=f(e),ve=l(e,"DIV",{class:!0});var wi=p(ve);qe=l(wi,"IMG",{src:!0,alt:!0,width:!0}),wi.forEach(t),As=f(e),lt=l(e,"P",{});var $i=p(lt);cr=n($i,"\u3046\u30FC\u3093\u3001\u78BA\u304B\u306B\u540C\u50DA\u306E\u30E2\u30C7\u30EB\u306F\u30CF\u30D6\u306B\u306A\u3044\u3088\u3046\u3060\u2026\u3057\u304B\u3057\u3001\u30E2\u30C7\u30EB\u306E\u540D\u524D\u306B\u30BF\u30A4\u30D7\u30DF\u30B9\u304C\u3042\u308B! DistilBERT\u306E\u540D\u524D\u306B\u306F\u300Cl\u300D\u304C1\u3064\u3057\u304B\u306A\u3044\u306E\u3067\u3001\u305D\u308C\u3092\u76F4\u3057\u3066\u3001\u4EE3\u308F\u308A\u306B\u300Clewtun/distilbert-base-uncased-finetuned-squad-d5716d28\u300D\u3092\u63A2\u305D\u3046\uFF01"),$i.forEach(t),Cs=f(e),Ee=l(e,"DIV",{class:!0});var ki=p(Ee);ye=l(ki,"IMG",{src:!0,alt:!0,width:!0}),ki.forEach(t),Ds=f(e),pt=l(e,"P",{});var vi=p(pt);mr=n(vi,"\u3055\u3066\u3001\u3053\u308C\u3067\u30D2\u30C3\u30C8\u3057\u307E\u3057\u305F\u3002\u3067\u306F\u3001\u6B63\u3057\u3044\u30E2\u30C7\u30EBID\u3067\u518D\u5EA6\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3092\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),vi.forEach(t),Os=f(e),m(je.$$.fragment,e),Ts=f(e),m(xe.$$.fragment,e),zs=f(e),F=l(e,"P",{});var qt=p(F);hr=n(qt,"\u3042\u3042\u3001\u307E\u305F\u5931\u6557\u3060\u3002\u6A5F\u68B0\u5B66\u7FD2\u30A8\u30F3\u30B8\u30CB\u30A2\u306E\u65E5\u5E38\u3078\u3088\u3046\u3053\u305D\uFF01 \u30E2\u30C7\u30EBID\u306F\u4FEE\u6B63\u3067\u304D\u305F\u306E\u3067\u3001\u554F\u984C\u306F\u30EA\u30DD\u30B8\u30C8\u30EA\u81EA\u4F53\u306B\u3042\u308B\u306F\u305A\u3067\u3059\u3002\u{1F917} Hub\u4E0A\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u5185\u5BB9\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u7C21\u5358\u306A\u65B9\u6CD5\u306F\u3001"),St=l(qt,"CODE",{});var qi=p(St);br=n(qi,"huggingface_hub"),qi.forEach(t),gr=n(qt,"\u30E9\u30A4\u30D6\u30E9\u30EA\u306E "),It=l(qt,"CODE",{});var Ei=p(It);wr=n(Ei,"list_repo_files()"),Ei.forEach(t),$r=n(qt," \u95A2\u6570\u3092\u4F7F\u7528\u3059\u308B\u3053\u3068\u3067\u3059\u3002"),qt.forEach(t),Ss=f(e),m(Pe.$$.fragment,e),Is=f(e),m(Ae.$$.fragment,e),Hs=f(e),y=l(e,"P",{});var S=p(y);kr=n(S,"\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u306F "),Ht=l(S,"EM",{});var yi=p(Ht);vr=n(yi,"config.json"),yi.forEach(t),qr=n(S," \u30D5\u30A1\u30A4\u30EB\u304C\u306A\u3044\u3088\u3046\u3067\u3059! \u3069\u3046\u308A\u3067 "),Gt=l(S,"CODE",{});var ji=p(Gt);Er=n(ji,"pipeline"),ji.forEach(t),yr=n(S," \u304C\u30E2\u30C7\u30EB\u3092\u8AAD\u307F\u8FBC\u3081\u306A\u3044\u308F\u3051\u3067\u3059\u3002\u540C\u50DA\u304C\u3053\u306E\u30D5\u30A1\u30A4\u30EB\u3092Hub\u306B\u30D7\u30C3\u30B7\u30E5\u3059\u308B\u306E\u3092\u5FD8\u308C\u305F\u306B\u9055\u3044\u3042\u308A\u307E\u305B\u3093\u3002\u3053\u306E\u5834\u5408\u3001\u554F\u984C\u3092\u89E3\u6C7A\u3059\u308B\u306E\u306F\u7C21\u5358\u3067\u3059\u3002\u30D5\u30A1\u30A4\u30EB\u3092\u8FFD\u52A0\u3059\u308B\u3088\u3046\u306B\u4F9D\u983C\u3059\u308B\u304B\u3001\u30E2\u30C7\u30EBID\u304B\u3089\u4F7F\u7528\u3055\u308C\u305F\u4E8B\u524D\u5B66\u7FD2\u6E08\u307F\u30E2\u30C7\u30EB\u304C"),Ce=l(S,"A",{href:!0,rel:!0});var xi=p(Ce);Mt=l(xi,"CODE",{});var Pi=p(Mt);jr=n(Pi,"distilbert-base-uncased"),Pi.forEach(t),xi.forEach(t),xr=n(S,"\u3067\u3042\u308B\u3053\u3068\u304C\u308F\u304B\u308B\u306E\u3067\u3001\u305D\u306E\u30E2\u30C7\u30EB\u306Econfig\uFF08\u8A2D\u5B9A\uFF09\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3057\u3001\u6211\u3005\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D7\u30C3\u30B7\u30E5\u3057\u3066\u554F\u984C\u304C\u89E3\u6C7A\u3059\u308B\u304B\u78BA\u8A8D\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u305D\u308C\u3067\u306F\u8A66\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),ut=l(S,"A",{href:!0});var Ai=p(ut);Pr=n(Ai,"\u7B2C2\u7AE0"),Ai.forEach(t),Ar=n(S,"\u3067\u5B66\u3093\u3060\u30C6\u30AF\u30CB\u30C3\u30AF\u3092\u4F7F\u3063\u3066\u3001"),Nt=l(S,"CODE",{});var Ci=p(Nt);Cr=n(Ci,"AutoConfig"),Ci.forEach(t),Dr=n(S,"\u30AF\u30E9\u30B9\u3067\u30E2\u30C7\u30EB\u306E\u8A2D\u5B9A\u3092\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),S.forEach(t),Gs=f(e),m(De.$$.fragment,e),Ms=f(e),m(Z.$$.fragment,e),Ns=f(e),ee=l(e,"P",{});var yo=p(ee);Or=n(yo,"\u305D\u308C\u3067"),Qt=l(yo,"CODE",{});var Di=p(Qt);Tr=n(Di,"push_to_hub()"),Di.forEach(t),zr=n(yo,"\u3000\u6A5F\u80FD\u3067\u30E2\u30C7\u30EB\u306E\u8A2D\u5B9A\u3092\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D7\u30C3\u30B7\u30E5\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),yo.forEach(t),Qs=f(e),m(Oe.$$.fragment,e),Rs=f(e),te=l(e,"P",{});var jo=p(te);Sr=n(jo,"\u305D\u3057\u3066\u306F\u3001\u6700\u65B0\u306E\u30B3\u30DF\u30C3\u30C8\u3092 "),Rt=l(jo,"CODE",{});var Oi=p(Rt);Ir=n(Oi,"main"),Oi.forEach(t),Hr=n(jo," \u30D6\u30E9\u30F3\u30C1\u304B\u3089\u8AAD\u307F\u8FBC\u3053\u3093\u3067\u307F\u307E\u3057\u3087\u3046\u3002"),jo.forEach(t),Fs=f(e),m(Te.$$.fragment,e),Ls=f(e),m(ze.$$.fragment,e),Vs=f(e),ft=l(e,"P",{});var Ti=p(ft);Gr=n(Ti,"\u3084\u3063\u305F\u306D\uFF01 \u3053\u308C\u3067\u3001\u304A\u75B2\u308C\u69D8\u3067\u3057\u305F\u3002\u4ECA\u307E\u3067\u306E\u3053\u3068\u3092\u4E00\u7DD2\u306B\u632F\u308A\u8FD4\u3063\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Ti.forEach(t),Js=f(e),T=l(e,"UL",{});var ie=p(T);Se=l(ie,"LI",{});var xo=p(Se);Mr=n(xo,"Python\u306E\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u306F\u3000"),Ft=l(xo,"STRONG",{});var zi=p(Ft);Nr=n(zi,"traceback"),zi.forEach(t),Qr=n(xo,"\u3000\u3068\u547C\u3070\u308C\u3001\u4E0B\u304B\u3089\u4E0A\u3078\u3068\u8AAD\u307F\u4E0A\u3052\u3089\u308C\u307E\u3059\u3002\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u306E\u6700\u5F8C\u306E\u884C\u306F\u4E00\u756A\u5FC5\u8981\u306A\u60C5\u5831\u3092\u542B\u3093\u3067\u3044\u307E\u3059\u3002"),xo.forEach(t),Rr=f(ie),Ie=l(ie,"LI",{});var Po=p(Ie);Fr=n(Po,"\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u8907\u96D1\u306A\u5834\u5408\u306F\u3001"),Lt=l(Po,"STRONG",{});var Si=p(Lt);Lr=n(Si,"traceback"),Si.forEach(t),Vr=n(Po,"\u3000\u3092\u8AAD\u307F\u4E0A\u3052\u306A\u304C\u3089\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u305F\u30BD\u30FC\u30B9\u30B3\u30FC\u30C9\u30D5\u30A1\u30A4\u30EB\u540D\u3084\u884C\u756A\u53F7\u3092\u6307\u5B9A\u3057\u3066\u3001\u30A8\u30E9\u30FC\u306E\u539F\u56E0\u3092\u8AAD\u307F\u53D6\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002"),Po.forEach(t),Jr=f(ie),Vt=l(ie,"LI",{});var Ii=p(Vt);Wr=n(Ii,"\u305D\u306E\u5834\u5408\u3067\u3082\u30C7\u30D0\u30B0\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u306A\u3044\u306A\u3089\u3001\u30A4\u30F3\u30BF\u30FC\u30CD\u30C3\u30C8\u4E0A\u306B\u3092\u691C\u7D22\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Ii.forEach(t),Yr=f(ie),_t=l(ie,"LI",{});var Vn=p(_t);Jt=l(Vn,"CODE",{});var Hi=p(Jt);Br=n(Hi,"huggingface_hub"),Hi.forEach(t),Xr=n(Vn," \u30E9\u30A4\u30D6\u30E9\u30EA\u306F\u3001Hub\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u4F7F\u7528\u3059\u308B\u305F\u3081\u4E00\u9023\u306E\u30C4\u30FC\u30EB\u3092\u63D0\u4F9B\u3057\u307E\u3059\u3002\u30C7\u30D0\u30C3\u30B0\u3059\u308B\u305F\u3081\u306B\u4F7F\u7528\u3067\u304D\u308B\u306E\u30C4\u30FC\u30EB\u3082\u542B\u3081\u3066\u3044\u307E\u3059\u3002"),Vn.forEach(t),ie.forEach(t),Ws=f(e),dt=l(e,"P",{});var Gi=p(dt);Ur=n(Gi,"\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30C3\u30B0\u65B9\u6CD5\u304C\u308F\u304B\u3063\u305F\u3068\u3053\u308D\u3067\u3001\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3067\u96E3\u3057\u3044\u4F8B\u3092\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Gi.forEach(t),Ys=f(e),He=l(e,"H2",{id:!0});var Mi=p(He);Kr=n(Mi,"\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3092\u30C7\u30D0\u30C3\u30B0"),Mi.forEach(t),Bs=f(e),se=l(e,"P",{});var Ao=p(se);Zr=n(Ao,"\u6642\u306B\u306F\u30E2\u30C7\u30EB\u306E\u30ED\u30B8\u30C3\u30C8\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\uFF08\u4F8B\u3048\u3070\u3001\u30AB\u30B9\u30BF\u30E0\u306A\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u3092\u4F7F\u3044\u305F\u3044\u5834\u5408\u3067\uFF09\u3002\u3053\u306E\u3088\u3046\u306A\u5834\u5408\u3001\u4F55\u304C\u554F\u984C\u306B\u306A\u308B\u304B\u3092\u77E5\u308B\u305F\u3081\u306B\u3001\u307E\u305A "),Wt=l(Ao,"CODE",{});var Ni=p(Wt);en=n(Ni,"pipeline"),Ni.forEach(t),tn=n(Ao," \u304B\u3089\u30E2\u30C7\u30EB\u3068\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u3092\u53D6\u5F97\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Ao.forEach(t),Xs=f(e),m(Ge.$$.fragment,e),Us=f(e),ct=l(e,"P",{});var Qi=p(ct);sn=n(Qi,"\u6B21\u306B\u5FC5\u8981\u306A\u306E\u306F\u3001\u304A\u6C17\u306B\u5165\u308A\u306E\u30D5\u30EC\u30FC\u30E0\u30EF\u30FC\u30AF\u304C\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u308B\u304B\u3069\u3046\u304B\u3068\u3044\u3046\u8CEA\u554F\u3067\u3059\u3002"),Qi.forEach(t),Ks=f(e),m(Me.$$.fragment,e),Zs=f(e),Ne=l(e,"P",{});var Jn=p(Ne);mt=l(Jn,"A",{href:!0});var Ri=p(mt);on=n(Ri,"\u7B2C7\u7AE0"),Ri.forEach(t),rn=n(Jn,"\u3067\u898B\u305F\u3088\u3046\u306B\u3001\u901A\u5E38\u5FC5\u8981\u306A\u30B9\u30C6\u30C3\u30D7\u306F\u3001\u5165\u529B\u306E\u30C8\u30FC\u30AF\u30F3\u3001\u958B\u59CB\u3068\u7D42\u4E86\u30C8\u30FC\u30AF\u30F3\u306E\u30ED\u30B8\u30C3\u30C8\u3001\u305D\u3057\u3066\u89E3\u7B54\u30B9\u30D1\u30F3\u306E\u30C7\u30B3\u30FC\u30C9\u3067\u3059\u3002"),Jn.forEach(t),eo=f(e),m(Qe.$$.fragment,e),to=f(e),m(Re.$$.fragment,e),so=f(e),ht=l(e,"P",{});var Fi=p(ht);nn=n(Fi,"\u304A\u3084\u304A\u3084\u3001\u3069\u3046\u3084\u3089\u30B3\u30FC\u30C9\u306B\u30D0\u30B0\u304C\u3042\u308B\u3088\u3046\u3067\u3059\u306D\u3002\u3067\u3082\u3001\u3061\u3087\u3063\u3068\u3057\u305F\u30C7\u30D0\u30C3\u30B0\u306F\u6016\u304F\u3042\u308A\u307E\u305B\u3093\u3002Python\u306E\u30C7\u30D0\u30C3\u30AC\u3092\u30CE\u30FC\u30C8\u30D6\u30C3\u30AF\u3067\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u308B\u306E\u3067\u3059\u3002"),Fi.forEach(t),oo=f(e),m(Fe.$$.fragment,e),ro=f(e),bt=l(e,"P",{});var Li=p(bt);an=n(Li,"\u305D\u308C\u3068\u3082\u3001\u30BF\u30FC\u30DF\u30CA\u30EB\u3067\u30C7\u30D0\u30C3\u30B0\u3092\u884C\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u3059:"),Li.forEach(t),no=f(e),m(Le.$$.fragment,e),io=f(e),C=l(e,"P",{});var L=p(C);ln=n(L,"\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8AAD\u3080\u3068\u3001 "),Yt=l(L,"CODE",{});var Vi=p(Yt);pn=n(Vi,"'list' object has no attribute 'size'"),Vi.forEach(t),un=n(L," \u3068\u3001 "),Bt=l(L,"CODE",{});var Ji=p(Bt);fn=n(Ji,"-->"),Ji.forEach(t),_n=n(L," \u77E2\u5370\u304C "),Xt=l(L,"CODE",{});var Wi=p(Xt);dn=n(Wi,"model(**inputs)"),Wi.forEach(t),cn=n(L," \u306E\u4E2D\u3067\u554F\u984C\u304C\u767A\u751F\u3057\u305F\u884C\u3092\u6307\u3057\u3066\u3044\u308B\u3053\u3068\u304C\u5206\u304B\u308A\u307E\u3059\u3002Python\u30C7\u30D0\u30C3\u30AC\u3092\u4F7F\u3063\u3066\u30A4\u30F3\u30BF\u30E9\u30AF\u30C6\u30A3\u30D6\u306B\u30C7\u30D0\u30C3\u30B0\u3067\u304D\u307E\u3059\u304C\u3001\u4ECA\u306F\u5358\u306B "),Ut=l(L,"CODE",{});var Yi=p(Ut);mn=n(Yi,"inputs"),Yi.forEach(t),hn=n(L," \u306E\u30B9\u30E9\u30A4\u30B9\u3092\u8868\u793A\u3057\u3066\u4F55\u304C\u3042\u308B\u304B\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),L.forEach(t),ao=f(e),m(Ve.$$.fragment,e),lo=f(e),m(Je.$$.fragment,e),po=f(e),oe=l(e,"P",{});var Co=p(oe);bn=n(Co,"\u3053\u308C\u306F\u78BA\u304B\u306B\u666E\u901A\u306EPython\u306E "),Kt=l(Co,"CODE",{});var Bi=p(Kt);gn=n(Bi,"list"),Bi.forEach(t),wn=n(Co," \u306E\u3088\u3046\u306B\u898B\u3048\u307E\u3059\u304C\u3001\u518D\u78BA\u8A8D\u3057\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Co.forEach(t),uo=f(e),m(We.$$.fragment,e),fo=f(e),m(Ye.$$.fragment,e),_o=f(e),j=l(e,"P",{});var I=p(j);$n=n(I,"\u3053\u308C\u306F\u78BA\u304B\u306BPython\u306E"),Zt=l(I,"CODE",{});var Xi=p(Zt);kn=n(Xi,"list"),Xi.forEach(t),vn=n(I,"\u3067\u3059\u306D\u3002\u3067\u306F\u4F55\u304C\u3044\u3051\u306A\u304B\u3063\u305F\u306E\u304B\uFF1F"),gt=l(I,"A",{href:!0});var Ui=p(gt);qn=n(Ui,"\u7B2C2\u7AE0"),Ui.forEach(t),En=n(I,"\u3067\u3001\u{1F917} Transformers\u306E "),es=l(I,"CODE",{});var Ki=p(es);yn=n(Ki,"AutoModelForXxx"),Ki.forEach(t),jn=n(I," \u30AF\u30E9\u30B9\u306F "),ts=l(I,"EM",{});var Zi=p(ts);xn=n(Zi,"tensor"),Zi.forEach(t),Pn=n(I," (PyTorch \u307E\u305F\u306F TensorFlow \u306E\u3044\u305A\u308C\u304B)\u3092\u4F7F\u3044\u306A\u304C\u3089\u3001\u4F8B\u3048\u3070PyTorch\u306E "),ss=l(I,"CODE",{});var ea=p(ss);An=n(ea,"Tensor.size()"),ea.forEach(t),Cn=n(I,"\u6A5F\u80FD\u3092\u547C\u3073\u51FA\u3057\u3066\u3044\u307E\u3059\u3002\u30C8\u30EC\u30FC\u30B9\u30D0\u30C3\u30AF\u3092\u3082\u3046\u4E00\u5EA6\u898B\u3066\u3001\u3069\u306E\u884C\u3067\u4F8B\u5916\u304C\u767A\u751F\u3057\u305F\u304B\u3092\u78BA\u8A8D\u3057\u307E\u3057\u3087\u3046\u3002"),I.forEach(t),co=f(e),m(Be.$$.fragment,e),mo=f(e),z=l(e,"P",{});var ae=p(z);Dn=n(ae,"\u79C1\u305F\u3061\u306E\u30B3\u30FC\u30C9\u306F "),os=l(ae,"CODE",{});var ta=p(os);On=n(ta,"input_ids.size()"),ta.forEach(t),Tn=n(ae," \u3092\u547C\u3073\u51FA\u305D\u3046\u3068\u3057\u305F\u3088\u3046\u3067\u3059\u304C\u3001\u3053\u308C\u306F\u660E\u3089\u304B\u306BPython\u306E "),rs=l(ae,"CODE",{});var sa=p(rs);zn=n(sa,"list"),sa.forEach(t),Sn=n(ae," \u306B\u5BFE\u3057\u3066\u52D5\u4F5C\u3057\u307E\u305B\u3093\u3002\u3069\u3046\u3059\u308C\u3070\u3053\u306E\u554F\u984C\u3092\u89E3\u6C7A\u3067\u304D\u308B\u3067\u3057\u3087\u3046\u304B\uFF1FStack Overflow\u3067\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u691C\u7D22\u3059\u308B\u3068\u3001\u95A2\u9023\u3059\u308B"),Xe=l(ae,"A",{href:!0,rel:!0});var oa=p(Xe);In=n(oa,"\u30D2\u30F3\u30C8"),oa.forEach(t),Hn=n(ae," \u304C\u304B\u306A\u308A\u898B\u3064\u304B\u308A\u307E\u3059\u3002"),ae.forEach(t),ho=f(e),Ue=l(e,"DIV",{class:!0});var ra=p(Ue);Ke=l(ra,"IMG",{src:!0,alt:!0,width:!0}),ra.forEach(t),bo=f(e),re=l(e,"P",{});var Do=p(re);Gn=n(Do,"\u56DE\u7B54\u3067\u306F\u3001\u30C8\u30FC\u30AF\u30CA\u30A4\u30B6\u30FC\u306B "),ns=l(Do,"CODE",{});var na=p(ns);Mn=n(na,"return_tensors='pt'"),na.forEach(t),Nn=n(Do," \u3092\u8FFD\u52A0\u3059\u308B\u3053\u3068\u304C\u63A8\u5968\u3055\u308C\u3066\u3044\u308B\u306E\u3067\u3001\u3053\u308C\u304C\u3046\u307E\u304F\u3044\u304F\u304B\u3069\u3046\u304B\u898B\u3066\u307F\u307E\u3057\u3087\u3046\u3002"),Do.forEach(t),go=f(e),m(Ze.$$.fragment,e),wo=f(e),m(et.$$.fragment,e),$o=f(e),ne=l(e,"P",{});var Oo=p(ne);Qn=n(Oo,"Stack Overflow\u304C\u3044\u304B\u306B\u6709\u7528\u3067\u3042\u308B\u304B\u3092\u793A\u3059\u7D20\u6674\u3089\u3057\u3044\u4F8B\u3067\u3059\u3002\u540C\u69D8\u306E\u554F\u984C\u3092\u7279\u5B9A\u3059\u308B\u3053\u3068\u3067\u3001\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u306E\u4ED6\u306E\u4EBA\u3005\u306E\u7D4C\u9A13\u304B\u3089\u6069\u6075\u3092\u53D7\u3051\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3057\u305F\u3002\u3057\u304B\u3057\u3001\u3053\u306E\u3088\u3046\u306A\u691C\u7D22\u3067\u306F\u3001\u5E38\u306B\u9069\u5207\u306A\u56DE\u7B54\u304C\u5F97\u3089\u308C\u308B\u3068\u306F\u9650\u308A\u307E\u305B\u3093\u3002\u3067\u306F\u3001\u3053\u306E\u3088\u3046\u306A\u5834\u5408\u3001\u3069\u3046\u3059\u308C\u3070\u3044\u3044\u306E\u3067\u3057\u3087\u3046\u304B\uFF1F\u5E78\u3044\u3001"),tt=l(Oo,"A",{href:!0,rel:!0});var ia=p(tt);Rn=n(ia,"\u30CF\u30AE\u30F3\u30B0\u30D5\u30A7\u30A4\u30B9\u30D5\u30A9\u30FC\u30E9\u30E0\uFF08Hugging Face forums\uFF09"),ia.forEach(t),Fn=n(Oo,"\u306B\u306F\u3001\u958B\u767A\u8005\u305F\u3061\u306E\u6B53\u8FCE\u3059\u308B\u30B3\u30DF\u30E5\u30CB\u30C6\u30A3\u304C\u3042\u308A\u3001\u3042\u306A\u305F\u3092\u52A9\u3051\u3066\u304F\u308C\u308B\u3067\u3057\u3087\u3046\u3002\u6B21\u306E\u30BB\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u56DE\u7B54\u304C\u5F97\u3089\u308C\u308B\u53EF\u80FD\u6027\u306E\u9AD8\u3044\u3001\u826F\u3044\u30D5\u30A9\u30FC\u30E9\u30E0\u306E\u8CEA\u554F\u3092\u4F5C\u6210\u3059\u308B\u65B9\u6CD5\u3092\u898B\u3066\u3044\u304D\u307E\u3059\u3002"),Oo.forEach(t),this.h()},h(){_(d,"name","hf:doc:metadata"),_(d,"content",JSON.stringify(ga)),_($,"id",""),_(G,"href","/course/chapter8/section4"),_(ue,"href","https://huggingface.co/lewtun/distilbert-base-uncased-finetuned-squad-d5716d28"),_(ue,"rel","nofollow"),_(fe,"href","https://huggingface.co"),_(fe,"rel","nofollow"),_(B,"id","transformers"),_(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(B,"href","#transformers"),_(J,"class","relative group"),To($e.src,Bn="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter8/traceback.png")||_($e,"src",Bn),_($e,"alt","A Python traceback."),_($e,"width","100%"),_(we,"class","flex justify-center"),_(it,"href","/course/chapter2"),To(qe.src,Xn="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter8/wrong-model-id.png")||_(qe,"src",Xn),_(qe,"alt","The wrong model name."),_(qe,"width","100%"),_(ve,"class","flex justify-center"),To(ye.src,Un="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter8/true-model-id.png")||_(ye,"src",Un),_(ye,"alt","The right model name."),_(ye,"width","100%"),_(Ee,"class","flex justify-center"),_(Ce,"href","https://huggingface.co/distilbert-base-uncased"),_(Ce,"rel","nofollow"),_(ut,"href","/course/chapter2"),_(He,"id",""),_(mt,"href","/course/chapter7"),_(gt,"href","/course/chapter2"),_(Xe,"href","https://stackoverflow.com/search?q=AttributeError%3A+%27list%27+object+has+no+attribute+%27size%27&s=c15ec54c-63cb-481d-a749-408920073e8f"),_(Xe,"rel","nofollow"),To(Ke.src,Kn="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter8/stack-overflow.png")||_(Ke,"src",Kn),_(Ke,"alt","An answer from Stack Overflow."),_(Ke,"width","100%"),_(Ue,"class","flex justify-center"),_(tt,"href","https://discuss.huggingface.co/"),_(tt,"rel","nofollow")},m(e,o){s(document.head,d),i(e,q,o),i(e,$,o),s($,E),i(e,O,o),h(v,e,o),i(e,x,o),i(e,P,o),s(P,H),s(P,G),s(G,le),s(P,V),i(e,A,o),h(M,e,o),i(e,pe,o),i(e,D,o),s(D,zo),s(D,ue),s(ue,So),s(D,Io),s(D,fe),s(fe,Ho),s(D,Go),i(e,ls,o),h(_e,e,o),i(e,ps,o),i(e,ot,o),s(ot,Mo),i(e,us,o),h(de,e,o),i(e,fs,o),i(e,Y,o),s(Y,No),s(Y,Et),s(Et,Qo),s(Y,Ro),i(e,_s,o),h(ce,e,o),i(e,ds,o),i(e,me,o),s(me,yt),s(yt,Fo),s(me,Lo),i(e,cs,o),i(e,J,o),s(J,B),s(B,jt),h(he,jt,null),s(J,Vo),s(J,xt),s(xt,Jo),i(e,ms,o),i(e,rt,o),s(rt,Wo),i(e,hs,o),i(e,nt,o),s(nt,Pt),s(Pt,Yo),i(e,bs,o),i(e,X,o),s(X,Bo),s(X,At),s(At,Xo),s(X,Uo),i(e,gs,o),h(be,e,o),i(e,ws,o),h(ge,e,o),i(e,$s,o),i(e,N,o),s(N,Ko),s(N,Ct),s(Ct,Zo),s(N,er),s(N,Dt),s(Dt,tr),s(N,sr),i(e,ks,o),i(e,we,o),s(we,$e),i(e,vs,o),i(e,Q,o),s(Q,or),s(Q,Ot),s(Ot,rr),s(Q,nr),s(Q,it),s(it,ir),s(Q,ar),i(e,qs,o),h(U,e,o),i(e,Es,o),i(e,R,o),s(R,lr),s(R,Tt),s(Tt,pr),s(R,ur),s(R,zt),s(zt,fr),s(R,_r),i(e,ys,o),h(ke,e,o),i(e,js,o),h(K,e,o),i(e,xs,o),i(e,at,o),s(at,dr),i(e,Ps,o),i(e,ve,o),s(ve,qe),i(e,As,o),i(e,lt,o),s(lt,cr),i(e,Cs,o),i(e,Ee,o),s(Ee,ye),i(e,Ds,o),i(e,pt,o),s(pt,mr),i(e,Os,o),h(je,e,o),i(e,Ts,o),h(xe,e,o),i(e,zs,o),i(e,F,o),s(F,hr),s(F,St),s(St,br),s(F,gr),s(F,It),s(It,wr),s(F,$r),i(e,Ss,o),h(Pe,e,o),i(e,Is,o),h(Ae,e,o),i(e,Hs,o),i(e,y,o),s(y,kr),s(y,Ht),s(Ht,vr),s(y,qr),s(y,Gt),s(Gt,Er),s(y,yr),s(y,Ce),s(Ce,Mt),s(Mt,jr),s(y,xr),s(y,ut),s(ut,Pr),s(y,Ar),s(y,Nt),s(Nt,Cr),s(y,Dr),i(e,Gs,o),h(De,e,o),i(e,Ms,o),h(Z,e,o),i(e,Ns,o),i(e,ee,o),s(ee,Or),s(ee,Qt),s(Qt,Tr),s(ee,zr),i(e,Qs,o),h(Oe,e,o),i(e,Rs,o),i(e,te,o),s(te,Sr),s(te,Rt),s(Rt,Ir),s(te,Hr),i(e,Fs,o),h(Te,e,o),i(e,Ls,o),h(ze,e,o),i(e,Vs,o),i(e,ft,o),s(ft,Gr),i(e,Js,o),i(e,T,o),s(T,Se),s(Se,Mr),s(Se,Ft),s(Ft,Nr),s(Se,Qr),s(T,Rr),s(T,Ie),s(Ie,Fr),s(Ie,Lt),s(Lt,Lr),s(Ie,Vr),s(T,Jr),s(T,Vt),s(Vt,Wr),s(T,Yr),s(T,_t),s(_t,Jt),s(Jt,Br),s(_t,Xr),i(e,Ws,o),i(e,dt,o),s(dt,Ur),i(e,Ys,o),i(e,He,o),s(He,Kr),i(e,Bs,o),i(e,se,o),s(se,Zr),s(se,Wt),s(Wt,en),s(se,tn),i(e,Xs,o),h(Ge,e,o),i(e,Us,o),i(e,ct,o),s(ct,sn),i(e,Ks,o),h(Me,e,o),i(e,Zs,o),i(e,Ne,o),s(Ne,mt),s(mt,on),s(Ne,rn),i(e,eo,o),h(Qe,e,o),i(e,to,o),h(Re,e,o),i(e,so,o),i(e,ht,o),s(ht,nn),i(e,oo,o),h(Fe,e,o),i(e,ro,o),i(e,bt,o),s(bt,an),i(e,no,o),h(Le,e,o),i(e,io,o),i(e,C,o),s(C,ln),s(C,Yt),s(Yt,pn),s(C,un),s(C,Bt),s(Bt,fn),s(C,_n),s(C,Xt),s(Xt,dn),s(C,cn),s(C,Ut),s(Ut,mn),s(C,hn),i(e,ao,o),h(Ve,e,o),i(e,lo,o),h(Je,e,o),i(e,po,o),i(e,oe,o),s(oe,bn),s(oe,Kt),s(Kt,gn),s(oe,wn),i(e,uo,o),h(We,e,o),i(e,fo,o),h(Ye,e,o),i(e,_o,o),i(e,j,o),s(j,$n),s(j,Zt),s(Zt,kn),s(j,vn),s(j,gt),s(gt,qn),s(j,En),s(j,es),s(es,yn),s(j,jn),s(j,ts),s(ts,xn),s(j,Pn),s(j,ss),s(ss,An),s(j,Cn),i(e,co,o),h(Be,e,o),i(e,mo,o),i(e,z,o),s(z,Dn),s(z,os),s(os,On),s(z,Tn),s(z,rs),s(rs,zn),s(z,Sn),s(z,Xe),s(Xe,In),s(z,Hn),i(e,ho,o),i(e,Ue,o),s(Ue,Ke),i(e,bo,o),i(e,re,o),s(re,Gn),s(re,ns),s(ns,Mn),s(re,Nn),i(e,go,o),h(Ze,e,o),i(e,wo,o),h(et,e,o),i(e,$o,o),i(e,ne,o),s(ne,Qn),s(ne,tt),s(tt,Rn),s(ne,Fn),ko=!0},p(e,[o]){const is={};o&2&&(is.$$scope={dirty:o,ctx:e}),U.$set(is);const st={};o&2&&(st.$$scope={dirty:o,ctx:e}),K.$set(st);const as={};o&2&&(as.$$scope={dirty:o,ctx:e}),Z.$set(as)},i(e){ko||(b(v.$$.fragment,e),b(M.$$.fragment,e),b(_e.$$.fragment,e),b(de.$$.fragment,e),b(ce.$$.fragment,e),b(he.$$.fragment,e),b(be.$$.fragment,e),b(ge.$$.fragment,e),b(U.$$.fragment,e),b(ke.$$.fragment,e),b(K.$$.fragment,e),b(je.$$.fragment,e),b(xe.$$.fragment,e),b(Pe.$$.fragment,e),b(Ae.$$.fragment,e),b(De.$$.fragment,e),b(Z.$$.fragment,e),b(Oe.$$.fragment,e),b(Te.$$.fragment,e),b(ze.$$.fragment,e),b(Ge.$$.fragment,e),b(Me.$$.fragment,e),b(Qe.$$.fragment,e),b(Re.$$.fragment,e),b(Fe.$$.fragment,e),b(Le.$$.fragment,e),b(Ve.$$.fragment,e),b(Je.$$.fragment,e),b(We.$$.fragment,e),b(Ye.$$.fragment,e),b(Be.$$.fragment,e),b(Ze.$$.fragment,e),b(et.$$.fragment,e),ko=!0)},o(e){g(v.$$.fragment,e),g(M.$$.fragment,e),g(_e.$$.fragment,e),g(de.$$.fragment,e),g(ce.$$.fragment,e),g(he.$$.fragment,e),g(be.$$.fragment,e),g(ge.$$.fragment,e),g(U.$$.fragment,e),g(ke.$$.fragment,e),g(K.$$.fragment,e),g(je.$$.fragment,e),g(xe.$$.fragment,e),g(Pe.$$.fragment,e),g(Ae.$$.fragment,e),g(De.$$.fragment,e),g(Z.$$.fragment,e),g(Oe.$$.fragment,e),g(Te.$$.fragment,e),g(ze.$$.fragment,e),g(Ge.$$.fragment,e),g(Me.$$.fragment,e),g(Qe.$$.fragment,e),g(Re.$$.fragment,e),g(Fe.$$.fragment,e),g(Le.$$.fragment,e),g(Ve.$$.fragment,e),g(Je.$$.fragment,e),g(We.$$.fragment,e),g(Ye.$$.fragment,e),g(Be.$$.fragment,e),g(Ze.$$.fragment,e),g(et.$$.fragment,e),ko=!1},d(e){t(d),e&&t(q),e&&t($),e&&t(O),w(v,e),e&&t(x),e&&t(P),e&&t(A),w(M,e),e&&t(pe),e&&t(D),e&&t(ls),w(_e,e),e&&t(ps),e&&t(ot),e&&t(us),w(de,e),e&&t(fs),e&&t(Y),e&&t(_s),w(ce,e),e&&t(ds),e&&t(me),e&&t(cs),e&&t(J),w(he),e&&t(ms),e&&t(rt),e&&t(hs),e&&t(nt),e&&t(bs),e&&t(X),e&&t(gs),w(be,e),e&&t(ws),w(ge,e),e&&t($s),e&&t(N),e&&t(ks),e&&t(we),e&&t(vs),e&&t(Q),e&&t(qs),w(U,e),e&&t(Es),e&&t(R),e&&t(ys),w(ke,e),e&&t(js),w(K,e),e&&t(xs),e&&t(at),e&&t(Ps),e&&t(ve),e&&t(As),e&&t(lt),e&&t(Cs),e&&t(Ee),e&&t(Ds),e&&t(pt),e&&t(Os),w(je,e),e&&t(Ts),w(xe,e),e&&t(zs),e&&t(F),e&&t(Ss),w(Pe,e),e&&t(Is),w(Ae,e),e&&t(Hs),e&&t(y),e&&t(Gs),w(De,e),e&&t(Ms),w(Z,e),e&&t(Ns),e&&t(ee),e&&t(Qs),w(Oe,e),e&&t(Rs),e&&t(te),e&&t(Fs),w(Te,e),e&&t(Ls),w(ze,e),e&&t(Vs),e&&t(ft),e&&t(Js),e&&t(T),e&&t(Ws),e&&t(dt),e&&t(Ys),e&&t(He),e&&t(Bs),e&&t(se),e&&t(Xs),w(Ge,e),e&&t(Us),e&&t(ct),e&&t(Ks),w(Me,e),e&&t(Zs),e&&t(Ne),e&&t(eo),w(Qe,e),e&&t(to),w(Re,e),e&&t(so),e&&t(ht),e&&t(oo),w(Fe,e),e&&t(ro),e&&t(bt),e&&t(no),w(Le,e),e&&t(io),e&&t(C),e&&t(ao),w(Ve,e),e&&t(lo),w(Je,e),e&&t(po),e&&t(oe),e&&t(uo),w(We,e),e&&t(fo),w(Ye,e),e&&t(_o),e&&t(j),e&&t(co),w(Be,e),e&&t(mo),e&&t(z),e&&t(ho),e&&t(Ue),e&&t(bo),e&&t(re),e&&t(go),w(Ze,e),e&&t(wo),w(et,e),e&&t($o),e&&t(ne)}}}const ga={local:"",sections:[{local:"transformers",title:"\u{1F917} Transformers\u3000\u30D1\u30A4\u30D7\u30E9\u30A4\u30F3\u306E\u30C7\u30D0\u30B0"},{local:"",title:"\u30E2\u30C7\u30EB\u306E\u30D5\u30A9\u30EF\u30FC\u30C9\u30D1\u30B9\u3092\u30C7\u30D0\u30C3\u30B0"}],title:"\u30A8\u30E9\u30FC\u3092\u898B\u3064\u3051\u305F\u6642\u306B\u6700\u521D\u306B\u3059\u308B\u3053\u3068"};function wa(W){return fa(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ya extends aa{constructor(d){super();la(this,d,wa,ba,pa,{})}}export{ya as default,ga as metadata};
