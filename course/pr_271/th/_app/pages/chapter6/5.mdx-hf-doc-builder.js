import{S as wr,i as vr,s as Er,e as r,k as u,w as j,t as p,M as yr,c as o,d as n,m as c,a as i,x as g,h as t,b as D,G as a,g as e,y as m,q as x,o as $,B as b,v as Pr}from"../../chunks/vendor-hf-doc-builder.js";import{T as mn}from"../../chunks/Tip-hf-doc-builder.js";import{Y as zr}from"../../chunks/Youtube-hf-doc-builder.js";import{I as ee}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as q}from"../../chunks/CodeBlock-hf-doc-builder.js";import{D as Tr}from"../../chunks/DocNotebookDropdown-hf-doc-builder.js";function Cr(O){let h,w;return{c(){h=r("p"),w=p("\u{1F4A1} \u0E1A\u0E17\u0E19\u0E35\u0E49\u0E08\u0E30\u0E1E\u0E39\u0E14\u0E16\u0E36\u0E07 BPE \u0E2D\u0E22\u0E48\u0E32\u0E07\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E08\u0E32\u0E30\u0E25\u0E36\u0E01\u0E16\u0E36\u0E07\u0E44\u0E1B\u0E16\u0E36\u0E07\u0E01\u0E32\u0E23 implement \u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E19\u0E35\u0E49 \u0E04\u0E38\u0E13\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E02\u0E49\u0E32\u0E21\u0E44\u0E1B\u0E15\u0E2D\u0E19\u0E17\u0E49\u0E32\u0E22\u0E44\u0E14\u0E49 \u0E16\u0E49\u0E32\u0E04\u0E38\u0E13\u0E2A\u0E19\u0E43\u0E08\u0E40\u0E1E\u0E35\u0E22\u0E07\u0E41\u0E04\u0E48\u0E20\u0E32\u0E1E\u0E23\u0E27\u0E21\u0E04\u0E23\u0E48\u0E32\u0E27\u0E46\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19")},l(f){h=o(f,"P",{});var k=i(h);w=t(k,"\u{1F4A1} \u0E1A\u0E17\u0E19\u0E35\u0E49\u0E08\u0E30\u0E1E\u0E39\u0E14\u0E16\u0E36\u0E07 BPE \u0E2D\u0E22\u0E48\u0E32\u0E07\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E08\u0E32\u0E30\u0E25\u0E36\u0E01\u0E16\u0E36\u0E07\u0E44\u0E1B\u0E16\u0E36\u0E07\u0E01\u0E32\u0E23 implement \u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E19\u0E35\u0E49 \u0E04\u0E38\u0E13\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E02\u0E49\u0E32\u0E21\u0E44\u0E1B\u0E15\u0E2D\u0E19\u0E17\u0E49\u0E32\u0E22\u0E44\u0E14\u0E49 \u0E16\u0E49\u0E32\u0E04\u0E38\u0E13\u0E2A\u0E19\u0E43\u0E08\u0E40\u0E1E\u0E35\u0E22\u0E07\u0E41\u0E04\u0E48\u0E20\u0E32\u0E1E\u0E23\u0E27\u0E21\u0E04\u0E23\u0E48\u0E32\u0E27\u0E46\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19"),k.forEach(n)},m(f,k){e(f,h,k),a(h,w)},d(f){f&&n(h)}}}function Dr(O){let h,w,f,k;return{c(){h=r("p"),w=p("Tokenizer \u0E02\u0E2D\u0E07 GPT-2 \u0E41\u0E25\u0E30 RoBERTa (\u0E0B\u0E36\u0E48\u0E07\u0E04\u0E48\u0E2D\u0E19\u0E02\u0E49\u0E32\u0E07\u0E04\u0E25\u0E49\u0E32\u0E22\u0E01\u0E31\u0E19) \u0E21\u0E35\u0E27\u0E34\u0E18\u0E35\u0E01\u0E32\u0E23\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E01\u0E31\u0E1A\u0E1B\u0E31\u0E0D\u0E2B\u0E32\u0E19\u0E35\u0E49\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E1B\u0E23\u0E30\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E20\u0E32\u0E1E \u0E21\u0E31\u0E19\u0E08\u0E30\u0E44\u0E21\u0E48\u0E21\u0E2D\u0E07\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E40\u0E1B\u0E47\u0E19 Unicode \u0E41\u0E15\u0E48\u0E08\u0E30\u0E21\u0E2D\u0E07\u0E27\u0E48\u0E32\u0E40\u0E1B\u0E47\u0E19 byte \u0E01\u0E32\u0E23\u0E17\u0E33\u0E41\u0E1A\u0E1A\u0E19\u0E35\u0E49\u0E17\u0E33\u0E43\u0E2B\u0E49 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19 \u0E21\u0E35\u0E02\u0E19\u0E32\u0E14\u0E17\u0E35\u0E48\u0E40\u0E25\u0E47\u0E01 (256) \u0E41\u0E15\u0E48\u0E22\u0E31\u0E07\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\u0E17\u0E38\u0E01\u0E46\u0E2A\u0E31\u0E0D\u0E25\u0E31\u0E01\u0E29\u0E13\u0E4C\u0E44\u0E14\u0E49 \u0E42\u0E14\u0E22\u0E44\u0E21\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E41\u0E1B\u0E25\u0E07\u0E2A\u0E31\u0E0D\u0E25\u0E31\u0E01\u0E29\u0E13\u0E4C\u0E1E\u0E34\u0E40\u0E28\u0E29\u0E15\u0E48\u0E32\u0E07\u0E46\u0E40\u0E1B\u0E47\u0E19 unknown token \u0E40\u0E17\u0E04\u0E19\u0E34\u0E04\u0E19\u0E35\u0E49\u0E40\u0E23\u0E35\u0E22\u0E01\u0E27\u0E48\u0E32 "),f=r("em"),k=p("byte-level BPE")},l(P){h=o(P,"P",{});var _=i(h);w=t(_,"Tokenizer \u0E02\u0E2D\u0E07 GPT-2 \u0E41\u0E25\u0E30 RoBERTa (\u0E0B\u0E36\u0E48\u0E07\u0E04\u0E48\u0E2D\u0E19\u0E02\u0E49\u0E32\u0E07\u0E04\u0E25\u0E49\u0E32\u0E22\u0E01\u0E31\u0E19) \u0E21\u0E35\u0E27\u0E34\u0E18\u0E35\u0E01\u0E32\u0E23\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E01\u0E31\u0E1A\u0E1B\u0E31\u0E0D\u0E2B\u0E32\u0E19\u0E35\u0E49\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E1B\u0E23\u0E30\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E20\u0E32\u0E1E \u0E21\u0E31\u0E19\u0E08\u0E30\u0E44\u0E21\u0E48\u0E21\u0E2D\u0E07\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E40\u0E1B\u0E47\u0E19 Unicode \u0E41\u0E15\u0E48\u0E08\u0E30\u0E21\u0E2D\u0E07\u0E27\u0E48\u0E32\u0E40\u0E1B\u0E47\u0E19 byte \u0E01\u0E32\u0E23\u0E17\u0E33\u0E41\u0E1A\u0E1A\u0E19\u0E35\u0E49\u0E17\u0E33\u0E43\u0E2B\u0E49 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19 \u0E21\u0E35\u0E02\u0E19\u0E32\u0E14\u0E17\u0E35\u0E48\u0E40\u0E25\u0E47\u0E01 (256) \u0E41\u0E15\u0E48\u0E22\u0E31\u0E07\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\u0E17\u0E38\u0E01\u0E46\u0E2A\u0E31\u0E0D\u0E25\u0E31\u0E01\u0E29\u0E13\u0E4C\u0E44\u0E14\u0E49 \u0E42\u0E14\u0E22\u0E44\u0E21\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E41\u0E1B\u0E25\u0E07\u0E2A\u0E31\u0E0D\u0E25\u0E31\u0E01\u0E29\u0E13\u0E4C\u0E1E\u0E34\u0E40\u0E28\u0E29\u0E15\u0E48\u0E32\u0E07\u0E46\u0E40\u0E1B\u0E47\u0E19 unknown token \u0E40\u0E17\u0E04\u0E19\u0E34\u0E04\u0E19\u0E35\u0E49\u0E40\u0E23\u0E35\u0E22\u0E01\u0E27\u0E48\u0E32 "),f=o(_,"EM",{});var E=i(f);k=t(E,"byte-level BPE"),E.forEach(n),_.forEach(n)},m(P,_){e(P,h,_),a(h,w),a(h,f),a(f,k)},d(P){P&&n(h)}}}function Or(O){let h,w,f,k,P;return{c(){h=r("p"),w=p("\u270F\uFE0F "),f=r("strong"),k=p("\u0E15\u0E32\u0E04\u0E38\u0E13\u0E41\u0E25\u0E49\u0E27!"),P=p(" \u0E04\u0E38\u0E13\u0E04\u0E34\u0E14\u0E27\u0E48\u0E32\u0E01\u0E0E merge \u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E04\u0E37\u0E2D\u0E2D\u0E30\u0E44\u0E23")},l(_){h=o(_,"P",{});var E=i(h);w=t(E,"\u270F\uFE0F "),f=o(E,"STRONG",{});var C=i(f);k=t(C,"\u0E15\u0E32\u0E04\u0E38\u0E13\u0E41\u0E25\u0E49\u0E27!"),C.forEach(n),P=t(E," \u0E04\u0E38\u0E13\u0E04\u0E34\u0E14\u0E27\u0E48\u0E32\u0E01\u0E0E merge \u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E04\u0E37\u0E2D\u0E2D\u0E30\u0E44\u0E23"),E.forEach(n)},m(_,E){e(_,h,E),a(h,w),a(h,f),a(f,k),a(h,P)},d(_){_&&n(h)}}}function Br(O){let h,w,f,k,P,_,E,C;return{c(){h=r("p"),w=p("\u270F\uFE0F "),f=r("strong"),k=p("\u0E15\u0E32\u0E04\u0E38\u0E13\u0E41\u0E25\u0E49\u0E27!"),P=p(" \u0E04\u0E38\u0E13\u0E04\u0E34\u0E14\u0E27\u0E48\u0E32\u0E04\u0E33\u0E27\u0E48\u0E32 "),_=r("code"),E=p('"unhug"'),C=p(" \u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E22\u0E01\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23")},l(S){h=o(S,"P",{});var B=i(h);w=t(B,"\u270F\uFE0F "),f=o(B,"STRONG",{});var H=i(f);k=t(H,"\u0E15\u0E32\u0E04\u0E38\u0E13\u0E41\u0E25\u0E49\u0E27!"),H.forEach(n),P=t(B," \u0E04\u0E38\u0E13\u0E04\u0E34\u0E14\u0E27\u0E48\u0E32\u0E04\u0E33\u0E27\u0E48\u0E32 "),_=o(B,"CODE",{});var ts=i(_);E=t(ts,'"unhug"'),ts.forEach(n),C=t(B," \u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E22\u0E01\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23"),B.forEach(n)},m(S,B){e(S,h,B),a(h,w),a(h,f),a(f,k),a(h,P),a(h,_),a(_,E),a(h,C)},d(S){S&&n(h)}}}function Nr(O){let h,w,f,k,P;return{c(){h=r("p"),w=p("\u{1F4A1} \u0E16\u0E49\u0E32\u0E04\u0E38\u0E13\u0E43\u0E0A\u0E49 "),f=r("code"),k=p("train_new_from_iterator()"),P=p(" \u0E01\u0E31\u0E1A corpus \u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19\u0E19\u0E35\u0E49 \u0E04\u0E38\u0E13\u0E08\u0E30\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49 vocabulary \u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19 \u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32\u0E2D\u0E32\u0E08\u0E08\u0E30\u0E21\u0E35\u0E2B\u0E25\u0E32\u0E22\u0E04\u0E39\u0E48 token \u0E17\u0E35\u0E48\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E2A\u0E39\u0E07\u0E2A\u0E38\u0E14\u0E40\u0E17\u0E48\u0E32\u0E01\u0E31\u0E19 \u0E43\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32 \u0E40\u0E23\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E04\u0E39\u0E48\u0E41\u0E23\u0E01\u0E17\u0E35\u0E48\u0E42\u0E04\u0E49\u0E14\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32\u0E2D\u0E48\u0E32\u0E19\u0E40\u0E08\u0E2D \u0E2A\u0E48\u0E27\u0E19 \u{1F917} Tokenizers library \u0E40\u0E25\u0E37\u0E2D\u0E01\u0E04\u0E39\u0E48\u0E41\u0E23\u0E01\u0E42\u0E14\u0E22\u0E40\u0E23\u0E35\u0E22\u0E07\u0E15\u0E32\u0E21 ID")},l(_){h=o(_,"P",{});var E=i(h);w=t(E,"\u{1F4A1} \u0E16\u0E49\u0E32\u0E04\u0E38\u0E13\u0E43\u0E0A\u0E49 "),f=o(E,"CODE",{});var C=i(f);k=t(C,"train_new_from_iterator()"),C.forEach(n),P=t(E," \u0E01\u0E31\u0E1A corpus \u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19\u0E19\u0E35\u0E49 \u0E04\u0E38\u0E13\u0E08\u0E30\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49 vocabulary \u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19 \u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32\u0E2D\u0E32\u0E08\u0E08\u0E30\u0E21\u0E35\u0E2B\u0E25\u0E32\u0E22\u0E04\u0E39\u0E48 token \u0E17\u0E35\u0E48\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E2A\u0E39\u0E07\u0E2A\u0E38\u0E14\u0E40\u0E17\u0E48\u0E32\u0E01\u0E31\u0E19 \u0E43\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32 \u0E40\u0E23\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E04\u0E39\u0E48\u0E41\u0E23\u0E01\u0E17\u0E35\u0E48\u0E42\u0E04\u0E49\u0E14\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32\u0E2D\u0E48\u0E32\u0E19\u0E40\u0E08\u0E2D \u0E2A\u0E48\u0E27\u0E19 \u{1F917} Tokenizers library \u0E40\u0E25\u0E37\u0E2D\u0E01\u0E04\u0E39\u0E48\u0E41\u0E23\u0E01\u0E42\u0E14\u0E22\u0E40\u0E23\u0E35\u0E22\u0E07\u0E15\u0E32\u0E21 ID"),E.forEach(n)},m(_,E){e(_,h,E),a(h,w),a(h,f),a(f,k),a(h,P)},d(_){_&&n(h)}}}function Ar(O){let h,w;return{c(){h=r("p"),w=p(`\u26A0\uFE0F \u0E01\u0E32\u0E23 implementation \u0E43\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32\u0E08\u0E30 return error \u0E16\u0E49\u0E32\u0E42\u0E1B\u0E23\u0E41\u0E01\u0E23\u0E21\u0E2D\u0E48\u0E32\u0E19\u0E40\u0E08\u0E2D\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E21\u0E35\u0E43\u0E19 vocabulary \u0E19\u0E31\u0E48\u0E19\u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32\u0E40\u0E23\u0E32\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E40\u0E02\u0E35\u0E22\u0E19\u0E42\u0E04\u0E49\u0E14\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E01\u0E31\u0E1A\u0E01\u0E23\u0E13\u0E35\u0E41\u0E1A\u0E1A\u0E19\u0E35\u0E49
\u0E43\u0E19 GPT-2 \u0E1B\u0E01\u0E15\u0E34\u0E08\u0E30\u0E44\u0E21\u0E48\u0E21\u0E35 unknown token \u0E41\u0E1A\u0E1A\u0E19\u0E35\u0E49 \u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32 \u0E16\u0E49\u0E32\u0E40\u0E23\u0E32\u0E43\u0E0A\u0E49 byte-level BPE \u0E40\u0E23\u0E32\u0E08\u0E30\u0E44\u0E21\u0E48\u0E21\u0E35\u0E17\u0E32\u0E07\u0E44\u0E14\u0E49\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48 unknown \u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\u0E01\u0E47\u0E15\u0E32\u0E21\u0E43\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32 \u0E40\u0E23\u0E32\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E43\u0E0A\u0E49\u0E17\u0E38\u0E01\u0E46 byte \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E2A\u0E23\u0E49\u0E32\u0E07 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19
\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\u0E01\u0E47\u0E15\u0E32\u0E21 \u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E19\u0E35\u0E49\u0E19\u0E31\u0E49\u0E19\u0E04\u0E48\u0E2D\u0E19\u0E02\u0E49\u0E32\u0E07\u0E25\u0E36\u0E01 \u0E40\u0E23\u0E32\u0E08\u0E36\u0E07\u0E08\u0E30\u0E44\u0E21\u0E48\u0E02\u0E2D\u0E1E\u0E39\u0E14\u0E16\u0E36\u0E07\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\u0E44\u0E1B\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E19\u0E35\u0E49`)},l(f){h=o(f,"P",{});var k=i(h);w=t(k,`\u26A0\uFE0F \u0E01\u0E32\u0E23 implementation \u0E43\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32\u0E08\u0E30 return error \u0E16\u0E49\u0E32\u0E42\u0E1B\u0E23\u0E41\u0E01\u0E23\u0E21\u0E2D\u0E48\u0E32\u0E19\u0E40\u0E08\u0E2D\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E21\u0E35\u0E43\u0E19 vocabulary \u0E19\u0E31\u0E48\u0E19\u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32\u0E40\u0E23\u0E32\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E40\u0E02\u0E35\u0E22\u0E19\u0E42\u0E04\u0E49\u0E14\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E01\u0E31\u0E1A\u0E01\u0E23\u0E13\u0E35\u0E41\u0E1A\u0E1A\u0E19\u0E35\u0E49
\u0E43\u0E19 GPT-2 \u0E1B\u0E01\u0E15\u0E34\u0E08\u0E30\u0E44\u0E21\u0E48\u0E21\u0E35 unknown token \u0E41\u0E1A\u0E1A\u0E19\u0E35\u0E49 \u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32 \u0E16\u0E49\u0E32\u0E40\u0E23\u0E32\u0E43\u0E0A\u0E49 byte-level BPE \u0E40\u0E23\u0E32\u0E08\u0E30\u0E44\u0E21\u0E48\u0E21\u0E35\u0E17\u0E32\u0E07\u0E44\u0E14\u0E49\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48 unknown \u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\u0E01\u0E47\u0E15\u0E32\u0E21\u0E43\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32 \u0E40\u0E23\u0E32\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E43\u0E0A\u0E49\u0E17\u0E38\u0E01\u0E46 byte \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E2A\u0E23\u0E49\u0E32\u0E07 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19
\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\u0E01\u0E47\u0E15\u0E32\u0E21 \u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E19\u0E35\u0E49\u0E19\u0E31\u0E49\u0E19\u0E04\u0E48\u0E2D\u0E19\u0E02\u0E49\u0E32\u0E07\u0E25\u0E36\u0E01 \u0E40\u0E23\u0E32\u0E08\u0E36\u0E07\u0E08\u0E30\u0E44\u0E21\u0E48\u0E02\u0E2D\u0E1E\u0E39\u0E14\u0E16\u0E36\u0E07\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\u0E44\u0E1B\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E19\u0E35\u0E49`),k.forEach(n)},m(f,k){e(f,h,k),a(h,w)},d(f){f&&n(h)}}}function Gr(O){let h,w,f,k,P,_,E,C,S,B,H,ts,Us,Vl,ja,es,ga,F,ma,rs,Ml,xa,Fs,Kl,$a,os,ba,V,Wl,xn,Yl,Jl,ka,Vs,Zl,qa,M,_a,K,Ql,$n,Xl,sp,da,Ms,np,wa,is,va,T,ap,bn,lp,pp,kn,tp,ep,qn,rp,op,_n,ip,up,dn,cp,hp,Ea,Ks,fp,ya,us,Pa,y,jp,wn,gp,mp,vn,xp,$p,En,bp,kp,yn,qp,_p,Pn,dp,wp,zn,vp,Ep,Tn,yp,Pp,Cn,zp,Tp,Dn,Cp,Dp,za,Ws,Op,Ta,cs,Ca,N,Bp,On,Np,Ap,Bn,Gp,Hp,Nn,Ip,Rp,Da,hs,Oa,I,Sp,An,Lp,Up,Gn,Fp,Vp,Ba,fs,Na,Ys,Mp,Aa,W,Ga,L,Y,Hn,js,Kp,In,Wp,Ha,Js,Yp,Ia,A,Rn,Jp,Zp,Sn,Qp,Xp,Ln,st,nt,Un,at,Ra,Zs,lt,Sa,gs,La,d,pt,Fn,tt,et,Vn,rt,ot,Mn,it,ut,Kn,ct,ht,Wn,ft,jt,Yn,gt,mt,Jn,xt,$t,Zn,bt,kt,Qn,qt,_t,Xn,dt,wt,sa,vt,Et,na,yt,Pt,Ua,J,Fa,U,Z,aa,ms,zt,la,Tt,Va,Qs,Ct,Ma,Xs,Dt,Ka,xs,Wa,Q,Ot,pa,Bt,Nt,Ya,$s,Ja,sn,At,Za,bs,Qa,ks,Xa,nn,Gt,sl,qs,nl,_s,al,X,Ht,ta,It,Rt,ll,ds,pl,an,St,tl,ws,el,ln,Lt,rl,vs,ol,pn,Ut,il,Es,ul,ys,cl,tn,Ft,hl,Ps,fl,zs,jl,R,Vt,ea,Mt,Kt,ra,Wt,Yt,gl,Ts,ml,ss,Jt,oa,Zt,Qt,xl,Cs,$l,en,Xt,bl,Ds,kl,Os,ql,rn,se,_l,Bs,dl,on,ne,wl,Ns,vl,As,El,un,ae,yl,Gs,Pl,Hs,zl,ns,Tl,cn,le,Cl,Is,Dl,hn,pe,Ol,Rs,Bl,Ss,Nl,as,Al,fn,te,Gl;return _=new ee({}),H=new Tr({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Google Colab",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/master/course/chapter6/section5.ipynb"},{label:"Aws Studio",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/master/course/chapter6/section5.ipynb"}]}}),es=new zr({props:{id:"HEikzVL-lZU"}}),F=new mn({props:{$$slots:{default:[Cr]},$$scope:{ctx:O}}}),os=new q({props:{code:'"hug", "pug", "pun", "bun", "hugs"',highlighted:'<span class="hljs-string">&quot;hug&quot;</span>, <span class="hljs-string">&quot;pug&quot;</span>, <span class="hljs-string">&quot;pun&quot;</span>, <span class="hljs-string">&quot;bun&quot;</span>, <span class="hljs-string">&quot;hugs&quot;</span>'}}),M=new mn({props:{$$slots:{default:[Dr]},$$scope:{ctx:O}}}),is=new q({props:{code:'("hug", 10), ("pug", 5), ("pun", 12), ("bun", 4), ("hugs", 5)',highlighted:'(<span class="hljs-string">&quot;hug&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span>)<span class="hljs-punctuation">,</span> (<span class="hljs-string">&quot;pug&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span>)<span class="hljs-punctuation">,</span> (<span class="hljs-string">&quot;pun&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">12</span>)<span class="hljs-punctuation">,</span> (<span class="hljs-string">&quot;bun&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span>)<span class="hljs-punctuation">,</span> (<span class="hljs-string">&quot;hugs&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span>)'}}),us=new q({props:{code:'("h" "u" "g", 10), ("p" "u" "g", 5), ("p" "u" "n", 12), ("b" "u" "n", 4), ("h" "u" "g" "s", 5)',highlighted:'(<span class="hljs-string">&quot;h&quot;</span> <span class="hljs-string">&quot;u&quot;</span> <span class="hljs-string">&quot;g&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span>)<span class="hljs-punctuation">,</span> (<span class="hljs-string">&quot;p&quot;</span> <span class="hljs-string">&quot;u&quot;</span> <span class="hljs-string">&quot;g&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span>)<span class="hljs-punctuation">,</span> (<span class="hljs-string">&quot;p&quot;</span> <span class="hljs-string">&quot;u&quot;</span> <span class="hljs-string">&quot;n&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">12</span>)<span class="hljs-punctuation">,</span> (<span class="hljs-string">&quot;b&quot;</span> <span class="hljs-string">&quot;u&quot;</span> <span class="hljs-string">&quot;n&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span>)<span class="hljs-punctuation">,</span> (<span class="hljs-string">&quot;h&quot;</span> <span class="hljs-string">&quot;u&quot;</span> <span class="hljs-string">&quot;g&quot;</span> <span class="hljs-string">&quot;s&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span>)'}}),cs=new q({props:{code:`Vocabulary: ["b", "g", "h", "n", "p", "s", "u", "ug"]
Corpus: ("h" "ug", 10), ("p" "ug", 5), ("p" "u" "n", 12), ("b" "u" "n", 4), ("h" "ug" "s", 5)`,highlighted:`<span class="hljs-symbol">Vocabulary:</span> [<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;ug&quot;</span>]
<span class="hljs-symbol">Corpus:</span> (<span class="hljs-string">&quot;h&quot;</span> <span class="hljs-string">&quot;ug&quot;</span>, <span class="hljs-number">10</span>), (<span class="hljs-string">&quot;p&quot;</span> <span class="hljs-string">&quot;ug&quot;</span>, <span class="hljs-number">5</span>), (<span class="hljs-string">&quot;p&quot;</span> <span class="hljs-string">&quot;u&quot;</span> <span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-number">12</span>), (<span class="hljs-string">&quot;b&quot;</span> <span class="hljs-string">&quot;u&quot;</span> <span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-number">4</span>), (<span class="hljs-string">&quot;h&quot;</span> <span class="hljs-string">&quot;ug&quot;</span> <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-number">5</span>)`}}),hs=new q({props:{code:`Vocabulary: ["b", "g", "h", "n", "p", "s", "u", "ug", "un"]
Corpus: ("h" "ug", 10), ("p" "ug", 5), ("p" "un", 12), ("b" "un", 4), ("h" "ug" "s", 5)`,highlighted:`<span class="hljs-symbol">Vocabulary:</span> [<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;ug&quot;</span>, <span class="hljs-string">&quot;un&quot;</span>]
<span class="hljs-symbol">Corpus:</span> (<span class="hljs-string">&quot;h&quot;</span> <span class="hljs-string">&quot;ug&quot;</span>, <span class="hljs-number">10</span>), (<span class="hljs-string">&quot;p&quot;</span> <span class="hljs-string">&quot;ug&quot;</span>, <span class="hljs-number">5</span>), (<span class="hljs-string">&quot;p&quot;</span> <span class="hljs-string">&quot;un&quot;</span>, <span class="hljs-number">12</span>), (<span class="hljs-string">&quot;b&quot;</span> <span class="hljs-string">&quot;un&quot;</span>, <span class="hljs-number">4</span>), (<span class="hljs-string">&quot;h&quot;</span> <span class="hljs-string">&quot;ug&quot;</span> <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-number">5</span>)`}}),fs=new q({props:{code:`Vocabulary: ["b", "g", "h", "n", "p", "s", "u", "ug", "un", "hug"]
Corpus: ("hug", 10), ("p" "ug", 5), ("p" "un", 12), ("b" "un", 4), ("hug" "s", 5)`,highlighted:`<span class="hljs-symbol">Vocabulary:</span> [<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;ug&quot;</span>, <span class="hljs-string">&quot;un&quot;</span>, <span class="hljs-string">&quot;hug&quot;</span>]
<span class="hljs-symbol">Corpus:</span> (<span class="hljs-string">&quot;hug&quot;</span>, <span class="hljs-number">10</span>), (<span class="hljs-string">&quot;p&quot;</span> <span class="hljs-string">&quot;ug&quot;</span>, <span class="hljs-number">5</span>), (<span class="hljs-string">&quot;p&quot;</span> <span class="hljs-string">&quot;un&quot;</span>, <span class="hljs-number">12</span>), (<span class="hljs-string">&quot;b&quot;</span> <span class="hljs-string">&quot;un&quot;</span>, <span class="hljs-number">4</span>), (<span class="hljs-string">&quot;hug&quot;</span> <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-number">5</span>)`}}),W=new mn({props:{$$slots:{default:[Or]},$$scope:{ctx:O}}}),js=new ee({}),gs=new q({props:{code:`("u", "g") -> "ug"
("u", "n") -> "un"
("h", "ug") -> "hug"`,highlighted:`<span class="hljs-function"><span class="hljs-params">(<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;g&quot;</span>)</span> -&gt;</span> <span class="hljs-string">&quot;ug&quot;</span>
<span class="hljs-function"><span class="hljs-params">(<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;n&quot;</span>)</span> -&gt;</span> <span class="hljs-string">&quot;un&quot;</span>
<span class="hljs-function"><span class="hljs-params">(<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;ug&quot;</span>)</span> -&gt;</span> <span class="hljs-string">&quot;hug&quot;</span>`}}),J=new mn({props:{$$slots:{default:[Br]},$$scope:{ctx:O}}}),ms=new ee({}),xs=new q({props:{code:`corpus = [
    "This is the Hugging Face course.",
    "This chapter is about tokenization.",
    "This section shows several tokenizer algorithms.",
    "Hopefully, you will be able to understand how they are trained and generate tokens.",
]`,highlighted:`corpus = [
    <span class="hljs-string">&quot;This is the Hugging Face course.&quot;</span>,
    <span class="hljs-string">&quot;This chapter is about tokenization.&quot;</span>,
    <span class="hljs-string">&quot;This section shows several tokenizer algorithms.&quot;</span>,
    <span class="hljs-string">&quot;Hopefully, you will be able to understand how they are trained and generate tokens.&quot;</span>,
]`}}),$s=new q({props:{code:"",highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoTokenizer

tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">&quot;gpt2&quot;</span>)`}}),bs=new q({props:{code:`

`,highlighted:`<span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> defaultdict

word_freqs = defaultdict(<span class="hljs-built_in">int</span>)

<span class="hljs-keyword">for</span> text <span class="hljs-keyword">in</span> corpus:
    words_with_offsets = tokenizer.backend_tokenizer.pre_tokenizer.pre_tokenize_str(text)
    new_words = [word <span class="hljs-keyword">for</span> word, offset <span class="hljs-keyword">in</span> words_with_offsets]
    <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> new_words:
        word_freqs[word] += <span class="hljs-number">1</span>

<span class="hljs-built_in">print</span>(word_freqs)`}}),ks=new q({props:{code:`defaultdict(int, {'This': 3, '\u0120is': 2, '\u0120the': 1, '\u0120Hugging': 1, '\u0120Face': 1, '\u0120Course': 1, '.': 4, '\u0120chapter': 1,
    '\u0120about': 1, '\u0120tokenization': 1, '\u0120section': 1, '\u0120shows': 1, '\u0120several': 1, '\u0120tokenizer': 1, '\u0120algorithms': 1,
    'Hopefully': 1, ',': 1, '\u0120you': 1, '\u0120will': 1, '\u0120be': 1, '\u0120able': 1, '\u0120to': 1, '\u0120understand': 1, '\u0120how': 1,
    '\u0120they': 1, '\u0120are': 1, '\u0120trained': 1, '\u0120and': 1, '\u0120generate': 1, '\u0120tokens': 1})`,highlighted:`defaultdict(<span class="hljs-built_in">int</span>, {<span class="hljs-string">&#x27;This&#x27;</span>: <span class="hljs-number">3</span>, <span class="hljs-string">&#x27;\u0120is&#x27;</span>: <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;\u0120the&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120Hugging&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120Face&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120Course&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;.&#x27;</span>: <span class="hljs-number">4</span>, <span class="hljs-string">&#x27;\u0120chapter&#x27;</span>: <span class="hljs-number">1</span>,
    <span class="hljs-string">&#x27;\u0120about&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120tokenization&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120section&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120shows&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120several&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120tokenizer&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120algorithms&#x27;</span>: <span class="hljs-number">1</span>,
    <span class="hljs-string">&#x27;Hopefully&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;,&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120you&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120will&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120be&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120able&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120to&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120understand&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120how&#x27;</span>: <span class="hljs-number">1</span>,
    <span class="hljs-string">&#x27;\u0120they&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120are&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120trained&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120and&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120generate&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;\u0120tokens&#x27;</span>: <span class="hljs-number">1</span>})`}}),qs=new q({props:{code:`
`,highlighted:`alphabet = []

<span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> word_freqs.keys():
    <span class="hljs-keyword">for</span> letter <span class="hljs-keyword">in</span> word:
        <span class="hljs-keyword">if</span> letter <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> alphabet:
            alphabet.append(letter)
alphabet.sort()

<span class="hljs-built_in">print</span>(alphabet)`}}),_s=new q({props:{code:`[ ',', '.', 'C', 'F', 'H', 'T', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's',
  't', 'u', 'v', 'w', 'y', 'z', '\u0120']`,highlighted:`[ <span class="hljs-string">&#x27;,&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-string">&#x27;H&#x27;</span>, <span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>, <span class="hljs-string">&#x27;h&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;k&#x27;</span>, <span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-string">&#x27;m&#x27;</span>, <span class="hljs-string">&#x27;n&#x27;</span>, <span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>,
  <span class="hljs-string">&#x27;t&#x27;</span>, <span class="hljs-string">&#x27;u&#x27;</span>, <span class="hljs-string">&#x27;v&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>, <span class="hljs-string">&#x27;z&#x27;</span>, <span class="hljs-string">&#x27;\u0120&#x27;</span>]`}}),ds=new q({props:{code:'vocab = ["<|endoftext|>"] + alphabet.copy()',highlighted:'vocab = [<span class="hljs-string">&quot;&lt;|endoftext|&gt;&quot;</span>] + alphabet.copy()'}}),ws=new q({props:{code:"splits = {word: [c for c in word] for word in word_freqs.keys()}",highlighted:'splits = {word: [c <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> word] <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> word_freqs.keys()}'}}),vs=new q({props:{code:`def compute_pair_freqs(splits):
    pair_freqs = defaultdict(int)
    for word, freq in word_freqs.items():
        split = splits[word]
        if len(split) == 1:
            continue
        for i in range(len(split) - 1):
            pair = (split[i], split[i + 1])
            pair_freqs[pair] += freq
    return pair_freqs`,highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">compute_pair_freqs</span>(<span class="hljs-params">splits</span>):
    pair_freqs = defaultdict(<span class="hljs-built_in">int</span>)
    <span class="hljs-keyword">for</span> word, freq <span class="hljs-keyword">in</span> word_freqs.items():
        split = splits[word]
        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(split) == <span class="hljs-number">1</span>:
            <span class="hljs-keyword">continue</span>
        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(split) - <span class="hljs-number">1</span>):
            pair = (split[i], split[i + <span class="hljs-number">1</span>])
            pair_freqs[pair] += freq
    <span class="hljs-keyword">return</span> pair_freqs`}}),Es=new q({props:{code:"",highlighted:`pair_freqs = compute_pair_freqs(splits)

<span class="hljs-keyword">for</span> i, key <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(pair_freqs.keys()):
    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{key}</span>: <span class="hljs-subst">{pair_freqs[key]}</span>&quot;</span>)
    <span class="hljs-keyword">if</span> i &gt;= <span class="hljs-number">5</span>:
        <span class="hljs-keyword">break</span>`}}),ys=new q({props:{code:`('T', 'h'): 3
('h', 'i'): 3
('i', 's'): 5
('\u0120', 'i'): 2
('\u0120', 't'): 7
('t', 'h'): 3`,highlighted:`(<span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;h&#x27;</span>): <span class="hljs-number">3</span>
(<span class="hljs-string">&#x27;h&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>): <span class="hljs-number">3</span>
(<span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>): <span class="hljs-number">5</span>
(<span class="hljs-string">&#x27;\u0120&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>): <span class="hljs-number">2</span>
(<span class="hljs-string">&#x27;\u0120&#x27;</span>, <span class="hljs-string">&#x27;t&#x27;</span>): <span class="hljs-number">7</span>
(<span class="hljs-string">&#x27;t&#x27;</span>, <span class="hljs-string">&#x27;h&#x27;</span>): <span class="hljs-number">3</span>`}}),Ps=new q({props:{code:`
`,highlighted:`best_pair = <span class="hljs-string">&quot;&quot;</span>
max_freq = <span class="hljs-literal">None</span>

<span class="hljs-keyword">for</span> pair, freq <span class="hljs-keyword">in</span> pair_freqs.items():
    <span class="hljs-keyword">if</span> max_freq <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> max_freq &lt; freq:
        best_pair = pair
        max_freq = freq

<span class="hljs-built_in">print</span>(best_pair, max_freq)`}}),zs=new q({props:{code:"('\u0120', 't') 7",highlighted:'(<span class="hljs-string">&#x27;\u0120&#x27;</span>, <span class="hljs-string">&#x27;t&#x27;</span>) <span class="hljs-number">7</span>'}}),Ts=new q({props:{code:`merges = {("\u0120", "t"): "\u0120t"}
vocab.append("\u0120t")`,highlighted:`merges = {(<span class="hljs-string">&quot;\u0120&quot;</span>, <span class="hljs-string">&quot;t&quot;</span>): <span class="hljs-string">&quot;\u0120t&quot;</span>}
vocab.append(<span class="hljs-string">&quot;\u0120t&quot;</span>)`}}),Cs=new q({props:{code:"",highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">merge_pair</span>(<span class="hljs-params">a, b, splits</span>):
    <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> word_freqs:
        split = splits[word]
        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(split) == <span class="hljs-number">1</span>:
            <span class="hljs-keyword">continue</span>

        i = <span class="hljs-number">0</span>
        <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(split) - <span class="hljs-number">1</span>:
            <span class="hljs-keyword">if</span> split[i] == a <span class="hljs-keyword">and</span> split[i + <span class="hljs-number">1</span>] == b:
                split = split[:i] + [a + b] + split[i + <span class="hljs-number">2</span> :]
            <span class="hljs-keyword">else</span>:
                i += <span class="hljs-number">1</span>
        splits[word] = split
    <span class="hljs-keyword">return</span> splits`}}),Ds=new q({props:{code:`splits = merge_pair("\u0120", "t", splits)
print(splits["\u0120trained"])`,highlighted:`splits = merge_pair(<span class="hljs-string">&quot;\u0120&quot;</span>, <span class="hljs-string">&quot;t&quot;</span>, splits)
<span class="hljs-built_in">print</span>(splits[<span class="hljs-string">&quot;\u0120trained&quot;</span>])`}}),Os=new q({props:{code:"['\u0120t', 'r', 'a', 'i', 'n', 'e', 'd']",highlighted:'[<span class="hljs-string">&#x27;\u0120t&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;n&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>]'}}),Bs=new q({props:{code:"",highlighted:`vocab_size = <span class="hljs-number">50</span>

<span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(vocab) &lt; vocab_size:
    pair_freqs = compute_pair_freqs(splits)
    best_pair = <span class="hljs-string">&quot;&quot;</span>
    max_freq = <span class="hljs-literal">None</span>
    <span class="hljs-keyword">for</span> pair, freq <span class="hljs-keyword">in</span> pair_freqs.items():
        <span class="hljs-keyword">if</span> max_freq <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> max_freq &lt; freq:
            best_pair = pair
            max_freq = freq
    splits = merge_pair(*best_pair, splits)
    merges[best_pair] = best_pair[<span class="hljs-number">0</span>] + best_pair[<span class="hljs-number">1</span>]
    vocab.append(best_pair[<span class="hljs-number">0</span>] + best_pair[<span class="hljs-number">1</span>])`}}),Ns=new q({props:{code:"print(merges)",highlighted:'<span class="hljs-built_in">print</span>(merges)'}}),As=new q({props:{code:`{('\u0120', 't'): '\u0120t', ('i', 's'): 'is', ('e', 'r'): 'er', ('\u0120', 'a'): '\u0120a', ('\u0120t', 'o'): '\u0120to', ('e', 'n'): 'en',
 ('T', 'h'): 'Th', ('Th', 'is'): 'This', ('o', 'u'): 'ou', ('s', 'e'): 'se', ('\u0120to', 'k'): '\u0120tok',
 ('\u0120tok', 'en'): '\u0120token', ('n', 'd'): 'nd', ('\u0120', 'is'): '\u0120is', ('\u0120t', 'h'): '\u0120th', ('\u0120th', 'e'): '\u0120the',
 ('i', 'n'): 'in', ('\u0120a', 'b'): '\u0120ab', ('\u0120token', 'i'): '\u0120tokeni'}`,highlighted:`{(<span class="hljs-string">&#x27;\u0120&#x27;</span>, <span class="hljs-string">&#x27;t&#x27;</span>): <span class="hljs-string">&#x27;\u0120t&#x27;</span>, (<span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>): <span class="hljs-string">&#x27;is&#x27;</span>, (<span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>): <span class="hljs-string">&#x27;er&#x27;</span>, (<span class="hljs-string">&#x27;\u0120&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>): <span class="hljs-string">&#x27;\u0120a&#x27;</span>, (<span class="hljs-string">&#x27;\u0120t&#x27;</span>, <span class="hljs-string">&#x27;o&#x27;</span>): <span class="hljs-string">&#x27;\u0120to&#x27;</span>, (<span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;n&#x27;</span>): <span class="hljs-string">&#x27;en&#x27;</span>,
 (<span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;h&#x27;</span>): <span class="hljs-string">&#x27;Th&#x27;</span>, (<span class="hljs-string">&#x27;Th&#x27;</span>, <span class="hljs-string">&#x27;is&#x27;</span>): <span class="hljs-string">&#x27;This&#x27;</span>, (<span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;u&#x27;</span>): <span class="hljs-string">&#x27;ou&#x27;</span>, (<span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>): <span class="hljs-string">&#x27;se&#x27;</span>, (<span class="hljs-string">&#x27;\u0120to&#x27;</span>, <span class="hljs-string">&#x27;k&#x27;</span>): <span class="hljs-string">&#x27;\u0120tok&#x27;</span>,
 (<span class="hljs-string">&#x27;\u0120tok&#x27;</span>, <span class="hljs-string">&#x27;en&#x27;</span>): <span class="hljs-string">&#x27;\u0120token&#x27;</span>, (<span class="hljs-string">&#x27;n&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>): <span class="hljs-string">&#x27;nd&#x27;</span>, (<span class="hljs-string">&#x27;\u0120&#x27;</span>, <span class="hljs-string">&#x27;is&#x27;</span>): <span class="hljs-string">&#x27;\u0120is&#x27;</span>, (<span class="hljs-string">&#x27;\u0120t&#x27;</span>, <span class="hljs-string">&#x27;h&#x27;</span>): <span class="hljs-string">&#x27;\u0120th&#x27;</span>, (<span class="hljs-string">&#x27;\u0120th&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>): <span class="hljs-string">&#x27;\u0120the&#x27;</span>,
 (<span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;n&#x27;</span>): <span class="hljs-string">&#x27;in&#x27;</span>, (<span class="hljs-string">&#x27;\u0120a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>): <span class="hljs-string">&#x27;\u0120ab&#x27;</span>, (<span class="hljs-string">&#x27;\u0120token&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>): <span class="hljs-string">&#x27;\u0120tokeni&#x27;</span>}`}}),Gs=new q({props:{code:"print(vocab)",highlighted:'<span class="hljs-built_in">print</span>(vocab)'}}),Hs=new q({props:{code:`['<|endoftext|>', ',', '.', 'C', 'F', 'H', 'T', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o',
 'p', 'r', 's', 't', 'u', 'v', 'w', 'y', 'z', '\u0120', '\u0120t', 'is', 'er', '\u0120a', '\u0120to', 'en', 'Th', 'This', 'ou', 'se',
 '\u0120tok', '\u0120token', 'nd', '\u0120is', '\u0120th', '\u0120the', 'in', '\u0120ab', '\u0120tokeni']`,highlighted:`[<span class="hljs-string">&#x27;&lt;|endoftext|&gt;&#x27;</span>, <span class="hljs-string">&#x27;,&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-string">&#x27;H&#x27;</span>, <span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>, <span class="hljs-string">&#x27;h&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;k&#x27;</span>, <span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-string">&#x27;m&#x27;</span>, <span class="hljs-string">&#x27;n&#x27;</span>, <span class="hljs-string">&#x27;o&#x27;</span>,
 <span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;t&#x27;</span>, <span class="hljs-string">&#x27;u&#x27;</span>, <span class="hljs-string">&#x27;v&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>, <span class="hljs-string">&#x27;z&#x27;</span>, <span class="hljs-string">&#x27;\u0120&#x27;</span>, <span class="hljs-string">&#x27;\u0120t&#x27;</span>, <span class="hljs-string">&#x27;is&#x27;</span>, <span class="hljs-string">&#x27;er&#x27;</span>, <span class="hljs-string">&#x27;\u0120a&#x27;</span>, <span class="hljs-string">&#x27;\u0120to&#x27;</span>, <span class="hljs-string">&#x27;en&#x27;</span>, <span class="hljs-string">&#x27;Th&#x27;</span>, <span class="hljs-string">&#x27;This&#x27;</span>, <span class="hljs-string">&#x27;ou&#x27;</span>, <span class="hljs-string">&#x27;se&#x27;</span>,
 <span class="hljs-string">&#x27;\u0120tok&#x27;</span>, <span class="hljs-string">&#x27;\u0120token&#x27;</span>, <span class="hljs-string">&#x27;nd&#x27;</span>, <span class="hljs-string">&#x27;\u0120is&#x27;</span>, <span class="hljs-string">&#x27;\u0120th&#x27;</span>, <span class="hljs-string">&#x27;\u0120the&#x27;</span>, <span class="hljs-string">&#x27;in&#x27;</span>, <span class="hljs-string">&#x27;\u0120ab&#x27;</span>, <span class="hljs-string">&#x27;\u0120tokeni&#x27;</span>]`}}),ns=new mn({props:{$$slots:{default:[Nr]},$$scope:{ctx:O}}}),Is=new q({props:{code:"",highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">tokenize</span>(<span class="hljs-params">text</span>):
    pre_tokenize_result = tokenizer._tokenizer.pre_tokenizer.pre_tokenize_str(text)
    pre_tokenized_text = [word <span class="hljs-keyword">for</span> word, offset <span class="hljs-keyword">in</span> pre_tokenize_result]
    splits = [[l <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> word] <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> pre_tokenized_text]
    <span class="hljs-keyword">for</span> pair, merge <span class="hljs-keyword">in</span> merges.items():
        <span class="hljs-keyword">for</span> idx, split <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(splits):
            i = <span class="hljs-number">0</span>
            <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(split) - <span class="hljs-number">1</span>:
                <span class="hljs-keyword">if</span> split[i] == pair[<span class="hljs-number">0</span>] <span class="hljs-keyword">and</span> split[i + <span class="hljs-number">1</span>] == pair[<span class="hljs-number">1</span>]:
                    split = split[:i] + [merge] + split[i + <span class="hljs-number">2</span> :]
                <span class="hljs-keyword">else</span>:
                    i += <span class="hljs-number">1</span>
            splits[idx] = split

    <span class="hljs-keyword">return</span> <span class="hljs-built_in">sum</span>(splits, [])`}}),Rs=new q({props:{code:'tokenize("This is not a token.")',highlighted:'tokenize(<span class="hljs-string">&quot;This is not a token.&quot;</span>)'}}),Ss=new q({props:{code:"['This', '\u0120is', '\u0120', 'n', 'o', 't', '\u0120a', '\u0120token', '.']",highlighted:'[<span class="hljs-string">&#x27;This&#x27;</span>, <span class="hljs-string">&#x27;\u0120is&#x27;</span>, <span class="hljs-string">&#x27;\u0120&#x27;</span>, <span class="hljs-string">&#x27;n&#x27;</span>, <span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;t&#x27;</span>, <span class="hljs-string">&#x27;\u0120a&#x27;</span>, <span class="hljs-string">&#x27;\u0120token&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>]'}}),as=new mn({props:{warning:!0,$$slots:{default:[Ar]},$$scope:{ctx:O}}}),{c(){h=r("meta"),w=u(),f=r("h1"),k=r("a"),P=r("span"),j(_.$$.fragment),E=u(),C=r("span"),S=p("Byte-Pair Encoding tokenization"),B=u(),j(H.$$.fragment),ts=u(),Us=r("p"),Vl=p("\u0E14\u0E31\u0E49\u0E07\u0E40\u0E14\u0E34\u0E21\u0E41\u0E25\u0E49\u0E27 Byte-Pair Encoding (BPE) \u0E40\u0E1B\u0E47\u0E19\u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E43\u0E0A\u0E49\u0E1A\u0E35\u0E1A\u0E2D\u0E31\u0E14\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E2B\u0E49\u0E40\u0E25\u0E47\u0E01\u0E25\u0E07 (compress texts) \u0E20\u0E32\u0E22\u0E2B\u0E25\u0E31\u0E07 OpenAI \u0E44\u0E14\u0E49\u0E19\u0E33\u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E19\u0E35\u0E49\u0E21\u0E32\u0E43\u0E0A\u0E49\u0E43\u0E19\u0E01\u0E32\u0E23\u0E15\u0E31\u0E14\u0E04\u0E33 \u0E43\u0E19\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E40\u0E15\u0E23\u0E35\u0E22\u0E21\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E40\u0E17\u0E23\u0E19 GPT \u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E15\u0E31\u0E27\u0E19\u0E35\u0E49\u0E22\u0E31\u0E07\u0E16\u0E39\u0E01\u0E19\u0E33\u0E21\u0E32\u0E43\u0E0A\u0E49\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E01\u0E27\u0E49\u0E32\u0E07\u0E02\u0E27\u0E32\u0E07\u0E01\u0E31\u0E1A\u0E42\u0E21\u0E40\u0E14\u0E25\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17 Transformer \u0E40\u0E0A\u0E48\u0E19 GPT, GPT-2, RoBERTa, BART, \u0E41\u0E25\u0E30 DeBERTa"),ja=u(),j(es.$$.fragment),ga=u(),j(F.$$.fragment),ma=u(),rs=r("h2"),Ml=p("\u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E17\u0E35\u0E48\u0E43\u0E0A\u0E49\u0E43\u0E19\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19"),xa=u(),Fs=r("p"),Kl=p("BPE \u0E40\u0E23\u0E34\u0E48\u0E21\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E14\u0E49\u0E27\u0E22\u0E01\u0E32\u0E23\u0E04\u0E33\u0E19\u0E27\u0E13\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E02\u0E2D\u0E07\u0E04\u0E33\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E04\u0E25\u0E31\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 (\u0E04\u0E25\u0E31\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E1C\u0E48\u0E32\u0E19\u0E01\u0E32\u0E23 normalization \u0E41\u0E25\u0E30 pre-tokenization \u0E21\u0E32\u0E41\u0E25\u0E49\u0E27) \u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E21\u0E31\u0E19\u0E08\u0E30\u0E40\u0E23\u0E34\u0E48\u0E21\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E0A\u0E38\u0E14\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C (vocabulary) \u0E08\u0E32\u0E01\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33 \u0E21\u0E32\u0E14\u0E39\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E07\u0E48\u0E32\u0E22\u0E46\u0E01\u0E31\u0E19 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E2A\u0E21\u0E21\u0E15\u0E34\u0E27\u0E48\u0E32\u0E04\u0E25\u0E31\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32\u0E21\u0E35\u0E40\u0E1E\u0E35\u0E22\u0E07\u0E2B\u0E49\u0E32\u0E04\u0E33\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19 :"),$a=u(),j(os.$$.fragment),ba=u(),V=r("p"),Wl=p("vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E0A\u0E38\u0E14\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E19\u0E35\u0E49\u0E04\u0E37\u0E2D "),xn=r("code"),Yl=p('["b", "g", "h", "n", "p", "s", "u"]'),Jl=p("  \u0E43\u0E19\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E08\u0E23\u0E34\u0E07 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E08\u0E30\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E14\u0E49\u0E27\u0E22\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 ASCII \u0E40\u0E1B\u0E47\u0E19\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E15\u0E48\u0E33 \u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E32\u0E08\u0E08\u0E30\u0E21\u0E35\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 Unicode \u0E44\u0E14\u0E49\u0E14\u0E49\u0E27\u0E22"),ka=u(),Vs=r("p"),Zl=p("\u0E16\u0E49\u0E32\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E2B\u0E21\u0E48\u0E17\u0E35\u0E48\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E08\u0E30\u0E15\u0E31\u0E14\u0E04\u0E33 \u0E21\u0E35\u0E2A\u0E31\u0E0D\u0E25\u0E31\u0E01\u0E29\u0E13\u0E4C\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19 training corpus \u0E2A\u0E31\u0E0D\u0E25\u0E31\u0E01\u0E29\u0E13\u0E4C\u0E1E\u0E27\u0E01\u0E19\u0E35\u0E49\u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E1B\u0E25\u0E07\u0E40\u0E1B\u0E47\u0E19 unknown token \u0E19\u0E35\u0E48\u0E40\u0E1B\u0E47\u0E19\u0E40\u0E2B\u0E15\u0E38\u0E1C\u0E25\u0E27\u0E48\u0E32\u0E17\u0E33\u0E44\u0E21\u0E42\u0E21\u0E40\u0E14\u0E25 NLP \u0E08\u0E36\u0E07\u0E1B\u0E23\u0E30\u0E21\u0E27\u0E25\u0E1C\u0E25\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E17\u0E35\u0E48\u0E21\u0E35\u0E2D\u0E35\u0E42\u0E21\u0E08\u0E34\u0E44\u0E14\u0E49\u0E44\u0E21\u0E48\u0E14\u0E35\u0E19\u0E31\u0E01"),qa=u(),j(M.$$.fragment),_a=u(),K=r("p"),Ql=p("\u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E2A\u0E23\u0E49\u0E32\u0E07 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E41\u0E25\u0E49\u0E27 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E1E\u0E34\u0E48\u0E21 token \u0E43\u0E2B\u0E21\u0E48\u0E46 \u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E08\u0E19\u0E27\u0E48\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49 vocabulary \u0E02\u0E19\u0E32\u0E14\u0E43\u0E2B\u0E0D\u0E48\u0E1E\u0E2D\u0E01\u0E31\u0E1A\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23 \u0E42\u0E14\u0E22\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E17\u0E23\u0E19 BPE \u0E43\u0E2B\u0E49\u0E40\u0E23\u0E35\u0E22\u0E19 \u0E01\u0E0E\u0E17\u0E35\u0E48\u0E40\u0E23\u0E35\u0E22\u0E01\u0E27\u0E48\u0E32 "),$n=r("em"),Xl=p("merges"),sp=p(` \u0E0B\u0E36\u0E48\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E01\u0E0E\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E23\u0E27\u0E21\u0E2A\u0E2D\u0E07\u0E2B\u0E19\u0E48\u0E27\u0E22\u0E43\u0E19 vocabulary \u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19
\u0E15\u0E2D\u0E19\u0E0A\u0E48\u0E27\u0E07\u0E40\u0E23\u0E34\u0E48\u0E21\u0E15\u0E49\u0E19 \u0E01\u0E0E merges \u0E1E\u0E27\u0E01\u0E19\u0E35\u0E49\u0E08\u0E30\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E14\u0E49\u0E27\u0E22\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E2A\u0E2D\u0E07\u0E15\u0E31\u0E27 \u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E40\u0E17\u0E23\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E40\u0E23\u0E37\u0E48\u0E2D\u0E22\u0E46 \u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E01\u0E47\u0E08\u0E30\u0E22\u0E32\u0E27\u0E02\u0E36\u0E49\u0E19
\u0E43\u0E19\u0E41\u0E15\u0E48\u0E25\u0E30\u0E23\u0E2D\u0E1A\u0E02\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19 BPE \u0E08\u0E30\u0E04\u0E33\u0E19\u0E27\u0E13\u0E2B\u0E32\u0E04\u0E39\u0E48\u0E02\u0E2D\u0E07\u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 (\u0E04\u0E39\u0E48\u0E02\u0E2D\u0E07\u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22 \u0E43\u0E19\u0E17\u0E35\u0E48\u0E19\u0E35\u0E49\u0E40\u0E23\u0E32\u0E2B\u0E21\u0E32\u0E22\u0E16\u0E36\u0E07 token \u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E15\u0E34\u0E14\u0E01\u0E31\u0E19)
\u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E21\u0E32\u0E01\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E08\u0E30\u0E16\u0E39\u0E01\u0E23\u0E27\u0E21\u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19 \u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E42\u0E21\u0E40\u0E14\u0E25\u0E08\u0E30\u0E17\u0E33\u0E41\u0E1A\u0E1A\u0E40\u0E14\u0E34\u0E21\u0E2D\u0E35\u0E01\u0E43\u0E19\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E23\u0E2D\u0E1A\u0E15\u0E48\u0E2D\u0E44\u0E1B`),da=u(),Ms=r("p"),np=p("\u0E01\u0E25\u0E31\u0E1A\u0E21\u0E32\u0E17\u0E35\u0E48\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32 \u0E2A\u0E21\u0E21\u0E15\u0E34\u0E27\u0E48\u0E32\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E14\u0E31\u0E07\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49 :"),wa=u(),j(is.$$.fragment),va=u(),T=r("p"),ap=p("\u0E0B\u0E36\u0E48\u0E07\u0E41\u0E1B\u0E25\u0E27\u0E48\u0E32 "),bn=r("code"),lp=p('"hug"'),pp=p(" \u0E1E\u0E1A 10 \u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19 corpus, "),kn=r("code"),tp=p('"pug"'),ep=p(" \u0E1E\u0E1A 5 \u0E04\u0E23\u0E31\u0E49\u0E07, "),qn=r("code"),rp=p('"pun"'),op=p(" \u0E1E\u0E1A 12 \u0E04\u0E23\u0E31\u0E49\u0E07, "),_n=r("code"),ip=p('"bun"'),up=p(" \u0E1E\u0E1A 4 \u0E04\u0E23\u0E31\u0E49\u0E07, \u0E41\u0E25\u0E30 "),dn=r("code"),cp=p('"hugs"'),hp=p(" \u0E1E\u0E1A 5 \u0E04\u0E23\u0E31\u0E49\u0E07"),Ea=u(),Ks=r("p"),fp=p("\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E23\u0E34\u0E48\u0E21\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19 \u0E42\u0E14\u0E22\u0E41\u0E22\u0E01\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E2D\u0E2D\u0E01\u0E40\u0E1B\u0E47\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 (\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E32\u0E08\u0E32\u0E01 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E21\u0E32\u0E01\u0E48\u0E2D\u0E19\u0E2B\u0E19\u0E49\u0E32\u0E19\u0E35\u0E49\u0E41\u0E25\u0E49\u0E27) \u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49\u0E04\u0E38\u0E13\u0E08\u0E30\u0E40\u0E2B\u0E47\u0E19\u0E27\u0E48\u0E32\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E16\u0E39\u0E01\u0E41\u0E1B\u0E25\u0E07\u0E40\u0E1B\u0E47\u0E19 list \u0E17\u0E35\u0E48\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E44\u0E1B\u0E14\u0E49\u0E27\u0E22\u0E2B\u0E25\u0E32\u0E22\u0E46 token"),ya=u(),j(us.$$.fragment),Pa=u(),y=r("p"),jp=p("\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E14\u0E39\u0E17\u0E35\u0E25\u0E30\u0E04\u0E39\u0E48 \u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E40\u0E0A\u0E48\u0E19 \u0E04\u0E39\u0E48 "),wn=r("code"),gp=p('("h", "u")'),mp=p(" \u0E0B\u0E36\u0E48\u0E07\u0E21\u0E32\u0E08\u0E32\u0E01\u0E04\u0E33\u0E27\u0E48\u0E32 "),vn=r("code"),xp=p('"hug"'),$p=p(" \u0E41\u0E25\u0E30 "),En=r("code"),bp=p('"hugs"'),kp=p(` \u0E41\u0E25\u0E30\u0E1E\u0E1A 15 \u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19 corpus
\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\u0E01\u0E47\u0E15\u0E32\u0E21 \u0E04\u0E39\u0E48\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 \u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E04\u0E37\u0E2D `),yn=r("code"),qp=p('("u", "g")'),_p=p(" \u0E0B\u0E36\u0E48\u0E07\u0E1E\u0E1A\u0E43\u0E19 \u0E04\u0E33\u0E27\u0E48\u0E32 "),Pn=r("code"),dp=p('"hug"'),wp=p(", "),zn=r("code"),vp=p('"pug"'),Ep=p(", \u0E41\u0E25\u0E30 "),Tn=r("code"),yp=p('"hugs"'),Pp=p(` \u0E0B\u0E36\u0E48\u0E07\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E23\u0E27\u0E21\u0E02\u0E2D\u0E07\u0E21\u0E31\u0E19\u0E04\u0E37\u0E2D 20 \u0E04\u0E23\u0E31\u0E49\u0E07
\u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19 \u0E01\u0E0E\u0E41\u0E23\u0E01\u0E02\u0E2D\u0E07\u0E01\u0E32\u0E23 merge \u0E17\u0E35\u0E48 tokenizer \u0E40\u0E23\u0E35\u0E22\u0E19\u0E04\u0E37\u0E2D `),Cn=r("code"),zp=p('("u", "g") -> "ug"'),Tp=p(" \u0E41\u0E1B\u0E25\u0E27\u0E48\u0E32\u0E21\u0E31\u0E19\u0E08\u0E30\u0E40\u0E1E\u0E34\u0E48\u0E21 "),Dn=r("code"),Cp=p('"ug"'),Dp=p(" \u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E43\u0E19 vocabulary \u0E41\u0E25\u0E30\u0E43\u0E19 corpus \u0E04\u0E39\u0E48\u0E19\u0E35\u0E49\u0E01\u0E47\u0E08\u0E30\u0E16\u0E39\u0E01\u0E23\u0E27\u0E21\u0E40\u0E1B\u0E47\u0E19 token \u0E40\u0E14\u0E35\u0E22\u0E27\u0E14\u0E49\u0E27\u0E22"),za=u(),Ws=r("p"),Op=p("\u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49 vocabulary \u0E41\u0E25\u0E30 corpus \u0E08\u0E30\u0E21\u0E35\u0E04\u0E48\u0E32\u0E14\u0E31\u0E07\u0E19\u0E35\u0E49 :"),Ta=u(),j(cs.$$.fragment),Ca=u(),N=r("p"),Bp=p("\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49 \u0E08\u0E30\u0E40\u0E2B\u0E47\u0E19\u0E27\u0E48\u0E32\u0E40\u0E23\u0E32\u0E21\u0E35\u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E40\u0E21\u0E37\u0E48\u0E2D\u0E23\u0E27\u0E21\u0E01\u0E31\u0E19\u0E08\u0E30\u0E44\u0E14\u0E49 token \u0E17\u0E35\u0E48\u0E22\u0E32\u0E27\u0E01\u0E27\u0E48\u0E32\u0E2A\u0E2D\u0E07\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 \u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E40\u0E0A\u0E48\u0E19 \u0E04\u0E39\u0E48 "),On=r("code"),Np=p('("h", "ug")'),Ap=p(` \u0E0B\u0E36\u0E48\u0E07\u0E1E\u0E1A 15 \u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19 corpus
\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\u0E01\u0E47\u0E15\u0E32\u0E21 \u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E04\u0E37\u0E2D `),Bn=r("code"),Gp=p('("u", "n")'),Hp=p(" \u0E0B\u0E36\u0E48\u0E07\u0E1E\u0E1A 16 \u0E04\u0E23\u0E31\u0E49\u0E07 \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E2A\u0E2D\u0E07\u0E01\u0E47\u0E04\u0E37\u0E2D "),Nn=r("code"),Ip=p('("u", "n") -> "un"'),Rp=p(" \u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E04\u0E39\u0E48\u0E19\u0E35\u0E49\u0E44\u0E1B\u0E43\u0E19 vocabulary \u0E41\u0E25\u0E30 merge token \u0E43\u0E19 corpus \u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19\u0E41\u0E25\u0E49\u0E27 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49 :"),Da=u(),j(hs.$$.fragment),Oa=u(),I=r("p"),Sp=p("\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49 \u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E04\u0E37\u0E2D "),An=r("code"),Lp=p('("h", "ug")'),Up=p(" \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E04\u0E37\u0E2D "),Gn=r("code"),Fp=p('("h", "ug") -> "hug"'),Vp=p(" \u0E0B\u0E36\u0E48\u0E07\u0E08\u0E30\u0E17\u0E33\u0E43\u0E2B\u0E49\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49 token \u0E17\u0E35\u0E48\u0E21\u0E35\u0E2A\u0E32\u0E21\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 \u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23 merge \u0E40\u0E23\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49 :"),Ba=u(),j(fs.$$.fragment),Na=u(),Ys=r("p"),Mp=p("\u0E40\u0E23\u0E32\u0E08\u0E30\u0E17\u0E33\u0E41\u0E1A\u0E1A\u0E19\u0E35\u0E49\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E40\u0E23\u0E37\u0E48\u0E2D\u0E22\u0E46 \u0E08\u0E19\u0E01\u0E27\u0E48\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49\u0E02\u0E19\u0E32\u0E14\u0E02\u0E2D\u0E07 vocabulary \u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23"),Aa=u(),j(W.$$.fragment),Ga=u(),L=r("h2"),Y=r("a"),Hn=r("span"),j(js.$$.fragment),Kp=u(),In=r("span"),Wp=p("Tokenization algorithm"),Ha=u(),Js=r("p"),Yp=p("\u0E01\u0E32\u0E23 tokenization \u0E40\u0E1B\u0E47\u0E19\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19 \u0E42\u0E14\u0E22 input \u0E43\u0E2B\u0E21\u0E48\u0E08\u0E30\u0E16\u0E39\u0E01 tokenize \u0E14\u0E49\u0E27\u0E22\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E14\u0E31\u0E07\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49"),Ia=u(),A=r("ol"),Rn=r("li"),Jp=p("Normalization (\u0E01\u0E32\u0E23\u0E1B\u0E23\u0E31\u0E1A\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E2B\u0E49\u0E40\u0E1B\u0E47\u0E19\u0E21\u0E32\u0E15\u0E23\u0E10\u0E32\u0E19)"),Zp=u(),Sn=r("li"),Qp=p("Pre-tokenization (\u0E01\u0E32\u0E23\u0E40\u0E15\u0E23\u0E35\u0E22\u0E21\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E2B\u0E49\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23 tokenize \u0E08\u0E23\u0E34\u0E07)"),Xp=u(),Ln=r("li"),st=p("\u0E41\u0E22\u0E01\u0E04\u0E33\u0E2D\u0E2D\u0E01\u0E40\u0E1B\u0E47\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E40\u0E14\u0E35\u0E48\u0E22\u0E27"),nt=u(),Un=r("li"),at=p("\u0E43\u0E0A\u0E49\u0E01\u0E0E merge \u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E23\u0E27\u0E21\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49\u0E08\u0E32\u0E01\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E01\u0E48\u0E2D\u0E19\u0E2B\u0E19\u0E49\u0E32"),Ra=u(),Zs=r("p"),lt=p("\u0E21\u0E32\u0E14\u0E39\u0E01\u0E0E\u0E2A\u0E32\u0E21\u0E15\u0E31\u0E27\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E01\u0E48\u0E2D\u0E19\u0E2B\u0E19\u0E49\u0E32\u0E19\u0E35\u0E49 :"),Sa=u(),j(gs.$$.fragment),La=u(),d=r("p"),pt=p("\u0E04\u0E33\u0E27\u0E48\u0E32"),Fn=r("code"),tt=p('"bug"'),et=p(" \u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E22\u0E01\u0E40\u0E1B\u0E47\u0E19 "),Vn=r("code"),rt=p('["b", "ug"]'),ot=p(" \u0E2A\u0E48\u0E27\u0E19\u0E04\u0E33\u0E27\u0E48\u0E32 "),Mn=r("code"),it=p('"mug"'),ut=p(" \u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E22\u0E01\u0E40\u0E1B\u0E47\u0E19 "),Kn=r("code"),ct=p('["[UNK]", "ug"]'),ht=p(" \u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32 "),Wn=r("code"),ft=p('"m"'),jt=p(` \u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19 vocabulary \u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32
\u0E49\u0E40\u0E0A\u0E48\u0E19\u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19 \u0E04\u0E33\u0E27\u0E48\u0E32 `),Yn=r("code"),gt=p('"thug"'),mt=p(" \u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E22\u0E01\u0E40\u0E1B\u0E47\u0E19 "),Jn=r("code"),xt=p('["[UNK]", "hug"]'),$t=p(" \u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32 "),Zn=r("code"),bt=p('"t"'),kt=p(" \u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19 vocabulary \u0E01\u0E0E\u0E41\u0E23\u0E01\u0E08\u0E30\u0E23\u0E27\u0E21 "),Qn=r("code"),qt=p('"u"'),_t=p(" \u0E41\u0E25\u0E30 "),Xn=r("code"),dt=p('"g"'),wt=p(" \u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19 \u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19 "),sa=r("code"),vt=p('"hu"'),Et=p(" \u0E41\u0E25\u0E30 "),na=r("code"),yt=p('"g"'),Pt=p(" \u0E01\u0E47\u0E08\u0E30\u0E16\u0E39\u0E01\u0E23\u0E27\u0E21\u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19"),Ua=u(),j(J.$$.fragment),Fa=u(),U=r("h2"),Z=r("a"),aa=r("span"),j(ms.$$.fragment),zt=u(),la=r("span"),Tt=p("\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07 BPE (Implementing BPE)"),Va=u(),Qs=r("p"),Ct=p("\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49\u0E40\u0E23\u0E32\u0E08\u0E30\u0E21\u0E32\u0E14\u0E39\u0E01\u0E31\u0E19\u0E27\u0E48\u0E32 \u0E04\u0E38\u0E13\u0E08\u0E30\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16 implement \u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21 BPE \u0E44\u0E14\u0E49\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23 \u0E2A\u0E34\u0E48\u0E07\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E23\u0E35\u0E22\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48 implementation \u0E17\u0E35\u0E48\u0E14\u0E35\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 \u0E40\u0E23\u0E32\u0E40\u0E1E\u0E35\u0E22\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E43\u0E2B\u0E49\u0E04\u0E38\u0E13\u0E40\u0E02\u0E49\u0E32\u0E43\u0E08\u0E42\u0E04\u0E49\u0E14\u0E41\u0E25\u0E30\u0E40\u0E02\u0E49\u0E32\u0E43\u0E08\u0E27\u0E48\u0E32 BPE \u0E17\u0E33\u0E07\u0E32\u0E19\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23"),Ma=u(),Xs=r("p"),Dt=p("\u0E2D\u0E31\u0E19\u0E14\u0E31\u0E1A\u0E41\u0E23\u0E01 \u0E40\u0E23\u0E32\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23 corpus \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E2A\u0E23\u0E49\u0E32\u0E07 corpus \u0E41\u0E1A\u0E1A\u0E07\u0E48\u0E32\u0E22\u0E46\u0E02\u0E36\u0E49\u0E19\u0E21\u0E32 \u0E42\u0E14\u0E22\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E44\u0E1B\u0E14\u0E49\u0E27\u0E22\u0E44\u0E21\u0E48\u0E01\u0E35\u0E48\u0E1B\u0E23\u0E30\u0E42\u0E22\u0E04 :"),Ka=u(),j(xs.$$.fragment),Wa=u(),Q=r("p"),Ot=p("\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E40\u0E23\u0E32\u0E08\u0E30\u0E17\u0E33\u0E01\u0E32\u0E23 pre-tokenize corpus \u0E19\u0E35\u0E49 \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E41\u0E22\u0E01\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2D\u0E2D\u0E01\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E33\u0E46 \u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01\u0E40\u0E23\u0E32\u0E08\u0E30\u0E2A\u0E23\u0E49\u0E32\u0E07 BPE tokenizer \u0E15\u0E32\u0E21\u0E15\u0E31\u0E27\u0E17\u0E35\u0E48\u0E43\u0E0A\u0E49\u0E43\u0E19 GPT-2 \u0E40\u0E23\u0E32\u0E08\u0E36\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E0A\u0E49 "),pa=r("code"),Bt=p("gpt2"),Nt=p(" tokenizer \u0E43\u0E19\u0E01\u0E32\u0E23 pre-tokenize"),Ya=u(),j($s.$$.fragment),Ja=u(),sn=r("p"),At=p("\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E40\u0E23\u0E32\u0E08\u0E30\u0E04\u0E33\u0E19\u0E27\u0E13\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E02\u0E2D\u0E07\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33:"),Za=u(),j(bs.$$.fragment),Qa=u(),j(ks.$$.fragment),Xa=u(),nn=r("p"),Gt=p("\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B \u0E04\u0E37\u0E2D\u0E01\u0E32\u0E23\u0E04\u0E33\u0E19\u0E27\u0E13 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19 \u0E0B\u0E36\u0E48\u0E07\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E08\u0E32\u0E01\u0E41\u0E15\u0E48\u0E25\u0E30\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E43\u0E19 corpus :"),sl=u(),j(qs.$$.fragment),nl=u(),j(_s.$$.fragment),al=u(),X=r("p"),Ht=p("\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E1E\u0E34\u0E48\u0E21 token \u0E1E\u0E34\u0E40\u0E28\u0E29\u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E43\u0E19\u0E02\u0E49\u0E32\u0E07\u0E2B\u0E19\u0E49\u0E32 list \u0E19\u0E35\u0E49\u0E14\u0E49\u0E27\u0E22 GPT-2 \u0E43\u0E0A\u0E49 token \u0E1E\u0E34\u0E40\u0E28\u0E29\u0E04\u0E37\u0E2D "),ta=r("code"),It=p('"<|endoftext|>"'),Rt=p(" :"),ll=u(),j(ds.$$.fragment),pl=u(),an=r("p"),St=p("\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E40\u0E23\u0E32\u0E08\u0E30\u0E41\u0E22\u0E01\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E43\u0E19 corpus \u0E43\u0E2B\u0E49\u0E40\u0E1B\u0E47\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49\u0E40\u0E23\u0E34\u0E48\u0E21\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19 :"),tl=u(),j(ws.$$.fragment),el=u(),ln=r("p"),Lt=p("\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49\u0E40\u0E23\u0E32\u0E01\u0E47\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E17\u0E35\u0E48\u0E08\u0E30\u0E40\u0E17\u0E23\u0E19\u0E41\u0E25\u0E49\u0E27 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E23\u0E34\u0E48\u0E21\u0E14\u0E49\u0E27\u0E22\u0E01\u0E32\u0E23\u0E40\u0E02\u0E35\u0E22\u0E19\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E19\u0E17\u0E35\u0E48\u0E04\u0E33\u0E19\u0E27\u0E13\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E02\u0E2D\u0E07\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E39\u0E48 token :"),rl=u(),j(vs.$$.fragment),ol=u(),pn=r("p"),Ut=p("\u0E21\u0E32\u0E14\u0E39\u0E2A\u0E48\u0E27\u0E19\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C (\u0E0B\u0E36\u0E48\u0E07\u0E40\u0E1B\u0E47\u0E19 dictionary) \u0E01\u0E31\u0E19 :"),il=u(),j(Es.$$.fragment),ul=u(),j(ys.$$.fragment),cl=u(),tn=r("p"),Ft=p("\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E40\u0E23\u0E32\u0E08\u0E30\u0E2B\u0E32\u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 \u0E0B\u0E36\u0E48\u0E07\u0E17\u0E33\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22\u0E46\u0E14\u0E31\u0E07\u0E19\u0E35\u0E49 :"),hl=u(),j(Ps.$$.fragment),fl=u(),j(zs.$$.fragment),jl=u(),R=r("p"),Vt=p("\u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19 \u0E01\u0E0E\u0E41\u0E23\u0E01\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49\u0E01\u0E47\u0E04\u0E37\u0E2D "),ea=r("code"),Mt=p("('\u0120', 't') -> '\u0120t'"),Kt=p(" \u0E41\u0E25\u0E30\u0E40\u0E23\u0E32\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E40\u0E1E\u0E34\u0E48\u0E21 "),ra=r("code"),Wt=p("'\u0120t'"),Yt=p(" \u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E43\u0E19 vocabulary :"),gl=u(),j(Ts.$$.fragment),ml=u(),ss=r("p"),Jt=p("\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E17\u0E33\u0E01\u0E32\u0E23 merge \u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19 dictionary "),oa=r("code"),Zt=p("splits"),Qt=p(" \u0E14\u0E49\u0E27\u0E22 \u0E42\u0E14\u0E22\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E02\u0E35\u0E22\u0E19\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49 :"),xl=u(),j(Cs.$$.fragment),$l=u(),en=r("p"),Xt=p("\u0E41\u0E25\u0E30\u0E19\u0E35\u0E48\u0E01\u0E47\u0E04\u0E37\u0E2D\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23 merge \u0E04\u0E23\u0E31\u0E49\u0E07\u0E41\u0E23\u0E01 :"),bl=u(),j(Ds.$$.fragment),kl=u(),j(Os.$$.fragment),ql=u(),rn=r("p"),se=p("\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49\u0E40\u0E23\u0E32\u0E01\u0E47\u0E21\u0E35\u0E17\u0E38\u0E01\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E41\u0E25\u0E49\u0E27 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E17\u0E23\u0E19\u0E08\u0E19\u0E01\u0E27\u0E48\u0E32\u0E02\u0E19\u0E32\u0E14\u0E02\u0E2D\u0E07 vocabulary \u0E08\u0E30\u0E40\u0E17\u0E48\u0E32\u0E01\u0E31\u0E1A 50 :"),_l=u(),j(Bs.$$.fragment),dl=u(),on=r("p"),ne=p("\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E04\u0E37\u0E2D tokenizer \u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49\u0E40\u0E23\u0E35\u0E22\u0E19 19 \u0E01\u0E0E (vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E21\u0E35 31 token \u0E0B\u0E36\u0E48\u0E07\u0E21\u0E32\u0E08\u0E32\u0E01\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E21\u0E35 30 \u0E15\u0E31\u0E27\u0E41\u0E25\u0E30 token \u0E1E\u0E34\u0E40\u0E28\u0E29\u0E2D\u0E35\u0E01\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E15\u0E31\u0E27) :"),wl=u(),j(Ns.$$.fragment),vl=u(),j(As.$$.fragment),El=u(),un=r("p"),ae=p("\u0E2A\u0E48\u0E27\u0E19 vocabulary \u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E08\u0E30\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E44\u0E1B\u0E14\u0E49\u0E27\u0E22 token \u0E1E\u0E34\u0E40\u0E28\u0E29, \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19, \u0E41\u0E25\u0E30\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23 merge \u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E23\u0E31\u0E49\u0E07 :"),yl=u(),j(Gs.$$.fragment),Pl=u(),j(Hs.$$.fragment),zl=u(),j(ns.$$.fragment),Tl=u(),cn=r("p"),le=p("\u0E2B\u0E32\u0E01\u0E40\u0E23\u0E32\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23 tokenize \u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E14\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2B\u0E19\u0E36\u0E48\u0E07 \u0E2A\u0E34\u0E48\u0E07\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E17\u0E33\u0E04\u0E37\u0E2D pre-tokenize \u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E08\u0E36\u0E07\u0E17\u0E33\u0E01\u0E32\u0E23 tokenize \u0E41\u0E25\u0E30\u0E2A\u0E38\u0E14\u0E17\u0E49\u0E32\u0E22 apply \u0E01\u0E0E merge :"),Cl=u(),j(Is.$$.fragment),Dl=u(),hn=r("p"),pe=p("\u0E04\u0E38\u0E13\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E17\u0E14\u0E25\u0E2D\u0E07\u0E42\u0E04\u0E49\u0E14\u0E19\u0E35\u0E49\u0E44\u0E14\u0E49\u0E01\u0E31\u0E1A\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E17\u0E38\u0E01\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21 \u0E17\u0E35\u0E48\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E44\u0E1B\u0E14\u0E49\u0E27\u0E22\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19 :"),Ol=u(),j(Rs.$$.fragment),Bl=u(),j(Ss.$$.fragment),Nl=u(),j(as.$$.fragment),Al=u(),fn=r("p"),te=p("\u0E19\u0E35\u0E48\u0E01\u0E47\u0E04\u0E37\u0E2D \u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21 BPE \u0E43\u0E19\u0E1A\u0E17\u0E15\u0E48\u0E2D\u0E44\u0E1B \u0E40\u0E23\u0E32\u0E08\u0E30\u0E21\u0E32\u0E14\u0E39 WordPiece \u0E01\u0E31\u0E19"),this.h()},l(s){const l=yr('[data-svelte="svelte-1phssyn"]',document.head);h=o(l,"META",{name:!0,content:!0}),l.forEach(n),w=c(s),f=o(s,"H1",{class:!0});var Ls=i(f);k=o(Ls,"A",{id:!0,class:!0,href:!0});var ia=i(k);P=o(ia,"SPAN",{});var ua=i(P);g(_.$$.fragment,ua),ua.forEach(n),ia.forEach(n),E=c(Ls),C=o(Ls,"SPAN",{});var ca=i(C);S=t(ca,"Byte-Pair Encoding tokenization"),ca.forEach(n),Ls.forEach(n),B=c(s),g(H.$$.fragment,s),ts=c(s),Us=o(s,"P",{});var ha=i(Us);Vl=t(ha,"\u0E14\u0E31\u0E49\u0E07\u0E40\u0E14\u0E34\u0E21\u0E41\u0E25\u0E49\u0E27 Byte-Pair Encoding (BPE) \u0E40\u0E1B\u0E47\u0E19\u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E43\u0E0A\u0E49\u0E1A\u0E35\u0E1A\u0E2D\u0E31\u0E14\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E2B\u0E49\u0E40\u0E25\u0E47\u0E01\u0E25\u0E07 (compress texts) \u0E20\u0E32\u0E22\u0E2B\u0E25\u0E31\u0E07 OpenAI \u0E44\u0E14\u0E49\u0E19\u0E33\u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E19\u0E35\u0E49\u0E21\u0E32\u0E43\u0E0A\u0E49\u0E43\u0E19\u0E01\u0E32\u0E23\u0E15\u0E31\u0E14\u0E04\u0E33 \u0E43\u0E19\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E40\u0E15\u0E23\u0E35\u0E22\u0E21\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E40\u0E17\u0E23\u0E19 GPT \u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E15\u0E31\u0E27\u0E19\u0E35\u0E49\u0E22\u0E31\u0E07\u0E16\u0E39\u0E01\u0E19\u0E33\u0E21\u0E32\u0E43\u0E0A\u0E49\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E01\u0E27\u0E49\u0E32\u0E07\u0E02\u0E27\u0E32\u0E07\u0E01\u0E31\u0E1A\u0E42\u0E21\u0E40\u0E14\u0E25\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17 Transformer \u0E40\u0E0A\u0E48\u0E19 GPT, GPT-2, RoBERTa, BART, \u0E41\u0E25\u0E30 DeBERTa"),ha.forEach(n),ja=c(s),g(es.$$.fragment,s),ga=c(s),g(F.$$.fragment,s),ma=c(s),rs=o(s,"H2",{id:!0});var fa=i(rs);Ml=t(fa,"\u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E17\u0E35\u0E48\u0E43\u0E0A\u0E49\u0E43\u0E19\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19"),fa.forEach(n),xa=c(s),Fs=o(s,"P",{});var re=i(Fs);Kl=t(re,"BPE \u0E40\u0E23\u0E34\u0E48\u0E21\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E14\u0E49\u0E27\u0E22\u0E01\u0E32\u0E23\u0E04\u0E33\u0E19\u0E27\u0E13\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E02\u0E2D\u0E07\u0E04\u0E33\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E04\u0E25\u0E31\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 (\u0E04\u0E25\u0E31\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E1C\u0E48\u0E32\u0E19\u0E01\u0E32\u0E23 normalization \u0E41\u0E25\u0E30 pre-tokenization \u0E21\u0E32\u0E41\u0E25\u0E49\u0E27) \u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E21\u0E31\u0E19\u0E08\u0E30\u0E40\u0E23\u0E34\u0E48\u0E21\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E0A\u0E38\u0E14\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C (vocabulary) \u0E08\u0E32\u0E01\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33 \u0E21\u0E32\u0E14\u0E39\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E07\u0E48\u0E32\u0E22\u0E46\u0E01\u0E31\u0E19 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E2A\u0E21\u0E21\u0E15\u0E34\u0E27\u0E48\u0E32\u0E04\u0E25\u0E31\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32\u0E21\u0E35\u0E40\u0E1E\u0E35\u0E22\u0E07\u0E2B\u0E49\u0E32\u0E04\u0E33\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19 :"),re.forEach(n),$a=c(s),g(os.$$.fragment,s),ba=c(s),V=o(s,"P",{});var Hl=i(V);Wl=t(Hl,"vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E0A\u0E38\u0E14\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E19\u0E35\u0E49\u0E04\u0E37\u0E2D "),xn=o(Hl,"CODE",{});var oe=i(xn);Yl=t(oe,'["b", "g", "h", "n", "p", "s", "u"]'),oe.forEach(n),Jl=t(Hl,"  \u0E43\u0E19\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E08\u0E23\u0E34\u0E07 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E08\u0E30\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E14\u0E49\u0E27\u0E22\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 ASCII \u0E40\u0E1B\u0E47\u0E19\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E15\u0E48\u0E33 \u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E32\u0E08\u0E08\u0E30\u0E21\u0E35\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 Unicode \u0E44\u0E14\u0E49\u0E14\u0E49\u0E27\u0E22"),Hl.forEach(n),ka=c(s),Vs=o(s,"P",{});var ie=i(Vs);Zl=t(ie,"\u0E16\u0E49\u0E32\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E2B\u0E21\u0E48\u0E17\u0E35\u0E48\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E08\u0E30\u0E15\u0E31\u0E14\u0E04\u0E33 \u0E21\u0E35\u0E2A\u0E31\u0E0D\u0E25\u0E31\u0E01\u0E29\u0E13\u0E4C\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19 training corpus \u0E2A\u0E31\u0E0D\u0E25\u0E31\u0E01\u0E29\u0E13\u0E4C\u0E1E\u0E27\u0E01\u0E19\u0E35\u0E49\u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E1B\u0E25\u0E07\u0E40\u0E1B\u0E47\u0E19 unknown token \u0E19\u0E35\u0E48\u0E40\u0E1B\u0E47\u0E19\u0E40\u0E2B\u0E15\u0E38\u0E1C\u0E25\u0E27\u0E48\u0E32\u0E17\u0E33\u0E44\u0E21\u0E42\u0E21\u0E40\u0E14\u0E25 NLP \u0E08\u0E36\u0E07\u0E1B\u0E23\u0E30\u0E21\u0E27\u0E25\u0E1C\u0E25\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E17\u0E35\u0E48\u0E21\u0E35\u0E2D\u0E35\u0E42\u0E21\u0E08\u0E34\u0E44\u0E14\u0E49\u0E44\u0E21\u0E48\u0E14\u0E35\u0E19\u0E31\u0E01"),ie.forEach(n),qa=c(s),g(M.$$.fragment,s),_a=c(s),K=o(s,"P",{});var Il=i(K);Ql=t(Il,"\u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E2A\u0E23\u0E49\u0E32\u0E07 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E41\u0E25\u0E49\u0E27 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E1E\u0E34\u0E48\u0E21 token \u0E43\u0E2B\u0E21\u0E48\u0E46 \u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E08\u0E19\u0E27\u0E48\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49 vocabulary \u0E02\u0E19\u0E32\u0E14\u0E43\u0E2B\u0E0D\u0E48\u0E1E\u0E2D\u0E01\u0E31\u0E1A\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23 \u0E42\u0E14\u0E22\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E17\u0E23\u0E19 BPE \u0E43\u0E2B\u0E49\u0E40\u0E23\u0E35\u0E22\u0E19 \u0E01\u0E0E\u0E17\u0E35\u0E48\u0E40\u0E23\u0E35\u0E22\u0E01\u0E27\u0E48\u0E32 "),$n=o(Il,"EM",{});var ue=i($n);Xl=t(ue,"merges"),ue.forEach(n),sp=t(Il,` \u0E0B\u0E36\u0E48\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E01\u0E0E\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E23\u0E27\u0E21\u0E2A\u0E2D\u0E07\u0E2B\u0E19\u0E48\u0E27\u0E22\u0E43\u0E19 vocabulary \u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19
\u0E15\u0E2D\u0E19\u0E0A\u0E48\u0E27\u0E07\u0E40\u0E23\u0E34\u0E48\u0E21\u0E15\u0E49\u0E19 \u0E01\u0E0E merges \u0E1E\u0E27\u0E01\u0E19\u0E35\u0E49\u0E08\u0E30\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E14\u0E49\u0E27\u0E22\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E2A\u0E2D\u0E07\u0E15\u0E31\u0E27 \u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E40\u0E17\u0E23\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E40\u0E23\u0E37\u0E48\u0E2D\u0E22\u0E46 \u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E01\u0E47\u0E08\u0E30\u0E22\u0E32\u0E27\u0E02\u0E36\u0E49\u0E19
\u0E43\u0E19\u0E41\u0E15\u0E48\u0E25\u0E30\u0E23\u0E2D\u0E1A\u0E02\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19 BPE \u0E08\u0E30\u0E04\u0E33\u0E19\u0E27\u0E13\u0E2B\u0E32\u0E04\u0E39\u0E48\u0E02\u0E2D\u0E07\u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 (\u0E04\u0E39\u0E48\u0E02\u0E2D\u0E07\u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22 \u0E43\u0E19\u0E17\u0E35\u0E48\u0E19\u0E35\u0E49\u0E40\u0E23\u0E32\u0E2B\u0E21\u0E32\u0E22\u0E16\u0E36\u0E07 token \u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E15\u0E34\u0E14\u0E01\u0E31\u0E19)
\u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E21\u0E32\u0E01\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E08\u0E30\u0E16\u0E39\u0E01\u0E23\u0E27\u0E21\u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19 \u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E42\u0E21\u0E40\u0E14\u0E25\u0E08\u0E30\u0E17\u0E33\u0E41\u0E1A\u0E1A\u0E40\u0E14\u0E34\u0E21\u0E2D\u0E35\u0E01\u0E43\u0E19\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E23\u0E2D\u0E1A\u0E15\u0E48\u0E2D\u0E44\u0E1B`),Il.forEach(n),da=c(s),Ms=o(s,"P",{});var ce=i(Ms);np=t(ce,"\u0E01\u0E25\u0E31\u0E1A\u0E21\u0E32\u0E17\u0E35\u0E48\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32 \u0E2A\u0E21\u0E21\u0E15\u0E34\u0E27\u0E48\u0E32\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E14\u0E31\u0E07\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49 :"),ce.forEach(n),wa=c(s),g(is.$$.fragment,s),va=c(s),T=o(s,"P",{});var G=i(T);ap=t(G,"\u0E0B\u0E36\u0E48\u0E07\u0E41\u0E1B\u0E25\u0E27\u0E48\u0E32 "),bn=o(G,"CODE",{});var he=i(bn);lp=t(he,'"hug"'),he.forEach(n),pp=t(G," \u0E1E\u0E1A 10 \u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19 corpus, "),kn=o(G,"CODE",{});var fe=i(kn);tp=t(fe,'"pug"'),fe.forEach(n),ep=t(G," \u0E1E\u0E1A 5 \u0E04\u0E23\u0E31\u0E49\u0E07, "),qn=o(G,"CODE",{});var je=i(qn);rp=t(je,'"pun"'),je.forEach(n),op=t(G," \u0E1E\u0E1A 12 \u0E04\u0E23\u0E31\u0E49\u0E07, "),_n=o(G,"CODE",{});var ge=i(_n);ip=t(ge,'"bun"'),ge.forEach(n),up=t(G," \u0E1E\u0E1A 4 \u0E04\u0E23\u0E31\u0E49\u0E07, \u0E41\u0E25\u0E30 "),dn=o(G,"CODE",{});var me=i(dn);cp=t(me,'"hugs"'),me.forEach(n),hp=t(G," \u0E1E\u0E1A 5 \u0E04\u0E23\u0E31\u0E49\u0E07"),G.forEach(n),Ea=c(s),Ks=o(s,"P",{});var xe=i(Ks);fp=t(xe,"\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E23\u0E34\u0E48\u0E21\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19 \u0E42\u0E14\u0E22\u0E41\u0E22\u0E01\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E2D\u0E2D\u0E01\u0E40\u0E1B\u0E47\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 (\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E32\u0E08\u0E32\u0E01 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E21\u0E32\u0E01\u0E48\u0E2D\u0E19\u0E2B\u0E19\u0E49\u0E32\u0E19\u0E35\u0E49\u0E41\u0E25\u0E49\u0E27) \u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49\u0E04\u0E38\u0E13\u0E08\u0E30\u0E40\u0E2B\u0E47\u0E19\u0E27\u0E48\u0E32\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E16\u0E39\u0E01\u0E41\u0E1B\u0E25\u0E07\u0E40\u0E1B\u0E47\u0E19 list \u0E17\u0E35\u0E48\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E44\u0E1B\u0E14\u0E49\u0E27\u0E22\u0E2B\u0E25\u0E32\u0E22\u0E46 token"),xe.forEach(n),ya=c(s),g(us.$$.fragment,s),Pa=c(s),y=o(s,"P",{});var z=i(y);jp=t(z,"\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E14\u0E39\u0E17\u0E35\u0E25\u0E30\u0E04\u0E39\u0E48 \u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E40\u0E0A\u0E48\u0E19 \u0E04\u0E39\u0E48 "),wn=o(z,"CODE",{});var $e=i(wn);gp=t($e,'("h", "u")'),$e.forEach(n),mp=t(z," \u0E0B\u0E36\u0E48\u0E07\u0E21\u0E32\u0E08\u0E32\u0E01\u0E04\u0E33\u0E27\u0E48\u0E32 "),vn=o(z,"CODE",{});var be=i(vn);xp=t(be,'"hug"'),be.forEach(n),$p=t(z," \u0E41\u0E25\u0E30 "),En=o(z,"CODE",{});var ke=i(En);bp=t(ke,'"hugs"'),ke.forEach(n),kp=t(z,` \u0E41\u0E25\u0E30\u0E1E\u0E1A 15 \u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19 corpus
\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\u0E01\u0E47\u0E15\u0E32\u0E21 \u0E04\u0E39\u0E48\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 \u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E04\u0E37\u0E2D `),yn=o(z,"CODE",{});var qe=i(yn);qp=t(qe,'("u", "g")'),qe.forEach(n),_p=t(z," \u0E0B\u0E36\u0E48\u0E07\u0E1E\u0E1A\u0E43\u0E19 \u0E04\u0E33\u0E27\u0E48\u0E32 "),Pn=o(z,"CODE",{});var _e=i(Pn);dp=t(_e,'"hug"'),_e.forEach(n),wp=t(z,", "),zn=o(z,"CODE",{});var de=i(zn);vp=t(de,'"pug"'),de.forEach(n),Ep=t(z,", \u0E41\u0E25\u0E30 "),Tn=o(z,"CODE",{});var we=i(Tn);yp=t(we,'"hugs"'),we.forEach(n),Pp=t(z,` \u0E0B\u0E36\u0E48\u0E07\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E23\u0E27\u0E21\u0E02\u0E2D\u0E07\u0E21\u0E31\u0E19\u0E04\u0E37\u0E2D 20 \u0E04\u0E23\u0E31\u0E49\u0E07
\u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19 \u0E01\u0E0E\u0E41\u0E23\u0E01\u0E02\u0E2D\u0E07\u0E01\u0E32\u0E23 merge \u0E17\u0E35\u0E48 tokenizer \u0E40\u0E23\u0E35\u0E22\u0E19\u0E04\u0E37\u0E2D `),Cn=o(z,"CODE",{});var ve=i(Cn);zp=t(ve,'("u", "g") -> "ug"'),ve.forEach(n),Tp=t(z," \u0E41\u0E1B\u0E25\u0E27\u0E48\u0E32\u0E21\u0E31\u0E19\u0E08\u0E30\u0E40\u0E1E\u0E34\u0E48\u0E21 "),Dn=o(z,"CODE",{});var Ee=i(Dn);Cp=t(Ee,'"ug"'),Ee.forEach(n),Dp=t(z," \u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E43\u0E19 vocabulary \u0E41\u0E25\u0E30\u0E43\u0E19 corpus \u0E04\u0E39\u0E48\u0E19\u0E35\u0E49\u0E01\u0E47\u0E08\u0E30\u0E16\u0E39\u0E01\u0E23\u0E27\u0E21\u0E40\u0E1B\u0E47\u0E19 token \u0E40\u0E14\u0E35\u0E22\u0E27\u0E14\u0E49\u0E27\u0E22"),z.forEach(n),za=c(s),Ws=o(s,"P",{});var ye=i(Ws);Op=t(ye,"\u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49 vocabulary \u0E41\u0E25\u0E30 corpus \u0E08\u0E30\u0E21\u0E35\u0E04\u0E48\u0E32\u0E14\u0E31\u0E07\u0E19\u0E35\u0E49 :"),ye.forEach(n),Ta=c(s),g(cs.$$.fragment,s),Ca=c(s),N=o(s,"P",{});var ls=i(N);Bp=t(ls,"\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49 \u0E08\u0E30\u0E40\u0E2B\u0E47\u0E19\u0E27\u0E48\u0E32\u0E40\u0E23\u0E32\u0E21\u0E35\u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E40\u0E21\u0E37\u0E48\u0E2D\u0E23\u0E27\u0E21\u0E01\u0E31\u0E19\u0E08\u0E30\u0E44\u0E14\u0E49 token \u0E17\u0E35\u0E48\u0E22\u0E32\u0E27\u0E01\u0E27\u0E48\u0E32\u0E2A\u0E2D\u0E07\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 \u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E40\u0E0A\u0E48\u0E19 \u0E04\u0E39\u0E48 "),On=o(ls,"CODE",{});var Pe=i(On);Np=t(Pe,'("h", "ug")'),Pe.forEach(n),Ap=t(ls,` \u0E0B\u0E36\u0E48\u0E07\u0E1E\u0E1A 15 \u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19 corpus
\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\u0E01\u0E47\u0E15\u0E32\u0E21 \u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E04\u0E37\u0E2D `),Bn=o(ls,"CODE",{});var ze=i(Bn);Gp=t(ze,'("u", "n")'),ze.forEach(n),Hp=t(ls," \u0E0B\u0E36\u0E48\u0E07\u0E1E\u0E1A 16 \u0E04\u0E23\u0E31\u0E49\u0E07 \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E2A\u0E2D\u0E07\u0E01\u0E47\u0E04\u0E37\u0E2D "),Nn=o(ls,"CODE",{});var Te=i(Nn);Ip=t(Te,'("u", "n") -> "un"'),Te.forEach(n),Rp=t(ls," \u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E04\u0E39\u0E48\u0E19\u0E35\u0E49\u0E44\u0E1B\u0E43\u0E19 vocabulary \u0E41\u0E25\u0E30 merge token \u0E43\u0E19 corpus \u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19\u0E41\u0E25\u0E49\u0E27 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49 :"),ls.forEach(n),Da=c(s),g(hs.$$.fragment,s),Oa=c(s),I=o(s,"P",{});var jn=i(I);Sp=t(jn,"\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49 \u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E04\u0E37\u0E2D "),An=o(jn,"CODE",{});var Ce=i(An);Lp=t(Ce,'("h", "ug")'),Ce.forEach(n),Up=t(jn," \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E04\u0E37\u0E2D "),Gn=o(jn,"CODE",{});var De=i(Gn);Fp=t(De,'("h", "ug") -> "hug"'),De.forEach(n),Vp=t(jn," \u0E0B\u0E36\u0E48\u0E07\u0E08\u0E30\u0E17\u0E33\u0E43\u0E2B\u0E49\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49 token \u0E17\u0E35\u0E48\u0E21\u0E35\u0E2A\u0E32\u0E21\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 \u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23 merge \u0E40\u0E23\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49 :"),jn.forEach(n),Ba=c(s),g(fs.$$.fragment,s),Na=c(s),Ys=o(s,"P",{});var Oe=i(Ys);Mp=t(Oe,"\u0E40\u0E23\u0E32\u0E08\u0E30\u0E17\u0E33\u0E41\u0E1A\u0E1A\u0E19\u0E35\u0E49\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E40\u0E23\u0E37\u0E48\u0E2D\u0E22\u0E46 \u0E08\u0E19\u0E01\u0E27\u0E48\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49\u0E02\u0E19\u0E32\u0E14\u0E02\u0E2D\u0E07 vocabulary \u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23"),Oe.forEach(n),Aa=c(s),g(W.$$.fragment,s),Ga=c(s),L=o(s,"H2",{class:!0});var Rl=i(L);Y=o(Rl,"A",{id:!0,class:!0,href:!0});var Be=i(Y);Hn=o(Be,"SPAN",{});var Ne=i(Hn);g(js.$$.fragment,Ne),Ne.forEach(n),Be.forEach(n),Kp=c(Rl),In=o(Rl,"SPAN",{});var Ae=i(In);Wp=t(Ae,"Tokenization algorithm"),Ae.forEach(n),Rl.forEach(n),Ha=c(s),Js=o(s,"P",{});var Ge=i(Js);Yp=t(Ge,"\u0E01\u0E32\u0E23 tokenization \u0E40\u0E1B\u0E47\u0E19\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19 \u0E42\u0E14\u0E22 input \u0E43\u0E2B\u0E21\u0E48\u0E08\u0E30\u0E16\u0E39\u0E01 tokenize \u0E14\u0E49\u0E27\u0E22\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E14\u0E31\u0E07\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49"),Ge.forEach(n),Ia=c(s),A=o(s,"OL",{});var ps=i(A);Rn=o(ps,"LI",{});var He=i(Rn);Jp=t(He,"Normalization (\u0E01\u0E32\u0E23\u0E1B\u0E23\u0E31\u0E1A\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E2B\u0E49\u0E40\u0E1B\u0E47\u0E19\u0E21\u0E32\u0E15\u0E23\u0E10\u0E32\u0E19)"),He.forEach(n),Zp=c(ps),Sn=o(ps,"LI",{});var Ie=i(Sn);Qp=t(Ie,"Pre-tokenization (\u0E01\u0E32\u0E23\u0E40\u0E15\u0E23\u0E35\u0E22\u0E21\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E2B\u0E49\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23 tokenize \u0E08\u0E23\u0E34\u0E07)"),Ie.forEach(n),Xp=c(ps),Ln=o(ps,"LI",{});var Re=i(Ln);st=t(Re,"\u0E41\u0E22\u0E01\u0E04\u0E33\u0E2D\u0E2D\u0E01\u0E40\u0E1B\u0E47\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E40\u0E14\u0E35\u0E48\u0E22\u0E27"),Re.forEach(n),nt=c(ps),Un=o(ps,"LI",{});var Se=i(Un);at=t(Se,"\u0E43\u0E0A\u0E49\u0E01\u0E0E merge \u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E23\u0E27\u0E21\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49\u0E08\u0E32\u0E01\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E01\u0E48\u0E2D\u0E19\u0E2B\u0E19\u0E49\u0E32"),Se.forEach(n),ps.forEach(n),Ra=c(s),Zs=o(s,"P",{});var Le=i(Zs);lt=t(Le,"\u0E21\u0E32\u0E14\u0E39\u0E01\u0E0E\u0E2A\u0E32\u0E21\u0E15\u0E31\u0E27\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E01\u0E48\u0E2D\u0E19\u0E2B\u0E19\u0E49\u0E32\u0E19\u0E35\u0E49 :"),Le.forEach(n),Sa=c(s),g(gs.$$.fragment,s),La=c(s),d=o(s,"P",{});var v=i(d);pt=t(v,"\u0E04\u0E33\u0E27\u0E48\u0E32"),Fn=o(v,"CODE",{});var Ue=i(Fn);tt=t(Ue,'"bug"'),Ue.forEach(n),et=t(v," \u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E22\u0E01\u0E40\u0E1B\u0E47\u0E19 "),Vn=o(v,"CODE",{});var Fe=i(Vn);rt=t(Fe,'["b", "ug"]'),Fe.forEach(n),ot=t(v," \u0E2A\u0E48\u0E27\u0E19\u0E04\u0E33\u0E27\u0E48\u0E32 "),Mn=o(v,"CODE",{});var Ve=i(Mn);it=t(Ve,'"mug"'),Ve.forEach(n),ut=t(v," \u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E22\u0E01\u0E40\u0E1B\u0E47\u0E19 "),Kn=o(v,"CODE",{});var Me=i(Kn);ct=t(Me,'["[UNK]", "ug"]'),Me.forEach(n),ht=t(v," \u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32 "),Wn=o(v,"CODE",{});var Ke=i(Wn);ft=t(Ke,'"m"'),Ke.forEach(n),jt=t(v,` \u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19 vocabulary \u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32
\u0E49\u0E40\u0E0A\u0E48\u0E19\u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19 \u0E04\u0E33\u0E27\u0E48\u0E32 `),Yn=o(v,"CODE",{});var We=i(Yn);gt=t(We,'"thug"'),We.forEach(n),mt=t(v," \u0E08\u0E30\u0E16\u0E39\u0E01\u0E41\u0E22\u0E01\u0E40\u0E1B\u0E47\u0E19 "),Jn=o(v,"CODE",{});var Ye=i(Jn);xt=t(Ye,'["[UNK]", "hug"]'),Ye.forEach(n),$t=t(v," \u0E40\u0E1E\u0E23\u0E32\u0E30\u0E27\u0E48\u0E32 "),Zn=o(v,"CODE",{});var Je=i(Zn);bt=t(Je,'"t"'),Je.forEach(n),kt=t(v," \u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19 vocabulary \u0E01\u0E0E\u0E41\u0E23\u0E01\u0E08\u0E30\u0E23\u0E27\u0E21 "),Qn=o(v,"CODE",{});var Ze=i(Qn);qt=t(Ze,'"u"'),Ze.forEach(n),_t=t(v," \u0E41\u0E25\u0E30 "),Xn=o(v,"CODE",{});var Qe=i(Xn);dt=t(Qe,'"g"'),Qe.forEach(n),wt=t(v," \u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19 \u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19 "),sa=o(v,"CODE",{});var Xe=i(sa);vt=t(Xe,'"hu"'),Xe.forEach(n),Et=t(v," \u0E41\u0E25\u0E30 "),na=o(v,"CODE",{});var sr=i(na);yt=t(sr,'"g"'),sr.forEach(n),Pt=t(v," \u0E01\u0E47\u0E08\u0E30\u0E16\u0E39\u0E01\u0E23\u0E27\u0E21\u0E40\u0E02\u0E49\u0E32\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19"),v.forEach(n),Ua=c(s),g(J.$$.fragment,s),Fa=c(s),U=o(s,"H2",{class:!0});var Sl=i(U);Z=o(Sl,"A",{id:!0,class:!0,href:!0});var nr=i(Z);aa=o(nr,"SPAN",{});var ar=i(aa);g(ms.$$.fragment,ar),ar.forEach(n),nr.forEach(n),zt=c(Sl),la=o(Sl,"SPAN",{});var lr=i(la);Tt=t(lr,"\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07 BPE (Implementing BPE)"),lr.forEach(n),Sl.forEach(n),Va=c(s),Qs=o(s,"P",{});var pr=i(Qs);Ct=t(pr,"\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49\u0E40\u0E23\u0E32\u0E08\u0E30\u0E21\u0E32\u0E14\u0E39\u0E01\u0E31\u0E19\u0E27\u0E48\u0E32 \u0E04\u0E38\u0E13\u0E08\u0E30\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16 implement \u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21 BPE \u0E44\u0E14\u0E49\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23 \u0E2A\u0E34\u0E48\u0E07\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E23\u0E35\u0E22\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48 implementation \u0E17\u0E35\u0E48\u0E14\u0E35\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 \u0E40\u0E23\u0E32\u0E40\u0E1E\u0E35\u0E22\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E43\u0E2B\u0E49\u0E04\u0E38\u0E13\u0E40\u0E02\u0E49\u0E32\u0E43\u0E08\u0E42\u0E04\u0E49\u0E14\u0E41\u0E25\u0E30\u0E40\u0E02\u0E49\u0E32\u0E43\u0E08\u0E27\u0E48\u0E32 BPE \u0E17\u0E33\u0E07\u0E32\u0E19\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23"),pr.forEach(n),Ma=c(s),Xs=o(s,"P",{});var tr=i(Xs);Dt=t(tr,"\u0E2D\u0E31\u0E19\u0E14\u0E31\u0E1A\u0E41\u0E23\u0E01 \u0E40\u0E23\u0E32\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23 corpus \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E2A\u0E23\u0E49\u0E32\u0E07 corpus \u0E41\u0E1A\u0E1A\u0E07\u0E48\u0E32\u0E22\u0E46\u0E02\u0E36\u0E49\u0E19\u0E21\u0E32 \u0E42\u0E14\u0E22\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E44\u0E1B\u0E14\u0E49\u0E27\u0E22\u0E44\u0E21\u0E48\u0E01\u0E35\u0E48\u0E1B\u0E23\u0E30\u0E42\u0E22\u0E04 :"),tr.forEach(n),Ka=c(s),g(xs.$$.fragment,s),Wa=c(s),Q=o(s,"P",{});var Ll=i(Q);Ot=t(Ll,"\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E40\u0E23\u0E32\u0E08\u0E30\u0E17\u0E33\u0E01\u0E32\u0E23 pre-tokenize corpus \u0E19\u0E35\u0E49 \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E41\u0E22\u0E01\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2D\u0E2D\u0E01\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E33\u0E46 \u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01\u0E40\u0E23\u0E32\u0E08\u0E30\u0E2A\u0E23\u0E49\u0E32\u0E07 BPE tokenizer \u0E15\u0E32\u0E21\u0E15\u0E31\u0E27\u0E17\u0E35\u0E48\u0E43\u0E0A\u0E49\u0E43\u0E19 GPT-2 \u0E40\u0E23\u0E32\u0E08\u0E36\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E0A\u0E49 "),pa=o(Ll,"CODE",{});var er=i(pa);Bt=t(er,"gpt2"),er.forEach(n),Nt=t(Ll," tokenizer \u0E43\u0E19\u0E01\u0E32\u0E23 pre-tokenize"),Ll.forEach(n),Ya=c(s),g($s.$$.fragment,s),Ja=c(s),sn=o(s,"P",{});var rr=i(sn);At=t(rr,"\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E40\u0E23\u0E32\u0E08\u0E30\u0E04\u0E33\u0E19\u0E27\u0E13\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E02\u0E2D\u0E07\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33:"),rr.forEach(n),Za=c(s),g(bs.$$.fragment,s),Qa=c(s),g(ks.$$.fragment,s),Xa=c(s),nn=o(s,"P",{});var or=i(nn);Gt=t(or,"\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B \u0E04\u0E37\u0E2D\u0E01\u0E32\u0E23\u0E04\u0E33\u0E19\u0E27\u0E13 vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19 \u0E0B\u0E36\u0E48\u0E07\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E08\u0E32\u0E01\u0E41\u0E15\u0E48\u0E25\u0E30\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E43\u0E19 corpus :"),or.forEach(n),sl=c(s),g(qs.$$.fragment,s),nl=c(s),g(_s.$$.fragment,s),al=c(s),X=o(s,"P",{});var Ul=i(X);Ht=t(Ul,"\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E1E\u0E34\u0E48\u0E21 token \u0E1E\u0E34\u0E40\u0E28\u0E29\u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E43\u0E19\u0E02\u0E49\u0E32\u0E07\u0E2B\u0E19\u0E49\u0E32 list \u0E19\u0E35\u0E49\u0E14\u0E49\u0E27\u0E22 GPT-2 \u0E43\u0E0A\u0E49 token \u0E1E\u0E34\u0E40\u0E28\u0E29\u0E04\u0E37\u0E2D "),ta=o(Ul,"CODE",{});var ir=i(ta);It=t(ir,'"<|endoftext|>"'),ir.forEach(n),Rt=t(Ul," :"),Ul.forEach(n),ll=c(s),g(ds.$$.fragment,s),pl=c(s),an=o(s,"P",{});var ur=i(an);St=t(ur,"\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E40\u0E23\u0E32\u0E08\u0E30\u0E41\u0E22\u0E01\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E33\u0E43\u0E19 corpus \u0E43\u0E2B\u0E49\u0E40\u0E1B\u0E47\u0E19\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E08\u0E30\u0E44\u0E14\u0E49\u0E40\u0E23\u0E34\u0E48\u0E21\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19 :"),ur.forEach(n),tl=c(s),g(ws.$$.fragment,s),el=c(s),ln=o(s,"P",{});var cr=i(ln);Lt=t(cr,"\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49\u0E40\u0E23\u0E32\u0E01\u0E47\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E17\u0E35\u0E48\u0E08\u0E30\u0E40\u0E17\u0E23\u0E19\u0E41\u0E25\u0E49\u0E27 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E23\u0E34\u0E48\u0E21\u0E14\u0E49\u0E27\u0E22\u0E01\u0E32\u0E23\u0E40\u0E02\u0E35\u0E22\u0E19\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E19\u0E17\u0E35\u0E48\u0E04\u0E33\u0E19\u0E27\u0E13\u0E04\u0E27\u0E32\u0E21\u0E16\u0E35\u0E48\u0E02\u0E2D\u0E07\u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E39\u0E48 token :"),cr.forEach(n),rl=c(s),g(vs.$$.fragment,s),ol=c(s),pn=o(s,"P",{});var hr=i(pn);Ut=t(hr,"\u0E21\u0E32\u0E14\u0E39\u0E2A\u0E48\u0E27\u0E19\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C (\u0E0B\u0E36\u0E48\u0E07\u0E40\u0E1B\u0E47\u0E19 dictionary) \u0E01\u0E31\u0E19 :"),hr.forEach(n),il=c(s),g(Es.$$.fragment,s),ul=c(s),g(ys.$$.fragment,s),cl=c(s),tn=o(s,"P",{});var fr=i(tn);Ft=t(fr,"\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E40\u0E23\u0E32\u0E08\u0E30\u0E2B\u0E32\u0E04\u0E39\u0E48\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 \u0E0B\u0E36\u0E48\u0E07\u0E17\u0E33\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22\u0E46\u0E14\u0E31\u0E07\u0E19\u0E35\u0E49 :"),fr.forEach(n),hl=c(s),g(Ps.$$.fragment,s),fl=c(s),g(zs.$$.fragment,s),jl=c(s),R=o(s,"P",{});var gn=i(R);Vt=t(gn,"\u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19 \u0E01\u0E0E\u0E41\u0E23\u0E01\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49\u0E01\u0E47\u0E04\u0E37\u0E2D "),ea=o(gn,"CODE",{});var jr=i(ea);Mt=t(jr,"('\u0120', 't') -> '\u0120t'"),jr.forEach(n),Kt=t(gn," \u0E41\u0E25\u0E30\u0E40\u0E23\u0E32\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E40\u0E1E\u0E34\u0E48\u0E21 "),ra=o(gn,"CODE",{});var gr=i(ra);Wt=t(gr,"'\u0120t'"),gr.forEach(n),Yt=t(gn," \u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E43\u0E19 vocabulary :"),gn.forEach(n),gl=c(s),g(Ts.$$.fragment,s),ml=c(s),ss=o(s,"P",{});var Fl=i(ss);Jt=t(Fl,"\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E17\u0E33\u0E01\u0E32\u0E23 merge \u0E04\u0E33\u0E22\u0E48\u0E2D\u0E22\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19 dictionary "),oa=o(Fl,"CODE",{});var mr=i(oa);Zt=t(mr,"splits"),mr.forEach(n),Qt=t(Fl," \u0E14\u0E49\u0E27\u0E22 \u0E42\u0E14\u0E22\u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E02\u0E35\u0E22\u0E19\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49 :"),Fl.forEach(n),xl=c(s),g(Cs.$$.fragment,s),$l=c(s),en=o(s,"P",{});var xr=i(en);Xt=t(xr,"\u0E41\u0E25\u0E30\u0E19\u0E35\u0E48\u0E01\u0E47\u0E04\u0E37\u0E2D\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23 merge \u0E04\u0E23\u0E31\u0E49\u0E07\u0E41\u0E23\u0E01 :"),xr.forEach(n),bl=c(s),g(Ds.$$.fragment,s),kl=c(s),g(Os.$$.fragment,s),ql=c(s),rn=o(s,"P",{});var $r=i(rn);se=t($r,"\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49\u0E40\u0E23\u0E32\u0E01\u0E47\u0E21\u0E35\u0E17\u0E38\u0E01\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19\u0E41\u0E25\u0E49\u0E27 \u0E40\u0E23\u0E32\u0E08\u0E30\u0E40\u0E17\u0E23\u0E19\u0E08\u0E19\u0E01\u0E27\u0E48\u0E32\u0E02\u0E19\u0E32\u0E14\u0E02\u0E2D\u0E07 vocabulary \u0E08\u0E30\u0E40\u0E17\u0E48\u0E32\u0E01\u0E31\u0E1A 50 :"),$r.forEach(n),_l=c(s),g(Bs.$$.fragment,s),dl=c(s),on=o(s,"P",{});var br=i(on);ne=t(br,"\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E04\u0E37\u0E2D tokenizer \u0E02\u0E2D\u0E07\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49\u0E40\u0E23\u0E35\u0E22\u0E19 19 \u0E01\u0E0E (vocabulary \u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E21\u0E35 31 token \u0E0B\u0E36\u0E48\u0E07\u0E21\u0E32\u0E08\u0E32\u0E01\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E21\u0E35 30 \u0E15\u0E31\u0E27\u0E41\u0E25\u0E30 token \u0E1E\u0E34\u0E40\u0E28\u0E29\u0E2D\u0E35\u0E01\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E15\u0E31\u0E27) :"),br.forEach(n),wl=c(s),g(Ns.$$.fragment,s),vl=c(s),g(As.$$.fragment,s),El=c(s),un=o(s,"P",{});var kr=i(un);ae=t(kr,"\u0E2A\u0E48\u0E27\u0E19 vocabulary \u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E08\u0E30\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E44\u0E1B\u0E14\u0E49\u0E27\u0E22 token \u0E1E\u0E34\u0E40\u0E28\u0E29, \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19, \u0E41\u0E25\u0E30\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23 merge \u0E41\u0E15\u0E48\u0E25\u0E30\u0E04\u0E23\u0E31\u0E49\u0E07 :"),kr.forEach(n),yl=c(s),g(Gs.$$.fragment,s),Pl=c(s),g(Hs.$$.fragment,s),zl=c(s),g(ns.$$.fragment,s),Tl=c(s),cn=o(s,"P",{});var qr=i(cn);le=t(qr,"\u0E2B\u0E32\u0E01\u0E40\u0E23\u0E32\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23 tokenize \u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E43\u0E14\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2B\u0E19\u0E36\u0E48\u0E07 \u0E2A\u0E34\u0E48\u0E07\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E17\u0E33\u0E04\u0E37\u0E2D pre-tokenize \u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19\u0E08\u0E36\u0E07\u0E17\u0E33\u0E01\u0E32\u0E23 tokenize \u0E41\u0E25\u0E30\u0E2A\u0E38\u0E14\u0E17\u0E49\u0E32\u0E22 apply \u0E01\u0E0E merge :"),qr.forEach(n),Cl=c(s),g(Is.$$.fragment,s),Dl=c(s),hn=o(s,"P",{});var _r=i(hn);pe=t(_r,"\u0E04\u0E38\u0E13\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E17\u0E14\u0E25\u0E2D\u0E07\u0E42\u0E04\u0E49\u0E14\u0E19\u0E35\u0E49\u0E44\u0E14\u0E49\u0E01\u0E31\u0E1A\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E17\u0E38\u0E01\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21 \u0E17\u0E35\u0E48\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E44\u0E1B\u0E14\u0E49\u0E27\u0E22\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19 :"),_r.forEach(n),Ol=c(s),g(Rs.$$.fragment,s),Bl=c(s),g(Ss.$$.fragment,s),Nl=c(s),g(as.$$.fragment,s),Al=c(s),fn=o(s,"P",{});var dr=i(fn);te=t(dr,"\u0E19\u0E35\u0E48\u0E01\u0E47\u0E04\u0E37\u0E2D \u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21 BPE \u0E43\u0E19\u0E1A\u0E17\u0E15\u0E48\u0E2D\u0E44\u0E1B \u0E40\u0E23\u0E32\u0E08\u0E30\u0E21\u0E32\u0E14\u0E39 WordPiece \u0E01\u0E31\u0E19"),dr.forEach(n),this.h()},h(){D(h,"name","hf:doc:metadata"),D(h,"content",JSON.stringify(Hr)),D(k,"id","bytepair-encoding-tokenization"),D(k,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),D(k,"href","#bytepair-encoding-tokenization"),D(f,"class","relative group"),D(rs,"id",""),D(Y,"id","tokenization-algorithm"),D(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),D(Y,"href","#tokenization-algorithm"),D(L,"class","relative group"),D(Z,"id","bpe-implementing-bpe"),D(Z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),D(Z,"href","#bpe-implementing-bpe"),D(U,"class","relative group")},m(s,l){a(document.head,h),e(s,w,l),e(s,f,l),a(f,k),a(k,P),m(_,P,null),a(f,E),a(f,C),a(C,S),e(s,B,l),m(H,s,l),e(s,ts,l),e(s,Us,l),a(Us,Vl),e(s,ja,l),m(es,s,l),e(s,ga,l),m(F,s,l),e(s,ma,l),e(s,rs,l),a(rs,Ml),e(s,xa,l),e(s,Fs,l),a(Fs,Kl),e(s,$a,l),m(os,s,l),e(s,ba,l),e(s,V,l),a(V,Wl),a(V,xn),a(xn,Yl),a(V,Jl),e(s,ka,l),e(s,Vs,l),a(Vs,Zl),e(s,qa,l),m(M,s,l),e(s,_a,l),e(s,K,l),a(K,Ql),a(K,$n),a($n,Xl),a(K,sp),e(s,da,l),e(s,Ms,l),a(Ms,np),e(s,wa,l),m(is,s,l),e(s,va,l),e(s,T,l),a(T,ap),a(T,bn),a(bn,lp),a(T,pp),a(T,kn),a(kn,tp),a(T,ep),a(T,qn),a(qn,rp),a(T,op),a(T,_n),a(_n,ip),a(T,up),a(T,dn),a(dn,cp),a(T,hp),e(s,Ea,l),e(s,Ks,l),a(Ks,fp),e(s,ya,l),m(us,s,l),e(s,Pa,l),e(s,y,l),a(y,jp),a(y,wn),a(wn,gp),a(y,mp),a(y,vn),a(vn,xp),a(y,$p),a(y,En),a(En,bp),a(y,kp),a(y,yn),a(yn,qp),a(y,_p),a(y,Pn),a(Pn,dp),a(y,wp),a(y,zn),a(zn,vp),a(y,Ep),a(y,Tn),a(Tn,yp),a(y,Pp),a(y,Cn),a(Cn,zp),a(y,Tp),a(y,Dn),a(Dn,Cp),a(y,Dp),e(s,za,l),e(s,Ws,l),a(Ws,Op),e(s,Ta,l),m(cs,s,l),e(s,Ca,l),e(s,N,l),a(N,Bp),a(N,On),a(On,Np),a(N,Ap),a(N,Bn),a(Bn,Gp),a(N,Hp),a(N,Nn),a(Nn,Ip),a(N,Rp),e(s,Da,l),m(hs,s,l),e(s,Oa,l),e(s,I,l),a(I,Sp),a(I,An),a(An,Lp),a(I,Up),a(I,Gn),a(Gn,Fp),a(I,Vp),e(s,Ba,l),m(fs,s,l),e(s,Na,l),e(s,Ys,l),a(Ys,Mp),e(s,Aa,l),m(W,s,l),e(s,Ga,l),e(s,L,l),a(L,Y),a(Y,Hn),m(js,Hn,null),a(L,Kp),a(L,In),a(In,Wp),e(s,Ha,l),e(s,Js,l),a(Js,Yp),e(s,Ia,l),e(s,A,l),a(A,Rn),a(Rn,Jp),a(A,Zp),a(A,Sn),a(Sn,Qp),a(A,Xp),a(A,Ln),a(Ln,st),a(A,nt),a(A,Un),a(Un,at),e(s,Ra,l),e(s,Zs,l),a(Zs,lt),e(s,Sa,l),m(gs,s,l),e(s,La,l),e(s,d,l),a(d,pt),a(d,Fn),a(Fn,tt),a(d,et),a(d,Vn),a(Vn,rt),a(d,ot),a(d,Mn),a(Mn,it),a(d,ut),a(d,Kn),a(Kn,ct),a(d,ht),a(d,Wn),a(Wn,ft),a(d,jt),a(d,Yn),a(Yn,gt),a(d,mt),a(d,Jn),a(Jn,xt),a(d,$t),a(d,Zn),a(Zn,bt),a(d,kt),a(d,Qn),a(Qn,qt),a(d,_t),a(d,Xn),a(Xn,dt),a(d,wt),a(d,sa),a(sa,vt),a(d,Et),a(d,na),a(na,yt),a(d,Pt),e(s,Ua,l),m(J,s,l),e(s,Fa,l),e(s,U,l),a(U,Z),a(Z,aa),m(ms,aa,null),a(U,zt),a(U,la),a(la,Tt),e(s,Va,l),e(s,Qs,l),a(Qs,Ct),e(s,Ma,l),e(s,Xs,l),a(Xs,Dt),e(s,Ka,l),m(xs,s,l),e(s,Wa,l),e(s,Q,l),a(Q,Ot),a(Q,pa),a(pa,Bt),a(Q,Nt),e(s,Ya,l),m($s,s,l),e(s,Ja,l),e(s,sn,l),a(sn,At),e(s,Za,l),m(bs,s,l),e(s,Qa,l),m(ks,s,l),e(s,Xa,l),e(s,nn,l),a(nn,Gt),e(s,sl,l),m(qs,s,l),e(s,nl,l),m(_s,s,l),e(s,al,l),e(s,X,l),a(X,Ht),a(X,ta),a(ta,It),a(X,Rt),e(s,ll,l),m(ds,s,l),e(s,pl,l),e(s,an,l),a(an,St),e(s,tl,l),m(ws,s,l),e(s,el,l),e(s,ln,l),a(ln,Lt),e(s,rl,l),m(vs,s,l),e(s,ol,l),e(s,pn,l),a(pn,Ut),e(s,il,l),m(Es,s,l),e(s,ul,l),m(ys,s,l),e(s,cl,l),e(s,tn,l),a(tn,Ft),e(s,hl,l),m(Ps,s,l),e(s,fl,l),m(zs,s,l),e(s,jl,l),e(s,R,l),a(R,Vt),a(R,ea),a(ea,Mt),a(R,Kt),a(R,ra),a(ra,Wt),a(R,Yt),e(s,gl,l),m(Ts,s,l),e(s,ml,l),e(s,ss,l),a(ss,Jt),a(ss,oa),a(oa,Zt),a(ss,Qt),e(s,xl,l),m(Cs,s,l),e(s,$l,l),e(s,en,l),a(en,Xt),e(s,bl,l),m(Ds,s,l),e(s,kl,l),m(Os,s,l),e(s,ql,l),e(s,rn,l),a(rn,se),e(s,_l,l),m(Bs,s,l),e(s,dl,l),e(s,on,l),a(on,ne),e(s,wl,l),m(Ns,s,l),e(s,vl,l),m(As,s,l),e(s,El,l),e(s,un,l),a(un,ae),e(s,yl,l),m(Gs,s,l),e(s,Pl,l),m(Hs,s,l),e(s,zl,l),m(ns,s,l),e(s,Tl,l),e(s,cn,l),a(cn,le),e(s,Cl,l),m(Is,s,l),e(s,Dl,l),e(s,hn,l),a(hn,pe),e(s,Ol,l),m(Rs,s,l),e(s,Bl,l),m(Ss,s,l),e(s,Nl,l),m(as,s,l),e(s,Al,l),e(s,fn,l),a(fn,te),Gl=!0},p(s,[l]){const Ls={};l&2&&(Ls.$$scope={dirty:l,ctx:s}),F.$set(Ls);const ia={};l&2&&(ia.$$scope={dirty:l,ctx:s}),M.$set(ia);const ua={};l&2&&(ua.$$scope={dirty:l,ctx:s}),W.$set(ua);const ca={};l&2&&(ca.$$scope={dirty:l,ctx:s}),J.$set(ca);const ha={};l&2&&(ha.$$scope={dirty:l,ctx:s}),ns.$set(ha);const fa={};l&2&&(fa.$$scope={dirty:l,ctx:s}),as.$set(fa)},i(s){Gl||(x(_.$$.fragment,s),x(H.$$.fragment,s),x(es.$$.fragment,s),x(F.$$.fragment,s),x(os.$$.fragment,s),x(M.$$.fragment,s),x(is.$$.fragment,s),x(us.$$.fragment,s),x(cs.$$.fragment,s),x(hs.$$.fragment,s),x(fs.$$.fragment,s),x(W.$$.fragment,s),x(js.$$.fragment,s),x(gs.$$.fragment,s),x(J.$$.fragment,s),x(ms.$$.fragment,s),x(xs.$$.fragment,s),x($s.$$.fragment,s),x(bs.$$.fragment,s),x(ks.$$.fragment,s),x(qs.$$.fragment,s),x(_s.$$.fragment,s),x(ds.$$.fragment,s),x(ws.$$.fragment,s),x(vs.$$.fragment,s),x(Es.$$.fragment,s),x(ys.$$.fragment,s),x(Ps.$$.fragment,s),x(zs.$$.fragment,s),x(Ts.$$.fragment,s),x(Cs.$$.fragment,s),x(Ds.$$.fragment,s),x(Os.$$.fragment,s),x(Bs.$$.fragment,s),x(Ns.$$.fragment,s),x(As.$$.fragment,s),x(Gs.$$.fragment,s),x(Hs.$$.fragment,s),x(ns.$$.fragment,s),x(Is.$$.fragment,s),x(Rs.$$.fragment,s),x(Ss.$$.fragment,s),x(as.$$.fragment,s),Gl=!0)},o(s){$(_.$$.fragment,s),$(H.$$.fragment,s),$(es.$$.fragment,s),$(F.$$.fragment,s),$(os.$$.fragment,s),$(M.$$.fragment,s),$(is.$$.fragment,s),$(us.$$.fragment,s),$(cs.$$.fragment,s),$(hs.$$.fragment,s),$(fs.$$.fragment,s),$(W.$$.fragment,s),$(js.$$.fragment,s),$(gs.$$.fragment,s),$(J.$$.fragment,s),$(ms.$$.fragment,s),$(xs.$$.fragment,s),$($s.$$.fragment,s),$(bs.$$.fragment,s),$(ks.$$.fragment,s),$(qs.$$.fragment,s),$(_s.$$.fragment,s),$(ds.$$.fragment,s),$(ws.$$.fragment,s),$(vs.$$.fragment,s),$(Es.$$.fragment,s),$(ys.$$.fragment,s),$(Ps.$$.fragment,s),$(zs.$$.fragment,s),$(Ts.$$.fragment,s),$(Cs.$$.fragment,s),$(Ds.$$.fragment,s),$(Os.$$.fragment,s),$(Bs.$$.fragment,s),$(Ns.$$.fragment,s),$(As.$$.fragment,s),$(Gs.$$.fragment,s),$(Hs.$$.fragment,s),$(ns.$$.fragment,s),$(Is.$$.fragment,s),$(Rs.$$.fragment,s),$(Ss.$$.fragment,s),$(as.$$.fragment,s),Gl=!1},d(s){n(h),s&&n(w),s&&n(f),b(_),s&&n(B),b(H,s),s&&n(ts),s&&n(Us),s&&n(ja),b(es,s),s&&n(ga),b(F,s),s&&n(ma),s&&n(rs),s&&n(xa),s&&n(Fs),s&&n($a),b(os,s),s&&n(ba),s&&n(V),s&&n(ka),s&&n(Vs),s&&n(qa),b(M,s),s&&n(_a),s&&n(K),s&&n(da),s&&n(Ms),s&&n(wa),b(is,s),s&&n(va),s&&n(T),s&&n(Ea),s&&n(Ks),s&&n(ya),b(us,s),s&&n(Pa),s&&n(y),s&&n(za),s&&n(Ws),s&&n(Ta),b(cs,s),s&&n(Ca),s&&n(N),s&&n(Da),b(hs,s),s&&n(Oa),s&&n(I),s&&n(Ba),b(fs,s),s&&n(Na),s&&n(Ys),s&&n(Aa),b(W,s),s&&n(Ga),s&&n(L),b(js),s&&n(Ha),s&&n(Js),s&&n(Ia),s&&n(A),s&&n(Ra),s&&n(Zs),s&&n(Sa),b(gs,s),s&&n(La),s&&n(d),s&&n(Ua),b(J,s),s&&n(Fa),s&&n(U),b(ms),s&&n(Va),s&&n(Qs),s&&n(Ma),s&&n(Xs),s&&n(Ka),b(xs,s),s&&n(Wa),s&&n(Q),s&&n(Ya),b($s,s),s&&n(Ja),s&&n(sn),s&&n(Za),b(bs,s),s&&n(Qa),b(ks,s),s&&n(Xa),s&&n(nn),s&&n(sl),b(qs,s),s&&n(nl),b(_s,s),s&&n(al),s&&n(X),s&&n(ll),b(ds,s),s&&n(pl),s&&n(an),s&&n(tl),b(ws,s),s&&n(el),s&&n(ln),s&&n(rl),b(vs,s),s&&n(ol),s&&n(pn),s&&n(il),b(Es,s),s&&n(ul),b(ys,s),s&&n(cl),s&&n(tn),s&&n(hl),b(Ps,s),s&&n(fl),b(zs,s),s&&n(jl),s&&n(R),s&&n(gl),b(Ts,s),s&&n(ml),s&&n(ss),s&&n(xl),b(Cs,s),s&&n($l),s&&n(en),s&&n(bl),b(Ds,s),s&&n(kl),b(Os,s),s&&n(ql),s&&n(rn),s&&n(_l),b(Bs,s),s&&n(dl),s&&n(on),s&&n(wl),b(Ns,s),s&&n(vl),b(As,s),s&&n(El),s&&n(un),s&&n(yl),b(Gs,s),s&&n(Pl),b(Hs,s),s&&n(zl),b(ns,s),s&&n(Tl),s&&n(cn),s&&n(Cl),b(Is,s),s&&n(Dl),s&&n(hn),s&&n(Ol),b(Rs,s),s&&n(Bl),b(Ss,s),s&&n(Nl),b(as,s),s&&n(Al),s&&n(fn)}}}const Hr={local:"bytepair-encoding-tokenization",sections:[{local:"",title:"\u0E2D\u0E31\u0E25\u0E01\u0E2D\u0E23\u0E34\u0E17\u0E36\u0E21\u0E17\u0E35\u0E48\u0E43\u0E0A\u0E49\u0E43\u0E19\u0E01\u0E32\u0E23\u0E40\u0E17\u0E23\u0E19"},{local:"tokenization-algorithm",title:"Tokenization algorithm"},{local:"bpe-implementing-bpe",title:"\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07 BPE (Implementing BPE)"}],title:"Byte-Pair Encoding tokenization"};function Ir(O){return Pr(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Mr extends wr{constructor(h){super();vr(this,h,Ir,Gr,Er,{})}}export{Mr as default,Hr as metadata};
