import{S as mh,i as dh,s as hh,e as l,k as c,w as g,t as a,M as fh,c as r,d as t,m,a as o,x as _,h as n,b as d,N as Xt,F as s,g as u,y as v,q as b,o as x,B as j,v as gh}from"../../chunks/vendor-1e8b365d.js";import{T as yt}from"../../chunks/Tip-62b14c6e.js";import{Y as _h}from"../../chunks/Youtube-c2a8cc39.js";import{I as Wt}from"../../chunks/IconCopyLink-483c28ba.js";import{C as O}from"../../chunks/CodeBlock-e5764662.js";import{D as vh}from"../../chunks/DocNotebookDropdown-37d928d3.js";function bh(V){let p,C,h,k,H;return{c(){p=l("p"),C=a("\u270F\uFE0F "),h=l("strong"),k=a("Essayez !"),H=a(" Cliquez sur quelques-unes des URL pour avoir une id\xE9e du type d\u2019informations auxquelles chaque probl\xE8me GitHub est li\xE9.")},l(f){p=r(f,"P",{});var z=o(p);C=n(z,"\u270F\uFE0F "),h=r(z,"STRONG",{});var N=o(h);k=n(N,"Essayez !"),N.forEach(t),H=n(z," Cliquez sur quelques-unes des URL pour avoir une id\xE9e du type d\u2019informations auxquelles chaque probl\xE8me GitHub est li\xE9."),z.forEach(t)},m(f,z){u(f,p,z),s(p,C),s(p,h),s(h,k),s(p,H)},d(f){f&&t(p)}}}function xh(V){let p,C,h,k,H,f,z,N,E,T,D,y,w,M,q,P;return{c(){p=l("p"),C=a("\u26A0\uFE0F Ne partagez pas un "),h=l("em"),k=a("notebook"),H=a(" avec votre "),f=l("code"),z=a("GITHUB_TOKEN"),N=a(" coll\xE9 dedans. Nous vous recommandons de supprimer la derni\xE8re cellule une fois que vous l\u2019avez ex\xE9cut\xE9e pour \xE9viter de divulguer accidentellement ces informations. Mieux encore, stockez le jeton dans un fichier "),E=l("em"),T=a(".env"),D=a(" et utilisez la "),y=l("a"),w=a("biblioth\xE8que "),M=l("code"),q=a("python-dotenv"),P=a(" pour le charger automatiquement pour vous en tant que variable d\u2019environnement."),this.h()},l(G){p=r(G,"P",{});var $=o(p);C=n($,"\u26A0\uFE0F Ne partagez pas un "),h=r($,"EM",{});var A=o(h);k=n(A,"notebook"),A.forEach(t),H=n($," avec votre "),f=r($,"CODE",{});var S=o(f);z=n(S,"GITHUB_TOKEN"),S.forEach(t),N=n($," coll\xE9 dedans. Nous vous recommandons de supprimer la derni\xE8re cellule une fois que vous l\u2019avez ex\xE9cut\xE9e pour \xE9viter de divulguer accidentellement ces informations. Mieux encore, stockez le jeton dans un fichier "),E=r($,"EM",{});var B=o(E);T=n(B,".env"),B.forEach(t),D=n($," et utilisez la "),y=r($,"A",{href:!0,rel:!0});var Q=o(y);w=n(Q,"biblioth\xE8que "),M=r(Q,"CODE",{});var ee=o(M);q=n(ee,"python-dotenv"),ee.forEach(t),Q.forEach(t),P=n($," pour le charger automatiquement pour vous en tant que variable d\u2019environnement."),$.forEach(t),this.h()},h(){d(y,"href","https://github.com/theskumar/python-dotenv"),d(y,"rel","nofollow")},m(G,$){u(G,p,$),s(p,C),s(p,h),s(h,k),s(p,H),s(p,f),s(f,z),s(p,N),s(p,E),s(E,T),s(p,D),s(p,y),s(y,w),s(y,M),s(M,q),s(p,P)},d(G){G&&t(p)}}}function jh(V){let p,C,h,k,H,f,z,N,E,T,D,y,w,M,q,P,G,$,A,S,B,Q,ee,De,ue,fs;return{c(){p=l("p"),C=a("\u270F\uFE0F "),h=l("strong"),k=a("Essayez !"),H=a(" Calculez le temps moyen n\xE9cessaire pour r\xE9soudre les probl\xE8mes dans \u{1F917} "),f=l("em"),z=a("Datasets"),N=a(". Vous pouvez trouver la fonction "),E=l("code"),T=a("Dataset.filter()"),D=a(" utile pour filtrer les demandes d\u2019extraction et les probl\xE8mes ouverts. Vous pouvez utiliser la fonction "),y=l("code"),w=a("Dataset.set_format()"),M=a(" pour convertir le jeu de donn\xE9es en un "),q=l("code"),P=a("DataFrame"),G=a(" afin que vous puissiez facilement manipuler les horodatages "),$=l("code"),A=a("created_at"),S=a(" et "),B=l("code"),Q=a("closed_at"),ee=a(". Pour les points bonus, calculez le temps moyen n\xE9cessaire pour fermer les "),De=l("em"),ue=a("pull_requests"),fs=a(".")},l(pe){p=r(pe,"P",{});var I=o(p);C=n(I,"\u270F\uFE0F "),h=r(I,"STRONG",{});var wt=o(h);k=n(wt,"Essayez !"),wt.forEach(t),H=n(I," Calculez le temps moyen n\xE9cessaire pour r\xE9soudre les probl\xE8mes dans \u{1F917} "),f=r(I,"EM",{});var kt=o(f);z=n(kt,"Datasets"),kt.forEach(t),N=n(I,". Vous pouvez trouver la fonction "),E=r(I,"CODE",{});var Oe=o(E);T=n(Oe,"Dataset.filter()"),Oe.forEach(t),D=n(I," utile pour filtrer les demandes d\u2019extraction et les probl\xE8mes ouverts. Vous pouvez utiliser la fonction "),y=r(I,"CODE",{});var Dt=o(y);w=n(Dt,"Dataset.set_format()"),Dt.forEach(t),M=n(I," pour convertir le jeu de donn\xE9es en un "),q=r(I,"CODE",{});var gs=o(q);P=n(gs,"DataFrame"),gs.forEach(t),G=n(I," afin que vous puissiez facilement manipuler les horodatages "),$=r(I,"CODE",{});var ce=o($);A=n(ce,"created_at"),ce.forEach(t),S=n(I," et "),B=r(I,"CODE",{});var zt=o(B);Q=n(zt,"closed_at"),zt.forEach(t),ee=n(I,". Pour les points bonus, calculez le temps moyen n\xE9cessaire pour fermer les "),De=r(I,"EM",{});var Te=o(De);ue=n(Te,"pull_requests"),Te.forEach(t),fs=n(I,"."),I.forEach(t)},m(pe,I){u(pe,p,I),s(p,C),s(p,h),s(h,k),s(p,H),s(p,f),s(f,z),s(p,N),s(p,E),s(E,T),s(p,D),s(p,y),s(y,w),s(p,M),s(p,q),s(q,P),s(p,G),s(p,$),s($,A),s(p,S),s(p,B),s(B,Q),s(p,ee),s(p,De),s(De,ue),s(p,fs)},d(pe){pe&&t(p)}}}function Eh(V){let p,C,h,k,H,f,z,N,E,T,D;return{c(){p=l("p"),C=a("\u270F\uFE0F "),h=l("strong"),k=a("Essayez !"),H=a(" Utilisez votre nom d\u2019utilisateur et votre mot de passe Hugging Face pour obtenir un jeton et cr\xE9er un d\xE9p\xF4t vide appel\xE9 "),f=l("code"),z=a("github-issues"),N=a(". N\u2019oubliez pas de "),E=l("strong"),T=a("n\u2019enregistrez jamais vos informations d\u2019identification"),D=a(" dans Colab ou tout autre r\xE9f\xE9rentiel car ces informations peuvent \xEAtre exploit\xE9es par de mauvais individus.")},l(y){p=r(y,"P",{});var w=o(p);C=n(w,"\u270F\uFE0F "),h=r(w,"STRONG",{});var M=o(h);k=n(M,"Essayez !"),M.forEach(t),H=n(w," Utilisez votre nom d\u2019utilisateur et votre mot de passe Hugging Face pour obtenir un jeton et cr\xE9er un d\xE9p\xF4t vide appel\xE9 "),f=r(w,"CODE",{});var q=o(f);z=n(q,"github-issues"),q.forEach(t),N=n(w,". N\u2019oubliez pas de "),E=r(w,"STRONG",{});var P=o(E);T=n(P,"n\u2019enregistrez jamais vos informations d\u2019identification"),P.forEach(t),D=n(w," dans Colab ou tout autre r\xE9f\xE9rentiel car ces informations peuvent \xEAtre exploit\xE9es par de mauvais individus."),w.forEach(t)},m(y,w){u(y,p,w),s(p,C),s(p,h),s(h,k),s(p,H),s(p,f),s(f,z),s(p,N),s(p,E),s(E,T),s(p,D)},d(y){y&&t(p)}}}function $h(V){let p,C,h,k,H,f,z,N,E,T,D,y,w;return{c(){p=l("p"),C=a("\u{1F4A1} Vous pouvez \xE9galement t\xE9l\xE9charger un jeu de donn\xE9es sur le "),h=l("em"),k=a("Hub"),H=a(" directement depuis le terminal en utilisant "),f=l("code"),z=a("huggingface-cli"),N=a(" et un peu de magie Git. Consultez le "),E=l("a"),T=a("guide de \u{1F917} "),D=l("em"),y=a("Datasets"),w=a(" pour savoir comment proc\xE9der."),this.h()},l(M){p=r(M,"P",{});var q=o(p);C=n(q,"\u{1F4A1} Vous pouvez \xE9galement t\xE9l\xE9charger un jeu de donn\xE9es sur le "),h=r(q,"EM",{});var P=o(h);k=n(P,"Hub"),P.forEach(t),H=n(q," directement depuis le terminal en utilisant "),f=r(q,"CODE",{});var G=o(f);z=n(G,"huggingface-cli"),G.forEach(t),N=n(q," et un peu de magie Git. Consultez le "),E=r(q,"A",{href:!0,rel:!0});var $=o(E);T=n($,"guide de \u{1F917} "),D=r($,"EM",{});var A=o(D);y=n(A,"Datasets"),A.forEach(t),$.forEach(t),w=n(q," pour savoir comment proc\xE9der."),q.forEach(t),this.h()},h(){d(E,"href","https://huggingface.co/docs/datasets/share.html#add-a-community-dataset"),d(E,"rel","nofollow")},m(M,q){u(M,p,q),s(p,C),s(p,h),s(h,k),s(p,H),s(p,f),s(f,z),s(p,N),s(p,E),s(E,T),s(E,D),s(D,y),s(p,w)},d(M){M&&t(p)}}}function qh(V){let p,C,h,k,H,f,z,N,E,T,D,y,w,M,q,P;return{c(){p=l("p"),C=a("\u270F\uFE0F "),h=l("strong"),k=a("Essayez !"),H=a(" Utilisez l\u2019application "),f=l("code"),z=a("dataset-tagging"),N=a(" et "),E=l("a"),T=a("le guide de \u{1F917} "),D=l("em"),y=a("Datasets"),w=a(" pour compl\xE9ter le fichier "),M=l("em"),q=a("README.md"),P=a(" de votre jeu de donn\xE9es de probl\xE8mes GitHub."),this.h()},l(G){p=r(G,"P",{});var $=o(p);C=n($,"\u270F\uFE0F "),h=r($,"STRONG",{});var A=o(h);k=n(A,"Essayez !"),A.forEach(t),H=n($," Utilisez l\u2019application "),f=r($,"CODE",{});var S=o(f);z=n(S,"dataset-tagging"),S.forEach(t),N=n($," et "),E=r($,"A",{href:!0,rel:!0});var B=o(E);T=n(B,"le guide de \u{1F917} "),D=r(B,"EM",{});var Q=o(D);y=n(Q,"Datasets"),Q.forEach(t),B.forEach(t),w=n($," pour compl\xE9ter le fichier "),M=r($,"EM",{});var ee=o(M);q=n(ee,"README.md"),ee.forEach(t),P=n($," de votre jeu de donn\xE9es de probl\xE8mes GitHub."),$.forEach(t),this.h()},h(){d(E,"href","https://github.com/huggingface/datasets/blob/master/templates/README_guide.md"),d(E,"rel","nofollow")},m(G,$){u(G,p,$),s(p,C),s(p,h),s(h,k),s(p,H),s(p,f),s(f,z),s(p,N),s(p,E),s(E,T),s(E,D),s(D,y),s(p,w),s(p,M),s(M,q),s(p,P)},d(G){G&&t(p)}}}function yh(V){let p,C,h,k,H,f,z,N,E,T,D,y,w,M;return{c(){p=l("p"),C=a("\u270F\uFE0F "),h=l("strong"),k=a("Essayez !"),H=a(" Suivez les \xE9tapes que nous avons suivies dans cette section pour cr\xE9er un jeu de donn\xE9es de probl\xE8mes GitHub pour votre biblioth\xE8que open source pr\xE9f\xE9r\xE9e (choisissez autre chose que \u{1F917} "),f=l("em"),z=a("Datasets"),N=a(", bien s\xFBr !). Pour obtenir des points bonus, "),E=l("em"),T=a("finetunez"),D=a(" un classifieur multilabel pour pr\xE9dire les balises pr\xE9sentes dans le champ "),y=l("code"),w=a("labels"),M=a(".")},l(q){p=r(q,"P",{});var P=o(p);C=n(P,"\u270F\uFE0F "),h=r(P,"STRONG",{});var G=o(h);k=n(G,"Essayez !"),G.forEach(t),H=n(P," Suivez les \xE9tapes que nous avons suivies dans cette section pour cr\xE9er un jeu de donn\xE9es de probl\xE8mes GitHub pour votre biblioth\xE8que open source pr\xE9f\xE9r\xE9e (choisissez autre chose que \u{1F917} "),f=r(P,"EM",{});var $=o(f);z=n($,"Datasets"),$.forEach(t),N=n(P,", bien s\xFBr !). Pour obtenir des points bonus, "),E=r(P,"EM",{});var A=o(E);T=n(A,"finetunez"),A.forEach(t),D=n(P," un classifieur multilabel pour pr\xE9dire les balises pr\xE9sentes dans le champ "),y=r(P,"CODE",{});var S=o(y);w=n(S,"labels"),S.forEach(t),M=n(P,"."),P.forEach(t)},m(q,P){u(q,p,P),s(p,C),s(p,h),s(h,k),s(p,H),s(p,f),s(f,z),s(p,N),s(p,E),s(E,T),s(p,D),s(p,y),s(y,w),s(p,M)},d(q){q&&t(p)}}}function wh(V){let p,C,h,k,H,f,z,N,E,T,D,y,w,M,q,P,G,$,A,S,B,Q,ee,De,ue,fs,pe,I,wt,kt,Oe,Dt,gs,ce,zt,Te,Xr,Wr,Zn,ze,Ae,Yt,_s,Yr,ea,eo,Jn,de,so,sa,to,ao,vs,no,lo,Kn,bs,xs,Ac,Xn,Pt,ro,Wn,js,Es,Gc,Yn,he,oo,$s,io,uo,qs,ta,po,co,el,Ge,mo,aa,ho,fo,sl,ys,tl,fe,go,na,_o,vo,la,bo,xo,al,ws,nl,Ie,jo,ra,Eo,$o,ll,ks,rl,Ds,ol,se,qo,oa,yo,wo,zs,ko,Do,ia,zo,Po,il,Ps,ul,Hs,pl,te,Ho,ua,Co,No,pa,Mo,Oo,ca,To,Ao,cl,Re,ml,Z,Go,Cs,Io,Ro,ma,Uo,So,Ns,Lo,Fo,da,Vo,Bo,ha,Qo,Zo,dl,Ms,hl,Ue,fl,Ht,Jo,gl,Os,_l,ae,Ko,fa,Xo,Wo,ga,Yo,ei,_a,si,ti,vl,Ts,bl,Se,ai,Ct,ni,li,xl,As,jl,Gs,El,X,ri,Is,oi,ii,va,ui,pi,Rs,ci,mi,ba,di,hi,$l,Nt,F,fi,xa,gi,_i,ja,vi,bi,Ea,xi,ji,$a,Ei,$i,qa,qi,yi,ya,wi,ki,ql,Le,Di,wa,zi,Pi,yl,Pe,Fe,ka,Us,Hi,Da,Ci,wl,R,Ni,za,Mi,Oi,Pa,Ti,Ai,Ha,Gi,Ii,Mt,Ri,Ui,Ca,Si,Li,Na,Fi,Vi,Ma,Bi,Qi,Oa,Zi,Ji,kl,Ss,Dl,Ls,zl,J,Ki,Ta,Xi,Wi,Aa,Yi,eu,Ga,su,tu,Ia,au,nu,Ra,lu,ru,Pl,Fs,Hl,Ve,Cl,Ot,ou,Nl,ge,iu,Ua,uu,pu,Sa,cu,mu,Ml,He,Be,La,Vs,du,Fa,hu,Ol,Qe,fu,Va,gu,_u,Tl,Bs,Qs,Ic,Al,Ze,vu,Zs,Ba,bu,xu,Gl,Js,Il,Ks,Rl,ne,ju,Qa,Eu,$u,Za,qu,yu,Ja,wu,ku,Ul,Xs,Sl,Ws,Ll,_e,Du,Ka,zu,Pu,Xa,Hu,Cu,Fl,Ys,Vl,Je,Nu,Wa,Mu,Ou,Bl,et,Ql,Ce,Ke,Ya,st,Tu,en,Au,Zl,tt,Jl,U,Gu,sn,Iu,Ru,Xe,Uu,tn,Su,Lu,an,Fu,Vu,nn,Bu,Qu,ln,Zu,Ju,rn,Ku,Xu,on,Wu,Yu,Kl,at,Xl,nt,Wl,ve,ep,un,sp,tp,pn,ap,np,Yl,le,lp,cn,rp,op,mn,ip,up,dn,pp,cp,er,lt,sr,be,mp,hn,dp,hp,fn,fp,gp,tr,rt,ar,We,_p,gn,vp,bp,nr,ot,lr,it,rr,xe,xp,_n,jp,Ep,vn,$p,qp,or,Ye,ir,je,yp,bn,wp,kp,xn,Dp,zp,ur,ut,pr,W,Pp,jn,Hp,Cp,En,Np,Mp,$n,Op,Tp,qn,Ap,Gp,cr,pt,mr,Ee,Ip,yn,Rp,Up,wn,Sp,Lp,dr,ct,hr,es,Fp,kn,Vp,Bp,fr,mt,dt,Rc,gr,$e,Qp,Dn,Zp,Jp,zn,Kp,Xp,_r,ht,vr,ft,br,qe,Wp,Pn,Yp,ec,Hn,sc,tc,xr,ss,jr,Ne,ts,Cn,gt,ac,Nn,nc,Er,Tt,lc,$r,ye,rc,Mn,oc,ic,On,uc,pc,qr,At,me,cc,as,mc,Tn,dc,hc,An,fc,gc,Gn,_c,vc,yr,_t,vt,Uc,wr,bt,xt,bc,ns,xc,In,jc,Ec,kr,re,$c,Rn,qc,yc,Un,wc,kc,Sn,Dc,zc,Dr,jt,Et,Sc,zr,ls,Pr,rs,Pc,Ln,Hc,Cc,Hr,os,Cr;return f=new Wt({}),D=new vh({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Google Colab",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/master/course/chapter5/section5.ipynb"},{label:"Aws Studio",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/master/course/chapter5/section5.ipynb"}]}}),_s=new Wt({}),ys=new O({props:{code:"!pip install requests",highlighted:"!pip install requests"}}),ws=new O({props:{code:`import requests

url = "https://api.github.com/repos/huggingface/datasets/issues?page=1&per_page=1"
response = requests.get(url)`,highlighted:`<span class="hljs-keyword">import</span> requests

url = <span class="hljs-string">&quot;https://api.github.com/repos/huggingface/datasets/issues?page=1&amp;per_page=1&quot;</span>
response = requests.get(url)`}}),ks=new O({props:{code:"response.status_code",highlighted:"response.status_code"}}),Ds=new O({props:{code:"200",highlighted:'<span class="hljs-number">200</span>'}}),Ps=new O({props:{code:"response.json()",highlighted:"response.json()"}}),Hs=new O({props:{code:`[{'url': 'https://api.github.com/repos/huggingface/datasets/issues/2792',
  'repository_url': 'https://api.github.com/repos/huggingface/datasets',
  'labels_url': 'https://api.github.com/repos/huggingface/datasets/issues/2792/labels{/name}',
  'comments_url': 'https://api.github.com/repos/huggingface/datasets/issues/2792/comments',
  'events_url': 'https://api.github.com/repos/huggingface/datasets/issues/2792/events',
  'html_url': 'https://github.com/huggingface/datasets/pull/2792',
  'id': 968650274,
  'node_id': 'MDExOlB1bGxSZXF1ZXN0NzEwNzUyMjc0',
  'number': 2792,
  'title': 'Update GooAQ',
  'user': {'login': 'bhavitvyamalik',
   'id': 19718818,
   'node_id': 'MDQ6VXNlcjE5NzE4ODE4',
   'avatar_url': 'https://avatars.githubusercontent.com/u/19718818?v=4',
   'gravatar_id': '',
   'url': 'https://api.github.com/users/bhavitvyamalik',
   'html_url': 'https://github.com/bhavitvyamalik',
   'followers_url': 'https://api.github.com/users/bhavitvyamalik/followers',
   'following_url': 'https://api.github.com/users/bhavitvyamalik/following{/other_user}',
   'gists_url': 'https://api.github.com/users/bhavitvyamalik/gists{/gist_id}',
   'starred_url': 'https://api.github.com/users/bhavitvyamalik/starred{/owner}{/repo}',
   'subscriptions_url': 'https://api.github.com/users/bhavitvyamalik/subscriptions',
   'organizations_url': 'https://api.github.com/users/bhavitvyamalik/orgs',
   'repos_url': 'https://api.github.com/users/bhavitvyamalik/repos',
   'events_url': 'https://api.github.com/users/bhavitvyamalik/events{/privacy}',
   'received_events_url': 'https://api.github.com/users/bhavitvyamalik/received_events',
   'type': 'User',
   'site_admin': False},
  'labels': [],
  'state': 'open',
  'locked': False,
  'assignee': None,
  'assignees': [],
  'milestone': None,
  'comments': 1,
  'created_at': '2021-08-12T11:40:18Z',
  'updated_at': '2021-08-12T12:31:17Z',
  'closed_at': None,
  'author_association': 'CONTRIBUTOR',
  'active_lock_reason': None,
  'pull_request': {'url': 'https://api.github.com/repos/huggingface/datasets/pulls/2792',
   'html_url': 'https://github.com/huggingface/datasets/pull/2792',
   'diff_url': 'https://github.com/huggingface/datasets/pull/2792.diff',
   'patch_url': 'https://github.com/huggingface/datasets/pull/2792.patch'},
  'body': '[GooAQ](https://github.com/allenai/gooaq) dataset was recently updated after splits were added for the same. This PR contains new updated GooAQ with train/val/test splits and updated README as well.',
  'performed_via_github_app': None}]`,highlighted:`[{<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792&#x27;</span>,
  <span class="hljs-string">&#x27;repository_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets&#x27;</span>,
  <span class="hljs-string">&#x27;labels_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792/labels{/name}&#x27;</span>,
  <span class="hljs-string">&#x27;comments_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792/comments&#x27;</span>,
  <span class="hljs-string">&#x27;events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792/events&#x27;</span>,
  <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792&#x27;</span>,
  <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">968650274</span>,
  <span class="hljs-string">&#x27;node_id&#x27;</span>: <span class="hljs-string">&#x27;MDExOlB1bGxSZXF1ZXN0NzEwNzUyMjc0&#x27;</span>,
  <span class="hljs-string">&#x27;number&#x27;</span>: <span class="hljs-number">2792</span>,
  <span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;Update GooAQ&#x27;</span>,
  <span class="hljs-string">&#x27;user&#x27;</span>: {<span class="hljs-string">&#x27;login&#x27;</span>: <span class="hljs-string">&#x27;bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">19718818</span>,
   <span class="hljs-string">&#x27;node_id&#x27;</span>: <span class="hljs-string">&#x27;MDQ6VXNlcjE5NzE4ODE4&#x27;</span>,
   <span class="hljs-string">&#x27;avatar_url&#x27;</span>: <span class="hljs-string">&#x27;https://avatars.githubusercontent.com/u/19718818?v=4&#x27;</span>,
   <span class="hljs-string">&#x27;gravatar_id&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,
   <span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;followers_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/followers&#x27;</span>,
   <span class="hljs-string">&#x27;following_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/following{/other_user}&#x27;</span>,
   <span class="hljs-string">&#x27;gists_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/gists{/gist_id}&#x27;</span>,
   <span class="hljs-string">&#x27;starred_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/starred{/owner}{/repo}&#x27;</span>,
   <span class="hljs-string">&#x27;subscriptions_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/subscriptions&#x27;</span>,
   <span class="hljs-string">&#x27;organizations_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/orgs&#x27;</span>,
   <span class="hljs-string">&#x27;repos_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/repos&#x27;</span>,
   <span class="hljs-string">&#x27;events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/events{/privacy}&#x27;</span>,
   <span class="hljs-string">&#x27;received_events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/received_events&#x27;</span>,
   <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;User&#x27;</span>,
   <span class="hljs-string">&#x27;site_admin&#x27;</span>: <span class="hljs-literal">False</span>},
  <span class="hljs-string">&#x27;labels&#x27;</span>: [],
  <span class="hljs-string">&#x27;state&#x27;</span>: <span class="hljs-string">&#x27;open&#x27;</span>,
  <span class="hljs-string">&#x27;locked&#x27;</span>: <span class="hljs-literal">False</span>,
  <span class="hljs-string">&#x27;assignee&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;assignees&#x27;</span>: [],
  <span class="hljs-string">&#x27;milestone&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;comments&#x27;</span>: <span class="hljs-number">1</span>,
  <span class="hljs-string">&#x27;created_at&#x27;</span>: <span class="hljs-string">&#x27;2021-08-12T11:40:18Z&#x27;</span>,
  <span class="hljs-string">&#x27;updated_at&#x27;</span>: <span class="hljs-string">&#x27;2021-08-12T12:31:17Z&#x27;</span>,
  <span class="hljs-string">&#x27;closed_at&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;author_association&#x27;</span>: <span class="hljs-string">&#x27;CONTRIBUTOR&#x27;</span>,
  <span class="hljs-string">&#x27;active_lock_reason&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;pull_request&#x27;</span>: {<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/pulls/2792&#x27;</span>,
   <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792&#x27;</span>,
   <span class="hljs-string">&#x27;diff_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792.diff&#x27;</span>,
   <span class="hljs-string">&#x27;patch_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792.patch&#x27;</span>},
  <span class="hljs-string">&#x27;body&#x27;</span>: <span class="hljs-string">&#x27;[GooAQ](https://github.com/allenai/gooaq) dataset was recently updated after splits were added for the same. This PR contains new updated GooAQ with train/val/test splits and updated README as well.&#x27;</span>,
  <span class="hljs-string">&#x27;performed_via_github_app&#x27;</span>: <span class="hljs-literal">None</span>}]`}}),Re=new yt({props:{$$slots:{default:[bh]},$$scope:{ctx:V}}}),Ms=new O({props:{code:`GITHUB_TOKEN = xxx  # Copy your GitHub token here
headers = {"Authorization": f"token {GITHUB_TOKEN}"}`,highlighted:`GITHUB_TOKEN = xxx  <span class="hljs-comment"># Copy your GitHub token here</span>
headers = {<span class="hljs-string">&quot;Authorization&quot;</span>: <span class="hljs-string">f&quot;token <span class="hljs-subst">{GITHUB_TOKEN}</span>&quot;</span>}`}}),Ue=new yt({props:{warning:!0,$$slots:{default:[xh]},$$scope:{ctx:V}}}),Os=new O({props:{code:`import time
import math
from pathlib import Path
import pandas as pd
from tqdm.notebook import tqdm


def fetch_issues(
    owner="huggingface",
    repo="datasets",
    num_issues=10_000,
    rate_limit=5_000,
    issues_path=Path("."),
):
    if not issues_path.is_dir():
        issues_path.mkdir(exist_ok=True)

    batch = []
    all_issues = []
    per_page = 100  # Number of issues to return per page
    num_pages = math.ceil(num_issues / per_page)
    base_url = "https://api.github.com/repos"

    for page in tqdm(range(num_pages)):
        # Query with state=all to get both open and closed issues
        query = f"issues?page={page}&per_page={per_page}&state=all"
        issues = requests.get(f"{base_url}/{owner}/{repo}/{query}", headers=headers)
        batch.extend(issues.json())

        if len(batch) > rate_limit and len(all_issues) < num_issues:
            all_issues.extend(batch)
            batch = []  # Flush batch for next time period
            print(f"Reached GitHub rate limit. Sleeping for one hour ...")
            time.sleep(60 * 60 + 1)

    all_issues.extend(batch)
    df = pd.DataFrame.from_records(all_issues)
    df.to_json(f"{issues_path}/{repo}-issues.jsonl", orient="records", lines=True)
    print(
        f"Downloaded all the issues for {repo}! Dataset stored at {issues_path}/{repo}-issues.jsonl"
    )`,highlighted:`<span class="hljs-keyword">import</span> time
<span class="hljs-keyword">import</span> math
<span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path
<span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd
<span class="hljs-keyword">from</span> tqdm.notebook <span class="hljs-keyword">import</span> tqdm


<span class="hljs-keyword">def</span> <span class="hljs-title function_">fetch_issues</span>(<span class="hljs-params">
    owner=<span class="hljs-string">&quot;huggingface&quot;</span>,
    repo=<span class="hljs-string">&quot;datasets&quot;</span>,
    num_issues=<span class="hljs-number">10_000</span>,
    rate_limit=<span class="hljs-number">5_000</span>,
    issues_path=Path(<span class="hljs-params"><span class="hljs-string">&quot;.&quot;</span></span>),
</span>):
    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> issues_path.is_dir():
        issues_path.mkdir(exist_ok=<span class="hljs-literal">True</span>)

    batch = []
    all_issues = []
    per_page = <span class="hljs-number">100</span>  <span class="hljs-comment"># Number of issues to return per page</span>
    num_pages = math.ceil(num_issues / per_page)
    base_url = <span class="hljs-string">&quot;https://api.github.com/repos&quot;</span>

    <span class="hljs-keyword">for</span> page <span class="hljs-keyword">in</span> tqdm(<span class="hljs-built_in">range</span>(num_pages)):
        <span class="hljs-comment"># Query with state=all to get both open and closed issues</span>
        query = <span class="hljs-string">f&quot;issues?page=<span class="hljs-subst">{page}</span>&amp;per_page=<span class="hljs-subst">{per_page}</span>&amp;state=all&quot;</span>
        issues = requests.get(<span class="hljs-string">f&quot;<span class="hljs-subst">{base_url}</span>/<span class="hljs-subst">{owner}</span>/<span class="hljs-subst">{repo}</span>/<span class="hljs-subst">{query}</span>&quot;</span>, headers=headers)
        batch.extend(issues.json())

        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(batch) &gt; rate_limit <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(all_issues) &lt; num_issues:
            all_issues.extend(batch)
            batch = []  <span class="hljs-comment"># Flush batch for next time period</span>
            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Reached GitHub rate limit. Sleeping for one hour ...&quot;</span>)
            time.sleep(<span class="hljs-number">60</span> * <span class="hljs-number">60</span> + <span class="hljs-number">1</span>)

    all_issues.extend(batch)
    df = pd.DataFrame.from_records(all_issues)
    df.to_json(<span class="hljs-string">f&quot;<span class="hljs-subst">{issues_path}</span>/<span class="hljs-subst">{repo}</span>-issues.jsonl&quot;</span>, orient=<span class="hljs-string">&quot;records&quot;</span>, lines=<span class="hljs-literal">True</span>)
    <span class="hljs-built_in">print</span>(
        <span class="hljs-string">f&quot;Downloaded all the issues for <span class="hljs-subst">{repo}</span>! Dataset stored at <span class="hljs-subst">{issues_path}</span>/<span class="hljs-subst">{repo}</span>-issues.jsonl&quot;</span>
    )`}}),Ts=new O({props:{code:`# En fonction de votre connexion Internet, l'ex\xE9cution peut prendre plusieurs minutes...
fetch_issues()`,highlighted:`<span class="hljs-comment"># En fonction de votre connexion Internet, l&#x27;ex\xE9cution peut prendre plusieurs minutes...</span>
fetch_issues()`}}),As=new O({props:{code:`issues_dataset = load_dataset("json", data_files="datasets-issues.jsonl", split="train")
issues_dataset`,highlighted:`issues_dataset = load_dataset(<span class="hljs-string">&quot;json&quot;</span>, data_files=<span class="hljs-string">&quot;datasets-issues.jsonl&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
issues_dataset`}}),Gs=new O({props:{code:`Dataset({
    features: ['url', 'repository_url', 'labels_url', 'comments_url', 'events_url', 'html_url', 'id', 'node_id', 'number', 'title', 'user', 'labels', 'state', 'locked', 'assignee', 'assignees', 'milestone', 'comments', 'created_at', 'updated_at', 'closed_at', 'author_association', 'active_lock_reason', 'pull_request', 'body', 'timeline_url', 'performed_via_github_app'],
    num_rows: 3019
})`,highlighted:`Dataset({
    features: [<span class="hljs-string">&#x27;url&#x27;</span>, <span class="hljs-string">&#x27;repository_url&#x27;</span>, <span class="hljs-string">&#x27;labels_url&#x27;</span>, <span class="hljs-string">&#x27;comments_url&#x27;</span>, <span class="hljs-string">&#x27;events_url&#x27;</span>, <span class="hljs-string">&#x27;html_url&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;node_id&#x27;</span>, <span class="hljs-string">&#x27;number&#x27;</span>, <span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;user&#x27;</span>, <span class="hljs-string">&#x27;labels&#x27;</span>, <span class="hljs-string">&#x27;state&#x27;</span>, <span class="hljs-string">&#x27;locked&#x27;</span>, <span class="hljs-string">&#x27;assignee&#x27;</span>, <span class="hljs-string">&#x27;assignees&#x27;</span>, <span class="hljs-string">&#x27;milestone&#x27;</span>, <span class="hljs-string">&#x27;comments&#x27;</span>, <span class="hljs-string">&#x27;created_at&#x27;</span>, <span class="hljs-string">&#x27;updated_at&#x27;</span>, <span class="hljs-string">&#x27;closed_at&#x27;</span>, <span class="hljs-string">&#x27;author_association&#x27;</span>, <span class="hljs-string">&#x27;active_lock_reason&#x27;</span>, <span class="hljs-string">&#x27;pull_request&#x27;</span>, <span class="hljs-string">&#x27;body&#x27;</span>, <span class="hljs-string">&#x27;timeline_url&#x27;</span>, <span class="hljs-string">&#x27;performed_via_github_app&#x27;</span>],
    num_rows: <span class="hljs-number">3019</span>
})`}}),Us=new Wt({}),Ss=new O({props:{code:`sample = issues_dataset.shuffle(seed=666).select(range(3))

# Print out the URL and pull request entries
for url, pr in zip(sample["html_url"], sample["pull_request"]):
    print(f">> URL: {url}")
    print(f">> Pull request: {pr}\\n")`,highlighted:`sample = issues_dataset.shuffle(seed=<span class="hljs-number">666</span>).select(<span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>))

<span class="hljs-comment"># Print out the URL and pull request entries</span>
<span class="hljs-keyword">for</span> url, pr <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(sample[<span class="hljs-string">&quot;html_url&quot;</span>], sample[<span class="hljs-string">&quot;pull_request&quot;</span>]):
    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;&gt;&gt; URL: <span class="hljs-subst">{url}</span>&quot;</span>)
    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;&gt;&gt; Pull request: <span class="hljs-subst">{pr}</span>\\n&quot;</span>)`}}),Ls=new O({props:{code:`>> URL: https://github.com/huggingface/datasets/pull/850
>> Pull request: {'url': 'https://api.github.com/repos/huggingface/datasets/pulls/850', 'html_url': 'https://github.com/huggingface/datasets/pull/850', 'diff_url': 'https://github.com/huggingface/datasets/pull/850.diff', 'patch_url': 'https://github.com/huggingface/datasets/pull/850.patch'}

>> URL: https://github.com/huggingface/datasets/issues/2773
>> Pull request: None

>> URL: https://github.com/huggingface/datasets/pull/783
>> Pull request: {'url': 'https://api.github.com/repos/huggingface/datasets/pulls/783', 'html_url': 'https://github.com/huggingface/datasets/pull/783', 'diff_url': 'https://github.com/huggingface/datasets/pull/783.diff', 'patch_url': 'https://github.com/huggingface/datasets/pull/783.patch'}`,highlighted:`&gt;&gt; URL: https://github.com/huggingface/datasets/pull/<span class="hljs-number">850</span>
&gt;&gt; Pull request: {<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/pulls/850&#x27;</span>, <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/850&#x27;</span>, <span class="hljs-string">&#x27;diff_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/850.diff&#x27;</span>, <span class="hljs-string">&#x27;patch_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/850.patch&#x27;</span>}

&gt;&gt; URL: https://github.com/huggingface/datasets/issues/<span class="hljs-number">2773</span>
&gt;&gt; Pull request: <span class="hljs-literal">None</span>

&gt;&gt; URL: https://github.com/huggingface/datasets/pull/<span class="hljs-number">783</span>
&gt;&gt; Pull request: {<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/pulls/783&#x27;</span>, <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/783&#x27;</span>, <span class="hljs-string">&#x27;diff_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/783.diff&#x27;</span>, <span class="hljs-string">&#x27;patch_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/783.patch&#x27;</span>}`}}),Fs=new O({props:{code:`issues_dataset = issues_dataset.map(
    lambda x: {"is_pull_request": False if x["pull_request"] is None else True}
)`,highlighted:`issues_dataset = issues_dataset.<span class="hljs-built_in">map</span>(
    <span class="hljs-keyword">lambda</span> x: {<span class="hljs-string">&quot;is_pull_request&quot;</span>: <span class="hljs-literal">False</span> <span class="hljs-keyword">if</span> x[<span class="hljs-string">&quot;pull_request&quot;</span>] <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">True</span>}
)`}}),Ve=new yt({props:{$$slots:{default:[jh]},$$scope:{ctx:V}}}),Vs=new Wt({}),Js=new O({props:{code:`issue_number = 2792
url = f"https://api.github.com/repos/huggingface/datasets/issues/{issue_number}/comments"
response = requests.get(url, headers=headers)
response.json()`,highlighted:`issue_number = <span class="hljs-number">2792</span>
url = <span class="hljs-string">f&quot;https://api.github.com/repos/huggingface/datasets/issues/<span class="hljs-subst">{issue_number}</span>/comments&quot;</span>
response = requests.get(url, headers=headers)
response.json()`}}),Ks=new O({props:{code:`[{'url': 'https://api.github.com/repos/huggingface/datasets/issues/comments/897594128',
  'html_url': 'https://github.com/huggingface/datasets/pull/2792#issuecomment-897594128',
  'issue_url': 'https://api.github.com/repos/huggingface/datasets/issues/2792',
  'id': 897594128,
  'node_id': 'IC_kwDODunzps41gDMQ',
  'user': {'login': 'bhavitvyamalik',
   'id': 19718818,
   'node_id': 'MDQ6VXNlcjE5NzE4ODE4',
   'avatar_url': 'https://avatars.githubusercontent.com/u/19718818?v=4',
   'gravatar_id': '',
   'url': 'https://api.github.com/users/bhavitvyamalik',
   'html_url': 'https://github.com/bhavitvyamalik',
   'followers_url': 'https://api.github.com/users/bhavitvyamalik/followers',
   'following_url': 'https://api.github.com/users/bhavitvyamalik/following{/other_user}',
   'gists_url': 'https://api.github.com/users/bhavitvyamalik/gists{/gist_id}',
   'starred_url': 'https://api.github.com/users/bhavitvyamalik/starred{/owner}{/repo}',
   'subscriptions_url': 'https://api.github.com/users/bhavitvyamalik/subscriptions',
   'organizations_url': 'https://api.github.com/users/bhavitvyamalik/orgs',
   'repos_url': 'https://api.github.com/users/bhavitvyamalik/repos',
   'events_url': 'https://api.github.com/users/bhavitvyamalik/events{/privacy}',
   'received_events_url': 'https://api.github.com/users/bhavitvyamalik/received_events',
   'type': 'User',
   'site_admin': False},
  'created_at': '2021-08-12T12:21:52Z',
  'updated_at': '2021-08-12T12:31:17Z',
  'author_association': 'CONTRIBUTOR',
  'body': "@albertvillanova my tests are failing here:\\r\\n\`\`\`\\r\\ndataset_name = 'gooaq'\\r\\n\\r\\n    def test_load_dataset(self, dataset_name):\\r\\n        configs = self.dataset_tester.load_all_configs(dataset_name, is_local=True)[:1]\\r\\n>       self.dataset_tester.check_load_dataset(dataset_name, configs, is_local=True, use_local_dummy_data=True)\\r\\n\\r\\ntests/test_dataset_common.py:234: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\ntests/test_dataset_common.py:187: in check_load_dataset\\r\\n    self.parent.assertTrue(len(dataset[split]) > 0)\\r\\nE   AssertionError: False is not true\\r\\n\`\`\`\\r\\nWhen I try loading dataset on local machine it works fine. Any suggestions on how can I avoid this error?",
  'performed_via_github_app': None}]`,highlighted:`[{<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/comments/897594128&#x27;</span>,
  <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792#issuecomment-897594128&#x27;</span>,
  <span class="hljs-string">&#x27;issue_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792&#x27;</span>,
  <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">897594128</span>,
  <span class="hljs-string">&#x27;node_id&#x27;</span>: <span class="hljs-string">&#x27;IC_kwDODunzps41gDMQ&#x27;</span>,
  <span class="hljs-string">&#x27;user&#x27;</span>: {<span class="hljs-string">&#x27;login&#x27;</span>: <span class="hljs-string">&#x27;bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">19718818</span>,
   <span class="hljs-string">&#x27;node_id&#x27;</span>: <span class="hljs-string">&#x27;MDQ6VXNlcjE5NzE4ODE4&#x27;</span>,
   <span class="hljs-string">&#x27;avatar_url&#x27;</span>: <span class="hljs-string">&#x27;https://avatars.githubusercontent.com/u/19718818?v=4&#x27;</span>,
   <span class="hljs-string">&#x27;gravatar_id&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,
   <span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;followers_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/followers&#x27;</span>,
   <span class="hljs-string">&#x27;following_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/following{/other_user}&#x27;</span>,
   <span class="hljs-string">&#x27;gists_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/gists{/gist_id}&#x27;</span>,
   <span class="hljs-string">&#x27;starred_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/starred{/owner}{/repo}&#x27;</span>,
   <span class="hljs-string">&#x27;subscriptions_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/subscriptions&#x27;</span>,
   <span class="hljs-string">&#x27;organizations_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/orgs&#x27;</span>,
   <span class="hljs-string">&#x27;repos_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/repos&#x27;</span>,
   <span class="hljs-string">&#x27;events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/events{/privacy}&#x27;</span>,
   <span class="hljs-string">&#x27;received_events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/received_events&#x27;</span>,
   <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;User&#x27;</span>,
   <span class="hljs-string">&#x27;site_admin&#x27;</span>: <span class="hljs-literal">False</span>},
  <span class="hljs-string">&#x27;created_at&#x27;</span>: <span class="hljs-string">&#x27;2021-08-12T12:21:52Z&#x27;</span>,
  <span class="hljs-string">&#x27;updated_at&#x27;</span>: <span class="hljs-string">&#x27;2021-08-12T12:31:17Z&#x27;</span>,
  <span class="hljs-string">&#x27;author_association&#x27;</span>: <span class="hljs-string">&#x27;CONTRIBUTOR&#x27;</span>,
  <span class="hljs-string">&#x27;body&#x27;</span>: <span class="hljs-string">&quot;@albertvillanova my tests are failing here:\\r\\n\`\`\`\\r\\ndataset_name = &#x27;gooaq&#x27;\\r\\n\\r\\n    def test_load_dataset(self, dataset_name):\\r\\n        configs = self.dataset_tester.load_all_configs(dataset_name, is_local=True)[:1]\\r\\n&gt;       self.dataset_tester.check_load_dataset(dataset_name, configs, is_local=True, use_local_dummy_data=True)\\r\\n\\r\\ntests/test_dataset_common.py:234: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\ntests/test_dataset_common.py:187: in check_load_dataset\\r\\n    self.parent.assertTrue(len(dataset[split]) &gt; 0)\\r\\nE   AssertionError: False is not true\\r\\n\`\`\`\\r\\nWhen I try loading dataset on local machine it works fine. Any suggestions on how can I avoid this error?&quot;</span>,
  <span class="hljs-string">&#x27;performed_via_github_app&#x27;</span>: <span class="hljs-literal">None</span>}]`}}),Xs=new O({props:{code:`def get_comments(issue_number):
    url = f"https://api.github.com/repos/huggingface/datasets/issues/{issue_number}/comments"
    response = requests.get(url, headers=headers)
    return [r["body"] for r in response.json()]


# Testez notre fonction fonctionne comme pr\xE9vu
get_comments(2792)`,highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">get_comments</span>(<span class="hljs-params">issue_number</span>):
    url = <span class="hljs-string">f&quot;https://api.github.com/repos/huggingface/datasets/issues/<span class="hljs-subst">{issue_number}</span>/comments&quot;</span>
    response = requests.get(url, headers=headers)
    <span class="hljs-keyword">return</span> [r[<span class="hljs-string">&quot;body&quot;</span>] <span class="hljs-keyword">for</span> r <span class="hljs-keyword">in</span> response.json()]


<span class="hljs-comment"># Testez notre fonction fonctionne comme pr\xE9vu</span>
get_comments(<span class="hljs-number">2792</span>)`}}),Ws=new O({props:{code:"[\"@albertvillanova my tests are failing here:\\r\\n```\\r\\ndataset_name = 'gooaq'\\r\\n\\r\\n    def test_load_dataset(self, dataset_name):\\r\\n        configs = self.dataset_tester.load_all_configs(dataset_name, is_local=True)[:1]\\r\\n>       self.dataset_tester.check_load_dataset(dataset_name, configs, is_local=True, use_local_dummy_data=True)\\r\\n\\r\\ntests/test_dataset_common.py:234: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\ntests/test_dataset_common.py:187: in check_load_dataset\\r\\n    self.parent.assertTrue(len(dataset[split]) > 0)\\r\\nE   AssertionError: False is not true\\r\\n```\\r\\nWhen I try loading dataset on local machine it works fine. Any suggestions on how can I avoid this error?\"]",highlighted:'[<span class="hljs-string">&quot;@albertvillanova my tests are failing here:\\r\\n```\\r\\ndataset_name = &#x27;gooaq&#x27;\\r\\n\\r\\n    def test_load_dataset(self, dataset_name):\\r\\n        configs = self.dataset_tester.load_all_configs(dataset_name, is_local=True)[:1]\\r\\n&gt;       self.dataset_tester.check_load_dataset(dataset_name, configs, is_local=True, use_local_dummy_data=True)\\r\\n\\r\\ntests/test_dataset_common.py:234: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\ntests/test_dataset_common.py:187: in check_load_dataset\\r\\n    self.parent.assertTrue(len(dataset[split]) &gt; 0)\\r\\nE   AssertionError: False is not true\\r\\n```\\r\\nWhen I try loading dataset on local machine it works fine. Any suggestions on how can I avoid this error?&quot;</span>]'}}),Ys=new O({props:{code:`# Selon votre connexion internet, cela peut prendre quelques minutes...
issues_with_comments_dataset = issues_dataset.map(
    lambda x: {"comments": get_comments(x["number"])}
)`,highlighted:`<span class="hljs-comment"># Selon votre connexion internet, cela peut prendre quelques minutes...</span>
issues_with_comments_dataset = issues_dataset.<span class="hljs-built_in">map</span>(
    <span class="hljs-keyword">lambda</span> x: {<span class="hljs-string">&quot;comments&quot;</span>: get_comments(x[<span class="hljs-string">&quot;number&quot;</span>])}
)`}}),et=new O({props:{code:'issues_with_comments_dataset.to_json("issues-datasets-with-comments.jsonl")',highlighted:'issues_with_comments_dataset.to_json(<span class="hljs-string">&quot;issues-datasets-with-comments.jsonl&quot;</span>)'}}),st=new Wt({}),tt=new _h({props:{id:"HaN6qCr_Afc"}}),at=new O({props:{code:`from huggingface_hub import list_datasets

all_datasets = list_datasets()
print(f"Number of datasets on Hub: {len(all_datasets)}")
print(all_datasets[0])`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> list_datasets

all_datasets = list_datasets()
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Number of datasets on Hub: <span class="hljs-subst">{<span class="hljs-built_in">len</span>(all_datasets)}</span>&quot;</span>)
<span class="hljs-built_in">print</span>(all_datasets[<span class="hljs-number">0</span>])`}}),nt=new O({props:{code:`Number of datasets on Hub: 1487
Dataset Name: acronym_identification, Tags: ['annotations_creators:expert-generated', 'language_creators:found', 'languages:en', 'licenses:mit', 'multilinguality:monolingual', 'size_categories:10K<n<100K', 'source_datasets:original', 'task_categories:structure-prediction', 'task_ids:structure-prediction-other-acronym-identification']`,highlighted:`Number of datasets on Hub: <span class="hljs-number">1487</span>
Dataset Name: acronym_identification, Tags: [<span class="hljs-string">&#x27;annotations_creators:expert-generated&#x27;</span>, <span class="hljs-string">&#x27;language_creators:found&#x27;</span>, <span class="hljs-string">&#x27;languages:en&#x27;</span>, <span class="hljs-string">&#x27;licenses:mit&#x27;</span>, <span class="hljs-string">&#x27;multilinguality:monolingual&#x27;</span>, <span class="hljs-string">&#x27;size_categories:10K&lt;n&lt;100K&#x27;</span>, <span class="hljs-string">&#x27;source_datasets:original&#x27;</span>, <span class="hljs-string">&#x27;task_categories:structure-prediction&#x27;</span>, <span class="hljs-string">&#x27;task_ids:structure-prediction-other-acronym-identification&#x27;</span>]`}}),lt=new O({props:{code:`from huggingface_hub import notebook_login

notebook_login()`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login

notebook_login()`}}),rt=new O({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}}),ot=new O({props:{code:`from huggingface_hub import create_repo

repo_url = create_repo(name="github-issues", repo_type="dataset")
repo_url`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_repo

repo_url = create_repo(name=<span class="hljs-string">&quot;github-issues&quot;</span>, repo_type=<span class="hljs-string">&quot;dataset&quot;</span>)
repo_url`}}),it=new O({props:{code:"'https://huggingface.co/datasets/lewtun/github-issues'",highlighted:'<span class="hljs-string">&#x27;https://huggingface.co/datasets/lewtun/github-issues&#x27;</span>'}}),Ye=new yt({props:{$$slots:{default:[Eh]},$$scope:{ctx:V}}}),ut=new O({props:{code:`from huggingface_hub import Repository

repo = Repository(local_dir="github-issues", clone_from=repo_url)
!cp datasets-issues-with-comments.jsonl github-issues/`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> Repository

repo = Repository(local_dir=<span class="hljs-string">&quot;github-issues&quot;</span>, clone_from=repo_url)
!cp datasets-issues-<span class="hljs-keyword">with</span>-comments.jsonl github-issues/`}}),pt=new O({props:{code:'repo.lfs_track("*.jsonl")',highlighted:'repo.lfs_track(<span class="hljs-string">&quot;*.jsonl&quot;</span>)'}}),ct=new O({props:{code:"repo.push_to_hub()",highlighted:"repo.push_to_hub()"}}),ht=new O({props:{code:`remote_dataset = load_dataset("lewtun/github-issues", split="train")
remote_dataset`,highlighted:`remote_dataset = load_dataset(<span class="hljs-string">&quot;lewtun/github-issues&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
remote_dataset`}}),ft=new O({props:{code:`Dataset({
    features: ['url', 'repository_url', 'labels_url', 'comments_url', 'events_url', 'html_url', 'id', 'node_id', 'number', 'title', 'user', 'labels', 'state', 'locked', 'assignee', 'assignees', 'milestone', 'comments', 'created_at', 'updated_at', 'closed_at', 'author_association', 'active_lock_reason', 'pull_request', 'body', 'performed_via_github_app', 'is_pull_request'],
    num_rows: 2855
})`,highlighted:`Dataset({
    features: [<span class="hljs-string">&#x27;url&#x27;</span>, <span class="hljs-string">&#x27;repository_url&#x27;</span>, <span class="hljs-string">&#x27;labels_url&#x27;</span>, <span class="hljs-string">&#x27;comments_url&#x27;</span>, <span class="hljs-string">&#x27;events_url&#x27;</span>, <span class="hljs-string">&#x27;html_url&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;node_id&#x27;</span>, <span class="hljs-string">&#x27;number&#x27;</span>, <span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;user&#x27;</span>, <span class="hljs-string">&#x27;labels&#x27;</span>, <span class="hljs-string">&#x27;state&#x27;</span>, <span class="hljs-string">&#x27;locked&#x27;</span>, <span class="hljs-string">&#x27;assignee&#x27;</span>, <span class="hljs-string">&#x27;assignees&#x27;</span>, <span class="hljs-string">&#x27;milestone&#x27;</span>, <span class="hljs-string">&#x27;comments&#x27;</span>, <span class="hljs-string">&#x27;created_at&#x27;</span>, <span class="hljs-string">&#x27;updated_at&#x27;</span>, <span class="hljs-string">&#x27;closed_at&#x27;</span>, <span class="hljs-string">&#x27;author_association&#x27;</span>, <span class="hljs-string">&#x27;active_lock_reason&#x27;</span>, <span class="hljs-string">&#x27;pull_request&#x27;</span>, <span class="hljs-string">&#x27;body&#x27;</span>, <span class="hljs-string">&#x27;performed_via_github_app&#x27;</span>, <span class="hljs-string">&#x27;is_pull_request&#x27;</span>],
    num_rows: <span class="hljs-number">2855</span>
})`}}),ss=new yt({props:{$$slots:{default:[$h]},$$scope:{ctx:V}}}),gt=new Wt({}),ls=new yt({props:{$$slots:{default:[qh]},$$scope:{ctx:V}}}),os=new yt({props:{$$slots:{default:[yh]},$$scope:{ctx:V}}}),{c(){p=l("meta"),C=c(),h=l("h1"),k=l("a"),H=l("span"),g(f.$$.fragment),z=c(),N=l("span"),E=a("Cr\xE9ation de votre propre jeu de donn\xE9es"),T=c(),g(D.$$.fragment),y=c(),w=l("p"),M=a("Parfois, le jeu de donn\xE9es dont vous avez besoin pour cr\xE9er une application de NLP n\u2019existe pas. Vous devrez donc le cr\xE9er vous-m\xEAme. Dans cette section, nous allons vous montrer comment cr\xE9er un corpus de "),q=l("a"),P=a("probl\xE8mes GitHub"),G=a(", qui sont couramment utilis\xE9s pour suivre les bogues ou les fonctionnalit\xE9s dans les d\xE9p\xF4ts GitHub. Ce corpus pourrait \xEAtre utilis\xE9 \xE0 diverses fins, notamment :"),$=c(),A=l("ul"),S=l("li"),B=a("explorer combien de temps il faut pour fermer les probl\xE8mes ouverts ou les "),Q=l("em"),ee=a("pull requests"),De=c(),ue=l("li"),fs=a("entra\xEEner d\u2019un "),pe=l("em"),I=a("classificateur multilabel"),wt=a(" capable d\u2019\xE9tiqueter les probl\xE8mes avec des m\xE9tadonn\xE9es bas\xE9es sur la description du probl\xE8me (par exemple, \u201Cbogue\u201D, \u201Cam\xE9lioration\u201D ou \u201Cquestion\u201D)"),kt=c(),Oe=l("li"),Dt=a("cr\xE9er un moteur de recherche s\xE9mantique pour trouver les probl\xE8mes correspondant \xE0 la requ\xEAte d\u2019un utilisateur"),gs=c(),ce=l("p"),zt=a("Ici, nous nous concentrerons sur la cr\xE9ation du corpus, et dans la section suivante, nous aborderons l\u2019application de recherche s\xE9mantique. Pour garder les choses m\xE9ta, nous utiliserons les probl\xE8mes GitHub associ\xE9s \xE0 un projet open source populaire : \u{1F917} "),Te=l("em"),Xr=a("Datasets"),Wr=a(" ! Voyons comment obtenir les donn\xE9es et explorons les informations contenues dans ces probl\xE8mes."),Zn=c(),ze=l("h2"),Ae=l("a"),Yt=l("span"),g(_s.$$.fragment),Yr=c(),ea=l("span"),eo=a("Obtenir les donn\xE9es"),Jn=c(),de=l("p"),so=a("Vous pouvez trouver tous les probl\xE8mes dans \u{1F917} "),sa=l("em"),to=a("Datasets"),ao=a(" en acc\xE9dant \xE0 l\u2019"),vs=l("a"),no=a("onglet \xAB Issues \xBB"),lo=a(" du d\xE9p\xF4t. Comme le montre la capture d\u2019\xE9cran suivante, au moment de la r\xE9daction, il y avait 331 probl\xE8mes ouverts et 668 probl\xE8mes ferm\xE9s."),Kn=c(),bs=l("div"),xs=l("img"),Xn=c(),Pt=l("p"),ro=a("Si vous cliquez sur l\u2019un de ces probl\xE8mes, vous constaterez qu\u2019il contient un titre, une description et un ensemble d\u2019\xE9tiquettes qui caract\xE9risent le probl\xE8me. Un exemple est montr\xE9 dans la capture d\u2019\xE9cran ci-dessous."),Wn=c(),js=l("div"),Es=l("img"),Yn=c(),he=l("p"),oo=a("Pour t\xE9l\xE9charger tous les probl\xE8mes du d\xE9p\xF4t, nous utilisons l\u2019"),$s=l("a"),io=a("API REST GitHub"),uo=a(" pour interroger le point de terminaison "),qs=l("a"),ta=l("code"),po=a("Issues"),co=a(". Ce point de terminaison renvoie une liste d\u2019objets JSON. Chaque objet contenant un grand nombre de champs qui incluent le titre et la description ainsi que des m\xE9tadonn\xE9es sur l\u2019\xE9tat du probl\xE8me, etc."),el=c(),Ge=l("p"),mo=a("Un moyen pratique de t\xE9l\xE9charger les probl\xE8mes consiste \xE0 utiliser la biblioth\xE8que "),aa=l("code"),ho=a("requests"),fo=a(", qui est la m\xE9thode standard pour effectuer des requ\xEAtes HTTP en Python. Vous pouvez installer la biblioth\xE8que en ex\xE9cutant :"),sl=c(),g(ys.$$.fragment),tl=c(),fe=l("p"),go=a("Une fois la biblioth\xE8que install\xE9e, vous pouvez envoyer des requ\xEAtes GET au point de terminaison "),na=l("code"),_o=a("Issues"),vo=a(" en appelant la fonction "),la=l("code"),bo=a("requests.get()"),xo=a(". Par exemple, vous pouvez ex\xE9cuter la commande suivante pour r\xE9cup\xE9rer le premier num\xE9ro sur la premi\xE8re page :"),al=c(),g(ws.$$.fragment),nl=c(),Ie=l("p"),jo=a("L\u2019objet "),ra=l("code"),Eo=a("response"),$o=a(" contient de nombreuses informations utiles sur la requ\xEAte, y compris le code d\u2019\xE9tat HTTP :"),ll=c(),g(ks.$$.fragment),rl=c(),g(Ds.$$.fragment),ol=c(),se=l("p"),qo=a("o\xF9 un statut "),oa=l("code"),yo=a("200"),wo=a(" signifie que la requ\xEAte a r\xE9ussi (vous pouvez trouver une liste des codes de statut HTTP possibles "),zs=l("a"),ko=a("ici"),Do=a("). Ce qui nous int\xE9resse vraiment, cependant, c\u2019est le "),ia=l("em"),zo=a("payload"),Po=a(", qui peut \xEAtre consult\xE9 dans diff\xE9rents formats comme les octets, les cha\xEEnes ou JSON. Comme nous savons que nos probl\xE8mes sont au format JSON, examinons la charge utile comme suit :"),il=c(),g(Ps.$$.fragment),ul=c(),g(Hs.$$.fragment),pl=c(),te=l("p"),Ho=a("Waouh, \xE7a fait beaucoup d\u2019informations ! Nous pouvons voir des champs utiles comme "),ua=l("code"),Co=a("title"),No=a(", "),pa=l("code"),Mo=a("body"),Oo=a(" et "),ca=l("code"),To=a("number"),Ao=a(" qui d\xE9crivent le probl\xE8me, ainsi que des informations sur l\u2019utilisateur GitHub qui a ouvert le probl\xE8me."),cl=c(),g(Re.$$.fragment),ml=c(),Z=l("p"),Go=a("Comme d\xE9crit dans la "),Cs=l("a"),Io=a("documentation GitHub"),Ro=a(", les requ\xEAtes non authentifi\xE9es sont limit\xE9es \xE0 60 requ\xEAtes par heure. Bien que vous puissiez augmenter le param\xE8tre de requ\xEAte "),ma=l("code"),Uo=a("per_page"),So=a(" pour r\xE9duire le nombre de requ\xEAtes que vous effectuez, vous atteindrez toujours la limite de d\xE9bit sur tout d\xE9p\xF4t contenant des milliers de probl\xE8mes. Donc, \xE0 la place, vous devez suivre les "),Ns=l("a"),Lo=a("instructions de GitHub"),Fo=a(" sur la cr\xE9ation d\u2019un "),da=l("em"),Vo=a("jeton d\u2019acc\xE8s personnel"),Bo=a(" afin que vous peut augmenter la limite de d\xE9bit \xE0 5 000 requ\xEAtes par heure. Une fois que vous avez votre "),ha=l("em"),Qo=a("token"),Zo=a(", vous pouvez l\u2019inclure dans l\u2019en-t\xEAte de la requ\xEAte :"),dl=c(),g(Ms.$$.fragment),hl=c(),g(Ue.$$.fragment),fl=c(),Ht=l("p"),Jo=a("Maintenant que nous avons notre jeton d\u2019acc\xE8s, cr\xE9ons une fonction qui peut t\xE9l\xE9charger tous les probl\xE8mes depuis un r\xE9f\xE9rentiel GitHub :"),gl=c(),g(Os.$$.fragment),_l=c(),ae=l("p"),Ko=a("D\xE9sormais, lorsque nous appellerons "),fa=l("code"),Xo=a("fetch_issues()"),Wo=a(", tous les probl\xE8mes seront t\xE9l\xE9charg\xE9s par batchs pour \xE9viter de d\xE9passer la limite de GitHub sur le nombre de requ\xEAtes par heure. Le r\xE9sultat sera stock\xE9 dans un fichier "),ga=l("em"),Yo=a("repository_name-issues.jsonl"),ei=a(", o\xF9 chaque ligne est un objet JSON qui repr\xE9sente un probl\xE8me. Utilisons cette fonction pour saisir tous les probl\xE8mes de \u{1F917} "),_a=l("em"),si=a("Datasets"),ti=a(" :"),vl=c(),g(Ts.$$.fragment),bl=c(),Se=l("p"),ai=a("Une fois les probl\xE8mes t\xE9l\xE9charg\xE9s, nous pouvons les charger localement en utilisant nos nouvelles comp\xE9tences de "),Ct=l("a"),ni=a("section 2"),li=a(" :"),xl=c(),g(As.$$.fragment),jl=c(),g(Gs.$$.fragment),El=c(),X=l("p"),ri=a("G\xE9nial, nous avons cr\xE9\xE9 notre premier jeu de donn\xE9es \xE0 partir de rien ! Mais pourquoi y a-t-il plusieurs milliers de probl\xE8mes alors que l\u2019"),Is=l("a"),oi=a("onglet \xAB Issues \xBB"),ii=a(" de la librairie \u{1F917} "),va=l("em"),ui=a("Datasets"),pi=a(" n\u2019affiche qu\u2019environ 1 000 probl\xE8mes au total \u{1F914} ? Comme d\xE9crit dans la "),Rs=l("a"),ci=a("documentation GitHub"),mi=a(", c\u2019est parce que nous avons t\xE9l\xE9charg\xE9 toutes les "),ba=l("em"),di=a("pull requests"),hi=a(" \xE9galement :"),$l=c(),Nt=l("blockquote"),F=l("p"),fi=a("L\u2019API REST v3 de GitHub consid\xE8re chaque "),xa=l("em"),gi=a("pull request"),_i=a(" comme un probl\xE8me, mais chaque probl\xE8me n\u2019est pas une "),ja=l("em"),vi=a("pull request"),bi=a(". Pour cette raison, les points de terminaison \xAB Issues \xBB peuvent renvoyer \xE0 la fois des probl\xE8mes et des "),Ea=l("em"),xi=a("pull requests"),ji=a(" dans la r\xE9ponse. Vous pouvez identifier les "),$a=l("em"),Ei=a("pull requests"),$i=a(" par la cl\xE9 "),qa=l("code"),qi=a("pull_request"),yi=a(". Sachez que l\u2019identifiant d\u2019une "),ya=l("em"),wi=a("pull request"),ki=a(" renvoy\xE9e par les points de terminaison \xAB Issues \xBB sera un identifiant de probl\xE8me."),ql=c(),Le=l("p"),Di=a("\xC9tant donn\xE9 que le contenu des \xAB Issues \xBB et des "),wa=l("em"),zi=a("pull request"),Pi=a(" est assez diff\xE9rent, proc\xE9dons \xE0 un pr\xE9traitement mineur pour nous permettre de les distinguer."),yl=c(),Pe=l("h2"),Fe=l("a"),ka=l("span"),g(Us.$$.fragment),Hi=c(),Da=l("span"),Ci=a("Nettoyer les donn\xE9es"),wl=c(),R=l("p"),Ni=a("L\u2019extrait ci-dessus de la documentation de GitHub nous indique que la colonne "),za=l("code"),Mi=a("pull_request"),Oi=a(" peut \xEAtre utilis\xE9e pour diff\xE9rencier les "),Pa=l("em"),Ti=a("issues"),Ai=a(" et les "),Ha=l("em"),Gi=a("pull requests"),Ii=a(". Regardons un \xE9chantillon al\xE9atoire pour voir quelle est la diff\xE9rence. Comme nous l\u2019avons fait dans "),Mt=l("a"),Ri=a("section 3"),Ui=a(", nous allons encha\xEEner "),Ca=l("code"),Si=a("Dataset.shuffle()"),Li=a(" et "),Na=l("code"),Fi=a("Dataset.select()"),Vi=a(" pour cr\xE9er un \xE9chantillon al\xE9atoire, puis compresser "),Ma=l("code"),Bi=a("html_url"),Qi=a(" et "),Oa=l("code"),Zi=a("pull_request"),Ji=a(" afin que nous puissions comparer les diff\xE9rentes URL :"),kl=c(),g(Ss.$$.fragment),Dl=c(),g(Ls.$$.fragment),zl=c(),J=l("p"),Ki=a("Ici, nous pouvons voir que chaque "),Ta=l("em"),Xi=a("pull request"),Wi=a(" est associ\xE9e \xE0 diverses URL, tandis que les probl\xE8mes ordinaires ont une entr\xE9e "),Aa=l("code"),Yi=a("None"),eu=a(". Nous pouvons utiliser cette distinction pour cr\xE9er une nouvelle colonne "),Ga=l("code"),su=a("is_pull_request"),tu=a(" qui v\xE9rifie si le champ "),Ia=l("code"),au=a("pull_request"),nu=a(" est "),Ra=l("code"),lu=a("None"),ru=a(" ou non :"),Pl=c(),g(Fs.$$.fragment),Hl=c(),g(Ve.$$.fragment),Cl=c(),Ot=l("p"),ou=a("Bien que nous puissions continuer \xE0 nettoyer davantage le jeu de donn\xE9es en supprimant ou en renommant certaines colonnes, il est g\xE9n\xE9ralement recommand\xE9 de le conserver aussi brut que possible \xE0 ce stade afin qu\u2019il puisse \xEAtre facilement utilis\xE9 dans plusieurs applications."),Nl=c(),ge=l("p"),iu=a("Avant de pousser notre jeu de donn\xE9es vers le "),Ua=l("em"),uu=a("Hub"),pu=a(" d\u2019Hugging Face, traitons une chose manquante : les commentaires associ\xE9s \xE0 chaque probl\xE8me et "),Sa=l("em"),cu=a("pull requests"),mu=a(". Nous les ajouterons ensuite avec l\u2019API GitHub REST !"),Ml=c(),He=l("h2"),Be=l("a"),La=l("span"),g(Vs.$$.fragment),du=c(),Fa=l("span"),hu=a("Enrichir le jeu de donn\xE9es"),Ol=c(),Qe=l("p"),fu=a("Comme le montre la capture d\u2019\xE9cran suivante, les commentaires associ\xE9s \xE0 un probl\xE8me ou \xE0 une "),Va=l("em"),gu=a("pull request"),_u=a(" fournissent une riche source d\u2019informations, en particulier si nous souhaitons cr\xE9er un moteur de recherche pour r\xE9pondre aux requ\xEAtes des utilisateurs sur la biblioth\xE8que."),Tl=c(),Bs=l("div"),Qs=l("img"),Al=c(),Ze=l("p"),vu=a("L\u2019API REST GitHub fournit un point de terminaison "),Zs=l("a"),Ba=l("code"),bu=a("Comments"),xu=a(" qui renvoie tous les commentaires associ\xE9s \xE0 un num\xE9ro de probl\xE8me. Testons le point de terminaison pour voir ce qu\u2019il renvoie :"),Gl=c(),g(Js.$$.fragment),Il=c(),g(Ks.$$.fragment),Rl=c(),ne=l("p"),ju=a("Nous pouvons voir que le commentaire est stock\xE9 dans le champ "),Qa=l("code"),Eu=a("body"),$u=a(". Ecrivons donc une fonction simple qui renvoie tous les commentaires associ\xE9s \xE0 un probl\xE8me en s\xE9lectionnant le contenu "),Za=l("code"),qu=a("body"),yu=a(" pour chaque \xE9l\xE9ment dans "),Ja=l("code"),wu=a("response.json()"),ku=a(" :"),Ul=c(),g(Xs.$$.fragment),Sl=c(),g(Ws.$$.fragment),Ll=c(),_e=l("p"),Du=a("Cela a l\u2019air bien. Utilisons "),Ka=l("code"),zu=a("Dataset.map()"),Pu=a(" pour ajouter une nouvelle colonne "),Xa=l("code"),Hu=a("comments"),Cu=a(" \xE0 chaque probl\xE8me de notre jeu de donn\xE9es :"),Fl=c(),g(Ys.$$.fragment),Vl=c(),Je=l("p"),Nu=a("La derni\xE8re \xE9tape consiste \xE0 enregistrer le jeu de donn\xE9es augment\xE9es avec nos donn\xE9es brutes afin que nous puissions les pousser tous les deux vers le "),Wa=l("em"),Mu=a("Hub"),Ou=a(" :"),Bl=c(),g(et.$$.fragment),Ql=c(),Ce=l("h2"),Ke=l("a"),Ya=l("span"),g(st.$$.fragment),Tu=c(),en=l("span"),Au=a("T\xE9l\xE9chargement du jeu de donn\xE9es sur le *Hub* d\u2019Hugging Face"),Zl=c(),g(tt.$$.fragment),Jl=c(),U=l("p"),Gu=a("Maintenant que nous avons notre jeu de donn\xE9es augment\xE9, il est temps de le pousser vers le "),sn=l("em"),Iu=a("Hub"),Ru=a(" afin que nous puissions le partager avec la communaut\xE9 ! Pour t\xE9l\xE9charger le jeu de donn\xE9es, nous utilisons la "),Xe=l("a"),Uu=a("biblioth\xE8que \u{1F917} "),tn=l("em"),Su=a("Hub"),Lu=a(", qui nous permet d\u2019interagir avec le "),an=l("em"),Fu=a("Hub"),Vu=a(" d\u2019Hugging Face via une API Python. \u{1F917} "),nn=l("em"),Bu=a("Hub"),Qu=a(" est pr\xE9install\xE9 avec \u{1F917} "),ln=l("em"),Zu=a("Transformers"),Ju=a(", nous pouvons donc l\u2019utiliser directement. Par exemple, nous pouvons utiliser la fonction "),rn=l("code"),Ku=a("list_datasets()"),Xu=a(" pour obtenir des informations sur tous les ensembles de donn\xE9es publics actuellement h\xE9berg\xE9s sur le "),on=l("em"),Wu=a("Hub"),Yu=a(":"),Kl=c(),g(at.$$.fragment),Xl=c(),g(nt.$$.fragment),Wl=c(),ve=l("p"),ep=a("Nous pouvons voir qu\u2019il y a actuellement pr\xE8s de 1 500 jeux de donn\xE9es sur le "),un=l("em"),sp=a("Hub"),tp=a(" et la fonction "),pn=l("code"),ap=a("list_datasets()"),np=a(" fournit \xE9galement des m\xE9tadonn\xE9es de base sur chaque d\xE9p\xF4ts de jeux de donn\xE9es."),Yl=c(),le=l("p"),lp=a("Pour nos besoins, la premi\xE8re chose que nous devons faire est de cr\xE9er un nouveau d\xE9p\xF4t de jeux de donn\xE9es sur le "),cn=l("em"),rp=a("Hub"),op=a(". Pour ce faire, nous avons besoin d\u2019un jeton d\u2019authentification, qui peut \xEAtre obtenu en se connectant d\u2019abord au "),mn=l("em"),ip=a("Hub"),up=a(" d\u2019Hugging Face avec la fonction "),dn=l("code"),pp=a("notebook_login()"),cp=a(" :"),er=c(),g(lt.$$.fragment),sr=c(),be=l("p"),mp=a("Cela cr\xE9\xE9 un "),hn=l("em"),dp=a("widget"),hp=a(" dans lequel vous pouvez entrer votre nom d\u2019utilisateur et votre mot de passe. Un jeton API sera enregistr\xE9 dans "),fn=l("em"),fp=a("~/.huggingface/token"),gp=a(". Si vous ex\xE9cutez le code dans un terminal, vous pouvez vous connecter via la CLI \xE0 la place :"),tr=c(),g(rt.$$.fragment),ar=c(),We=l("p"),_p=a("Une fois que nous avons fait cela, nous pouvons cr\xE9er un nouveau d\xE9p\xF4t de jeux de donn\xE9es avec la fonction "),gn=l("code"),vp=a("create_repo()"),bp=a(" :"),nr=c(),g(ot.$$.fragment),lr=c(),g(it.$$.fragment),rr=c(),xe=l("p"),xp=a("Dans cet exemple, nous avons cr\xE9\xE9 un d\xE9p\xF4t vide appel\xE9 "),_n=l("code"),jp=a("github-issues"),Ep=a(" sous le nom d\u2019utilisateur "),vn=l("code"),$p=a("lewtun"),qp=a(" (le nom d\u2019utilisateur doit \xEAtre votre nom d\u2019utilisateur Hub lorsque vous ex\xE9cutez ce code !)."),or=c(),g(Ye.$$.fragment),ir=c(),je=l("p"),yp=a("Ensuite, clonons le d\xE9p\xF4t du Hub sur notre machine locale et copions-y notre fichier jeu de donn\xE9es. \u{1F917} "),bn=l("em"),wp=a("Hub"),kp=a(" fournit une classe "),xn=l("code"),Dp=a("Repository"),zp=a(" pratique qui encapsule de nombreuses commandes Git courantes. Donc pour cloner le d\xE9p\xF4t distant, nous devons simplement fournir l\u2019URL et le chemin local vers lesquels nous souhaitons cloner :"),ur=c(),g(ut.$$.fragment),pr=c(),W=l("p"),Pp=a("Par d\xE9faut, diverses extensions de fichiers (telles que "),jn=l("em"),Hp=a(".bin"),Cp=a(", "),En=l("em"),Np=a(".gz"),Mp=a(" et "),$n=l("em"),Op=a(".zip"),Tp=a(") sont suivies avec Git LFS afin que les fichiers volumineux puissent \xEAtre versionn\xE9s dans le m\xEAme workflow Git. Vous pouvez trouver une liste des extensions de fichiers suivis dans le fichier "),qn=l("em"),Ap=a(".gitattributes"),Gp=a(" du r\xE9f\xE9rentiel. Pour inclure le format JSON Lines dans la liste, nous pouvons ex\xE9cuter la commande suivante :"),cr=c(),g(pt.$$.fragment),mr=c(),Ee=l("p"),Ip=a("Ensuite, nous pouvons utiliser "),yn=l("code"),Rp=a("Repository.push_to_hub()"),Up=a(" pour pousser le jeu de donn\xE9es vers le "),wn=l("em"),Sp=a("Hub"),Lp=a(" :"),dr=c(),g(ct.$$.fragment),hr=c(),es=l("p"),Fp=a("Si nous naviguons vers l\u2019URL contenue dans "),kn=l("code"),Vp=a("repo_url"),Bp=a(", nous devrions maintenant voir que notre fichier de jeu de donn\xE9es a \xE9t\xE9 t\xE9l\xE9charg\xE9."),fr=c(),mt=l("div"),dt=l("img"),gr=c(),$e=l("p"),Qp=a("\xC0 partir de l\xE0, n\u2019importe qui peut t\xE9l\xE9charger le jeu de donn\xE9es en fournissant simplement "),Dn=l("code"),Zp=a("load_dataset()"),Jp=a(" avec l\u2019ID du r\xE9f\xE9rentiel comme argument "),zn=l("code"),Kp=a("path"),Xp=a(" :"),_r=c(),g(ht.$$.fragment),vr=c(),g(ft.$$.fragment),br=c(),qe=l("p"),Wp=a("Cool, nous avons pouss\xE9 notre jeu de donn\xE9es vers le "),Pn=l("em"),Yp=a("Hub"),ec=a(" et il est disponible pour que d\u2019autres puissent l\u2019utiliser ! Il ne reste plus qu\u2019une chose importante \xE0 faire : ajouter une "),Hn=l("em"),sc=a("carte de jeu de donn\xE9es"),tc=a(" qui explique comment le corpus a \xE9t\xE9 cr\xE9\xE9 et fournit d\u2019autres informations utiles \xE0 la communaut\xE9."),xr=c(),g(ss.$$.fragment),jr=c(),Ne=l("h2"),ts=l("a"),Cn=l("span"),g(gt.$$.fragment),ac=c(),Nn=l("span"),nc=a("Cr\xE9ation d'une carte pour un jeu de donn\xE9es"),Er=c(),Tt=l("p"),lc=a("Des jeux de donn\xE9es bien document\xE9s sont plus susceptibles d\u2019\xEAtre utiles aux autres (y compris \xE0 vous-m\xEAme) car ils fournissent le contexte permettant aux utilisateurs de d\xE9cider si le jeu de donn\xE9es est pertinent pour leur t\xE2che et d\u2019\xE9valuer les biais potentiels ou les risques associ\xE9s \xE0 l\u2019utilisation du jeu de donn\xE9es."),$r=c(),ye=l("p"),rc=a("Sur le "),Mn=l("em"),oc=a("Hub"),ic=a(", ces informations sont stock\xE9es dans le fichier "),On=l("em"),uc=a("README.md"),pc=a(" de chaque d\xE9p\xF4t de jeux de donn\xE9es. Il y a deux \xE9tapes principales que vous devez suivre avant de cr\xE9er ce fichier :"),qr=c(),At=l("ol"),me=l("li"),cc=a("Utilisez l\u2019"),as=l("a"),mc=a("application "),Tn=l("code"),dc=a("datasets-tagging"),hc=a(" pour cr\xE9er des balises de m\xE9tadonn\xE9es au format YAML. Ces balises sont utilis\xE9es pour une vari\xE9t\xE9 de fonctionnalit\xE9s de recherche sur le "),An=l("em"),fc=a("Hub"),gc=a(" d\u2019Hugging Face et garantissent que votre jeu de donn\xE9es peut \xEAtre facilement trouv\xE9 par les membres de la communaut\xE9. Puisque nous avons cr\xE9\xE9 un jeu de donn\xE9es personnalis\xE9 ici, vous devrez cloner le r\xE9f\xE9rentiel "),Gn=l("code"),_c=a("datasets-tagging"),vc=a(" et ex\xE9cuter l\u2019application localement. Voici \xE0 quoi ressemble l\u2019interface :"),yr=c(),_t=l("div"),vt=l("img"),wr=c(),bt=l("ol"),xt=l("li"),bc=a("Lisez le "),ns=l("a"),xc=a("guide de \u{1F917} "),In=l("em"),jc=a("Datasets"),Ec=a(" sur la cr\xE9ation des cartes informatives des jeux de donn\xE9es et utilisez-le comme mod\xE8le."),kr=c(),re=l("p"),$c=a("Vous pouvez cr\xE9er le fichier "),Rn=l("em"),qc=a("README.md"),yc=a(" directement sur le "),Un=l("em"),wc=a("Hub"),kc=a(" et vous pouvez trouver un mod\xE8le de carte dans le d\xE9pot "),Sn=l("code"),Dc=a("lewtun/github-issues"),zc=a(". Une capture d\u2019\xE9cran de la carte remplie est illustr\xE9e ci-dessous."),Dr=c(),jt=l("div"),Et=l("img"),zr=c(),g(ls.$$.fragment),Pr=c(),rs=l("p"),Pc=a("C\u2019ets tout ! Nous avons vu dans cette section que la cr\xE9ation d\u2019un bon jeu de donn\xE9es peut \xEAtre assez complexe, mais heureusement, le t\xE9l\xE9charger et le partager avec la communaut\xE9 ne l\u2019est pas. Dans la section suivante, nous utiliserons notre nouveau jeu de donn\xE9es pour cr\xE9er un moteur de recherche s\xE9mantique avec \u{1F917} "),Ln=l("em"),Hc=a("Datasets"),Cc=a(" qui peut faire correspondre les questions aux probl\xE8mes et commentaires les plus pertinents."),Hr=c(),g(os.$$.fragment),this.h()},l(e){const i=fh('[data-svelte="svelte-1phssyn"]',document.head);p=r(i,"META",{name:!0,content:!0}),i.forEach(t),C=m(e),h=r(e,"H1",{class:!0});var $t=o(h);k=r($t,"A",{id:!0,class:!0,href:!0});var Fn=o(k);H=r(Fn,"SPAN",{});var Vn=o(H);_(f.$$.fragment,Vn),Vn.forEach(t),Fn.forEach(t),z=m($t),N=r($t,"SPAN",{});var Bn=o(N);E=n(Bn,"Cr\xE9ation de votre propre jeu de donn\xE9es"),Bn.forEach(t),$t.forEach(t),T=m(e),_(D.$$.fragment,e),y=m(e),w=r(e,"P",{});var qt=o(w);M=n(qt,"Parfois, le jeu de donn\xE9es dont vous avez besoin pour cr\xE9er une application de NLP n\u2019existe pas. Vous devrez donc le cr\xE9er vous-m\xEAme. Dans cette section, nous allons vous montrer comment cr\xE9er un corpus de "),q=r(qt,"A",{href:!0,rel:!0});var Qn=o(q);P=n(Qn,"probl\xE8mes GitHub"),Qn.forEach(t),G=n(qt,", qui sont couramment utilis\xE9s pour suivre les bogues ou les fonctionnalit\xE9s dans les d\xE9p\xF4ts GitHub. Ce corpus pourrait \xEAtre utilis\xE9 \xE0 diverses fins, notamment :"),qt.forEach(t),$=m(e),A=r(e,"UL",{});var Me=o(A);S=r(Me,"LI",{});var Nc=o(S);B=n(Nc,"explorer combien de temps il faut pour fermer les probl\xE8mes ouverts ou les "),Q=r(Nc,"EM",{});var Lc=o(Q);ee=n(Lc,"pull requests"),Lc.forEach(t),Nc.forEach(t),De=m(Me),ue=r(Me,"LI",{});var Nr=o(ue);fs=n(Nr,"entra\xEEner d\u2019un "),pe=r(Nr,"EM",{});var Fc=o(pe);I=n(Fc,"classificateur multilabel"),Fc.forEach(t),wt=n(Nr," capable d\u2019\xE9tiqueter les probl\xE8mes avec des m\xE9tadonn\xE9es bas\xE9es sur la description du probl\xE8me (par exemple, \u201Cbogue\u201D, \u201Cam\xE9lioration\u201D ou \u201Cquestion\u201D)"),Nr.forEach(t),kt=m(Me),Oe=r(Me,"LI",{});var Vc=o(Oe);Dt=n(Vc,"cr\xE9er un moteur de recherche s\xE9mantique pour trouver les probl\xE8mes correspondant \xE0 la requ\xEAte d\u2019un utilisateur"),Vc.forEach(t),Me.forEach(t),gs=m(e),ce=r(e,"P",{});var Mr=o(ce);zt=n(Mr,"Ici, nous nous concentrerons sur la cr\xE9ation du corpus, et dans la section suivante, nous aborderons l\u2019application de recherche s\xE9mantique. Pour garder les choses m\xE9ta, nous utiliserons les probl\xE8mes GitHub associ\xE9s \xE0 un projet open source populaire : \u{1F917} "),Te=r(Mr,"EM",{});var Bc=o(Te);Xr=n(Bc,"Datasets"),Bc.forEach(t),Wr=n(Mr," ! Voyons comment obtenir les donn\xE9es et explorons les informations contenues dans ces probl\xE8mes."),Mr.forEach(t),Zn=m(e),ze=r(e,"H2",{class:!0});var Or=o(ze);Ae=r(Or,"A",{id:!0,class:!0,href:!0});var Qc=o(Ae);Yt=r(Qc,"SPAN",{});var Zc=o(Yt);_(_s.$$.fragment,Zc),Zc.forEach(t),Qc.forEach(t),Yr=m(Or),ea=r(Or,"SPAN",{});var Jc=o(ea);eo=n(Jc,"Obtenir les donn\xE9es"),Jc.forEach(t),Or.forEach(t),Jn=m(e),de=r(e,"P",{});var Gt=o(de);so=n(Gt,"Vous pouvez trouver tous les probl\xE8mes dans \u{1F917} "),sa=r(Gt,"EM",{});var Kc=o(sa);to=n(Kc,"Datasets"),Kc.forEach(t),ao=n(Gt," en acc\xE9dant \xE0 l\u2019"),vs=r(Gt,"A",{href:!0,rel:!0});var Xc=o(vs);no=n(Xc,"onglet \xAB Issues \xBB"),Xc.forEach(t),lo=n(Gt," du d\xE9p\xF4t. Comme le montre la capture d\u2019\xE9cran suivante, au moment de la r\xE9daction, il y avait 331 probl\xE8mes ouverts et 668 probl\xE8mes ferm\xE9s."),Gt.forEach(t),Kn=m(e),bs=r(e,"DIV",{class:!0});var Wc=o(bs);xs=r(Wc,"IMG",{src:!0,alt:!0,width:!0}),Wc.forEach(t),Xn=m(e),Pt=r(e,"P",{});var Yc=o(Pt);ro=n(Yc,"Si vous cliquez sur l\u2019un de ces probl\xE8mes, vous constaterez qu\u2019il contient un titre, une description et un ensemble d\u2019\xE9tiquettes qui caract\xE9risent le probl\xE8me. Un exemple est montr\xE9 dans la capture d\u2019\xE9cran ci-dessous."),Yc.forEach(t),Wn=m(e),js=r(e,"DIV",{class:!0});var em=o(js);Es=r(em,"IMG",{src:!0,alt:!0,width:!0}),em.forEach(t),Yn=m(e),he=r(e,"P",{});var It=o(he);oo=n(It,"Pour t\xE9l\xE9charger tous les probl\xE8mes du d\xE9p\xF4t, nous utilisons l\u2019"),$s=r(It,"A",{href:!0,rel:!0});var sm=o($s);io=n(sm,"API REST GitHub"),sm.forEach(t),uo=n(It," pour interroger le point de terminaison "),qs=r(It,"A",{href:!0,rel:!0});var tm=o(qs);ta=r(tm,"CODE",{});var am=o(ta);po=n(am,"Issues"),am.forEach(t),tm.forEach(t),co=n(It,". Ce point de terminaison renvoie une liste d\u2019objets JSON. Chaque objet contenant un grand nombre de champs qui incluent le titre et la description ainsi que des m\xE9tadonn\xE9es sur l\u2019\xE9tat du probl\xE8me, etc."),It.forEach(t),el=m(e),Ge=r(e,"P",{});var Tr=o(Ge);mo=n(Tr,"Un moyen pratique de t\xE9l\xE9charger les probl\xE8mes consiste \xE0 utiliser la biblioth\xE8que "),aa=r(Tr,"CODE",{});var nm=o(aa);ho=n(nm,"requests"),nm.forEach(t),fo=n(Tr,", qui est la m\xE9thode standard pour effectuer des requ\xEAtes HTTP en Python. Vous pouvez installer la biblioth\xE8que en ex\xE9cutant :"),Tr.forEach(t),sl=m(e),_(ys.$$.fragment,e),tl=m(e),fe=r(e,"P",{});var Rt=o(fe);go=n(Rt,"Une fois la biblioth\xE8que install\xE9e, vous pouvez envoyer des requ\xEAtes GET au point de terminaison "),na=r(Rt,"CODE",{});var lm=o(na);_o=n(lm,"Issues"),lm.forEach(t),vo=n(Rt," en appelant la fonction "),la=r(Rt,"CODE",{});var rm=o(la);bo=n(rm,"requests.get()"),rm.forEach(t),xo=n(Rt,". Par exemple, vous pouvez ex\xE9cuter la commande suivante pour r\xE9cup\xE9rer le premier num\xE9ro sur la premi\xE8re page :"),Rt.forEach(t),al=m(e),_(ws.$$.fragment,e),nl=m(e),Ie=r(e,"P",{});var Ar=o(Ie);jo=n(Ar,"L\u2019objet "),ra=r(Ar,"CODE",{});var om=o(ra);Eo=n(om,"response"),om.forEach(t),$o=n(Ar," contient de nombreuses informations utiles sur la requ\xEAte, y compris le code d\u2019\xE9tat HTTP :"),Ar.forEach(t),ll=m(e),_(ks.$$.fragment,e),rl=m(e),_(Ds.$$.fragment,e),ol=m(e),se=r(e,"P",{});var is=o(se);qo=n(is,"o\xF9 un statut "),oa=r(is,"CODE",{});var im=o(oa);yo=n(im,"200"),im.forEach(t),wo=n(is," signifie que la requ\xEAte a r\xE9ussi (vous pouvez trouver une liste des codes de statut HTTP possibles "),zs=r(is,"A",{href:!0,rel:!0});var um=o(zs);ko=n(um,"ici"),um.forEach(t),Do=n(is,"). Ce qui nous int\xE9resse vraiment, cependant, c\u2019est le "),ia=r(is,"EM",{});var pm=o(ia);zo=n(pm,"payload"),pm.forEach(t),Po=n(is,", qui peut \xEAtre consult\xE9 dans diff\xE9rents formats comme les octets, les cha\xEEnes ou JSON. Comme nous savons que nos probl\xE8mes sont au format JSON, examinons la charge utile comme suit :"),is.forEach(t),il=m(e),_(Ps.$$.fragment,e),ul=m(e),_(Hs.$$.fragment,e),pl=m(e),te=r(e,"P",{});var us=o(te);Ho=n(us,"Waouh, \xE7a fait beaucoup d\u2019informations ! Nous pouvons voir des champs utiles comme "),ua=r(us,"CODE",{});var cm=o(ua);Co=n(cm,"title"),cm.forEach(t),No=n(us,", "),pa=r(us,"CODE",{});var mm=o(pa);Mo=n(mm,"body"),mm.forEach(t),Oo=n(us," et "),ca=r(us,"CODE",{});var dm=o(ca);To=n(dm,"number"),dm.forEach(t),Ao=n(us," qui d\xE9crivent le probl\xE8me, ainsi que des informations sur l\u2019utilisateur GitHub qui a ouvert le probl\xE8me."),us.forEach(t),cl=m(e),_(Re.$$.fragment,e),ml=m(e),Z=r(e,"P",{});var oe=o(Z);Go=n(oe,"Comme d\xE9crit dans la "),Cs=r(oe,"A",{href:!0,rel:!0});var hm=o(Cs);Io=n(hm,"documentation GitHub"),hm.forEach(t),Ro=n(oe,", les requ\xEAtes non authentifi\xE9es sont limit\xE9es \xE0 60 requ\xEAtes par heure. Bien que vous puissiez augmenter le param\xE8tre de requ\xEAte "),ma=r(oe,"CODE",{});var fm=o(ma);Uo=n(fm,"per_page"),fm.forEach(t),So=n(oe," pour r\xE9duire le nombre de requ\xEAtes que vous effectuez, vous atteindrez toujours la limite de d\xE9bit sur tout d\xE9p\xF4t contenant des milliers de probl\xE8mes. Donc, \xE0 la place, vous devez suivre les "),Ns=r(oe,"A",{href:!0,rel:!0});var gm=o(Ns);Lo=n(gm,"instructions de GitHub"),gm.forEach(t),Fo=n(oe," sur la cr\xE9ation d\u2019un "),da=r(oe,"EM",{});var _m=o(da);Vo=n(_m,"jeton d\u2019acc\xE8s personnel"),_m.forEach(t),Bo=n(oe," afin que vous peut augmenter la limite de d\xE9bit \xE0 5 000 requ\xEAtes par heure. Une fois que vous avez votre "),ha=r(oe,"EM",{});var vm=o(ha);Qo=n(vm,"token"),vm.forEach(t),Zo=n(oe,", vous pouvez l\u2019inclure dans l\u2019en-t\xEAte de la requ\xEAte :"),oe.forEach(t),dl=m(e),_(Ms.$$.fragment,e),hl=m(e),_(Ue.$$.fragment,e),fl=m(e),Ht=r(e,"P",{});var bm=o(Ht);Jo=n(bm,"Maintenant que nous avons notre jeton d\u2019acc\xE8s, cr\xE9ons une fonction qui peut t\xE9l\xE9charger tous les probl\xE8mes depuis un r\xE9f\xE9rentiel GitHub :"),bm.forEach(t),gl=m(e),_(Os.$$.fragment,e),_l=m(e),ae=r(e,"P",{});var ps=o(ae);Ko=n(ps,"D\xE9sormais, lorsque nous appellerons "),fa=r(ps,"CODE",{});var xm=o(fa);Xo=n(xm,"fetch_issues()"),xm.forEach(t),Wo=n(ps,", tous les probl\xE8mes seront t\xE9l\xE9charg\xE9s par batchs pour \xE9viter de d\xE9passer la limite de GitHub sur le nombre de requ\xEAtes par heure. Le r\xE9sultat sera stock\xE9 dans un fichier "),ga=r(ps,"EM",{});var jm=o(ga);Yo=n(jm,"repository_name-issues.jsonl"),jm.forEach(t),ei=n(ps,", o\xF9 chaque ligne est un objet JSON qui repr\xE9sente un probl\xE8me. Utilisons cette fonction pour saisir tous les probl\xE8mes de \u{1F917} "),_a=r(ps,"EM",{});var Em=o(_a);si=n(Em,"Datasets"),Em.forEach(t),ti=n(ps," :"),ps.forEach(t),vl=m(e),_(Ts.$$.fragment,e),bl=m(e),Se=r(e,"P",{});var Gr=o(Se);ai=n(Gr,"Une fois les probl\xE8mes t\xE9l\xE9charg\xE9s, nous pouvons les charger localement en utilisant nos nouvelles comp\xE9tences de "),Ct=r(Gr,"A",{href:!0});var $m=o(Ct);ni=n($m,"section 2"),$m.forEach(t),li=n(Gr," :"),Gr.forEach(t),xl=m(e),_(As.$$.fragment,e),jl=m(e),_(Gs.$$.fragment,e),El=m(e),X=r(e,"P",{});var we=o(X);ri=n(we,"G\xE9nial, nous avons cr\xE9\xE9 notre premier jeu de donn\xE9es \xE0 partir de rien ! Mais pourquoi y a-t-il plusieurs milliers de probl\xE8mes alors que l\u2019"),Is=r(we,"A",{href:!0,rel:!0});var qm=o(Is);oi=n(qm,"onglet \xAB Issues \xBB"),qm.forEach(t),ii=n(we," de la librairie \u{1F917} "),va=r(we,"EM",{});var ym=o(va);ui=n(ym,"Datasets"),ym.forEach(t),pi=n(we," n\u2019affiche qu\u2019environ 1 000 probl\xE8mes au total \u{1F914} ? Comme d\xE9crit dans la "),Rs=r(we,"A",{href:!0,rel:!0});var wm=o(Rs);ci=n(wm,"documentation GitHub"),wm.forEach(t),mi=n(we,", c\u2019est parce que nous avons t\xE9l\xE9charg\xE9 toutes les "),ba=r(we,"EM",{});var km=o(ba);di=n(km,"pull requests"),km.forEach(t),hi=n(we," \xE9galement :"),we.forEach(t),$l=m(e),Nt=r(e,"BLOCKQUOTE",{});var Dm=o(Nt);F=r(Dm,"P",{});var Y=o(F);fi=n(Y,"L\u2019API REST v3 de GitHub consid\xE8re chaque "),xa=r(Y,"EM",{});var zm=o(xa);gi=n(zm,"pull request"),zm.forEach(t),_i=n(Y," comme un probl\xE8me, mais chaque probl\xE8me n\u2019est pas une "),ja=r(Y,"EM",{});var Pm=o(ja);vi=n(Pm,"pull request"),Pm.forEach(t),bi=n(Y,". Pour cette raison, les points de terminaison \xAB Issues \xBB peuvent renvoyer \xE0 la fois des probl\xE8mes et des "),Ea=r(Y,"EM",{});var Hm=o(Ea);xi=n(Hm,"pull requests"),Hm.forEach(t),ji=n(Y," dans la r\xE9ponse. Vous pouvez identifier les "),$a=r(Y,"EM",{});var Cm=o($a);Ei=n(Cm,"pull requests"),Cm.forEach(t),$i=n(Y," par la cl\xE9 "),qa=r(Y,"CODE",{});var Nm=o(qa);qi=n(Nm,"pull_request"),Nm.forEach(t),yi=n(Y,". Sachez que l\u2019identifiant d\u2019une "),ya=r(Y,"EM",{});var Mm=o(ya);wi=n(Mm,"pull request"),Mm.forEach(t),ki=n(Y," renvoy\xE9e par les points de terminaison \xAB Issues \xBB sera un identifiant de probl\xE8me."),Y.forEach(t),Dm.forEach(t),ql=m(e),Le=r(e,"P",{});var Ir=o(Le);Di=n(Ir,"\xC9tant donn\xE9 que le contenu des \xAB Issues \xBB et des "),wa=r(Ir,"EM",{});var Om=o(wa);zi=n(Om,"pull request"),Om.forEach(t),Pi=n(Ir," est assez diff\xE9rent, proc\xE9dons \xE0 un pr\xE9traitement mineur pour nous permettre de les distinguer."),Ir.forEach(t),yl=m(e),Pe=r(e,"H2",{class:!0});var Rr=o(Pe);Fe=r(Rr,"A",{id:!0,class:!0,href:!0});var Tm=o(Fe);ka=r(Tm,"SPAN",{});var Am=o(ka);_(Us.$$.fragment,Am),Am.forEach(t),Tm.forEach(t),Hi=m(Rr),Da=r(Rr,"SPAN",{});var Gm=o(Da);Ci=n(Gm,"Nettoyer les donn\xE9es"),Gm.forEach(t),Rr.forEach(t),wl=m(e),R=r(e,"P",{});var L=o(R);Ni=n(L,"L\u2019extrait ci-dessus de la documentation de GitHub nous indique que la colonne "),za=r(L,"CODE",{});var Im=o(za);Mi=n(Im,"pull_request"),Im.forEach(t),Oi=n(L," peut \xEAtre utilis\xE9e pour diff\xE9rencier les "),Pa=r(L,"EM",{});var Rm=o(Pa);Ti=n(Rm,"issues"),Rm.forEach(t),Ai=n(L," et les "),Ha=r(L,"EM",{});var Um=o(Ha);Gi=n(Um,"pull requests"),Um.forEach(t),Ii=n(L,". Regardons un \xE9chantillon al\xE9atoire pour voir quelle est la diff\xE9rence. Comme nous l\u2019avons fait dans "),Mt=r(L,"A",{href:!0});var Sm=o(Mt);Ri=n(Sm,"section 3"),Sm.forEach(t),Ui=n(L,", nous allons encha\xEEner "),Ca=r(L,"CODE",{});var Lm=o(Ca);Si=n(Lm,"Dataset.shuffle()"),Lm.forEach(t),Li=n(L," et "),Na=r(L,"CODE",{});var Fm=o(Na);Fi=n(Fm,"Dataset.select()"),Fm.forEach(t),Vi=n(L," pour cr\xE9er un \xE9chantillon al\xE9atoire, puis compresser "),Ma=r(L,"CODE",{});var Vm=o(Ma);Bi=n(Vm,"html_url"),Vm.forEach(t),Qi=n(L," et "),Oa=r(L,"CODE",{});var Bm=o(Oa);Zi=n(Bm,"pull_request"),Bm.forEach(t),Ji=n(L," afin que nous puissions comparer les diff\xE9rentes URL :"),L.forEach(t),kl=m(e),_(Ss.$$.fragment,e),Dl=m(e),_(Ls.$$.fragment,e),zl=m(e),J=r(e,"P",{});var ie=o(J);Ki=n(ie,"Ici, nous pouvons voir que chaque "),Ta=r(ie,"EM",{});var Qm=o(Ta);Xi=n(Qm,"pull request"),Qm.forEach(t),Wi=n(ie," est associ\xE9e \xE0 diverses URL, tandis que les probl\xE8mes ordinaires ont une entr\xE9e "),Aa=r(ie,"CODE",{});var Zm=o(Aa);Yi=n(Zm,"None"),Zm.forEach(t),eu=n(ie,". Nous pouvons utiliser cette distinction pour cr\xE9er une nouvelle colonne "),Ga=r(ie,"CODE",{});var Jm=o(Ga);su=n(Jm,"is_pull_request"),Jm.forEach(t),tu=n(ie," qui v\xE9rifie si le champ "),Ia=r(ie,"CODE",{});var Km=o(Ia);au=n(Km,"pull_request"),Km.forEach(t),nu=n(ie," est "),Ra=r(ie,"CODE",{});var Xm=o(Ra);lu=n(Xm,"None"),Xm.forEach(t),ru=n(ie," ou non :"),ie.forEach(t),Pl=m(e),_(Fs.$$.fragment,e),Hl=m(e),_(Ve.$$.fragment,e),Cl=m(e),Ot=r(e,"P",{});var Wm=o(Ot);ou=n(Wm,"Bien que nous puissions continuer \xE0 nettoyer davantage le jeu de donn\xE9es en supprimant ou en renommant certaines colonnes, il est g\xE9n\xE9ralement recommand\xE9 de le conserver aussi brut que possible \xE0 ce stade afin qu\u2019il puisse \xEAtre facilement utilis\xE9 dans plusieurs applications."),Wm.forEach(t),Nl=m(e),ge=r(e,"P",{});var Ut=o(ge);iu=n(Ut,"Avant de pousser notre jeu de donn\xE9es vers le "),Ua=r(Ut,"EM",{});var Ym=o(Ua);uu=n(Ym,"Hub"),Ym.forEach(t),pu=n(Ut," d\u2019Hugging Face, traitons une chose manquante : les commentaires associ\xE9s \xE0 chaque probl\xE8me et "),Sa=r(Ut,"EM",{});var ed=o(Sa);cu=n(ed,"pull requests"),ed.forEach(t),mu=n(Ut,". Nous les ajouterons ensuite avec l\u2019API GitHub REST !"),Ut.forEach(t),Ml=m(e),He=r(e,"H2",{class:!0});var Ur=o(He);Be=r(Ur,"A",{id:!0,class:!0,href:!0});var sd=o(Be);La=r(sd,"SPAN",{});var td=o(La);_(Vs.$$.fragment,td),td.forEach(t),sd.forEach(t),du=m(Ur),Fa=r(Ur,"SPAN",{});var ad=o(Fa);hu=n(ad,"Enrichir le jeu de donn\xE9es"),ad.forEach(t),Ur.forEach(t),Ol=m(e),Qe=r(e,"P",{});var Sr=o(Qe);fu=n(Sr,"Comme le montre la capture d\u2019\xE9cran suivante, les commentaires associ\xE9s \xE0 un probl\xE8me ou \xE0 une "),Va=r(Sr,"EM",{});var nd=o(Va);gu=n(nd,"pull request"),nd.forEach(t),_u=n(Sr," fournissent une riche source d\u2019informations, en particulier si nous souhaitons cr\xE9er un moteur de recherche pour r\xE9pondre aux requ\xEAtes des utilisateurs sur la biblioth\xE8que."),Sr.forEach(t),Tl=m(e),Bs=r(e,"DIV",{class:!0});var ld=o(Bs);Qs=r(ld,"IMG",{src:!0,alt:!0,width:!0}),ld.forEach(t),Al=m(e),Ze=r(e,"P",{});var Lr=o(Ze);vu=n(Lr,"L\u2019API REST GitHub fournit un point de terminaison "),Zs=r(Lr,"A",{href:!0,rel:!0});var rd=o(Zs);Ba=r(rd,"CODE",{});var od=o(Ba);bu=n(od,"Comments"),od.forEach(t),rd.forEach(t),xu=n(Lr," qui renvoie tous les commentaires associ\xE9s \xE0 un num\xE9ro de probl\xE8me. Testons le point de terminaison pour voir ce qu\u2019il renvoie :"),Lr.forEach(t),Gl=m(e),_(Js.$$.fragment,e),Il=m(e),_(Ks.$$.fragment,e),Rl=m(e),ne=r(e,"P",{});var cs=o(ne);ju=n(cs,"Nous pouvons voir que le commentaire est stock\xE9 dans le champ "),Qa=r(cs,"CODE",{});var id=o(Qa);Eu=n(id,"body"),id.forEach(t),$u=n(cs,". Ecrivons donc une fonction simple qui renvoie tous les commentaires associ\xE9s \xE0 un probl\xE8me en s\xE9lectionnant le contenu "),Za=r(cs,"CODE",{});var ud=o(Za);qu=n(ud,"body"),ud.forEach(t),yu=n(cs," pour chaque \xE9l\xE9ment dans "),Ja=r(cs,"CODE",{});var pd=o(Ja);wu=n(pd,"response.json()"),pd.forEach(t),ku=n(cs," :"),cs.forEach(t),Ul=m(e),_(Xs.$$.fragment,e),Sl=m(e),_(Ws.$$.fragment,e),Ll=m(e),_e=r(e,"P",{});var St=o(_e);Du=n(St,"Cela a l\u2019air bien. Utilisons "),Ka=r(St,"CODE",{});var cd=o(Ka);zu=n(cd,"Dataset.map()"),cd.forEach(t),Pu=n(St," pour ajouter une nouvelle colonne "),Xa=r(St,"CODE",{});var md=o(Xa);Hu=n(md,"comments"),md.forEach(t),Cu=n(St," \xE0 chaque probl\xE8me de notre jeu de donn\xE9es :"),St.forEach(t),Fl=m(e),_(Ys.$$.fragment,e),Vl=m(e),Je=r(e,"P",{});var Fr=o(Je);Nu=n(Fr,"La derni\xE8re \xE9tape consiste \xE0 enregistrer le jeu de donn\xE9es augment\xE9es avec nos donn\xE9es brutes afin que nous puissions les pousser tous les deux vers le "),Wa=r(Fr,"EM",{});var dd=o(Wa);Mu=n(dd,"Hub"),dd.forEach(t),Ou=n(Fr," :"),Fr.forEach(t),Bl=m(e),_(et.$$.fragment,e),Ql=m(e),Ce=r(e,"H2",{class:!0});var Vr=o(Ce);Ke=r(Vr,"A",{id:!0,class:!0,href:!0});var hd=o(Ke);Ya=r(hd,"SPAN",{});var fd=o(Ya);_(st.$$.fragment,fd),fd.forEach(t),hd.forEach(t),Tu=m(Vr),en=r(Vr,"SPAN",{});var gd=o(en);Au=n(gd,"T\xE9l\xE9chargement du jeu de donn\xE9es sur le *Hub* d\u2019Hugging Face"),gd.forEach(t),Vr.forEach(t),Zl=m(e),_(tt.$$.fragment,e),Jl=m(e),U=r(e,"P",{});var K=o(U);Gu=n(K,"Maintenant que nous avons notre jeu de donn\xE9es augment\xE9, il est temps de le pousser vers le "),sn=r(K,"EM",{});var _d=o(sn);Iu=n(_d,"Hub"),_d.forEach(t),Ru=n(K," afin que nous puissions le partager avec la communaut\xE9 ! Pour t\xE9l\xE9charger le jeu de donn\xE9es, nous utilisons la "),Xe=r(K,"A",{href:!0,rel:!0});var Mc=o(Xe);Uu=n(Mc,"biblioth\xE8que \u{1F917} "),tn=r(Mc,"EM",{});var vd=o(tn);Su=n(vd,"Hub"),vd.forEach(t),Mc.forEach(t),Lu=n(K,", qui nous permet d\u2019interagir avec le "),an=r(K,"EM",{});var bd=o(an);Fu=n(bd,"Hub"),bd.forEach(t),Vu=n(K," d\u2019Hugging Face via une API Python. \u{1F917} "),nn=r(K,"EM",{});var xd=o(nn);Bu=n(xd,"Hub"),xd.forEach(t),Qu=n(K," est pr\xE9install\xE9 avec \u{1F917} "),ln=r(K,"EM",{});var jd=o(ln);Zu=n(jd,"Transformers"),jd.forEach(t),Ju=n(K,", nous pouvons donc l\u2019utiliser directement. Par exemple, nous pouvons utiliser la fonction "),rn=r(K,"CODE",{});var Ed=o(rn);Ku=n(Ed,"list_datasets()"),Ed.forEach(t),Xu=n(K," pour obtenir des informations sur tous les ensembles de donn\xE9es publics actuellement h\xE9berg\xE9s sur le "),on=r(K,"EM",{});var $d=o(on);Wu=n($d,"Hub"),$d.forEach(t),Yu=n(K,":"),K.forEach(t),Kl=m(e),_(at.$$.fragment,e),Xl=m(e),_(nt.$$.fragment,e),Wl=m(e),ve=r(e,"P",{});var Lt=o(ve);ep=n(Lt,"Nous pouvons voir qu\u2019il y a actuellement pr\xE8s de 1 500 jeux de donn\xE9es sur le "),un=r(Lt,"EM",{});var qd=o(un);sp=n(qd,"Hub"),qd.forEach(t),tp=n(Lt," et la fonction "),pn=r(Lt,"CODE",{});var yd=o(pn);ap=n(yd,"list_datasets()"),yd.forEach(t),np=n(Lt," fournit \xE9galement des m\xE9tadonn\xE9es de base sur chaque d\xE9p\xF4ts de jeux de donn\xE9es."),Lt.forEach(t),Yl=m(e),le=r(e,"P",{});var ms=o(le);lp=n(ms,"Pour nos besoins, la premi\xE8re chose que nous devons faire est de cr\xE9er un nouveau d\xE9p\xF4t de jeux de donn\xE9es sur le "),cn=r(ms,"EM",{});var wd=o(cn);rp=n(wd,"Hub"),wd.forEach(t),op=n(ms,". Pour ce faire, nous avons besoin d\u2019un jeton d\u2019authentification, qui peut \xEAtre obtenu en se connectant d\u2019abord au "),mn=r(ms,"EM",{});var kd=o(mn);ip=n(kd,"Hub"),kd.forEach(t),up=n(ms," d\u2019Hugging Face avec la fonction "),dn=r(ms,"CODE",{});var Dd=o(dn);pp=n(Dd,"notebook_login()"),Dd.forEach(t),cp=n(ms," :"),ms.forEach(t),er=m(e),_(lt.$$.fragment,e),sr=m(e),be=r(e,"P",{});var Ft=o(be);mp=n(Ft,"Cela cr\xE9\xE9 un "),hn=r(Ft,"EM",{});var zd=o(hn);dp=n(zd,"widget"),zd.forEach(t),hp=n(Ft," dans lequel vous pouvez entrer votre nom d\u2019utilisateur et votre mot de passe. Un jeton API sera enregistr\xE9 dans "),fn=r(Ft,"EM",{});var Pd=o(fn);fp=n(Pd,"~/.huggingface/token"),Pd.forEach(t),gp=n(Ft,". Si vous ex\xE9cutez le code dans un terminal, vous pouvez vous connecter via la CLI \xE0 la place :"),Ft.forEach(t),tr=m(e),_(rt.$$.fragment,e),ar=m(e),We=r(e,"P",{});var Br=o(We);_p=n(Br,"Une fois que nous avons fait cela, nous pouvons cr\xE9er un nouveau d\xE9p\xF4t de jeux de donn\xE9es avec la fonction "),gn=r(Br,"CODE",{});var Hd=o(gn);vp=n(Hd,"create_repo()"),Hd.forEach(t),bp=n(Br," :"),Br.forEach(t),nr=m(e),_(ot.$$.fragment,e),lr=m(e),_(it.$$.fragment,e),rr=m(e),xe=r(e,"P",{});var Vt=o(xe);xp=n(Vt,"Dans cet exemple, nous avons cr\xE9\xE9 un d\xE9p\xF4t vide appel\xE9 "),_n=r(Vt,"CODE",{});var Cd=o(_n);jp=n(Cd,"github-issues"),Cd.forEach(t),Ep=n(Vt," sous le nom d\u2019utilisateur "),vn=r(Vt,"CODE",{});var Nd=o(vn);$p=n(Nd,"lewtun"),Nd.forEach(t),qp=n(Vt," (le nom d\u2019utilisateur doit \xEAtre votre nom d\u2019utilisateur Hub lorsque vous ex\xE9cutez ce code !)."),Vt.forEach(t),or=m(e),_(Ye.$$.fragment,e),ir=m(e),je=r(e,"P",{});var Bt=o(je);yp=n(Bt,"Ensuite, clonons le d\xE9p\xF4t du Hub sur notre machine locale et copions-y notre fichier jeu de donn\xE9es. \u{1F917} "),bn=r(Bt,"EM",{});var Md=o(bn);wp=n(Md,"Hub"),Md.forEach(t),kp=n(Bt," fournit une classe "),xn=r(Bt,"CODE",{});var Od=o(xn);Dp=n(Od,"Repository"),Od.forEach(t),zp=n(Bt," pratique qui encapsule de nombreuses commandes Git courantes. Donc pour cloner le d\xE9p\xF4t distant, nous devons simplement fournir l\u2019URL et le chemin local vers lesquels nous souhaitons cloner :"),Bt.forEach(t),ur=m(e),_(ut.$$.fragment,e),pr=m(e),W=r(e,"P",{});var ke=o(W);Pp=n(ke,"Par d\xE9faut, diverses extensions de fichiers (telles que "),jn=r(ke,"EM",{});var Td=o(jn);Hp=n(Td,".bin"),Td.forEach(t),Cp=n(ke,", "),En=r(ke,"EM",{});var Ad=o(En);Np=n(Ad,".gz"),Ad.forEach(t),Mp=n(ke," et "),$n=r(ke,"EM",{});var Gd=o($n);Op=n(Gd,".zip"),Gd.forEach(t),Tp=n(ke,") sont suivies avec Git LFS afin que les fichiers volumineux puissent \xEAtre versionn\xE9s dans le m\xEAme workflow Git. Vous pouvez trouver une liste des extensions de fichiers suivis dans le fichier "),qn=r(ke,"EM",{});var Id=o(qn);Ap=n(Id,".gitattributes"),Id.forEach(t),Gp=n(ke," du r\xE9f\xE9rentiel. Pour inclure le format JSON Lines dans la liste, nous pouvons ex\xE9cuter la commande suivante :"),ke.forEach(t),cr=m(e),_(pt.$$.fragment,e),mr=m(e),Ee=r(e,"P",{});var Qt=o(Ee);Ip=n(Qt,"Ensuite, nous pouvons utiliser "),yn=r(Qt,"CODE",{});var Rd=o(yn);Rp=n(Rd,"Repository.push_to_hub()"),Rd.forEach(t),Up=n(Qt," pour pousser le jeu de donn\xE9es vers le "),wn=r(Qt,"EM",{});var Ud=o(wn);Sp=n(Ud,"Hub"),Ud.forEach(t),Lp=n(Qt," :"),Qt.forEach(t),dr=m(e),_(ct.$$.fragment,e),hr=m(e),es=r(e,"P",{});var Qr=o(es);Fp=n(Qr,"Si nous naviguons vers l\u2019URL contenue dans "),kn=r(Qr,"CODE",{});var Sd=o(kn);Vp=n(Sd,"repo_url"),Sd.forEach(t),Bp=n(Qr,", nous devrions maintenant voir que notre fichier de jeu de donn\xE9es a \xE9t\xE9 t\xE9l\xE9charg\xE9."),Qr.forEach(t),fr=m(e),mt=r(e,"DIV",{class:!0});var Ld=o(mt);dt=r(Ld,"IMG",{src:!0,alt:!0,width:!0}),Ld.forEach(t),gr=m(e),$e=r(e,"P",{});var Zt=o($e);Qp=n(Zt,"\xC0 partir de l\xE0, n\u2019importe qui peut t\xE9l\xE9charger le jeu de donn\xE9es en fournissant simplement "),Dn=r(Zt,"CODE",{});var Fd=o(Dn);Zp=n(Fd,"load_dataset()"),Fd.forEach(t),Jp=n(Zt," avec l\u2019ID du r\xE9f\xE9rentiel comme argument "),zn=r(Zt,"CODE",{});var Vd=o(zn);Kp=n(Vd,"path"),Vd.forEach(t),Xp=n(Zt," :"),Zt.forEach(t),_r=m(e),_(ht.$$.fragment,e),vr=m(e),_(ft.$$.fragment,e),br=m(e),qe=r(e,"P",{});var Jt=o(qe);Wp=n(Jt,"Cool, nous avons pouss\xE9 notre jeu de donn\xE9es vers le "),Pn=r(Jt,"EM",{});var Bd=o(Pn);Yp=n(Bd,"Hub"),Bd.forEach(t),ec=n(Jt," et il est disponible pour que d\u2019autres puissent l\u2019utiliser ! Il ne reste plus qu\u2019une chose importante \xE0 faire : ajouter une "),Hn=r(Jt,"EM",{});var Qd=o(Hn);sc=n(Qd,"carte de jeu de donn\xE9es"),Qd.forEach(t),tc=n(Jt," qui explique comment le corpus a \xE9t\xE9 cr\xE9\xE9 et fournit d\u2019autres informations utiles \xE0 la communaut\xE9."),Jt.forEach(t),xr=m(e),_(ss.$$.fragment,e),jr=m(e),Ne=r(e,"H2",{class:!0});var Zr=o(Ne);ts=r(Zr,"A",{id:!0,class:!0,href:!0});var Zd=o(ts);Cn=r(Zd,"SPAN",{});var Jd=o(Cn);_(gt.$$.fragment,Jd),Jd.forEach(t),Zd.forEach(t),ac=m(Zr),Nn=r(Zr,"SPAN",{});var Kd=o(Nn);nc=n(Kd,"Cr\xE9ation d'une carte pour un jeu de donn\xE9es"),Kd.forEach(t),Zr.forEach(t),Er=m(e),Tt=r(e,"P",{});var Xd=o(Tt);lc=n(Xd,"Des jeux de donn\xE9es bien document\xE9s sont plus susceptibles d\u2019\xEAtre utiles aux autres (y compris \xE0 vous-m\xEAme) car ils fournissent le contexte permettant aux utilisateurs de d\xE9cider si le jeu de donn\xE9es est pertinent pour leur t\xE2che et d\u2019\xE9valuer les biais potentiels ou les risques associ\xE9s \xE0 l\u2019utilisation du jeu de donn\xE9es."),Xd.forEach(t),$r=m(e),ye=r(e,"P",{});var Kt=o(ye);rc=n(Kt,"Sur le "),Mn=r(Kt,"EM",{});var Wd=o(Mn);oc=n(Wd,"Hub"),Wd.forEach(t),ic=n(Kt,", ces informations sont stock\xE9es dans le fichier "),On=r(Kt,"EM",{});var Yd=o(On);uc=n(Yd,"README.md"),Yd.forEach(t),pc=n(Kt," de chaque d\xE9p\xF4t de jeux de donn\xE9es. Il y a deux \xE9tapes principales que vous devez suivre avant de cr\xE9er ce fichier :"),Kt.forEach(t),qr=m(e),At=r(e,"OL",{});var eh=o(At);me=r(eh,"LI",{});var ds=o(me);cc=n(ds,"Utilisez l\u2019"),as=r(ds,"A",{href:!0,rel:!0});var Oc=o(as);mc=n(Oc,"application "),Tn=r(Oc,"CODE",{});var sh=o(Tn);dc=n(sh,"datasets-tagging"),sh.forEach(t),Oc.forEach(t),hc=n(ds," pour cr\xE9er des balises de m\xE9tadonn\xE9es au format YAML. Ces balises sont utilis\xE9es pour une vari\xE9t\xE9 de fonctionnalit\xE9s de recherche sur le "),An=r(ds,"EM",{});var th=o(An);fc=n(th,"Hub"),th.forEach(t),gc=n(ds," d\u2019Hugging Face et garantissent que votre jeu de donn\xE9es peut \xEAtre facilement trouv\xE9 par les membres de la communaut\xE9. Puisque nous avons cr\xE9\xE9 un jeu de donn\xE9es personnalis\xE9 ici, vous devrez cloner le r\xE9f\xE9rentiel "),Gn=r(ds,"CODE",{});var ah=o(Gn);_c=n(ah,"datasets-tagging"),ah.forEach(t),vc=n(ds," et ex\xE9cuter l\u2019application localement. Voici \xE0 quoi ressemble l\u2019interface :"),ds.forEach(t),eh.forEach(t),yr=m(e),_t=r(e,"DIV",{class:!0});var nh=o(_t);vt=r(nh,"IMG",{src:!0,alt:!0,width:!0}),nh.forEach(t),wr=m(e),bt=r(e,"OL",{start:!0});var lh=o(bt);xt=r(lh,"LI",{});var Jr=o(xt);bc=n(Jr,"Lisez le "),ns=r(Jr,"A",{href:!0,rel:!0});var Tc=o(ns);xc=n(Tc,"guide de \u{1F917} "),In=r(Tc,"EM",{});var rh=o(In);jc=n(rh,"Datasets"),rh.forEach(t),Tc.forEach(t),Ec=n(Jr," sur la cr\xE9ation des cartes informatives des jeux de donn\xE9es et utilisez-le comme mod\xE8le."),Jr.forEach(t),lh.forEach(t),kr=m(e),re=r(e,"P",{});var hs=o(re);$c=n(hs,"Vous pouvez cr\xE9er le fichier "),Rn=r(hs,"EM",{});var oh=o(Rn);qc=n(oh,"README.md"),oh.forEach(t),yc=n(hs," directement sur le "),Un=r(hs,"EM",{});var ih=o(Un);wc=n(ih,"Hub"),ih.forEach(t),kc=n(hs," et vous pouvez trouver un mod\xE8le de carte dans le d\xE9pot "),Sn=r(hs,"CODE",{});var uh=o(Sn);Dc=n(uh,"lewtun/github-issues"),uh.forEach(t),zc=n(hs,". Une capture d\u2019\xE9cran de la carte remplie est illustr\xE9e ci-dessous."),hs.forEach(t),Dr=m(e),jt=r(e,"DIV",{class:!0});var ph=o(jt);Et=r(ph,"IMG",{src:!0,alt:!0,width:!0}),ph.forEach(t),zr=m(e),_(ls.$$.fragment,e),Pr=m(e),rs=r(e,"P",{});var Kr=o(rs);Pc=n(Kr,"C\u2019ets tout ! Nous avons vu dans cette section que la cr\xE9ation d\u2019un bon jeu de donn\xE9es peut \xEAtre assez complexe, mais heureusement, le t\xE9l\xE9charger et le partager avec la communaut\xE9 ne l\u2019est pas. Dans la section suivante, nous utiliserons notre nouveau jeu de donn\xE9es pour cr\xE9er un moteur de recherche s\xE9mantique avec \u{1F917} "),Ln=r(Kr,"EM",{});var ch=o(Ln);Hc=n(ch,"Datasets"),ch.forEach(t),Cc=n(Kr," qui peut faire correspondre les questions aux probl\xE8mes et commentaires les plus pertinents."),Kr.forEach(t),Hr=m(e),_(os.$$.fragment,e),this.h()},h(){d(p,"name","hf:doc:metadata"),d(p,"content",JSON.stringify(kh)),d(k,"id","cration-de-votre-propre-jeu-de-donnes"),d(k,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(k,"href","#cration-de-votre-propre-jeu-de-donnes"),d(h,"class","relative group"),d(q,"href","https://github.com/features/issues/"),d(q,"rel","nofollow"),d(Ae,"id","obtenir-les-donnes"),d(Ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Ae,"href","#obtenir-les-donnes"),d(ze,"class","relative group"),d(vs,"href","https://github.com/huggingface/datasets/issues"),d(vs,"rel","nofollow"),Xt(xs.src,Ac="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/datasets-issues.png")||d(xs,"src",Ac),d(xs,"alt","The GitHub issues associated with \u{1F917} Datasets."),d(xs,"width","80%"),d(bs,"class","flex justify-center"),Xt(Es.src,Gc="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/datasets-issues-single.png")||d(Es,"src",Gc),d(Es,"alt","A typical GitHub issue in the \u{1F917} Datasets repository."),d(Es,"width","80%"),d(js,"class","flex justify-center"),d($s,"href","https://docs.github.com/en/rest"),d($s,"rel","nofollow"),d(qs,"href","https://docs.github.com/en/rest/reference/issues#list-repository-issues"),d(qs,"rel","nofollow"),d(zs,"href","https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"),d(zs,"rel","nofollow"),d(Cs,"href","https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting"),d(Cs,"rel","nofollow"),d(Ns,"href","https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token"),d(Ns,"rel","nofollow"),d(Ct,"href","/course/fr/chaper5/2"),d(Is,"href","https://github.com/huggingface/datasets/issues"),d(Is,"rel","nofollow"),d(Rs,"href","https://docs.github.com/en/rest/reference/issues#list-issues-assigned-to-the-authenticated-user"),d(Rs,"rel","nofollow"),d(Fe,"id","nettoyer-les-donnes"),d(Fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Fe,"href","#nettoyer-les-donnes"),d(Pe,"class","relative group"),d(Mt,"href","/course/fr/chapter5/3"),d(Be,"id","enrichir-le-jeu-de-donnes"),d(Be,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Be,"href","#enrichir-le-jeu-de-donnes"),d(He,"class","relative group"),Xt(Qs.src,Ic="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/datasets-issues-comment.png")||d(Qs,"src",Ic),d(Qs,"alt","Comments associated with an issue about \u{1F917} Datasets."),d(Qs,"width","80%"),d(Bs,"class","flex justify-center"),d(Zs,"href","https://docs.github.com/en/rest/reference/issues#list-issue-comments"),d(Zs,"rel","nofollow"),d(Ke,"id","tlchargement-du-jeu-de-donnes-sur-le-hub-dhugging-face"),d(Ke,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Ke,"href","#tlchargement-du-jeu-de-donnes-sur-le-hub-dhugging-face"),d(Ce,"class","relative group"),d(Xe,"href","https://github.com/huggingface/huggingface_hub"),d(Xe,"rel","nofollow"),Xt(dt.src,Rc="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/hub-repo.png")||d(dt,"src",Rc),d(dt,"alt","Our dataset repository on the Hugging Face Hub."),d(dt,"width","80%"),d(mt,"class","flex justify-center"),d(ts,"id","cration-dune-carte-pour-un-jeu-de-donnes"),d(ts,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(ts,"href","#cration-dune-carte-pour-un-jeu-de-donnes"),d(Ne,"class","relative group"),d(as,"href","https://huggingface.co/datasets/tagging/"),d(as,"rel","nofollow"),Xt(vt.src,Uc="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/datasets-tagger.png")||d(vt,"src",Uc),d(vt,"alt","The `datasets-tagging` interface."),d(vt,"width","80%"),d(_t,"class","flex justify-center"),d(ns,"href","https://github.com/huggingface/datasets/blob/master/templates/README_guide.md"),d(ns,"rel","nofollow"),d(bt,"start","2"),Xt(Et.src,Sc="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/dataset-card.png")||d(Et,"src",Sc),d(Et,"alt","A dataset card."),d(Et,"width","80%"),d(jt,"class","flex justify-center")},m(e,i){s(document.head,p),u(e,C,i),u(e,h,i),s(h,k),s(k,H),v(f,H,null),s(h,z),s(h,N),s(N,E),u(e,T,i),v(D,e,i),u(e,y,i),u(e,w,i),s(w,M),s(w,q),s(q,P),s(w,G),u(e,$,i),u(e,A,i),s(A,S),s(S,B),s(S,Q),s(Q,ee),s(A,De),s(A,ue),s(ue,fs),s(ue,pe),s(pe,I),s(ue,wt),s(A,kt),s(A,Oe),s(Oe,Dt),u(e,gs,i),u(e,ce,i),s(ce,zt),s(ce,Te),s(Te,Xr),s(ce,Wr),u(e,Zn,i),u(e,ze,i),s(ze,Ae),s(Ae,Yt),v(_s,Yt,null),s(ze,Yr),s(ze,ea),s(ea,eo),u(e,Jn,i),u(e,de,i),s(de,so),s(de,sa),s(sa,to),s(de,ao),s(de,vs),s(vs,no),s(de,lo),u(e,Kn,i),u(e,bs,i),s(bs,xs),u(e,Xn,i),u(e,Pt,i),s(Pt,ro),u(e,Wn,i),u(e,js,i),s(js,Es),u(e,Yn,i),u(e,he,i),s(he,oo),s(he,$s),s($s,io),s(he,uo),s(he,qs),s(qs,ta),s(ta,po),s(he,co),u(e,el,i),u(e,Ge,i),s(Ge,mo),s(Ge,aa),s(aa,ho),s(Ge,fo),u(e,sl,i),v(ys,e,i),u(e,tl,i),u(e,fe,i),s(fe,go),s(fe,na),s(na,_o),s(fe,vo),s(fe,la),s(la,bo),s(fe,xo),u(e,al,i),v(ws,e,i),u(e,nl,i),u(e,Ie,i),s(Ie,jo),s(Ie,ra),s(ra,Eo),s(Ie,$o),u(e,ll,i),v(ks,e,i),u(e,rl,i),v(Ds,e,i),u(e,ol,i),u(e,se,i),s(se,qo),s(se,oa),s(oa,yo),s(se,wo),s(se,zs),s(zs,ko),s(se,Do),s(se,ia),s(ia,zo),s(se,Po),u(e,il,i),v(Ps,e,i),u(e,ul,i),v(Hs,e,i),u(e,pl,i),u(e,te,i),s(te,Ho),s(te,ua),s(ua,Co),s(te,No),s(te,pa),s(pa,Mo),s(te,Oo),s(te,ca),s(ca,To),s(te,Ao),u(e,cl,i),v(Re,e,i),u(e,ml,i),u(e,Z,i),s(Z,Go),s(Z,Cs),s(Cs,Io),s(Z,Ro),s(Z,ma),s(ma,Uo),s(Z,So),s(Z,Ns),s(Ns,Lo),s(Z,Fo),s(Z,da),s(da,Vo),s(Z,Bo),s(Z,ha),s(ha,Qo),s(Z,Zo),u(e,dl,i),v(Ms,e,i),u(e,hl,i),v(Ue,e,i),u(e,fl,i),u(e,Ht,i),s(Ht,Jo),u(e,gl,i),v(Os,e,i),u(e,_l,i),u(e,ae,i),s(ae,Ko),s(ae,fa),s(fa,Xo),s(ae,Wo),s(ae,ga),s(ga,Yo),s(ae,ei),s(ae,_a),s(_a,si),s(ae,ti),u(e,vl,i),v(Ts,e,i),u(e,bl,i),u(e,Se,i),s(Se,ai),s(Se,Ct),s(Ct,ni),s(Se,li),u(e,xl,i),v(As,e,i),u(e,jl,i),v(Gs,e,i),u(e,El,i),u(e,X,i),s(X,ri),s(X,Is),s(Is,oi),s(X,ii),s(X,va),s(va,ui),s(X,pi),s(X,Rs),s(Rs,ci),s(X,mi),s(X,ba),s(ba,di),s(X,hi),u(e,$l,i),u(e,Nt,i),s(Nt,F),s(F,fi),s(F,xa),s(xa,gi),s(F,_i),s(F,ja),s(ja,vi),s(F,bi),s(F,Ea),s(Ea,xi),s(F,ji),s(F,$a),s($a,Ei),s(F,$i),s(F,qa),s(qa,qi),s(F,yi),s(F,ya),s(ya,wi),s(F,ki),u(e,ql,i),u(e,Le,i),s(Le,Di),s(Le,wa),s(wa,zi),s(Le,Pi),u(e,yl,i),u(e,Pe,i),s(Pe,Fe),s(Fe,ka),v(Us,ka,null),s(Pe,Hi),s(Pe,Da),s(Da,Ci),u(e,wl,i),u(e,R,i),s(R,Ni),s(R,za),s(za,Mi),s(R,Oi),s(R,Pa),s(Pa,Ti),s(R,Ai),s(R,Ha),s(Ha,Gi),s(R,Ii),s(R,Mt),s(Mt,Ri),s(R,Ui),s(R,Ca),s(Ca,Si),s(R,Li),s(R,Na),s(Na,Fi),s(R,Vi),s(R,Ma),s(Ma,Bi),s(R,Qi),s(R,Oa),s(Oa,Zi),s(R,Ji),u(e,kl,i),v(Ss,e,i),u(e,Dl,i),v(Ls,e,i),u(e,zl,i),u(e,J,i),s(J,Ki),s(J,Ta),s(Ta,Xi),s(J,Wi),s(J,Aa),s(Aa,Yi),s(J,eu),s(J,Ga),s(Ga,su),s(J,tu),s(J,Ia),s(Ia,au),s(J,nu),s(J,Ra),s(Ra,lu),s(J,ru),u(e,Pl,i),v(Fs,e,i),u(e,Hl,i),v(Ve,e,i),u(e,Cl,i),u(e,Ot,i),s(Ot,ou),u(e,Nl,i),u(e,ge,i),s(ge,iu),s(ge,Ua),s(Ua,uu),s(ge,pu),s(ge,Sa),s(Sa,cu),s(ge,mu),u(e,Ml,i),u(e,He,i),s(He,Be),s(Be,La),v(Vs,La,null),s(He,du),s(He,Fa),s(Fa,hu),u(e,Ol,i),u(e,Qe,i),s(Qe,fu),s(Qe,Va),s(Va,gu),s(Qe,_u),u(e,Tl,i),u(e,Bs,i),s(Bs,Qs),u(e,Al,i),u(e,Ze,i),s(Ze,vu),s(Ze,Zs),s(Zs,Ba),s(Ba,bu),s(Ze,xu),u(e,Gl,i),v(Js,e,i),u(e,Il,i),v(Ks,e,i),u(e,Rl,i),u(e,ne,i),s(ne,ju),s(ne,Qa),s(Qa,Eu),s(ne,$u),s(ne,Za),s(Za,qu),s(ne,yu),s(ne,Ja),s(Ja,wu),s(ne,ku),u(e,Ul,i),v(Xs,e,i),u(e,Sl,i),v(Ws,e,i),u(e,Ll,i),u(e,_e,i),s(_e,Du),s(_e,Ka),s(Ka,zu),s(_e,Pu),s(_e,Xa),s(Xa,Hu),s(_e,Cu),u(e,Fl,i),v(Ys,e,i),u(e,Vl,i),u(e,Je,i),s(Je,Nu),s(Je,Wa),s(Wa,Mu),s(Je,Ou),u(e,Bl,i),v(et,e,i),u(e,Ql,i),u(e,Ce,i),s(Ce,Ke),s(Ke,Ya),v(st,Ya,null),s(Ce,Tu),s(Ce,en),s(en,Au),u(e,Zl,i),v(tt,e,i),u(e,Jl,i),u(e,U,i),s(U,Gu),s(U,sn),s(sn,Iu),s(U,Ru),s(U,Xe),s(Xe,Uu),s(Xe,tn),s(tn,Su),s(U,Lu),s(U,an),s(an,Fu),s(U,Vu),s(U,nn),s(nn,Bu),s(U,Qu),s(U,ln),s(ln,Zu),s(U,Ju),s(U,rn),s(rn,Ku),s(U,Xu),s(U,on),s(on,Wu),s(U,Yu),u(e,Kl,i),v(at,e,i),u(e,Xl,i),v(nt,e,i),u(e,Wl,i),u(e,ve,i),s(ve,ep),s(ve,un),s(un,sp),s(ve,tp),s(ve,pn),s(pn,ap),s(ve,np),u(e,Yl,i),u(e,le,i),s(le,lp),s(le,cn),s(cn,rp),s(le,op),s(le,mn),s(mn,ip),s(le,up),s(le,dn),s(dn,pp),s(le,cp),u(e,er,i),v(lt,e,i),u(e,sr,i),u(e,be,i),s(be,mp),s(be,hn),s(hn,dp),s(be,hp),s(be,fn),s(fn,fp),s(be,gp),u(e,tr,i),v(rt,e,i),u(e,ar,i),u(e,We,i),s(We,_p),s(We,gn),s(gn,vp),s(We,bp),u(e,nr,i),v(ot,e,i),u(e,lr,i),v(it,e,i),u(e,rr,i),u(e,xe,i),s(xe,xp),s(xe,_n),s(_n,jp),s(xe,Ep),s(xe,vn),s(vn,$p),s(xe,qp),u(e,or,i),v(Ye,e,i),u(e,ir,i),u(e,je,i),s(je,yp),s(je,bn),s(bn,wp),s(je,kp),s(je,xn),s(xn,Dp),s(je,zp),u(e,ur,i),v(ut,e,i),u(e,pr,i),u(e,W,i),s(W,Pp),s(W,jn),s(jn,Hp),s(W,Cp),s(W,En),s(En,Np),s(W,Mp),s(W,$n),s($n,Op),s(W,Tp),s(W,qn),s(qn,Ap),s(W,Gp),u(e,cr,i),v(pt,e,i),u(e,mr,i),u(e,Ee,i),s(Ee,Ip),s(Ee,yn),s(yn,Rp),s(Ee,Up),s(Ee,wn),s(wn,Sp),s(Ee,Lp),u(e,dr,i),v(ct,e,i),u(e,hr,i),u(e,es,i),s(es,Fp),s(es,kn),s(kn,Vp),s(es,Bp),u(e,fr,i),u(e,mt,i),s(mt,dt),u(e,gr,i),u(e,$e,i),s($e,Qp),s($e,Dn),s(Dn,Zp),s($e,Jp),s($e,zn),s(zn,Kp),s($e,Xp),u(e,_r,i),v(ht,e,i),u(e,vr,i),v(ft,e,i),u(e,br,i),u(e,qe,i),s(qe,Wp),s(qe,Pn),s(Pn,Yp),s(qe,ec),s(qe,Hn),s(Hn,sc),s(qe,tc),u(e,xr,i),v(ss,e,i),u(e,jr,i),u(e,Ne,i),s(Ne,ts),s(ts,Cn),v(gt,Cn,null),s(Ne,ac),s(Ne,Nn),s(Nn,nc),u(e,Er,i),u(e,Tt,i),s(Tt,lc),u(e,$r,i),u(e,ye,i),s(ye,rc),s(ye,Mn),s(Mn,oc),s(ye,ic),s(ye,On),s(On,uc),s(ye,pc),u(e,qr,i),u(e,At,i),s(At,me),s(me,cc),s(me,as),s(as,mc),s(as,Tn),s(Tn,dc),s(me,hc),s(me,An),s(An,fc),s(me,gc),s(me,Gn),s(Gn,_c),s(me,vc),u(e,yr,i),u(e,_t,i),s(_t,vt),u(e,wr,i),u(e,bt,i),s(bt,xt),s(xt,bc),s(xt,ns),s(ns,xc),s(ns,In),s(In,jc),s(xt,Ec),u(e,kr,i),u(e,re,i),s(re,$c),s(re,Rn),s(Rn,qc),s(re,yc),s(re,Un),s(Un,wc),s(re,kc),s(re,Sn),s(Sn,Dc),s(re,zc),u(e,Dr,i),u(e,jt,i),s(jt,Et),u(e,zr,i),v(ls,e,i),u(e,Pr,i),u(e,rs,i),s(rs,Pc),s(rs,Ln),s(Ln,Hc),s(rs,Cc),u(e,Hr,i),v(os,e,i),Cr=!0},p(e,[i]){const $t={};i&2&&($t.$$scope={dirty:i,ctx:e}),Re.$set($t);const Fn={};i&2&&(Fn.$$scope={dirty:i,ctx:e}),Ue.$set(Fn);const Vn={};i&2&&(Vn.$$scope={dirty:i,ctx:e}),Ve.$set(Vn);const Bn={};i&2&&(Bn.$$scope={dirty:i,ctx:e}),Ye.$set(Bn);const qt={};i&2&&(qt.$$scope={dirty:i,ctx:e}),ss.$set(qt);const Qn={};i&2&&(Qn.$$scope={dirty:i,ctx:e}),ls.$set(Qn);const Me={};i&2&&(Me.$$scope={dirty:i,ctx:e}),os.$set(Me)},i(e){Cr||(b(f.$$.fragment,e),b(D.$$.fragment,e),b(_s.$$.fragment,e),b(ys.$$.fragment,e),b(ws.$$.fragment,e),b(ks.$$.fragment,e),b(Ds.$$.fragment,e),b(Ps.$$.fragment,e),b(Hs.$$.fragment,e),b(Re.$$.fragment,e),b(Ms.$$.fragment,e),b(Ue.$$.fragment,e),b(Os.$$.fragment,e),b(Ts.$$.fragment,e),b(As.$$.fragment,e),b(Gs.$$.fragment,e),b(Us.$$.fragment,e),b(Ss.$$.fragment,e),b(Ls.$$.fragment,e),b(Fs.$$.fragment,e),b(Ve.$$.fragment,e),b(Vs.$$.fragment,e),b(Js.$$.fragment,e),b(Ks.$$.fragment,e),b(Xs.$$.fragment,e),b(Ws.$$.fragment,e),b(Ys.$$.fragment,e),b(et.$$.fragment,e),b(st.$$.fragment,e),b(tt.$$.fragment,e),b(at.$$.fragment,e),b(nt.$$.fragment,e),b(lt.$$.fragment,e),b(rt.$$.fragment,e),b(ot.$$.fragment,e),b(it.$$.fragment,e),b(Ye.$$.fragment,e),b(ut.$$.fragment,e),b(pt.$$.fragment,e),b(ct.$$.fragment,e),b(ht.$$.fragment,e),b(ft.$$.fragment,e),b(ss.$$.fragment,e),b(gt.$$.fragment,e),b(ls.$$.fragment,e),b(os.$$.fragment,e),Cr=!0)},o(e){x(f.$$.fragment,e),x(D.$$.fragment,e),x(_s.$$.fragment,e),x(ys.$$.fragment,e),x(ws.$$.fragment,e),x(ks.$$.fragment,e),x(Ds.$$.fragment,e),x(Ps.$$.fragment,e),x(Hs.$$.fragment,e),x(Re.$$.fragment,e),x(Ms.$$.fragment,e),x(Ue.$$.fragment,e),x(Os.$$.fragment,e),x(Ts.$$.fragment,e),x(As.$$.fragment,e),x(Gs.$$.fragment,e),x(Us.$$.fragment,e),x(Ss.$$.fragment,e),x(Ls.$$.fragment,e),x(Fs.$$.fragment,e),x(Ve.$$.fragment,e),x(Vs.$$.fragment,e),x(Js.$$.fragment,e),x(Ks.$$.fragment,e),x(Xs.$$.fragment,e),x(Ws.$$.fragment,e),x(Ys.$$.fragment,e),x(et.$$.fragment,e),x(st.$$.fragment,e),x(tt.$$.fragment,e),x(at.$$.fragment,e),x(nt.$$.fragment,e),x(lt.$$.fragment,e),x(rt.$$.fragment,e),x(ot.$$.fragment,e),x(it.$$.fragment,e),x(Ye.$$.fragment,e),x(ut.$$.fragment,e),x(pt.$$.fragment,e),x(ct.$$.fragment,e),x(ht.$$.fragment,e),x(ft.$$.fragment,e),x(ss.$$.fragment,e),x(gt.$$.fragment,e),x(ls.$$.fragment,e),x(os.$$.fragment,e),Cr=!1},d(e){t(p),e&&t(C),e&&t(h),j(f),e&&t(T),j(D,e),e&&t(y),e&&t(w),e&&t($),e&&t(A),e&&t(gs),e&&t(ce),e&&t(Zn),e&&t(ze),j(_s),e&&t(Jn),e&&t(de),e&&t(Kn),e&&t(bs),e&&t(Xn),e&&t(Pt),e&&t(Wn),e&&t(js),e&&t(Yn),e&&t(he),e&&t(el),e&&t(Ge),e&&t(sl),j(ys,e),e&&t(tl),e&&t(fe),e&&t(al),j(ws,e),e&&t(nl),e&&t(Ie),e&&t(ll),j(ks,e),e&&t(rl),j(Ds,e),e&&t(ol),e&&t(se),e&&t(il),j(Ps,e),e&&t(ul),j(Hs,e),e&&t(pl),e&&t(te),e&&t(cl),j(Re,e),e&&t(ml),e&&t(Z),e&&t(dl),j(Ms,e),e&&t(hl),j(Ue,e),e&&t(fl),e&&t(Ht),e&&t(gl),j(Os,e),e&&t(_l),e&&t(ae),e&&t(vl),j(Ts,e),e&&t(bl),e&&t(Se),e&&t(xl),j(As,e),e&&t(jl),j(Gs,e),e&&t(El),e&&t(X),e&&t($l),e&&t(Nt),e&&t(ql),e&&t(Le),e&&t(yl),e&&t(Pe),j(Us),e&&t(wl),e&&t(R),e&&t(kl),j(Ss,e),e&&t(Dl),j(Ls,e),e&&t(zl),e&&t(J),e&&t(Pl),j(Fs,e),e&&t(Hl),j(Ve,e),e&&t(Cl),e&&t(Ot),e&&t(Nl),e&&t(ge),e&&t(Ml),e&&t(He),j(Vs),e&&t(Ol),e&&t(Qe),e&&t(Tl),e&&t(Bs),e&&t(Al),e&&t(Ze),e&&t(Gl),j(Js,e),e&&t(Il),j(Ks,e),e&&t(Rl),e&&t(ne),e&&t(Ul),j(Xs,e),e&&t(Sl),j(Ws,e),e&&t(Ll),e&&t(_e),e&&t(Fl),j(Ys,e),e&&t(Vl),e&&t(Je),e&&t(Bl),j(et,e),e&&t(Ql),e&&t(Ce),j(st),e&&t(Zl),j(tt,e),e&&t(Jl),e&&t(U),e&&t(Kl),j(at,e),e&&t(Xl),j(nt,e),e&&t(Wl),e&&t(ve),e&&t(Yl),e&&t(le),e&&t(er),j(lt,e),e&&t(sr),e&&t(be),e&&t(tr),j(rt,e),e&&t(ar),e&&t(We),e&&t(nr),j(ot,e),e&&t(lr),j(it,e),e&&t(rr),e&&t(xe),e&&t(or),j(Ye,e),e&&t(ir),e&&t(je),e&&t(ur),j(ut,e),e&&t(pr),e&&t(W),e&&t(cr),j(pt,e),e&&t(mr),e&&t(Ee),e&&t(dr),j(ct,e),e&&t(hr),e&&t(es),e&&t(fr),e&&t(mt),e&&t(gr),e&&t($e),e&&t(_r),j(ht,e),e&&t(vr),j(ft,e),e&&t(br),e&&t(qe),e&&t(xr),j(ss,e),e&&t(jr),e&&t(Ne),j(gt),e&&t(Er),e&&t(Tt),e&&t($r),e&&t(ye),e&&t(qr),e&&t(At),e&&t(yr),e&&t(_t),e&&t(wr),e&&t(bt),e&&t(kr),e&&t(re),e&&t(Dr),e&&t(jt),e&&t(zr),j(ls,e),e&&t(Pr),e&&t(rs),e&&t(Hr),j(os,e)}}}const kh={local:"cration-de-votre-propre-jeu-de-donnes",sections:[{local:"obtenir-les-donnes",title:"Obtenir les donn\xE9es"},{local:"nettoyer-les-donnes",title:"Nettoyer les donn\xE9es"},{local:"enrichir-le-jeu-de-donnes",title:"Enrichir le jeu de donn\xE9es"},{local:"tlchargement-du-jeu-de-donnes-sur-le-hub-dhugging-face",title:"T\xE9l\xE9chargement du jeu de donn\xE9es sur le *Hub* d\u2019Hugging Face"},{local:"cration-dune-carte-pour-un-jeu-de-donnes",title:"Cr\xE9ation d'une carte pour un jeu de donn\xE9es"}],title:"Cr\xE9ation de votre propre jeu de donn\xE9es"};function Dh(V){return gh(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Oh extends mh{constructor(p){super();dh(this,p,Dh,wh,hh,{})}}export{Oh as default,kh as metadata};
