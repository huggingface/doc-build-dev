import{S as so,i as uo,s as co,e as r,k as c,w as m,t as b,M as po,c as a,d as t,m as p,x as $,a as l,h as w,b as n,G as o,g as u,y as v,o as f,p as fo,q as h,B as g,v as ho,n as mo}from"../../chunks/vendor-hf-doc-builder.js";import{I as Q}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{Q as T}from"../../chunks/Question-hf-doc-builder.js";import{F as $o}from"../../chunks/FrameworkSwitchCourse-hf-doc-builder.js";function vo(V){let d,_;return d=new T({props:{choices:[{text:"Un tokenizer",explain:"Corretto! Tutti i tokenizers hanno il metodo <code>push_to_hub</code>, che carica tutti i file del tokenizer (vocabolario, architettura del tokenizer, ecc.) su un repository specificatoo. Questa non \xE8 l'unica risposta giusta per\xF2!",correct:!0},{text:"La configurazione di un modello",explain:"Vero! Gli oggetti di contennti la configurazione di tutti i modelli hanno il metodo <code>push_to_hub</code>, che li carica su un repository specificato. Cosa altro si pu\xF2 condividere?",correct:!0},{text:"Un modello",explain:"Corretto! Tutti i modelli hanno il metodo <code>push_to_hub</code>, e utilizzandolo si possono caricare, insieme ai loro file di configurazione, su un repository specificato. Si possono condividere anche altre cose.",correct:!0},{text:"Tutti i precedenti, usando una callback dedicata",explain:"Giusto \u2014 la callback <code>PushToHubCallback</code> caricher\xE0 tutti questi oggetti su un repository regolarmente durante l'addestramento.",correct:!0}]}}),{c(){m(d.$$.fragment)},l(s){$(d.$$.fragment,s)},m(s,z){v(d,s,z),_=!0},i(s){_||(h(d.$$.fragment,s),_=!0)},o(s){f(d.$$.fragment,s),_=!1},d(s){g(d,s)}}}function go(V){let d,_;return d=new T({props:{choices:[{text:"Un tokenizer",explain:"Corretto! Tutti i tokenizers hanno il metodo <code>push_to_hub</code>, che carica tutti i file del tokenizer (vocabolario, architettura del tokenizer, ecc.) su un repository specificatoo. Questa non \xE8 l'unica risposta giusta per\xF2!",correct:!0},{text:"La configurazione di un modello",explain:"Vero! Gli oggetti di contennti la configurazione di tutti i modelli hanno il metodo <code>push_to_hub</code>, che li carica su un repository specificato. Cosa altro si pu\xF2 condividere?",correct:!0},{text:"Un modello",explain:"Corretto! Tutti i modelli hanno il metodo <code>push_to_hub</code>, e utilizzandolo si possono caricare, insieme ai loro file di configurazione, su un repository specificato. Si possono condividere anche altre cose.",correct:!0},{text:"Un Trainer",explain:"Giusto \u2014 l'oggetto <code>Trainer</code> implementa il metodo <code>push_to_hub</code>, e utilizzandolo, si possono caricare modello, configurazione, tokenizer, e cartellino su un repository specificato. Prova un'altra risposta!",correct:!0}]}}),{c(){m(d.$$.fragment)},l(s){$(d.$$.fragment,s)},m(s,z){v(d,s,z),_=!0},i(s){_||(h(d.$$.fragment,s),_=!0)},o(s){f(d.$$.fragment,s),_=!1},d(s){g(d,s)}}}function _o(V){let d,_,s,z,y,U,$e,B,st,ve,ut,Qe,fe,ct,Te,E,M,ge,J,pt,_e,dt,Ue,j,Me,q,I,be,K,ft,we,ht,Ie,W,Ge,C,G,xe,X,mt,ke,$t,Le,Y,Fe,A,L,ze,Z,vt,ye,gt,Oe,ee,De,H,F,Ee,te,_t,oe,bt,qe,wt,xt,Re,x,k,he,P,O,Ce,ie,kt,re,zt,Ae,yt,Et,Ve,ae,Be,S,D,He,le,qt,Pe,Ct,Je,ne,je,N,R,Se,se,At,ue,Ht,Ne,Pt,St,Ke,ce,We;s=new $o({props:{fw:V[0]}}),B=new Q({}),J=new Q({}),j=new T({props:{choices:[{text:"Modelli dalla libreria \u{1F917} Transformers.",explain:"I modelli della libreria \u{1F917} Transformers sono supportati dall'Hub di Hugging Face, ma non sono gli unici!"},{text:"Tutti i modelli con una interfaccia simile ai \u{1F917} Transformers.",explain:"Non ci sono requisiti relativi all'interfaccia quando si carica un modello sull'Hub di Hugging Face. "},{text:"Non ci sono limiti.",explain:"Esatto! Non ci sono limiti quando si carica un modello sull'Hub.",correct:!0},{text:"Modelli che sono in qualche modo relativi all'NLP.",explain:"Non ci sono requisiti relativi al campo di applicazione!"}]}}),K=new Q({}),W=new T({props:{choices:[{text:"Attraverso un account GCP.",explain:"Sbagliato!"},{text:"Attraverso un sistema di distribuzione peer-to-peer.",explain:"Sbagliato!"},{text:"Attraverso git e git-lfs.",explain:"Corretto! I modelli sull'Hub sono semplici repository Git, che usano <code>git-lfs</code> per i file di grandi dimensioni.",correct:!0}]}}),X=new Q({}),Y=new T({props:{choices:[{text:"Effettuare un fork di un repository esistente.",explain:"Non \xE8 possibile effettuare fork di repository sull'Hugging Face Hub."},{text:"Creare un nuvo repository di un modello.",explain:"Corretto! Per\xF2 si pu\xF2 fare anche altro.",correct:!0},{text:"Gestire ed editare file.",explain:"Corretto! Ma non \xE8 l'unica risposta giusta.",correct:!0},{text:"Caricare file.",explain:"Giusto! Ma non \xE8 tutto.",correct:!0},{text:"Visualizzare le differenze tra le versioni.",explain:"Corretto! Per\xF2 si pu\xF2 fare anche altro.",correct:!0}]}}),Z=new Q({}),ee=new T({props:{choices:[{text:"Una descrizione approssimativa del modello, e pertanto meno importante dei file del modello e del tokenizer.",explain:"\xC8 effettivamente una descrizione del modello, ma \xE8 molto importante: se incompleto o mancante, l'utilit\xE0 del modello \xE8 ridotta drasticamente."},{text:"Un modo per assicurare riproducibilit\xE0, riutilizzo, e correttezza.",explain:"Corretto! Condividere le informazioni giuste sul cartellino aiuter\xE0 gli utenti a utilizzare il vostro modello ed essere a conoscenza dei suoi limiti e bias.",correct:!0},{text:"Un file Python che pu\xF2 essere eseguito per ottenere informazioni sul modello.",explain:"I cartellini sono semplici file Markdown."}]}}),te=new Q({});const Nt=[go,vo],pe=[];function Qt(e,i){return e[0]==="pt"?0:1}return x=Qt(V),k=pe[x]=Nt[x](V),ie=new Q({}),ae=new T({props:{choices:[{text:"Log in sul sito web.",explain:"Questo non vi sar\xE0 utile mentre lavorate sulla vostra macchina locale."},{text:"Eseguire 'huggingface-cli login' in un terminale.",explain:"Corretto \u2014 questo scaricher\xE0 e salver\xE0 in una cartella di cache il vostro token di autenticazione personale.",correct:!0},{text:"Eseguire 'notebook_login()' in un notebook.",explain:"Corretto \u2014 questo mostrer\xE0 un widget che permette di autenticarsi.",correct:!0}]}}),le=new Q({}),ne=new T({props:{choices:[{text:"Usando direttamente il metodo push_to_hub su modello e tokenizer.",explain:"Corretto!",correct:!0},{text:"All'interno di un runtime di Python, facendo wrapping di entrambi con l'utility <code>huggingface_hub</code>.",explain:"Modelli e tokenizer beneficiano gi\xE0 delle utilities di <code>huggingface_hub</code>: non c'\xE8 bisogno di wrapping addizionale!"},{text:"Salvandoli su disco e invocando il comando <code>transformers-cli upload-model</code>",explain:"Il commando <code>upload-model</code> non esiste."}]}}),se=new Q({}),ce=new T({props:{choices:[{text:"git commit.",explain:"Corretto, il metodo <code>git_commit()</code> \xE8 li per questo.",correct:!0},{text:"git pull",explain:"Questa \xE8 la funzione del metodo <code>git_pull()</code>.",correct:!0},{text:"git push",explain:"Il metodo <code>git_push()</code> fa esattamente questo.",correct:!0},{text:"git merge",explain:"No, questa operazione non \xE8 possibile con questa API."}]}}),{c(){d=r("meta"),_=c(),m(s.$$.fragment),z=c(),y=r("h1"),U=r("a"),$e=r("span"),m(B.$$.fragment),st=c(),ve=r("span"),ut=b("Quiz di fine capitolo"),Qe=c(),fe=r("p"),ct=b("Mettiamo alla prova quello che avete imparato in questo capitolo!"),Te=c(),E=r("h3"),M=r("a"),ge=r("span"),m(J.$$.fragment),pt=c(),_e=r("span"),dt=b("1. Quali modelli si possono caricare sull\u2019Hub?"),Ue=c(),m(j.$$.fragment),Me=c(),q=r("h3"),I=r("a"),be=r("span"),m(K.$$.fragment),ft=c(),we=r("span"),ht=b("2. Come si gestisce un modello sull\u2019Hub?"),Ie=c(),m(W.$$.fragment),Ge=c(),C=r("h3"),G=r("a"),xe=r("span"),m(X.$$.fragment),mt=c(),ke=r("span"),$t=b("3. Cosa si pu\xF2 fare attraverso l\u2019interfacca web di Hugging Face Hub?"),Le=c(),m(Y.$$.fragment),Fe=c(),A=r("h3"),L=r("a"),ze=r("span"),m(Z.$$.fragment),vt=c(),ye=r("span"),gt=b("4. Cos\u2019\xE8 il cartellino del modello?"),Oe=c(),m(ee.$$.fragment),De=c(),H=r("h3"),F=r("a"),Ee=r("span"),m(te.$$.fragment),_t=c(),oe=r("span"),bt=b("5. QUali di questi oggetti della libreria \u{1F917} Transformers pu\xF2 essere direttamente condiviso sull\u2019Hub con "),qe=r("code"),wt=b("push_to_hub()"),xt=b("?"),Re=c(),k.c(),he=c(),P=r("h3"),O=r("a"),Ce=r("span"),m(ie.$$.fragment),kt=c(),re=r("span"),zt=b("6. Qual \xE8 il primo passo da fare quando si usano il metodo "),Ae=r("code"),yt=b("push_to_hub()"),Et=b(" o gli strumenti da riga di comando (CLI)?"),Ve=c(),m(ae.$$.fragment),Be=c(),S=r("h3"),D=r("a"),He=r("span"),m(le.$$.fragment),qt=c(),Pe=r("span"),Ct=b("7. Se state usando un modello e un tokenizer \u2014 come li caricate sull\u2019Hub?"),Je=c(),m(ne.$$.fragment),je=c(),N=r("h3"),R=r("a"),Se=r("span"),m(se.$$.fragment),At=c(),ue=r("span"),Ht=b("8. Quali operazioni di git si possono fare con la classe "),Ne=r("code"),Pt=b("Repository"),St=b("?"),Ke=c(),m(ce.$$.fragment),this.h()},l(e){const i=po('[data-svelte="svelte-1phssyn"]',document.head);d=a(i,"META",{name:!0,content:!0}),i.forEach(t),_=p(e),$(s.$$.fragment,e),z=p(e),y=a(e,"H1",{class:!0});var de=l(y);U=a(de,"A",{id:!0,class:!0,href:!0});var me=l(U);$e=a(me,"SPAN",{});var Tt=l($e);$(B.$$.fragment,Tt),Tt.forEach(t),me.forEach(t),st=p(de),ve=a(de,"SPAN",{});var Ut=l(ve);ut=w(Ut,"Quiz di fine capitolo"),Ut.forEach(t),de.forEach(t),Qe=p(e),fe=a(e,"P",{});var Mt=l(fe);ct=w(Mt,"Mettiamo alla prova quello che avete imparato in questo capitolo!"),Mt.forEach(t),Te=p(e),E=a(e,"H3",{class:!0});var Xe=l(E);M=a(Xe,"A",{id:!0,class:!0,href:!0});var It=l(M);ge=a(It,"SPAN",{});var Gt=l(ge);$(J.$$.fragment,Gt),Gt.forEach(t),It.forEach(t),pt=p(Xe),_e=a(Xe,"SPAN",{});var Lt=l(_e);dt=w(Lt,"1. Quali modelli si possono caricare sull\u2019Hub?"),Lt.forEach(t),Xe.forEach(t),Ue=p(e),$(j.$$.fragment,e),Me=p(e),q=a(e,"H3",{class:!0});var Ye=l(q);I=a(Ye,"A",{id:!0,class:!0,href:!0});var Ft=l(I);be=a(Ft,"SPAN",{});var Ot=l(be);$(K.$$.fragment,Ot),Ot.forEach(t),Ft.forEach(t),ft=p(Ye),we=a(Ye,"SPAN",{});var Dt=l(we);ht=w(Dt,"2. Come si gestisce un modello sull\u2019Hub?"),Dt.forEach(t),Ye.forEach(t),Ie=p(e),$(W.$$.fragment,e),Ge=p(e),C=a(e,"H3",{class:!0});var Ze=l(C);G=a(Ze,"A",{id:!0,class:!0,href:!0});var Rt=l(G);xe=a(Rt,"SPAN",{});var Vt=l(xe);$(X.$$.fragment,Vt),Vt.forEach(t),Rt.forEach(t),mt=p(Ze),ke=a(Ze,"SPAN",{});var Bt=l(ke);$t=w(Bt,"3. Cosa si pu\xF2 fare attraverso l\u2019interfacca web di Hugging Face Hub?"),Bt.forEach(t),Ze.forEach(t),Le=p(e),$(Y.$$.fragment,e),Fe=p(e),A=a(e,"H3",{class:!0});var et=l(A);L=a(et,"A",{id:!0,class:!0,href:!0});var Jt=l(L);ze=a(Jt,"SPAN",{});var jt=l(ze);$(Z.$$.fragment,jt),jt.forEach(t),Jt.forEach(t),vt=p(et),ye=a(et,"SPAN",{});var Kt=l(ye);gt=w(Kt,"4. Cos\u2019\xE8 il cartellino del modello?"),Kt.forEach(t),et.forEach(t),Oe=p(e),$(ee.$$.fragment,e),De=p(e),H=a(e,"H3",{class:!0});var tt=l(H);F=a(tt,"A",{id:!0,class:!0,href:!0});var Wt=l(F);Ee=a(Wt,"SPAN",{});var Xt=l(Ee);$(te.$$.fragment,Xt),Xt.forEach(t),Wt.forEach(t),_t=p(tt),oe=a(tt,"SPAN",{});var ot=l(oe);bt=w(ot,"5. QUali di questi oggetti della libreria \u{1F917} Transformers pu\xF2 essere direttamente condiviso sull\u2019Hub con "),qe=a(ot,"CODE",{});var Yt=l(qe);wt=w(Yt,"push_to_hub()"),Yt.forEach(t),xt=w(ot,"?"),ot.forEach(t),tt.forEach(t),Re=p(e),k.l(e),he=p(e),P=a(e,"H3",{class:!0});var it=l(P);O=a(it,"A",{id:!0,class:!0,href:!0});var Zt=l(O);Ce=a(Zt,"SPAN",{});var eo=l(Ce);$(ie.$$.fragment,eo),eo.forEach(t),Zt.forEach(t),kt=p(it),re=a(it,"SPAN",{});var rt=l(re);zt=w(rt,"6. Qual \xE8 il primo passo da fare quando si usano il metodo "),Ae=a(rt,"CODE",{});var to=l(Ae);yt=w(to,"push_to_hub()"),to.forEach(t),Et=w(rt," o gli strumenti da riga di comando (CLI)?"),rt.forEach(t),it.forEach(t),Ve=p(e),$(ae.$$.fragment,e),Be=p(e),S=a(e,"H3",{class:!0});var at=l(S);D=a(at,"A",{id:!0,class:!0,href:!0});var oo=l(D);He=a(oo,"SPAN",{});var io=l(He);$(le.$$.fragment,io),io.forEach(t),oo.forEach(t),qt=p(at),Pe=a(at,"SPAN",{});var ro=l(Pe);Ct=w(ro,"7. Se state usando un modello e un tokenizer \u2014 come li caricate sull\u2019Hub?"),ro.forEach(t),at.forEach(t),Je=p(e),$(ne.$$.fragment,e),je=p(e),N=a(e,"H3",{class:!0});var lt=l(N);R=a(lt,"A",{id:!0,class:!0,href:!0});var ao=l(R);Se=a(ao,"SPAN",{});var lo=l(Se);$(se.$$.fragment,lo),lo.forEach(t),ao.forEach(t),At=p(lt),ue=a(lt,"SPAN",{});var nt=l(ue);Ht=w(nt,"8. Quali operazioni di git si possono fare con la classe "),Ne=a(nt,"CODE",{});var no=l(Ne);Pt=w(no,"Repository"),no.forEach(t),St=w(nt,"?"),nt.forEach(t),lt.forEach(t),Ke=p(e),$(ce.$$.fragment,e),this.h()},h(){n(d,"name","hf:doc:metadata"),n(d,"content",JSON.stringify(bo)),n(U,"id","quiz-di-fine-capitolo"),n(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(U,"href","#quiz-di-fine-capitolo"),n(y,"class","relative group"),n(M,"id","1.-quali-modelli-si-possono-caricare-sull\u2019hub?"),n(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(M,"href","#1.-quali-modelli-si-possono-caricare-sull\u2019hub?"),n(E,"class","relative group"),n(I,"id","2.-come-si-gestisce-un-modello-sull\u2019hub?"),n(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(I,"href","#2.-come-si-gestisce-un-modello-sull\u2019hub?"),n(q,"class","relative group"),n(G,"id","3.-cosa-si-pu\xF2-fare-attraverso-l\u2019interfacca-web-di-hugging-face-hub?"),n(G,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(G,"href","#3.-cosa-si-pu\xF2-fare-attraverso-l\u2019interfacca-web-di-hugging-face-hub?"),n(C,"class","relative group"),n(L,"id","4.-cos\u2019\xE8-il-cartellino-del-modello?"),n(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(L,"href","#4.-cos\u2019\xE8-il-cartellino-del-modello?"),n(A,"class","relative group"),n(F,"id","5.-quali-di-questi-oggetti-della-libreria-\u{1F917}-transformers-pu\xF2-essere-direttamente-condiviso-sull\u2019hub-con-<code>push_to_hub()</code>?"),n(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(F,"href","#5.-quali-di-questi-oggetti-della-libreria-\u{1F917}-transformers-pu\xF2-essere-direttamente-condiviso-sull\u2019hub-con-<code>push_to_hub()</code>?"),n(H,"class","relative group"),n(O,"id","6.-qual-\xE8-il-primo-passo-da-fare-quando-si-usano-il-metodo-<code>push_to_hub()</code>-o-gli-strumenti-da-riga-di-comando-(cli)?"),n(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(O,"href","#6.-qual-\xE8-il-primo-passo-da-fare-quando-si-usano-il-metodo-<code>push_to_hub()</code>-o-gli-strumenti-da-riga-di-comando-(cli)?"),n(P,"class","relative group"),n(D,"id","7.-se-state-usando-un-modello-e-un-tokenizer-\u2014-come-li-caricate-sull\u2019hub?"),n(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(D,"href","#7.-se-state-usando-un-modello-e-un-tokenizer-\u2014-come-li-caricate-sull\u2019hub?"),n(S,"class","relative group"),n(R,"id","8.-quali-operazioni-di-git-si-possono-fare-con-la-classe-<code>repository</code>?"),n(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(R,"href","#8.-quali-operazioni-di-git-si-possono-fare-con-la-classe-<code>repository</code>?"),n(N,"class","relative group")},m(e,i){o(document.head,d),u(e,_,i),v(s,e,i),u(e,z,i),u(e,y,i),o(y,U),o(U,$e),v(B,$e,null),o(y,st),o(y,ve),o(ve,ut),u(e,Qe,i),u(e,fe,i),o(fe,ct),u(e,Te,i),u(e,E,i),o(E,M),o(M,ge),v(J,ge,null),o(E,pt),o(E,_e),o(_e,dt),u(e,Ue,i),v(j,e,i),u(e,Me,i),u(e,q,i),o(q,I),o(I,be),v(K,be,null),o(q,ft),o(q,we),o(we,ht),u(e,Ie,i),v(W,e,i),u(e,Ge,i),u(e,C,i),o(C,G),o(G,xe),v(X,xe,null),o(C,mt),o(C,ke),o(ke,$t),u(e,Le,i),v(Y,e,i),u(e,Fe,i),u(e,A,i),o(A,L),o(L,ze),v(Z,ze,null),o(A,vt),o(A,ye),o(ye,gt),u(e,Oe,i),v(ee,e,i),u(e,De,i),u(e,H,i),o(H,F),o(F,Ee),v(te,Ee,null),o(H,_t),o(H,oe),o(oe,bt),o(oe,qe),o(qe,wt),o(oe,xt),u(e,Re,i),pe[x].m(e,i),u(e,he,i),u(e,P,i),o(P,O),o(O,Ce),v(ie,Ce,null),o(P,kt),o(P,re),o(re,zt),o(re,Ae),o(Ae,yt),o(re,Et),u(e,Ve,i),v(ae,e,i),u(e,Be,i),u(e,S,i),o(S,D),o(D,He),v(le,He,null),o(S,qt),o(S,Pe),o(Pe,Ct),u(e,Je,i),v(ne,e,i),u(e,je,i),u(e,N,i),o(N,R),o(R,Se),v(se,Se,null),o(N,At),o(N,ue),o(ue,Ht),o(ue,Ne),o(Ne,Pt),o(ue,St),u(e,Ke,i),v(ce,e,i),We=!0},p(e,[i]){const de={};i&1&&(de.fw=e[0]),s.$set(de);let me=x;x=Qt(e),x!==me&&(mo(),f(pe[me],1,1,()=>{pe[me]=null}),fo(),k=pe[x],k||(k=pe[x]=Nt[x](e),k.c()),h(k,1),k.m(he.parentNode,he))},i(e){We||(h(s.$$.fragment,e),h(B.$$.fragment,e),h(J.$$.fragment,e),h(j.$$.fragment,e),h(K.$$.fragment,e),h(W.$$.fragment,e),h(X.$$.fragment,e),h(Y.$$.fragment,e),h(Z.$$.fragment,e),h(ee.$$.fragment,e),h(te.$$.fragment,e),h(k),h(ie.$$.fragment,e),h(ae.$$.fragment,e),h(le.$$.fragment,e),h(ne.$$.fragment,e),h(se.$$.fragment,e),h(ce.$$.fragment,e),We=!0)},o(e){f(s.$$.fragment,e),f(B.$$.fragment,e),f(J.$$.fragment,e),f(j.$$.fragment,e),f(K.$$.fragment,e),f(W.$$.fragment,e),f(X.$$.fragment,e),f(Y.$$.fragment,e),f(Z.$$.fragment,e),f(ee.$$.fragment,e),f(te.$$.fragment,e),f(k),f(ie.$$.fragment,e),f(ae.$$.fragment,e),f(le.$$.fragment,e),f(ne.$$.fragment,e),f(se.$$.fragment,e),f(ce.$$.fragment,e),We=!1},d(e){t(d),e&&t(_),g(s,e),e&&t(z),e&&t(y),g(B),e&&t(Qe),e&&t(fe),e&&t(Te),e&&t(E),g(J),e&&t(Ue),g(j,e),e&&t(Me),e&&t(q),g(K),e&&t(Ie),g(W,e),e&&t(Ge),e&&t(C),g(X),e&&t(Le),g(Y,e),e&&t(Fe),e&&t(A),g(Z),e&&t(Oe),g(ee,e),e&&t(De),e&&t(H),g(te),e&&t(Re),pe[x].d(e),e&&t(he),e&&t(P),g(ie),e&&t(Ve),g(ae,e),e&&t(Be),e&&t(S),g(le),e&&t(Je),g(ne,e),e&&t(je),e&&t(N),g(se),e&&t(Ke),g(ce,e)}}}const bo={local:"quiz-di-fine-capitolo",title:"Quiz di fine capitolo"};function wo(V,d,_){let s="pt";return ho(()=>{const z=new URLSearchParams(window.location.search);_(0,s=z.get("fw")||"pt")}),[s]}class Eo extends so{constructor(d){super();uo(this,d,wo,_o,co,{})}}export{Eo as default,bo as metadata};
