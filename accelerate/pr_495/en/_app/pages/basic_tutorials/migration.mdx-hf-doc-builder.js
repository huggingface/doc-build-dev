import{S as Hr,i as Br,s as Cr,e as o,k as h,w as m,t as c,M as qr,c as i,d as t,m as d,a as l,x as v,h as p,b as n,G as r,g as s,y as g,q as $,o as y,B as _,v as Or}from"../../chunks/vendor-hf-doc-builder.js";import{T as Mr}from"../../chunks/Tip-hf-doc-builder.js";import{I as oe}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as ve}from"../../chunks/CodeBlock-hf-doc-builder.js";function Dr(ie){let f;return{c(){f=c("We are under the presumption that `training_dataloader`, `model`, `optimizer`, `scheduler`, and `loss_function` have been defined beforehand.")},l(u){f=p(u,"We are under the presumption that `training_dataloader`, `model`, `optimizer`, `scheduler`, and `loss_function` have been defined beforehand.")},m(u,w){s(u,f,w)},d(u){u&&t(f)}}}function Lr(ie){let f;return{c(){f=c("Accelerate will only prepare objects that inherit from their respective PyTorch classes (such as `torch.optim.Optimizer`).")},l(u){f=p(u,"Accelerate will only prepare objects that inherit from their respective PyTorch classes (such as `torch.optim.Optimizer`).")},m(u,w){s(u,f,w)},d(u){u&&t(f)}}}function Wr(ie){let f,u,w,z,ge,I,mt,$e,vt,He,le,gt,Be,A,S,ye,Y,$t,_e,yt,Ce,se,_t,qe,x,Oe,G,De,k,N,we,J,wt,be,bt,Le,M,At,ne,kt,Et,We,R,Fe,U,ce,Pt,jt,Ie,E,H,Ae,K,Tt,ke,zt,Ye,b,St,pe,xt,Nt,Ee,Mt,Ht,he,Bt,Ct,Ge,Q,Je,P,B,Pe,V,qt,je,Ot,Re,C,Dt,de,Lt,Wt,Ue,X,Ke,q,Ft,Te,It,Yt,Qe,O,Ve,j,D,ze,Z,Gt,Se,Jt,Xe,L,Rt,fe,Ut,Kt,Ze,ee,et,ue,Qt,tt,T,W,xe,te,Vt,Ne,Xt,rt,me,Zt,at,re,ot;return I=new oe({}),Y=new oe({}),x=new Mr({props:{$$slots:{default:[Dr]},$$scope:{ctx:ie}}}),G=new ve({props:{code:`device = "cuda"
model.to(device)

for batch in training_dataloader:
    optimizer.zero_grad()
    inputs, targets = batch
    inputs = inputs.to(device)
    targets = targets.to(device)
    outputs = model(inputs)
    loss = loss_function(outputs, targets)
    loss.backward()
    optimizer.step()
    scheduler.step()`,highlighted:`device = <span class="hljs-string">&quot;cuda&quot;</span>
model.to(device)

<span class="hljs-keyword">for</span> batch <span class="hljs-keyword">in</span> training_dataloader:
    optimizer.zero_grad()
    inputs, targets = batch
    inputs = inputs.to(device)
    targets = targets.to(device)
    outputs = model(inputs)
    loss = loss_function(outputs, targets)
    loss.backward()
    optimizer.step()
    scheduler.step()`}}),J=new oe({}),R=new ve({props:{code:`from accelerate import Accelerator

accelerator = Accelerator()`,highlighted:`<span class="hljs-keyword">from</span> accelerate <span class="hljs-keyword">import</span> Accelerator

accelerator = Accelerator()`}}),K=new oe({}),Q=new ve({props:{code:`-device = 'cuda'
+device = accelerator.device
model.to(device)`,highlighted:`<span class="hljs-deletion">-device = &#x27;cuda&#x27;</span>
<span class="hljs-addition">+device = accelerator.device</span>
model.to(device)`}}),V=new oe({}),X=new ve({props:{code:`model, optimizer, training_dataloader, scheduler = accelerator.prepare(
    model, optimizer, training_dataloader, scheduler
)`,highlighted:`<span class="hljs-built_in">model,</span> optimizer, training_dataloader, scheduler = accelerator.prepare(
<span class="hljs-built_in">    model,</span> optimizer, training_dataloader, scheduler
)`}}),O=new Mr({props:{warning:!0,$$slots:{default:[Lr]},$$scope:{ctx:ie}}}),Z=new oe({}),ee=new ve({props:{code:`-   inputs = inputs.to(device)
-   targets = targets.to(device)
    outputs = model(inputs)
    loss = loss_function(outputs, targets)
-   loss.backward()
+   accelerator.backward(loss)`,highlighted:`<span class="hljs-deletion">-   inputs = inputs.to(device)</span>
<span class="hljs-deletion">-   targets = targets.to(device)</span>
    outputs = model(inputs)
    loss = loss_function(outputs, targets)
<span class="hljs-deletion">-   loss.backward()</span>
<span class="hljs-addition">+   accelerator.backward(loss)</span>`}}),te=new oe({}),re=new ve({props:{code:`from accelerate import Accelerator

accelerator = Accelerator()

model, optimizer, training_dataloader, scheduler = accelerator.prepare(
    model, optimizer, training_dataloader, scheduler
)

for batch in training_dataloader:
    optimizer.zero_grad()
    inputs, targets = batch
    outputs = model(inputs)
    loss = loss_function(outputs, targets)
    accelerator.backward(loss)
    optimizer.step()
    scheduler.step()`,highlighted:`<span class="hljs-keyword">from</span> accelerate <span class="hljs-keyword">import</span> Accelerator

accelerator = Accelerator()

model, optimizer, training_dataloader, scheduler = accelerator.prepare(
    model, optimizer, training_dataloader, scheduler
)

<span class="hljs-keyword">for</span> batch <span class="hljs-keyword">in</span> training_dataloader:
    optimizer.zero_grad()
    inputs, targets = batch
    outputs = model(inputs)
    loss = loss_function(outputs, targets)
    accelerator.backward(loss)
    optimizer.step()
    scheduler.step()`}}),{c(){f=o("meta"),u=h(),w=o("h1"),z=o("a"),ge=o("span"),m(I.$$.fragment),mt=h(),$e=o("span"),vt=c("Migrating your code to \u{1F917} Accelerate"),He=h(),le=o("p"),gt=c(`This tutorial will detail how to easily convert existing PyTorch code to use \u{1F917} Accelerate!
You\u2019ll see that by just changing a few lines of code, \u{1F917} Accelerate can perform its magic and get you on
your way towards running your code on distributed systems with ease!`),Be=h(),A=o("h2"),S=o("a"),ye=o("span"),m(Y.$$.fragment),$t=h(),_e=o("span"),yt=c("The base training loop"),Ce=h(),se=o("p"),_t=c("To begin, write out a very basic PyTorch training loop."),qe=h(),m(x.$$.fragment),Oe=h(),m(G.$$.fragment),De=h(),k=o("h2"),N=o("a"),we=o("span"),m(J.$$.fragment),wt=h(),be=o("span"),bt=c("Add in \u{1F917} Accelerate"),Le=h(),M=o("p"),At=c("To start using \u{1F917} Accelerate, first import and create an "),ne=o("a"),kt=c("Accelerator"),Et=c(" instance:"),We=h(),m(R.$$.fragment),Fe=h(),U=o("p"),ce=o("a"),Pt=c("Accelerator"),jt=c(" is the main force behind utilizing all the possible options for distributed training!"),Ie=h(),E=o("h3"),H=o("a"),Ae=o("span"),m(K.$$.fragment),Tt=h(),ke=o("span"),zt=c("Setting the right device"),Ye=h(),b=o("p"),St=c("The "),pe=o("a"),xt=c("Accelerator"),Nt=c(` class knows the right device to move any PyTorch object to at any time, so you should
change the definition of `),Ee=o("code"),Mt=c("device"),Ht=c(" to come from "),he=o("a"),Bt=c("Accelerator"),Ct=c(":"),Ge=h(),m(Q.$$.fragment),Je=h(),P=o("h3"),B=o("a"),Pe=o("span"),m(V.$$.fragment),qt=h(),je=o("span"),Ot=c("Preparing your objects"),Re=h(),C=o("p"),Dt=c("Next you need to pass all of the important objects related to training into "),de=o("a"),Lt=c("Accelerator.prepare()"),Wt=c(`. \u{1F917} Accelerate will
make sure everything is setup in the current environment for you to start training:`),Ue=h(),m(X.$$.fragment),Ke=h(),q=o("p"),Ft=c("These objects are returned in the same order they were sent in with. By default, "),Te=o("code"),It=c("device_placement=True"),Yt=c(`, so your model is automatically moved to the proper device.
performing this action will also automatically move your model to the proper device as well.`),Qe=h(),m(O.$$.fragment),Ve=h(),j=o("h3"),D=o("a"),ze=o("span"),m(Z.$$.fragment),Gt=h(),Se=o("span"),Jt=c("Modifying the training loop"),Xe=h(),L=o("p"),Rt=c(`Finally, three lines of code need to be changed in the training loop. \u{1F917} Accelerate\u2019s DataLoader classes will automatically handle the device placement by default,
and `),fe=o("a"),Ut=c("Accelerator.backward()"),Kt=c(" should be used for performing the backward pass:"),Ze=h(),m(ee.$$.fragment),et=h(),ue=o("p"),Qt=c("With that, your training loop is now ready to use \u{1F917} Accelerate!"),tt=h(),T=o("h2"),W=o("a"),xe=o("span"),m(te.$$.fragment),Vt=h(),Ne=o("span"),Xt=c("The finished code"),rt=h(),me=o("p"),Zt=c("Below is the final version of the converted code:"),at=h(),m(re.$$.fragment),this.h()},l(e){const a=qr('[data-svelte="svelte-1phssyn"]',document.head);f=i(a,"META",{name:!0,content:!0}),a.forEach(t),u=d(e),w=i(e,"H1",{class:!0});var ae=l(w);z=i(ae,"A",{id:!0,class:!0,href:!0});var Me=l(z);ge=i(Me,"SPAN",{});var tr=l(ge);v(I.$$.fragment,tr),tr.forEach(t),Me.forEach(t),mt=d(ae),$e=i(ae,"SPAN",{});var rr=l($e);vt=p(rr,"Migrating your code to \u{1F917} Accelerate"),rr.forEach(t),ae.forEach(t),He=d(e),le=i(e,"P",{});var ar=l(le);gt=p(ar,`This tutorial will detail how to easily convert existing PyTorch code to use \u{1F917} Accelerate!
You\u2019ll see that by just changing a few lines of code, \u{1F917} Accelerate can perform its magic and get you on
your way towards running your code on distributed systems with ease!`),ar.forEach(t),Be=d(e),A=i(e,"H2",{class:!0});var it=l(A);S=i(it,"A",{id:!0,class:!0,href:!0});var or=l(S);ye=i(or,"SPAN",{});var ir=l(ye);v(Y.$$.fragment,ir),ir.forEach(t),or.forEach(t),$t=d(it),_e=i(it,"SPAN",{});var lr=l(_e);yt=p(lr,"The base training loop"),lr.forEach(t),it.forEach(t),Ce=d(e),se=i(e,"P",{});var sr=l(se);_t=p(sr,"To begin, write out a very basic PyTorch training loop."),sr.forEach(t),qe=d(e),v(x.$$.fragment,e),Oe=d(e),v(G.$$.fragment,e),De=d(e),k=i(e,"H2",{class:!0});var lt=l(k);N=i(lt,"A",{id:!0,class:!0,href:!0});var nr=l(N);we=i(nr,"SPAN",{});var cr=l(we);v(J.$$.fragment,cr),cr.forEach(t),nr.forEach(t),wt=d(lt),be=i(lt,"SPAN",{});var pr=l(be);bt=p(pr,"Add in \u{1F917} Accelerate"),pr.forEach(t),lt.forEach(t),Le=d(e),M=i(e,"P",{});var st=l(M);At=p(st,"To start using \u{1F917} Accelerate, first import and create an "),ne=i(st,"A",{href:!0});var hr=l(ne);kt=p(hr,"Accelerator"),hr.forEach(t),Et=p(st," instance:"),st.forEach(t),We=d(e),v(R.$$.fragment,e),Fe=d(e),U=i(e,"P",{});var er=l(U);ce=i(er,"A",{href:!0});var dr=l(ce);Pt=p(dr,"Accelerator"),dr.forEach(t),jt=p(er," is the main force behind utilizing all the possible options for distributed training!"),er.forEach(t),Ie=d(e),E=i(e,"H3",{class:!0});var nt=l(E);H=i(nt,"A",{id:!0,class:!0,href:!0});var fr=l(H);Ae=i(fr,"SPAN",{});var ur=l(Ae);v(K.$$.fragment,ur),ur.forEach(t),fr.forEach(t),Tt=d(nt),ke=i(nt,"SPAN",{});var mr=l(ke);zt=p(mr,"Setting the right device"),mr.forEach(t),nt.forEach(t),Ye=d(e),b=i(e,"P",{});var F=l(b);St=p(F,"The "),pe=i(F,"A",{href:!0});var vr=l(pe);xt=p(vr,"Accelerator"),vr.forEach(t),Nt=p(F,` class knows the right device to move any PyTorch object to at any time, so you should
change the definition of `),Ee=i(F,"CODE",{});var gr=l(Ee);Mt=p(gr,"device"),gr.forEach(t),Ht=p(F," to come from "),he=i(F,"A",{href:!0});var $r=l(he);Bt=p($r,"Accelerator"),$r.forEach(t),Ct=p(F,":"),F.forEach(t),Ge=d(e),v(Q.$$.fragment,e),Je=d(e),P=i(e,"H3",{class:!0});var ct=l(P);B=i(ct,"A",{id:!0,class:!0,href:!0});var yr=l(B);Pe=i(yr,"SPAN",{});var _r=l(Pe);v(V.$$.fragment,_r),_r.forEach(t),yr.forEach(t),qt=d(ct),je=i(ct,"SPAN",{});var wr=l(je);Ot=p(wr,"Preparing your objects"),wr.forEach(t),ct.forEach(t),Re=d(e),C=i(e,"P",{});var pt=l(C);Dt=p(pt,"Next you need to pass all of the important objects related to training into "),de=i(pt,"A",{href:!0});var br=l(de);Lt=p(br,"Accelerator.prepare()"),br.forEach(t),Wt=p(pt,`. \u{1F917} Accelerate will
make sure everything is setup in the current environment for you to start training:`),pt.forEach(t),Ue=d(e),v(X.$$.fragment,e),Ke=d(e),q=i(e,"P",{});var ht=l(q);Ft=p(ht,"These objects are returned in the same order they were sent in with. By default, "),Te=i(ht,"CODE",{});var Ar=l(Te);It=p(Ar,"device_placement=True"),Ar.forEach(t),Yt=p(ht,`, so your model is automatically moved to the proper device.
performing this action will also automatically move your model to the proper device as well.`),ht.forEach(t),Qe=d(e),v(O.$$.fragment,e),Ve=d(e),j=i(e,"H3",{class:!0});var dt=l(j);D=i(dt,"A",{id:!0,class:!0,href:!0});var kr=l(D);ze=i(kr,"SPAN",{});var Er=l(ze);v(Z.$$.fragment,Er),Er.forEach(t),kr.forEach(t),Gt=d(dt),Se=i(dt,"SPAN",{});var Pr=l(Se);Jt=p(Pr,"Modifying the training loop"),Pr.forEach(t),dt.forEach(t),Xe=d(e),L=i(e,"P",{});var ft=l(L);Rt=p(ft,`Finally, three lines of code need to be changed in the training loop. \u{1F917} Accelerate\u2019s DataLoader classes will automatically handle the device placement by default,
and `),fe=i(ft,"A",{href:!0});var jr=l(fe);Ut=p(jr,"Accelerator.backward()"),jr.forEach(t),Kt=p(ft," should be used for performing the backward pass:"),ft.forEach(t),Ze=d(e),v(ee.$$.fragment,e),et=d(e),ue=i(e,"P",{});var Tr=l(ue);Qt=p(Tr,"With that, your training loop is now ready to use \u{1F917} Accelerate!"),Tr.forEach(t),tt=d(e),T=i(e,"H2",{class:!0});var ut=l(T);W=i(ut,"A",{id:!0,class:!0,href:!0});var zr=l(W);xe=i(zr,"SPAN",{});var Sr=l(xe);v(te.$$.fragment,Sr),Sr.forEach(t),zr.forEach(t),Vt=d(ut),Ne=i(ut,"SPAN",{});var xr=l(Ne);Xt=p(xr,"The finished code"),xr.forEach(t),ut.forEach(t),rt=d(e),me=i(e,"P",{});var Nr=l(me);Zt=p(Nr,"Below is the final version of the converted code:"),Nr.forEach(t),at=d(e),v(re.$$.fragment,e),this.h()},h(){n(f,"name","hf:doc:metadata"),n(f,"content",JSON.stringify(Fr)),n(z,"id","migrating-your-code-to-accelerate"),n(z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(z,"href","#migrating-your-code-to-accelerate"),n(w,"class","relative group"),n(S,"id","the-base-training-loop"),n(S,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(S,"href","#the-base-training-loop"),n(A,"class","relative group"),n(N,"id","add-in-accelerate"),n(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(N,"href","#add-in-accelerate"),n(k,"class","relative group"),n(ne,"href","/docs/accelerate/pr_495/en/package_reference/accelerator#accelerate.Accelerator"),n(ce,"href","/docs/accelerate/pr_495/en/package_reference/accelerator#accelerate.Accelerator"),n(H,"id","setting-the-right-device"),n(H,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(H,"href","#setting-the-right-device"),n(E,"class","relative group"),n(pe,"href","/docs/accelerate/pr_495/en/package_reference/accelerator#accelerate.Accelerator"),n(he,"href","/docs/accelerate/pr_495/en/package_reference/accelerator#accelerate.Accelerator"),n(B,"id","preparing-your-objects"),n(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(B,"href","#preparing-your-objects"),n(P,"class","relative group"),n(de,"href","/docs/accelerate/pr_495/en/package_reference/accelerator#accelerate.Accelerator.prepare"),n(D,"id","modifying-the-training-loop"),n(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(D,"href","#modifying-the-training-loop"),n(j,"class","relative group"),n(fe,"href","/docs/accelerate/pr_495/en/package_reference/accelerator#accelerate.Accelerator.backward"),n(W,"id","the-finished-code"),n(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(W,"href","#the-finished-code"),n(T,"class","relative group")},m(e,a){r(document.head,f),s(e,u,a),s(e,w,a),r(w,z),r(z,ge),g(I,ge,null),r(w,mt),r(w,$e),r($e,vt),s(e,He,a),s(e,le,a),r(le,gt),s(e,Be,a),s(e,A,a),r(A,S),r(S,ye),g(Y,ye,null),r(A,$t),r(A,_e),r(_e,yt),s(e,Ce,a),s(e,se,a),r(se,_t),s(e,qe,a),g(x,e,a),s(e,Oe,a),g(G,e,a),s(e,De,a),s(e,k,a),r(k,N),r(N,we),g(J,we,null),r(k,wt),r(k,be),r(be,bt),s(e,Le,a),s(e,M,a),r(M,At),r(M,ne),r(ne,kt),r(M,Et),s(e,We,a),g(R,e,a),s(e,Fe,a),s(e,U,a),r(U,ce),r(ce,Pt),r(U,jt),s(e,Ie,a),s(e,E,a),r(E,H),r(H,Ae),g(K,Ae,null),r(E,Tt),r(E,ke),r(ke,zt),s(e,Ye,a),s(e,b,a),r(b,St),r(b,pe),r(pe,xt),r(b,Nt),r(b,Ee),r(Ee,Mt),r(b,Ht),r(b,he),r(he,Bt),r(b,Ct),s(e,Ge,a),g(Q,e,a),s(e,Je,a),s(e,P,a),r(P,B),r(B,Pe),g(V,Pe,null),r(P,qt),r(P,je),r(je,Ot),s(e,Re,a),s(e,C,a),r(C,Dt),r(C,de),r(de,Lt),r(C,Wt),s(e,Ue,a),g(X,e,a),s(e,Ke,a),s(e,q,a),r(q,Ft),r(q,Te),r(Te,It),r(q,Yt),s(e,Qe,a),g(O,e,a),s(e,Ve,a),s(e,j,a),r(j,D),r(D,ze),g(Z,ze,null),r(j,Gt),r(j,Se),r(Se,Jt),s(e,Xe,a),s(e,L,a),r(L,Rt),r(L,fe),r(fe,Ut),r(L,Kt),s(e,Ze,a),g(ee,e,a),s(e,et,a),s(e,ue,a),r(ue,Qt),s(e,tt,a),s(e,T,a),r(T,W),r(W,xe),g(te,xe,null),r(T,Vt),r(T,Ne),r(Ne,Xt),s(e,rt,a),s(e,me,a),r(me,Zt),s(e,at,a),g(re,e,a),ot=!0},p(e,[a]){const ae={};a&2&&(ae.$$scope={dirty:a,ctx:e}),x.$set(ae);const Me={};a&2&&(Me.$$scope={dirty:a,ctx:e}),O.$set(Me)},i(e){ot||($(I.$$.fragment,e),$(Y.$$.fragment,e),$(x.$$.fragment,e),$(G.$$.fragment,e),$(J.$$.fragment,e),$(R.$$.fragment,e),$(K.$$.fragment,e),$(Q.$$.fragment,e),$(V.$$.fragment,e),$(X.$$.fragment,e),$(O.$$.fragment,e),$(Z.$$.fragment,e),$(ee.$$.fragment,e),$(te.$$.fragment,e),$(re.$$.fragment,e),ot=!0)},o(e){y(I.$$.fragment,e),y(Y.$$.fragment,e),y(x.$$.fragment,e),y(G.$$.fragment,e),y(J.$$.fragment,e),y(R.$$.fragment,e),y(K.$$.fragment,e),y(Q.$$.fragment,e),y(V.$$.fragment,e),y(X.$$.fragment,e),y(O.$$.fragment,e),y(Z.$$.fragment,e),y(ee.$$.fragment,e),y(te.$$.fragment,e),y(re.$$.fragment,e),ot=!1},d(e){t(f),e&&t(u),e&&t(w),_(I),e&&t(He),e&&t(le),e&&t(Be),e&&t(A),_(Y),e&&t(Ce),e&&t(se),e&&t(qe),_(x,e),e&&t(Oe),_(G,e),e&&t(De),e&&t(k),_(J),e&&t(Le),e&&t(M),e&&t(We),_(R,e),e&&t(Fe),e&&t(U),e&&t(Ie),e&&t(E),_(K),e&&t(Ye),e&&t(b),e&&t(Ge),_(Q,e),e&&t(Je),e&&t(P),_(V),e&&t(Re),e&&t(C),e&&t(Ue),_(X,e),e&&t(Ke),e&&t(q),e&&t(Qe),_(O,e),e&&t(Ve),e&&t(j),_(Z),e&&t(Xe),e&&t(L),e&&t(Ze),_(ee,e),e&&t(et),e&&t(ue),e&&t(tt),e&&t(T),_(te),e&&t(rt),e&&t(me),e&&t(at),_(re,e)}}}const Fr={local:"migrating-your-code-to-accelerate",sections:[{local:"the-base-training-loop",title:"The base training loop"},{local:"add-in-accelerate",sections:[{local:"setting-the-right-device",title:"Setting the right device"},{local:"preparing-your-objects",title:"Preparing your objects"},{local:"modifying-the-training-loop",title:"Modifying the training loop"}],title:"Add in \u{1F917} Accelerate"},{local:"the-finished-code",title:"The finished code"}],title:"Migrating your code to \u{1F917} Accelerate"};function Ir(ie){return Or(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ur extends Hr{constructor(f){super();Br(this,f,Ir,Wr,Cr,{})}}export{Ur as default,Fr as metadata};
