import{S as yu,i as Iu,s as Pu,e as r,k as f,w as x,t as l,M as bu,c,d as o,m as d,a as i,x as H,h as a,b as h,G as e,g as n,y as W,L as Tu,q as z,o as Z,B,v as Lu}from"../../chunks/vendor-hf-doc-builder.js";import{I as Ia}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as Yr}from"../../chunks/CodeBlock-hf-doc-builder.js";function Nu(Wd){let R,Pa,M,K,It,xe,jr,Pt,Vr,ba,Ot,Xr,Ta,F,Y,bt,He,qr,Tt,Jr,La,We,Lt,Qr,ec,Na,j,Nt,tc,oc,$t,lc,$a,V,ac,Rt,rc,cc,Ra,ze,Mt,ic,sc,Ma,Ze,Fa,Be,Ft,nc,fc,Ga,X,p,Gt,dc,hc,Ut,_c,uc,kt,Ec,pc,xt,vc,mc,Ht,Cc,Oc,Wt,gc,Dc,Sc,y,zt,Ac,wc,Zt,yc,Ic,Bt,Pc,bc,Ua,G,q,Kt,Ke,Tc,Yt,Lc,ka,Ye,jt,Nc,$c,xa,J,Vt,Rc,Mc,Xt,Fc,Ha,Q,Gc,je,Uc,kc,Wa,Ve,qt,xc,Hc,za,Xe,Za,qe,Jt,Wc,zc,Ba,ee,v,Qt,Zc,Bc,eo,Kc,Yc,to,jc,Vc,oo,Xc,qc,lo,Jc,Qc,ao,ei,ti,oi,I,ro,li,ai,co,ri,ci,io,ii,si,Ka,U,te,so,Je,ni,no,fi,Ya,Qe,fo,di,hi,ja,oe,ho,_i,ui,_o,Ei,Va,gt,pi,Xa,et,uo,vi,mi,qa,tt,Ja,ot,Eo,Ci,Oi,Qa,le,Dt,po,gi,Di,Si,St,vo,Ai,wi,er,lt,mo,yi,Ii,tr,u,P,Co,Pi,bi,Oo,Ti,Li,go,Ni,$i,Ri,ae,Do,Mi,Fi,So,Gi,Ui,ki,re,Ao,xi,Hi,wo,Wi,zi,Zi,ce,yo,Bi,Ki,Io,Yi,ji,Vi,b,Po,Xi,qi,bo,Ji,Qi,To,es,ts,os,T,Lo,ls,as,No,rs,cs,$o,is,ss,ns,ie,Ro,fs,ds,Mo,hs,_s,or,L,us,Fo,Es,ps,Go,vs,ms,lr,at,Uo,Cs,Os,ar,At,gs,rr,m,se,ko,Ds,Ss,xo,As,ws,ys,ne,Ho,Is,Ps,Wo,bs,Ts,Ls,fe,zo,Ns,$s,Zo,Rs,Ms,Fs,de,Bo,Gs,Us,Ko,ks,xs,Hs,he,Yo,Ws,zs,jo,Zs,Bs,Ks,_e,Vo,Ys,js,Xo,Vs,Xs,cr,rt,qo,qs,Js,ir,ue,Qs,Jo,en,tn,sr,_,Ee,Qo,on,ln,el,an,rn,cn,pe,tl,sn,nn,ol,fn,dn,hn,ve,ll,_n,un,al,En,pn,vn,me,rl,mn,Cn,cl,On,gn,Dn,Ce,il,Sn,An,sl,wn,yn,In,Oe,nl,Pn,bn,fl,Tn,Ln,Nn,ge,dl,$n,Rn,hl,Mn,Fn,Gn,N,_l,Un,kn,ul,xn,Hn,El,Wn,zn,Zn,De,pl,Bn,Kn,vl,Yn,jn,nr,ct,ml,Vn,Xn,fr,Se,qn,Cl,Jn,Qn,dr,A,Ae,Ol,ef,tf,gl,of,lf,af,we,Dl,rf,cf,Sl,sf,nf,ff,ye,Al,df,hf,wl,_f,uf,Ef,Ie,yl,pf,vf,Il,mf,Cf,hr,it,Pl,Of,gf,_r,Pe,Df,bl,Sf,Af,ur,be,Te,Tl,wf,yf,Ll,If,Pf,bf,Le,Nl,Tf,Lf,$l,Nf,$f,Er,st,Rl,Rf,Mf,pr,wt,Ff,vr,Ne,$e,Ml,Gf,Uf,Fl,kf,xf,Hf,Re,Gl,Wf,zf,Ul,Zf,Bf,mr,k,Me,kl,nt,Kf,xl,Yf,Cr,Fe,Hl,jf,Vf,Wl,Xf,Or,Ge,qf,zl,Jf,Qf,gr,ft,Zl,ed,td,Dr,dt,Sr,ht,Bl,od,ld,Ar,Ue,C,Kl,ad,rd,Yl,cd,id,jl,sd,nd,Vl,fd,dd,Xl,hd,_d,ql,ud,Ed,pd,$,Jl,vd,md,Ql,Cd,Od,ea,gd,Dd,wr;return xe=new Ia({}),He=new Ia({}),Ze=new Yr({props:{code:"accelerate config [arguments]",highlighted:"accelerate config [arguments]"}}),Ke=new Ia({}),Xe=new Yr({props:{code:"accelerate env [arguments]",highlighted:'accelerate <span class="hljs-built_in">env</span> [arguments]'}}),Je=new Ia({}),tt=new Yr({props:{code:"accelerate launch [arguments] {training_script} --{training_script-argument-1} --{training_script-argument-2} ...",highlighted:"accelerate launch [arguments] {training_script} --{training_script-argument-1} --{training_script-argument-2} ..."}}),nt=new Ia({}),dt=new Yr({props:{code:"accelerate test [arguments]",highlighted:'accelerate <span class="hljs-built_in">test</span> [arguments]'}}),{c(){R=r("meta"),Pa=f(),M=r("h1"),K=r("a"),It=r("span"),x(xe.$$.fragment),jr=f(),Pt=r("span"),Vr=l("The Command Line"),ba=f(),Ot=r("p"),Xr=l("Below is a list of all the available commands \u{1F917} Accelerate with their parameters"),Ta=f(),F=r("h2"),Y=r("a"),bt=r("span"),x(He.$$.fragment),qr=f(),Tt=r("span"),Jr=l("accelerate config"),La=f(),We=r("p"),Lt=r("strong"),Qr=l("Command"),ec=l(":"),Na=f(),j=r("p"),Nt=r("code"),tc=l("accelerate config"),oc=l(" or "),$t=r("code"),lc=l("accelerate-config"),$a=f(),V=r("p"),ac=l("Launches a series of prompts to create and save a "),Rt=r("code"),rc=l("default_config.yml"),cc=l(` configuration file for your training system. Should
always be ran first on your machine.`),Ra=f(),ze=r("p"),Mt=r("strong"),ic=l("Usage"),sc=l(":"),Ma=f(),x(Ze.$$.fragment),Fa=f(),Be=r("p"),Ft=r("strong"),nc=l("Optional Arguments"),fc=l(":"),Ga=f(),X=r("ul"),p=r("li"),Gt=r("code"),dc=l("--config_file CONFIG_FILE"),hc=l(" ("),Ut=r("code"),_c=l("str"),uc=l(`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),kt=r("code"),Ec=l("HF_HOME"),pc=l(` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),xt=r("code"),vc=l("~/.cache"),mc=l(" or the content of "),Ht=r("code"),Cc=l("XDG_CACHE_HOME"),Oc=l(") suffixed with "),Wt=r("code"),gc=l("huggingface"),Dc=l("."),Sc=f(),y=r("li"),zt=r("code"),Ac=l("-h"),wc=l(", "),Zt=r("code"),yc=l("--help"),Ic=l(" ("),Bt=r("code"),Pc=l("bool"),bc=l(") \u2014 Show a help message and exit"),Ua=f(),G=r("h2"),q=r("a"),Kt=r("span"),x(Ke.$$.fragment),Tc=f(),Yt=r("span"),Lc=l("accelerate env"),ka=f(),Ye=r("p"),jt=r("strong"),Nc=l("Command"),$c=l(":"),xa=f(),J=r("p"),Vt=r("code"),Rc=l("accelerate env"),Mc=l(" or "),Xt=r("code"),Fc=l("accelerate-env"),Ha=f(),Q=r("p"),Gc=l("Lists the contents of the passed \u{1F917} Accelerate configuration file. Should always be used when opening an issue on the "),je=r("a"),Uc=l("GitHub repository"),kc=l("."),Wa=f(),Ve=r("p"),qt=r("strong"),xc=l("Usage"),Hc=l(":"),za=f(),x(Xe.$$.fragment),Za=f(),qe=r("p"),Jt=r("strong"),Wc=l("Optional Arguments"),zc=l(":"),Ba=f(),ee=r("ul"),v=r("li"),Qt=r("code"),Zc=l("--config_file CONFIG_FILE"),Bc=l(" ("),eo=r("code"),Kc=l("str"),Yc=l(`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),to=r("code"),jc=l("HF_HOME"),Vc=l(` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),oo=r("code"),Xc=l("~/.cache"),qc=l(" or the content of "),lo=r("code"),Jc=l("XDG_CACHE_HOME"),Qc=l(") suffixed with "),ao=r("code"),ei=l("huggingface"),ti=l("."),oi=f(),I=r("li"),ro=r("code"),li=l("-h"),ai=l(", "),co=r("code"),ri=l("--help"),ci=l(" ("),io=r("code"),ii=l("bool"),si=l(") \u2014 Show a help message and exit"),Ka=f(),U=r("h2"),te=r("a"),so=r("span"),x(Je.$$.fragment),ni=f(),no=r("span"),fi=l("accelerate launch"),Ya=f(),Qe=r("p"),fo=r("strong"),di=l("Command"),hi=l(":"),ja=f(),oe=r("p"),ho=r("code"),_i=l("accelerate launch"),ui=l(" or "),_o=r("code"),Ei=l("accelerate-launch"),Va=f(),gt=r("p"),pi=l("Launches a specified script on a distributed system with the right parameters."),Xa=f(),et=r("p"),uo=r("strong"),vi=l("Usage"),mi=l(":"),qa=f(),x(tt.$$.fragment),Ja=f(),ot=r("p"),Eo=r("strong"),Ci=l("Positional Arguments"),Oi=l(":"),Qa=f(),le=r("ul"),Dt=r("li"),po=r("code"),gi=l("{training_script}"),Di=l(" \u2014 The full path to the script to be launched in parallel"),Si=f(),St=r("li"),vo=r("code"),Ai=l("--{training_script-argument-1}"),wi=l(" \u2014 Arguments of the training script"),er=f(),lt=r("p"),mo=r("strong"),yi=l("Optional Arguments"),Ii=l(":"),tr=f(),u=r("ul"),P=r("li"),Co=r("code"),Pi=l("-h"),bi=l(", "),Oo=r("code"),Ti=l("--help"),Li=l(" ("),go=r("code"),Ni=l("bool"),$i=l(") \u2014 Show a help message and exit"),Ri=f(),ae=r("li"),Do=r("code"),Mi=l("--config_file CONFIG_FILE"),Fi=l(" ("),So=r("code"),Gi=l("str"),Ui=l(")\u2014 The config file to use for the default values in the launching script."),ki=f(),re=r("li"),Ao=r("code"),xi=l("--cpu"),Hi=l(" ("),wo=r("code"),Wi=l("bool"),zi=l(") \u2014 Whether or not to force the training on the CPU."),Zi=f(),ce=r("li"),yo=r("code"),Bi=l("--mixed_precision {no,fp16,bf16}"),Ki=l(" ("),Io=r("code"),Yi=l("str"),ji=l(`) \u2014 Whether or not to use mixed precision training. Choose between FP16 and BF16 (bfloat16) training. BF16 training is only supported on
Nvidia Ampere GPUs and PyTorch 1.10 or later.`),Vi=f(),b=r("li"),Po=r("code"),Xi=l("--multi_gpu"),qi=l(" ("),bo=r("code"),Ji=l("bool"),Qi=l(", defaults to "),To=r("code"),es=l("False"),ts=l(") \u2014 Whether or not this should launch a distributed GPU training."),os=f(),T=r("li"),Lo=r("code"),ls=l("-m"),as=l(", "),No=r("code"),rs=l("--module"),cs=l(" ("),$o=r("code"),is=l("bool"),ss=l(") \u2014 Change each process to interpret the launch script as a Python module, executing with the same behavior as \u2018python -m\u2019."),ns=f(),ie=r("li"),Ro=r("code"),fs=l("--no_python"),ds=l(" ("),Mo=r("code"),hs=l("bool"),_s=l(") \u2014 Skip prepending the training script with \u2018python\u2019 - just execute it directly. Useful when the script is not a Python script."),or=f(),L=r("p"),us=l("The rest of these arguments are configured through "),Fo=r("code"),Es=l("accelerate config"),ps=l(" and are read in from the specified "),Go=r("code"),vs=l("--config_file"),ms=l(` (or default configuration) for their
values. They can also be passed in manually.`),lr=f(),at=r("p"),Uo=r("strong"),Cs=l("Machine Configuration Arguments"),Os=l(":"),ar=f(),At=r("p"),gs=l("The following arguments are useful for customization of worker machines"),rr=f(),m=r("ul"),se=r("li"),ko=r("code"),Ds=l("--machine_rank MACHINE_RANK"),Ss=l(" ("),xo=r("code"),As=l("int"),ws=l(") \u2014 The rank of the machine on which this script is launched."),ys=f(),ne=r("li"),Ho=r("code"),Is=l("--num_machines NUM_MACHINES"),Ps=l(" ("),Wo=r("code"),bs=l("int"),Ts=l(") \u2014 The total number of machines used in this training."),Ls=f(),fe=r("li"),zo=r("code"),Ns=l("--num_processes NUM_PROCESSES"),$s=l(" ("),Zo=r("code"),Rs=l("int"),Ms=l(") \u2014 The total number of processes to be launched in parallel."),Fs=f(),de=r("li"),Bo=r("code"),Gs=l("--main_process_ip MAIN_PROCESS_IP"),Us=l(" ("),Ko=r("code"),ks=l("str"),xs=l(") \u2014 The IP address of the machine of rank 0."),Hs=f(),he=r("li"),Yo=r("code"),Ws=l("--main_process_port MAIN_PROCESS_PORT"),zs=l(" ("),jo=r("code"),Zs=l("int"),Bs=l(") \u2014 The port to use to communicate with the machine of rank 0."),Ks=f(),_e=r("li"),Vo=r("code"),Ys=l("--num_cpu_threads_per_process NUM_CPU_THREADS_PER_PROCESS"),js=l(" ("),Xo=r("code"),Vs=l("int"),Xs=l(") \u2014 The number of CPU threads per process. Can be tuned for optimal performance."),cr=f(),rt=r("p"),qo=r("strong"),qs=l("DeepSpeed Arguments"),Js=l(":"),ir=f(),ue=r("p"),Qs=l("The following arguments are only useful when "),Jo=r("code"),en=l("use_deepspeed"),tn=l(" is passed:"),sr=f(),_=r("ul"),Ee=r("li"),Qo=r("code"),on=l("--use_deepspeed"),ln=l(" ("),el=r("code"),an=l("bool"),rn=l(") \u2014 Whether to use deepspeed."),cn=f(),pe=r("li"),tl=r("code"),sn=l("--deepspeed_config_file DEEPSPEED_CONFIG_FILE"),nn=l(" ("),ol=r("code"),fn=l("str"),dn=l(") \u2014 DeepSpeed config file."),hn=f(),ve=r("li"),ll=r("code"),_n=l("--zero_stage ZERO_STAGE"),un=l(" ("),al=r("code"),En=l("str"),pn=l(") \u2014 DeepSpeed\u2019s ZeRO optimization stage"),vn=f(),me=r("li"),rl=r("code"),mn=l("--offload_optimizer_device OFFLOAD_OPTIMIZER_DEVICE"),Cn=l(" ("),cl=r("code"),On=l("str"),gn=l(") \u2014 Decides where (none|cpu|nvme) to offload optimizer states"),Dn=f(),Ce=r("li"),il=r("code"),Sn=l("--offload_param_device OFFLOAD_PARAM_DEVICE"),An=l(" ("),sl=r("code"),wn=l("str"),yn=l(") \u2014 Decides where (none|cpu|nvme) to offload parameters"),In=f(),Oe=r("li"),nl=r("code"),Pn=l("--gradient_accumulation_steps GRADIENT_ACCUMULATION_STEPS"),bn=l(" ("),fl=r("code"),Tn=l("int"),Ln=l(") \u2014 Number of gradient_accumulation_steps used in your training script"),Nn=f(),ge=r("li"),dl=r("code"),$n=l("--gradient_clipping GRADIENT_CLIPPING"),Rn=l(" ("),hl=r("code"),Mn=l("float"),Fn=l(`) \u2014 gradient clipping value used in your training script
The following arguments are related to using ZeRO Stage-3`),Gn=f(),N=r("li"),_l=r("code"),Un=l("--zero3_init_flag ZERO3_INIT_FLAG"),kn=l(" ("),ul=r("code"),xn=l("bool"),Hn=l(") \u2014 Decides Whether (true|false) to enable "),El=r("code"),Wn=l("deepspeed.zero.Init"),zn=l(" for constructing massive models"),Zn=f(),De=r("li"),pl=r("code"),Bn=l("--zero3_save_16bit_model ZERO3_SAVE_16BIT_MODEL"),Kn=l(" ("),vl=r("code"),Yn=l("bool"),jn=l(") \u2014 Decides Whether (true|false) to save 16-bit model weights when using ZeRO Stage-3"),nr=f(),ct=r("p"),ml=r("strong"),Vn=l("Fully Sharded Data Parallelism Arguments"),Xn=l(":"),fr=f(),Se=r("p"),qn=l("The following arguments are only useful when "),Cl=r("code"),Jn=l("use_fdsp"),Qn=l(" is passed:"),dr=f(),A=r("ul"),Ae=r("li"),Ol=r("code"),ef=l("--use_fsdp"),tf=l(" ("),gl=r("code"),of=l("bool"),lf=l(") \u2014 Whether to use fsdp."),af=f(),we=r("li"),Dl=r("code"),rf=l("--offload_params OFFLOAD_PARAMS"),cf=l(" ("),Sl=r("code"),sf=l("bool"),nf=l(") \u2014 Decides Whether (true|false) to offload parameters and gradients to CPU."),ff=f(),ye=r("li"),Al=r("code"),df=l("--min_num_params MIN_NUM_PARAMS"),hf=l(" ("),wl=r("code"),_f=l("int"),uf=l(") \u2014 FSDP\u2019s minimum number of parameters for Default Auto Wrapping."),Ef=f(),Ie=r("li"),yl=r("code"),pf=l("--sharding_strategy SHARDING_STRATEGY"),vf=l(" ("),Il=r("code"),mf=l("str"),Cf=l(") \u2014 FSDP\u2019s Sharding Strategy."),hr=f(),it=r("p"),Pl=r("strong"),Of=l("TPU Arguments"),gf=l(":"),_r=f(),Pe=r("p"),Df=l("The following arguments are only useful when "),bl=r("code"),Sf=l("tpu"),Af=l(" is passed:"),ur=f(),be=r("ul"),Te=r("li"),Tl=r("code"),wf=l("--tpu"),yf=l(" ("),Ll=r("code"),If=l("bool"),Pf=l(") - Whether or not this should launch a TPU training."),bf=f(),Le=r("li"),Nl=r("code"),Tf=l("--main_training_function MAIN_TRAINING_FUNCTION"),Lf=l(" ("),$l=r("code"),Nf=l("str"),$f=l(") \u2014 The name of the main function to be executed in your script."),Er=f(),st=r("p"),Rl=r("strong"),Rf=l("AWS SageMaker Arguments"),Mf=l(":"),pr=f(),wt=r("p"),Ff=l("The following arguments are only useful when training in SageMaker"),vr=f(),Ne=r("ul"),$e=r("li"),Ml=r("code"),Gf=l("--aws_access_key_id AWS_ACCESS_KEY_ID"),Uf=l(" ("),Fl=r("code"),kf=l("str"),xf=l(") \u2014 The AWS_ACCESS_KEY_ID used to launch the Amazon SageMaker training job"),Hf=f(),Re=r("li"),Gl=r("code"),Wf=l("--aws_secret_access_key AWS_SECRET_ACCESS_KEY"),zf=l(" ("),Ul=r("code"),Zf=l("str"),Bf=l(") \u2014 The AWS_SECRET_ACCESS_KEY used to launch the Amazon SageMaker training job"),mr=f(),k=r("h2"),Me=r("a"),kl=r("span"),x(nt.$$.fragment),Kf=f(),xl=r("span"),Yf=l("accelerate test"),Cr=f(),Fe=r("p"),Hl=r("code"),jf=l("accelerate test"),Vf=l(" or "),Wl=r("code"),Xf=l("accelerate-test"),Or=f(),Ge=r("p"),qf=l("Runs "),zl=r("code"),Jf=l("accelerate/test_utils/test_script.py"),Qf=l(" to verify that \u{1F917} Accelerate has been properly configured on your system and runs."),gr=f(),ft=r("p"),Zl=r("strong"),ed=l("Usage"),td=l(":"),Dr=f(),x(dt.$$.fragment),Sr=f(),ht=r("p"),Bl=r("strong"),od=l("Optional Arguments"),ld=l(":"),Ar=f(),Ue=r("ul"),C=r("li"),Kl=r("code"),ad=l("--config_file CONFIG_FILE"),rd=l(" ("),Yl=r("code"),cd=l("str"),id=l(`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),jl=r("code"),sd=l("HF_HOME"),nd=l(` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),Vl=r("code"),fd=l("~/.cache"),dd=l(" or the content of "),Xl=r("code"),hd=l("XDG_CACHE_HOME"),_d=l(") suffixed with "),ql=r("code"),ud=l("huggingface"),Ed=l("."),pd=f(),$=r("li"),Jl=r("code"),vd=l("-h"),md=l(", "),Ql=r("code"),Cd=l("--help"),Od=l(" ("),ea=r("code"),gd=l("bool"),Dd=l(") \u2014 Show a help message and exit"),this.h()},l(t){const s=bu('[data-svelte="svelte-1phssyn"]',document.head);R=c(s,"META",{name:!0,content:!0}),s.forEach(o),Pa=d(t),M=c(t,"H1",{class:!0});var yr=i(M);K=c(yr,"A",{id:!0,class:!0,href:!0});var zd=i(K);It=c(zd,"SPAN",{});var Zd=i(It);H(xe.$$.fragment,Zd),Zd.forEach(o),zd.forEach(o),jr=d(yr),Pt=c(yr,"SPAN",{});var Bd=i(Pt);Vr=a(Bd,"The Command Line"),Bd.forEach(o),yr.forEach(o),ba=d(t),Ot=c(t,"P",{});var Kd=i(Ot);Xr=a(Kd,"Below is a list of all the available commands \u{1F917} Accelerate with their parameters"),Kd.forEach(o),Ta=d(t),F=c(t,"H2",{class:!0});var Ir=i(F);Y=c(Ir,"A",{id:!0,class:!0,href:!0});var Yd=i(Y);bt=c(Yd,"SPAN",{});var jd=i(bt);H(He.$$.fragment,jd),jd.forEach(o),Yd.forEach(o),qr=d(Ir),Tt=c(Ir,"SPAN",{});var Vd=i(Tt);Jr=a(Vd,"accelerate config"),Vd.forEach(o),Ir.forEach(o),La=d(t),We=c(t,"P",{});var Sd=i(We);Lt=c(Sd,"STRONG",{});var Xd=i(Lt);Qr=a(Xd,"Command"),Xd.forEach(o),ec=a(Sd,":"),Sd.forEach(o),Na=d(t),j=c(t,"P",{});var Pr=i(j);Nt=c(Pr,"CODE",{});var qd=i(Nt);tc=a(qd,"accelerate config"),qd.forEach(o),oc=a(Pr," or "),$t=c(Pr,"CODE",{});var Jd=i($t);lc=a(Jd,"accelerate-config"),Jd.forEach(o),Pr.forEach(o),$a=d(t),V=c(t,"P",{});var br=i(V);ac=a(br,"Launches a series of prompts to create and save a "),Rt=c(br,"CODE",{});var Qd=i(Rt);rc=a(Qd,"default_config.yml"),Qd.forEach(o),cc=a(br,` configuration file for your training system. Should
always be ran first on your machine.`),br.forEach(o),Ra=d(t),ze=c(t,"P",{});var Ad=i(ze);Mt=c(Ad,"STRONG",{});var eh=i(Mt);ic=a(eh,"Usage"),eh.forEach(o),sc=a(Ad,":"),Ad.forEach(o),Ma=d(t),H(Ze.$$.fragment,t),Fa=d(t),Be=c(t,"P",{});var wd=i(Be);Ft=c(wd,"STRONG",{});var th=i(Ft);nc=a(th,"Optional Arguments"),th.forEach(o),fc=a(wd,":"),wd.forEach(o),Ga=d(t),X=c(t,"UL",{});var Tr=i(X);p=c(Tr,"LI",{});var g=i(p);Gt=c(g,"CODE",{});var oh=i(Gt);dc=a(oh,"--config_file CONFIG_FILE"),oh.forEach(o),hc=a(g," ("),Ut=c(g,"CODE",{});var lh=i(Ut);_c=a(lh,"str"),lh.forEach(o),uc=a(g,`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),kt=c(g,"CODE",{});var ah=i(kt);Ec=a(ah,"HF_HOME"),ah.forEach(o),pc=a(g,` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),xt=c(g,"CODE",{});var rh=i(xt);vc=a(rh,"~/.cache"),rh.forEach(o),mc=a(g," or the content of "),Ht=c(g,"CODE",{});var ch=i(Ht);Cc=a(ch,"XDG_CACHE_HOME"),ch.forEach(o),Oc=a(g,") suffixed with "),Wt=c(g,"CODE",{});var ih=i(Wt);gc=a(ih,"huggingface"),ih.forEach(o),Dc=a(g,"."),g.forEach(o),Sc=d(Tr),y=c(Tr,"LI",{});var _t=i(y);zt=c(_t,"CODE",{});var sh=i(zt);Ac=a(sh,"-h"),sh.forEach(o),wc=a(_t,", "),Zt=c(_t,"CODE",{});var nh=i(Zt);yc=a(nh,"--help"),nh.forEach(o),Ic=a(_t," ("),Bt=c(_t,"CODE",{});var fh=i(Bt);Pc=a(fh,"bool"),fh.forEach(o),bc=a(_t,") \u2014 Show a help message and exit"),_t.forEach(o),Tr.forEach(o),Ua=d(t),G=c(t,"H2",{class:!0});var Lr=i(G);q=c(Lr,"A",{id:!0,class:!0,href:!0});var dh=i(q);Kt=c(dh,"SPAN",{});var hh=i(Kt);H(Ke.$$.fragment,hh),hh.forEach(o),dh.forEach(o),Tc=d(Lr),Yt=c(Lr,"SPAN",{});var _h=i(Yt);Lc=a(_h,"accelerate env"),_h.forEach(o),Lr.forEach(o),ka=d(t),Ye=c(t,"P",{});var yd=i(Ye);jt=c(yd,"STRONG",{});var uh=i(jt);Nc=a(uh,"Command"),uh.forEach(o),$c=a(yd,":"),yd.forEach(o),xa=d(t),J=c(t,"P",{});var Nr=i(J);Vt=c(Nr,"CODE",{});var Eh=i(Vt);Rc=a(Eh,"accelerate env"),Eh.forEach(o),Mc=a(Nr," or "),Xt=c(Nr,"CODE",{});var ph=i(Xt);Fc=a(ph,"accelerate-env"),ph.forEach(o),Nr.forEach(o),Ha=d(t),Q=c(t,"P",{});var $r=i(Q);Gc=a($r,"Lists the contents of the passed \u{1F917} Accelerate configuration file. Should always be used when opening an issue on the "),je=c($r,"A",{href:!0,rel:!0});var vh=i(je);Uc=a(vh,"GitHub repository"),vh.forEach(o),kc=a($r,"."),$r.forEach(o),Wa=d(t),Ve=c(t,"P",{});var Id=i(Ve);qt=c(Id,"STRONG",{});var mh=i(qt);xc=a(mh,"Usage"),mh.forEach(o),Hc=a(Id,":"),Id.forEach(o),za=d(t),H(Xe.$$.fragment,t),Za=d(t),qe=c(t,"P",{});var Pd=i(qe);Jt=c(Pd,"STRONG",{});var Ch=i(Jt);Wc=a(Ch,"Optional Arguments"),Ch.forEach(o),zc=a(Pd,":"),Pd.forEach(o),Ba=d(t),ee=c(t,"UL",{});var Rr=i(ee);v=c(Rr,"LI",{});var D=i(v);Qt=c(D,"CODE",{});var Oh=i(Qt);Zc=a(Oh,"--config_file CONFIG_FILE"),Oh.forEach(o),Bc=a(D," ("),eo=c(D,"CODE",{});var gh=i(eo);Kc=a(gh,"str"),gh.forEach(o),Yc=a(D,`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),to=c(D,"CODE",{});var Dh=i(to);jc=a(Dh,"HF_HOME"),Dh.forEach(o),Vc=a(D,` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),oo=c(D,"CODE",{});var Sh=i(oo);Xc=a(Sh,"~/.cache"),Sh.forEach(o),qc=a(D," or the content of "),lo=c(D,"CODE",{});var Ah=i(lo);Jc=a(Ah,"XDG_CACHE_HOME"),Ah.forEach(o),Qc=a(D,") suffixed with "),ao=c(D,"CODE",{});var wh=i(ao);ei=a(wh,"huggingface"),wh.forEach(o),ti=a(D,"."),D.forEach(o),oi=d(Rr),I=c(Rr,"LI",{});var ut=i(I);ro=c(ut,"CODE",{});var yh=i(ro);li=a(yh,"-h"),yh.forEach(o),ai=a(ut,", "),co=c(ut,"CODE",{});var Ih=i(co);ri=a(Ih,"--help"),Ih.forEach(o),ci=a(ut," ("),io=c(ut,"CODE",{});var Ph=i(io);ii=a(Ph,"bool"),Ph.forEach(o),si=a(ut,") \u2014 Show a help message and exit"),ut.forEach(o),Rr.forEach(o),Ka=d(t),U=c(t,"H2",{class:!0});var Mr=i(U);te=c(Mr,"A",{id:!0,class:!0,href:!0});var bh=i(te);so=c(bh,"SPAN",{});var Th=i(so);H(Je.$$.fragment,Th),Th.forEach(o),bh.forEach(o),ni=d(Mr),no=c(Mr,"SPAN",{});var Lh=i(no);fi=a(Lh,"accelerate launch"),Lh.forEach(o),Mr.forEach(o),Ya=d(t),Qe=c(t,"P",{});var bd=i(Qe);fo=c(bd,"STRONG",{});var Nh=i(fo);di=a(Nh,"Command"),Nh.forEach(o),hi=a(bd,":"),bd.forEach(o),ja=d(t),oe=c(t,"P",{});var Fr=i(oe);ho=c(Fr,"CODE",{});var $h=i(ho);_i=a($h,"accelerate launch"),$h.forEach(o),ui=a(Fr," or "),_o=c(Fr,"CODE",{});var Rh=i(_o);Ei=a(Rh,"accelerate-launch"),Rh.forEach(o),Fr.forEach(o),Va=d(t),gt=c(t,"P",{});var Mh=i(gt);pi=a(Mh,"Launches a specified script on a distributed system with the right parameters."),Mh.forEach(o),Xa=d(t),et=c(t,"P",{});var Td=i(et);uo=c(Td,"STRONG",{});var Fh=i(uo);vi=a(Fh,"Usage"),Fh.forEach(o),mi=a(Td,":"),Td.forEach(o),qa=d(t),H(tt.$$.fragment,t),Ja=d(t),ot=c(t,"P",{});var Ld=i(ot);Eo=c(Ld,"STRONG",{});var Gh=i(Eo);Ci=a(Gh,"Positional Arguments"),Gh.forEach(o),Oi=a(Ld,":"),Ld.forEach(o),Qa=d(t),le=c(t,"UL",{});var Gr=i(le);Dt=c(Gr,"LI",{});var Nd=i(Dt);po=c(Nd,"CODE",{});var Uh=i(po);gi=a(Uh,"{training_script}"),Uh.forEach(o),Di=a(Nd," \u2014 The full path to the script to be launched in parallel"),Nd.forEach(o),Si=d(Gr),St=c(Gr,"LI",{});var $d=i(St);vo=c($d,"CODE",{});var kh=i(vo);Ai=a(kh,"--{training_script-argument-1}"),kh.forEach(o),wi=a($d," \u2014 Arguments of the training script"),$d.forEach(o),Gr.forEach(o),er=d(t),lt=c(t,"P",{});var Rd=i(lt);mo=c(Rd,"STRONG",{});var xh=i(mo);yi=a(xh,"Optional Arguments"),xh.forEach(o),Ii=a(Rd,":"),Rd.forEach(o),tr=d(t),u=c(t,"UL",{});var O=i(u);P=c(O,"LI",{});var Et=i(P);Co=c(Et,"CODE",{});var Hh=i(Co);Pi=a(Hh,"-h"),Hh.forEach(o),bi=a(Et,", "),Oo=c(Et,"CODE",{});var Wh=i(Oo);Ti=a(Wh,"--help"),Wh.forEach(o),Li=a(Et," ("),go=c(Et,"CODE",{});var zh=i(go);Ni=a(zh,"bool"),zh.forEach(o),$i=a(Et,") \u2014 Show a help message and exit"),Et.forEach(o),Ri=d(O),ae=c(O,"LI",{});var ta=i(ae);Do=c(ta,"CODE",{});var Zh=i(Do);Mi=a(Zh,"--config_file CONFIG_FILE"),Zh.forEach(o),Fi=a(ta," ("),So=c(ta,"CODE",{});var Bh=i(So);Gi=a(Bh,"str"),Bh.forEach(o),Ui=a(ta,")\u2014 The config file to use for the default values in the launching script."),ta.forEach(o),ki=d(O),re=c(O,"LI",{});var oa=i(re);Ao=c(oa,"CODE",{});var Kh=i(Ao);xi=a(Kh,"--cpu"),Kh.forEach(o),Hi=a(oa," ("),wo=c(oa,"CODE",{});var Yh=i(wo);Wi=a(Yh,"bool"),Yh.forEach(o),zi=a(oa,") \u2014 Whether or not to force the training on the CPU."),oa.forEach(o),Zi=d(O),ce=c(O,"LI",{});var la=i(ce);yo=c(la,"CODE",{});var jh=i(yo);Bi=a(jh,"--mixed_precision {no,fp16,bf16}"),jh.forEach(o),Ki=a(la," ("),Io=c(la,"CODE",{});var Vh=i(Io);Yi=a(Vh,"str"),Vh.forEach(o),ji=a(la,`) \u2014 Whether or not to use mixed precision training. Choose between FP16 and BF16 (bfloat16) training. BF16 training is only supported on
Nvidia Ampere GPUs and PyTorch 1.10 or later.`),la.forEach(o),Vi=d(O),b=c(O,"LI",{});var pt=i(b);Po=c(pt,"CODE",{});var Xh=i(Po);Xi=a(Xh,"--multi_gpu"),Xh.forEach(o),qi=a(pt," ("),bo=c(pt,"CODE",{});var qh=i(bo);Ji=a(qh,"bool"),qh.forEach(o),Qi=a(pt,", defaults to "),To=c(pt,"CODE",{});var Jh=i(To);es=a(Jh,"False"),Jh.forEach(o),ts=a(pt,") \u2014 Whether or not this should launch a distributed GPU training."),pt.forEach(o),os=d(O),T=c(O,"LI",{});var vt=i(T);Lo=c(vt,"CODE",{});var Qh=i(Lo);ls=a(Qh,"-m"),Qh.forEach(o),as=a(vt,", "),No=c(vt,"CODE",{});var e_=i(No);rs=a(e_,"--module"),e_.forEach(o),cs=a(vt," ("),$o=c(vt,"CODE",{});var t_=i($o);is=a(t_,"bool"),t_.forEach(o),ss=a(vt,") \u2014 Change each process to interpret the launch script as a Python module, executing with the same behavior as \u2018python -m\u2019."),vt.forEach(o),ns=d(O),ie=c(O,"LI",{});var aa=i(ie);Ro=c(aa,"CODE",{});var o_=i(Ro);fs=a(o_,"--no_python"),o_.forEach(o),ds=a(aa," ("),Mo=c(aa,"CODE",{});var l_=i(Mo);hs=a(l_,"bool"),l_.forEach(o),_s=a(aa,") \u2014 Skip prepending the training script with \u2018python\u2019 - just execute it directly. Useful when the script is not a Python script."),aa.forEach(o),O.forEach(o),or=d(t),L=c(t,"P",{});var yt=i(L);us=a(yt,"The rest of these arguments are configured through "),Fo=c(yt,"CODE",{});var a_=i(Fo);Es=a(a_,"accelerate config"),a_.forEach(o),ps=a(yt," and are read in from the specified "),Go=c(yt,"CODE",{});var r_=i(Go);vs=a(r_,"--config_file"),r_.forEach(o),ms=a(yt,` (or default configuration) for their
values. They can also be passed in manually.`),yt.forEach(o),lr=d(t),at=c(t,"P",{});var Md=i(at);Uo=c(Md,"STRONG",{});var c_=i(Uo);Cs=a(c_,"Machine Configuration Arguments"),c_.forEach(o),Os=a(Md,":"),Md.forEach(o),ar=d(t),At=c(t,"P",{});var i_=i(At);gs=a(i_,"The following arguments are useful for customization of worker machines"),i_.forEach(o),rr=d(t),m=c(t,"UL",{});var w=i(m);se=c(w,"LI",{});var ra=i(se);ko=c(ra,"CODE",{});var s_=i(ko);Ds=a(s_,"--machine_rank MACHINE_RANK"),s_.forEach(o),Ss=a(ra," ("),xo=c(ra,"CODE",{});var n_=i(xo);As=a(n_,"int"),n_.forEach(o),ws=a(ra,") \u2014 The rank of the machine on which this script is launched."),ra.forEach(o),ys=d(w),ne=c(w,"LI",{});var ca=i(ne);Ho=c(ca,"CODE",{});var f_=i(Ho);Is=a(f_,"--num_machines NUM_MACHINES"),f_.forEach(o),Ps=a(ca," ("),Wo=c(ca,"CODE",{});var d_=i(Wo);bs=a(d_,"int"),d_.forEach(o),Ts=a(ca,") \u2014 The total number of machines used in this training."),ca.forEach(o),Ls=d(w),fe=c(w,"LI",{});var ia=i(fe);zo=c(ia,"CODE",{});var h_=i(zo);Ns=a(h_,"--num_processes NUM_PROCESSES"),h_.forEach(o),$s=a(ia," ("),Zo=c(ia,"CODE",{});var __=i(Zo);Rs=a(__,"int"),__.forEach(o),Ms=a(ia,") \u2014 The total number of processes to be launched in parallel."),ia.forEach(o),Fs=d(w),de=c(w,"LI",{});var sa=i(de);Bo=c(sa,"CODE",{});var u_=i(Bo);Gs=a(u_,"--main_process_ip MAIN_PROCESS_IP"),u_.forEach(o),Us=a(sa," ("),Ko=c(sa,"CODE",{});var E_=i(Ko);ks=a(E_,"str"),E_.forEach(o),xs=a(sa,") \u2014 The IP address of the machine of rank 0."),sa.forEach(o),Hs=d(w),he=c(w,"LI",{});var na=i(he);Yo=c(na,"CODE",{});var p_=i(Yo);Ws=a(p_,"--main_process_port MAIN_PROCESS_PORT"),p_.forEach(o),zs=a(na," ("),jo=c(na,"CODE",{});var v_=i(jo);Zs=a(v_,"int"),v_.forEach(o),Bs=a(na,") \u2014 The port to use to communicate with the machine of rank 0."),na.forEach(o),Ks=d(w),_e=c(w,"LI",{});var fa=i(_e);Vo=c(fa,"CODE",{});var m_=i(Vo);Ys=a(m_,"--num_cpu_threads_per_process NUM_CPU_THREADS_PER_PROCESS"),m_.forEach(o),js=a(fa," ("),Xo=c(fa,"CODE",{});var C_=i(Xo);Vs=a(C_,"int"),C_.forEach(o),Xs=a(fa,") \u2014 The number of CPU threads per process. Can be tuned for optimal performance."),fa.forEach(o),w.forEach(o),cr=d(t),rt=c(t,"P",{});var Fd=i(rt);qo=c(Fd,"STRONG",{});var O_=i(qo);qs=a(O_,"DeepSpeed Arguments"),O_.forEach(o),Js=a(Fd,":"),Fd.forEach(o),ir=d(t),ue=c(t,"P",{});var Ur=i(ue);Qs=a(Ur,"The following arguments are only useful when "),Jo=c(Ur,"CODE",{});var g_=i(Jo);en=a(g_,"use_deepspeed"),g_.forEach(o),tn=a(Ur," is passed:"),Ur.forEach(o),sr=d(t),_=c(t,"UL",{});var E=i(_);Ee=c(E,"LI",{});var da=i(Ee);Qo=c(da,"CODE",{});var D_=i(Qo);on=a(D_,"--use_deepspeed"),D_.forEach(o),ln=a(da," ("),el=c(da,"CODE",{});var S_=i(el);an=a(S_,"bool"),S_.forEach(o),rn=a(da,") \u2014 Whether to use deepspeed."),da.forEach(o),cn=d(E),pe=c(E,"LI",{});var ha=i(pe);tl=c(ha,"CODE",{});var A_=i(tl);sn=a(A_,"--deepspeed_config_file DEEPSPEED_CONFIG_FILE"),A_.forEach(o),nn=a(ha," ("),ol=c(ha,"CODE",{});var w_=i(ol);fn=a(w_,"str"),w_.forEach(o),dn=a(ha,") \u2014 DeepSpeed config file."),ha.forEach(o),hn=d(E),ve=c(E,"LI",{});var _a=i(ve);ll=c(_a,"CODE",{});var y_=i(ll);_n=a(y_,"--zero_stage ZERO_STAGE"),y_.forEach(o),un=a(_a," ("),al=c(_a,"CODE",{});var I_=i(al);En=a(I_,"str"),I_.forEach(o),pn=a(_a,") \u2014 DeepSpeed\u2019s ZeRO optimization stage"),_a.forEach(o),vn=d(E),me=c(E,"LI",{});var ua=i(me);rl=c(ua,"CODE",{});var P_=i(rl);mn=a(P_,"--offload_optimizer_device OFFLOAD_OPTIMIZER_DEVICE"),P_.forEach(o),Cn=a(ua," ("),cl=c(ua,"CODE",{});var b_=i(cl);On=a(b_,"str"),b_.forEach(o),gn=a(ua,") \u2014 Decides where (none|cpu|nvme) to offload optimizer states"),ua.forEach(o),Dn=d(E),Ce=c(E,"LI",{});var Ea=i(Ce);il=c(Ea,"CODE",{});var T_=i(il);Sn=a(T_,"--offload_param_device OFFLOAD_PARAM_DEVICE"),T_.forEach(o),An=a(Ea," ("),sl=c(Ea,"CODE",{});var L_=i(sl);wn=a(L_,"str"),L_.forEach(o),yn=a(Ea,") \u2014 Decides where (none|cpu|nvme) to offload parameters"),Ea.forEach(o),In=d(E),Oe=c(E,"LI",{});var pa=i(Oe);nl=c(pa,"CODE",{});var N_=i(nl);Pn=a(N_,"--gradient_accumulation_steps GRADIENT_ACCUMULATION_STEPS"),N_.forEach(o),bn=a(pa," ("),fl=c(pa,"CODE",{});var $_=i(fl);Tn=a($_,"int"),$_.forEach(o),Ln=a(pa,") \u2014 Number of gradient_accumulation_steps used in your training script"),pa.forEach(o),Nn=d(E),ge=c(E,"LI",{});var va=i(ge);dl=c(va,"CODE",{});var R_=i(dl);$n=a(R_,"--gradient_clipping GRADIENT_CLIPPING"),R_.forEach(o),Rn=a(va," ("),hl=c(va,"CODE",{});var M_=i(hl);Mn=a(M_,"float"),M_.forEach(o),Fn=a(va,`) \u2014 gradient clipping value used in your training script
The following arguments are related to using ZeRO Stage-3`),va.forEach(o),Gn=d(E),N=c(E,"LI",{});var mt=i(N);_l=c(mt,"CODE",{});var F_=i(_l);Un=a(F_,"--zero3_init_flag ZERO3_INIT_FLAG"),F_.forEach(o),kn=a(mt," ("),ul=c(mt,"CODE",{});var G_=i(ul);xn=a(G_,"bool"),G_.forEach(o),Hn=a(mt,") \u2014 Decides Whether (true|false) to enable "),El=c(mt,"CODE",{});var U_=i(El);Wn=a(U_,"deepspeed.zero.Init"),U_.forEach(o),zn=a(mt," for constructing massive models"),mt.forEach(o),Zn=d(E),De=c(E,"LI",{});var ma=i(De);pl=c(ma,"CODE",{});var k_=i(pl);Bn=a(k_,"--zero3_save_16bit_model ZERO3_SAVE_16BIT_MODEL"),k_.forEach(o),Kn=a(ma," ("),vl=c(ma,"CODE",{});var x_=i(vl);Yn=a(x_,"bool"),x_.forEach(o),jn=a(ma,") \u2014 Decides Whether (true|false) to save 16-bit model weights when using ZeRO Stage-3"),ma.forEach(o),E.forEach(o),nr=d(t),ct=c(t,"P",{});var Gd=i(ct);ml=c(Gd,"STRONG",{});var H_=i(ml);Vn=a(H_,"Fully Sharded Data Parallelism Arguments"),H_.forEach(o),Xn=a(Gd,":"),Gd.forEach(o),fr=d(t),Se=c(t,"P",{});var kr=i(Se);qn=a(kr,"The following arguments are only useful when "),Cl=c(kr,"CODE",{});var W_=i(Cl);Jn=a(W_,"use_fdsp"),W_.forEach(o),Qn=a(kr," is passed:"),kr.forEach(o),dr=d(t),A=c(t,"UL",{});var ke=i(A);Ae=c(ke,"LI",{});var Ca=i(Ae);Ol=c(Ca,"CODE",{});var z_=i(Ol);ef=a(z_,"--use_fsdp"),z_.forEach(o),tf=a(Ca," ("),gl=c(Ca,"CODE",{});var Z_=i(gl);of=a(Z_,"bool"),Z_.forEach(o),lf=a(Ca,") \u2014 Whether to use fsdp."),Ca.forEach(o),af=d(ke),we=c(ke,"LI",{});var Oa=i(we);Dl=c(Oa,"CODE",{});var B_=i(Dl);rf=a(B_,"--offload_params OFFLOAD_PARAMS"),B_.forEach(o),cf=a(Oa," ("),Sl=c(Oa,"CODE",{});var K_=i(Sl);sf=a(K_,"bool"),K_.forEach(o),nf=a(Oa,") \u2014 Decides Whether (true|false) to offload parameters and gradients to CPU."),Oa.forEach(o),ff=d(ke),ye=c(ke,"LI",{});var ga=i(ye);Al=c(ga,"CODE",{});var Y_=i(Al);df=a(Y_,"--min_num_params MIN_NUM_PARAMS"),Y_.forEach(o),hf=a(ga," ("),wl=c(ga,"CODE",{});var j_=i(wl);_f=a(j_,"int"),j_.forEach(o),uf=a(ga,") \u2014 FSDP\u2019s minimum number of parameters for Default Auto Wrapping."),ga.forEach(o),Ef=d(ke),Ie=c(ke,"LI",{});var Da=i(Ie);yl=c(Da,"CODE",{});var V_=i(yl);pf=a(V_,"--sharding_strategy SHARDING_STRATEGY"),V_.forEach(o),vf=a(Da," ("),Il=c(Da,"CODE",{});var X_=i(Il);mf=a(X_,"str"),X_.forEach(o),Cf=a(Da,") \u2014 FSDP\u2019s Sharding Strategy."),Da.forEach(o),ke.forEach(o),hr=d(t),it=c(t,"P",{});var Ud=i(it);Pl=c(Ud,"STRONG",{});var q_=i(Pl);Of=a(q_,"TPU Arguments"),q_.forEach(o),gf=a(Ud,":"),Ud.forEach(o),_r=d(t),Pe=c(t,"P",{});var xr=i(Pe);Df=a(xr,"The following arguments are only useful when "),bl=c(xr,"CODE",{});var J_=i(bl);Sf=a(J_,"tpu"),J_.forEach(o),Af=a(xr," is passed:"),xr.forEach(o),ur=d(t),be=c(t,"UL",{});var Hr=i(be);Te=c(Hr,"LI",{});var Sa=i(Te);Tl=c(Sa,"CODE",{});var Q_=i(Tl);wf=a(Q_,"--tpu"),Q_.forEach(o),yf=a(Sa," ("),Ll=c(Sa,"CODE",{});var eu=i(Ll);If=a(eu,"bool"),eu.forEach(o),Pf=a(Sa,") - Whether or not this should launch a TPU training."),Sa.forEach(o),bf=d(Hr),Le=c(Hr,"LI",{});var Aa=i(Le);Nl=c(Aa,"CODE",{});var tu=i(Nl);Tf=a(tu,"--main_training_function MAIN_TRAINING_FUNCTION"),tu.forEach(o),Lf=a(Aa," ("),$l=c(Aa,"CODE",{});var ou=i($l);Nf=a(ou,"str"),ou.forEach(o),$f=a(Aa,") \u2014 The name of the main function to be executed in your script."),Aa.forEach(o),Hr.forEach(o),Er=d(t),st=c(t,"P",{});var kd=i(st);Rl=c(kd,"STRONG",{});var lu=i(Rl);Rf=a(lu,"AWS SageMaker Arguments"),lu.forEach(o),Mf=a(kd,":"),kd.forEach(o),pr=d(t),wt=c(t,"P",{});var au=i(wt);Ff=a(au,"The following arguments are only useful when training in SageMaker"),au.forEach(o),vr=d(t),Ne=c(t,"UL",{});var Wr=i(Ne);$e=c(Wr,"LI",{});var wa=i($e);Ml=c(wa,"CODE",{});var ru=i(Ml);Gf=a(ru,"--aws_access_key_id AWS_ACCESS_KEY_ID"),ru.forEach(o),Uf=a(wa," ("),Fl=c(wa,"CODE",{});var cu=i(Fl);kf=a(cu,"str"),cu.forEach(o),xf=a(wa,") \u2014 The AWS_ACCESS_KEY_ID used to launch the Amazon SageMaker training job"),wa.forEach(o),Hf=d(Wr),Re=c(Wr,"LI",{});var ya=i(Re);Gl=c(ya,"CODE",{});var iu=i(Gl);Wf=a(iu,"--aws_secret_access_key AWS_SECRET_ACCESS_KEY"),iu.forEach(o),zf=a(ya," ("),Ul=c(ya,"CODE",{});var su=i(Ul);Zf=a(su,"str"),su.forEach(o),Bf=a(ya,") \u2014 The AWS_SECRET_ACCESS_KEY used to launch the Amazon SageMaker training job"),ya.forEach(o),Wr.forEach(o),mr=d(t),k=c(t,"H2",{class:!0});var zr=i(k);Me=c(zr,"A",{id:!0,class:!0,href:!0});var nu=i(Me);kl=c(nu,"SPAN",{});var fu=i(kl);H(nt.$$.fragment,fu),fu.forEach(o),nu.forEach(o),Kf=d(zr),xl=c(zr,"SPAN",{});var du=i(xl);Yf=a(du,"accelerate test"),du.forEach(o),zr.forEach(o),Cr=d(t),Fe=c(t,"P",{});var Zr=i(Fe);Hl=c(Zr,"CODE",{});var hu=i(Hl);jf=a(hu,"accelerate test"),hu.forEach(o),Vf=a(Zr," or "),Wl=c(Zr,"CODE",{});var _u=i(Wl);Xf=a(_u,"accelerate-test"),_u.forEach(o),Zr.forEach(o),Or=d(t),Ge=c(t,"P",{});var Br=i(Ge);qf=a(Br,"Runs "),zl=c(Br,"CODE",{});var uu=i(zl);Jf=a(uu,"accelerate/test_utils/test_script.py"),uu.forEach(o),Qf=a(Br," to verify that \u{1F917} Accelerate has been properly configured on your system and runs."),Br.forEach(o),gr=d(t),ft=c(t,"P",{});var xd=i(ft);Zl=c(xd,"STRONG",{});var Eu=i(Zl);ed=a(Eu,"Usage"),Eu.forEach(o),td=a(xd,":"),xd.forEach(o),Dr=d(t),H(dt.$$.fragment,t),Sr=d(t),ht=c(t,"P",{});var Hd=i(ht);Bl=c(Hd,"STRONG",{});var pu=i(Bl);od=a(pu,"Optional Arguments"),pu.forEach(o),ld=a(Hd,":"),Hd.forEach(o),Ar=d(t),Ue=c(t,"UL",{});var Kr=i(Ue);C=c(Kr,"LI",{});var S=i(C);Kl=c(S,"CODE",{});var vu=i(Kl);ad=a(vu,"--config_file CONFIG_FILE"),vu.forEach(o),rd=a(S," ("),Yl=c(S,"CODE",{});var mu=i(Yl);cd=a(mu,"str"),mu.forEach(o),id=a(S,`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),jl=c(S,"CODE",{});var Cu=i(jl);sd=a(Cu,"HF_HOME"),Cu.forEach(o),nd=a(S,` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),Vl=c(S,"CODE",{});var Ou=i(Vl);fd=a(Ou,"~/.cache"),Ou.forEach(o),dd=a(S," or the content of "),Xl=c(S,"CODE",{});var gu=i(Xl);hd=a(gu,"XDG_CACHE_HOME"),gu.forEach(o),_d=a(S,") suffixed with "),ql=c(S,"CODE",{});var Du=i(ql);ud=a(Du,"huggingface"),Du.forEach(o),Ed=a(S,"."),S.forEach(o),pd=d(Kr),$=c(Kr,"LI",{});var Ct=i($);Jl=c(Ct,"CODE",{});var Su=i(Jl);vd=a(Su,"-h"),Su.forEach(o),md=a(Ct,", "),Ql=c(Ct,"CODE",{});var Au=i(Ql);Cd=a(Au,"--help"),Au.forEach(o),Od=a(Ct," ("),ea=c(Ct,"CODE",{});var wu=i(ea);gd=a(wu,"bool"),wu.forEach(o),Dd=a(Ct,") \u2014 Show a help message and exit"),Ct.forEach(o),Kr.forEach(o),this.h()},h(){h(R,"name","hf:doc:metadata"),h(R,"content",JSON.stringify($u)),h(K,"id","the-command-line"),h(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(K,"href","#the-command-line"),h(M,"class","relative group"),h(Y,"id","accelerate-config"),h(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(Y,"href","#accelerate-config"),h(F,"class","relative group"),h(q,"id","accelerate-env"),h(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(q,"href","#accelerate-env"),h(G,"class","relative group"),h(je,"href","https://github.com/huggingface/accelerate"),h(je,"rel","nofollow"),h(te,"id","accelerate-launch"),h(te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(te,"href","#accelerate-launch"),h(U,"class","relative group"),h(Me,"id","accelerate-test"),h(Me,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(Me,"href","#accelerate-test"),h(k,"class","relative group")},m(t,s){e(document.head,R),n(t,Pa,s),n(t,M,s),e(M,K),e(K,It),W(xe,It,null),e(M,jr),e(M,Pt),e(Pt,Vr),n(t,ba,s),n(t,Ot,s),e(Ot,Xr),n(t,Ta,s),n(t,F,s),e(F,Y),e(Y,bt),W(He,bt,null),e(F,qr),e(F,Tt),e(Tt,Jr),n(t,La,s),n(t,We,s),e(We,Lt),e(Lt,Qr),e(We,ec),n(t,Na,s),n(t,j,s),e(j,Nt),e(Nt,tc),e(j,oc),e(j,$t),e($t,lc),n(t,$a,s),n(t,V,s),e(V,ac),e(V,Rt),e(Rt,rc),e(V,cc),n(t,Ra,s),n(t,ze,s),e(ze,Mt),e(Mt,ic),e(ze,sc),n(t,Ma,s),W(Ze,t,s),n(t,Fa,s),n(t,Be,s),e(Be,Ft),e(Ft,nc),e(Be,fc),n(t,Ga,s),n(t,X,s),e(X,p),e(p,Gt),e(Gt,dc),e(p,hc),e(p,Ut),e(Ut,_c),e(p,uc),e(p,kt),e(kt,Ec),e(p,pc),e(p,xt),e(xt,vc),e(p,mc),e(p,Ht),e(Ht,Cc),e(p,Oc),e(p,Wt),e(Wt,gc),e(p,Dc),e(X,Sc),e(X,y),e(y,zt),e(zt,Ac),e(y,wc),e(y,Zt),e(Zt,yc),e(y,Ic),e(y,Bt),e(Bt,Pc),e(y,bc),n(t,Ua,s),n(t,G,s),e(G,q),e(q,Kt),W(Ke,Kt,null),e(G,Tc),e(G,Yt),e(Yt,Lc),n(t,ka,s),n(t,Ye,s),e(Ye,jt),e(jt,Nc),e(Ye,$c),n(t,xa,s),n(t,J,s),e(J,Vt),e(Vt,Rc),e(J,Mc),e(J,Xt),e(Xt,Fc),n(t,Ha,s),n(t,Q,s),e(Q,Gc),e(Q,je),e(je,Uc),e(Q,kc),n(t,Wa,s),n(t,Ve,s),e(Ve,qt),e(qt,xc),e(Ve,Hc),n(t,za,s),W(Xe,t,s),n(t,Za,s),n(t,qe,s),e(qe,Jt),e(Jt,Wc),e(qe,zc),n(t,Ba,s),n(t,ee,s),e(ee,v),e(v,Qt),e(Qt,Zc),e(v,Bc),e(v,eo),e(eo,Kc),e(v,Yc),e(v,to),e(to,jc),e(v,Vc),e(v,oo),e(oo,Xc),e(v,qc),e(v,lo),e(lo,Jc),e(v,Qc),e(v,ao),e(ao,ei),e(v,ti),e(ee,oi),e(ee,I),e(I,ro),e(ro,li),e(I,ai),e(I,co),e(co,ri),e(I,ci),e(I,io),e(io,ii),e(I,si),n(t,Ka,s),n(t,U,s),e(U,te),e(te,so),W(Je,so,null),e(U,ni),e(U,no),e(no,fi),n(t,Ya,s),n(t,Qe,s),e(Qe,fo),e(fo,di),e(Qe,hi),n(t,ja,s),n(t,oe,s),e(oe,ho),e(ho,_i),e(oe,ui),e(oe,_o),e(_o,Ei),n(t,Va,s),n(t,gt,s),e(gt,pi),n(t,Xa,s),n(t,et,s),e(et,uo),e(uo,vi),e(et,mi),n(t,qa,s),W(tt,t,s),n(t,Ja,s),n(t,ot,s),e(ot,Eo),e(Eo,Ci),e(ot,Oi),n(t,Qa,s),n(t,le,s),e(le,Dt),e(Dt,po),e(po,gi),e(Dt,Di),e(le,Si),e(le,St),e(St,vo),e(vo,Ai),e(St,wi),n(t,er,s),n(t,lt,s),e(lt,mo),e(mo,yi),e(lt,Ii),n(t,tr,s),n(t,u,s),e(u,P),e(P,Co),e(Co,Pi),e(P,bi),e(P,Oo),e(Oo,Ti),e(P,Li),e(P,go),e(go,Ni),e(P,$i),e(u,Ri),e(u,ae),e(ae,Do),e(Do,Mi),e(ae,Fi),e(ae,So),e(So,Gi),e(ae,Ui),e(u,ki),e(u,re),e(re,Ao),e(Ao,xi),e(re,Hi),e(re,wo),e(wo,Wi),e(re,zi),e(u,Zi),e(u,ce),e(ce,yo),e(yo,Bi),e(ce,Ki),e(ce,Io),e(Io,Yi),e(ce,ji),e(u,Vi),e(u,b),e(b,Po),e(Po,Xi),e(b,qi),e(b,bo),e(bo,Ji),e(b,Qi),e(b,To),e(To,es),e(b,ts),e(u,os),e(u,T),e(T,Lo),e(Lo,ls),e(T,as),e(T,No),e(No,rs),e(T,cs),e(T,$o),e($o,is),e(T,ss),e(u,ns),e(u,ie),e(ie,Ro),e(Ro,fs),e(ie,ds),e(ie,Mo),e(Mo,hs),e(ie,_s),n(t,or,s),n(t,L,s),e(L,us),e(L,Fo),e(Fo,Es),e(L,ps),e(L,Go),e(Go,vs),e(L,ms),n(t,lr,s),n(t,at,s),e(at,Uo),e(Uo,Cs),e(at,Os),n(t,ar,s),n(t,At,s),e(At,gs),n(t,rr,s),n(t,m,s),e(m,se),e(se,ko),e(ko,Ds),e(se,Ss),e(se,xo),e(xo,As),e(se,ws),e(m,ys),e(m,ne),e(ne,Ho),e(Ho,Is),e(ne,Ps),e(ne,Wo),e(Wo,bs),e(ne,Ts),e(m,Ls),e(m,fe),e(fe,zo),e(zo,Ns),e(fe,$s),e(fe,Zo),e(Zo,Rs),e(fe,Ms),e(m,Fs),e(m,de),e(de,Bo),e(Bo,Gs),e(de,Us),e(de,Ko),e(Ko,ks),e(de,xs),e(m,Hs),e(m,he),e(he,Yo),e(Yo,Ws),e(he,zs),e(he,jo),e(jo,Zs),e(he,Bs),e(m,Ks),e(m,_e),e(_e,Vo),e(Vo,Ys),e(_e,js),e(_e,Xo),e(Xo,Vs),e(_e,Xs),n(t,cr,s),n(t,rt,s),e(rt,qo),e(qo,qs),e(rt,Js),n(t,ir,s),n(t,ue,s),e(ue,Qs),e(ue,Jo),e(Jo,en),e(ue,tn),n(t,sr,s),n(t,_,s),e(_,Ee),e(Ee,Qo),e(Qo,on),e(Ee,ln),e(Ee,el),e(el,an),e(Ee,rn),e(_,cn),e(_,pe),e(pe,tl),e(tl,sn),e(pe,nn),e(pe,ol),e(ol,fn),e(pe,dn),e(_,hn),e(_,ve),e(ve,ll),e(ll,_n),e(ve,un),e(ve,al),e(al,En),e(ve,pn),e(_,vn),e(_,me),e(me,rl),e(rl,mn),e(me,Cn),e(me,cl),e(cl,On),e(me,gn),e(_,Dn),e(_,Ce),e(Ce,il),e(il,Sn),e(Ce,An),e(Ce,sl),e(sl,wn),e(Ce,yn),e(_,In),e(_,Oe),e(Oe,nl),e(nl,Pn),e(Oe,bn),e(Oe,fl),e(fl,Tn),e(Oe,Ln),e(_,Nn),e(_,ge),e(ge,dl),e(dl,$n),e(ge,Rn),e(ge,hl),e(hl,Mn),e(ge,Fn),e(_,Gn),e(_,N),e(N,_l),e(_l,Un),e(N,kn),e(N,ul),e(ul,xn),e(N,Hn),e(N,El),e(El,Wn),e(N,zn),e(_,Zn),e(_,De),e(De,pl),e(pl,Bn),e(De,Kn),e(De,vl),e(vl,Yn),e(De,jn),n(t,nr,s),n(t,ct,s),e(ct,ml),e(ml,Vn),e(ct,Xn),n(t,fr,s),n(t,Se,s),e(Se,qn),e(Se,Cl),e(Cl,Jn),e(Se,Qn),n(t,dr,s),n(t,A,s),e(A,Ae),e(Ae,Ol),e(Ol,ef),e(Ae,tf),e(Ae,gl),e(gl,of),e(Ae,lf),e(A,af),e(A,we),e(we,Dl),e(Dl,rf),e(we,cf),e(we,Sl),e(Sl,sf),e(we,nf),e(A,ff),e(A,ye),e(ye,Al),e(Al,df),e(ye,hf),e(ye,wl),e(wl,_f),e(ye,uf),e(A,Ef),e(A,Ie),e(Ie,yl),e(yl,pf),e(Ie,vf),e(Ie,Il),e(Il,mf),e(Ie,Cf),n(t,hr,s),n(t,it,s),e(it,Pl),e(Pl,Of),e(it,gf),n(t,_r,s),n(t,Pe,s),e(Pe,Df),e(Pe,bl),e(bl,Sf),e(Pe,Af),n(t,ur,s),n(t,be,s),e(be,Te),e(Te,Tl),e(Tl,wf),e(Te,yf),e(Te,Ll),e(Ll,If),e(Te,Pf),e(be,bf),e(be,Le),e(Le,Nl),e(Nl,Tf),e(Le,Lf),e(Le,$l),e($l,Nf),e(Le,$f),n(t,Er,s),n(t,st,s),e(st,Rl),e(Rl,Rf),e(st,Mf),n(t,pr,s),n(t,wt,s),e(wt,Ff),n(t,vr,s),n(t,Ne,s),e(Ne,$e),e($e,Ml),e(Ml,Gf),e($e,Uf),e($e,Fl),e(Fl,kf),e($e,xf),e(Ne,Hf),e(Ne,Re),e(Re,Gl),e(Gl,Wf),e(Re,zf),e(Re,Ul),e(Ul,Zf),e(Re,Bf),n(t,mr,s),n(t,k,s),e(k,Me),e(Me,kl),W(nt,kl,null),e(k,Kf),e(k,xl),e(xl,Yf),n(t,Cr,s),n(t,Fe,s),e(Fe,Hl),e(Hl,jf),e(Fe,Vf),e(Fe,Wl),e(Wl,Xf),n(t,Or,s),n(t,Ge,s),e(Ge,qf),e(Ge,zl),e(zl,Jf),e(Ge,Qf),n(t,gr,s),n(t,ft,s),e(ft,Zl),e(Zl,ed),e(ft,td),n(t,Dr,s),W(dt,t,s),n(t,Sr,s),n(t,ht,s),e(ht,Bl),e(Bl,od),e(ht,ld),n(t,Ar,s),n(t,Ue,s),e(Ue,C),e(C,Kl),e(Kl,ad),e(C,rd),e(C,Yl),e(Yl,cd),e(C,id),e(C,jl),e(jl,sd),e(C,nd),e(C,Vl),e(Vl,fd),e(C,dd),e(C,Xl),e(Xl,hd),e(C,_d),e(C,ql),e(ql,ud),e(C,Ed),e(Ue,pd),e(Ue,$),e($,Jl),e(Jl,vd),e($,md),e($,Ql),e(Ql,Cd),e($,Od),e($,ea),e(ea,gd),e($,Dd),wr=!0},p:Tu,i(t){wr||(z(xe.$$.fragment,t),z(He.$$.fragment,t),z(Ze.$$.fragment,t),z(Ke.$$.fragment,t),z(Xe.$$.fragment,t),z(Je.$$.fragment,t),z(tt.$$.fragment,t),z(nt.$$.fragment,t),z(dt.$$.fragment,t),wr=!0)},o(t){Z(xe.$$.fragment,t),Z(He.$$.fragment,t),Z(Ze.$$.fragment,t),Z(Ke.$$.fragment,t),Z(Xe.$$.fragment,t),Z(Je.$$.fragment,t),Z(tt.$$.fragment,t),Z(nt.$$.fragment,t),Z(dt.$$.fragment,t),wr=!1},d(t){o(R),t&&o(Pa),t&&o(M),B(xe),t&&o(ba),t&&o(Ot),t&&o(Ta),t&&o(F),B(He),t&&o(La),t&&o(We),t&&o(Na),t&&o(j),t&&o($a),t&&o(V),t&&o(Ra),t&&o(ze),t&&o(Ma),B(Ze,t),t&&o(Fa),t&&o(Be),t&&o(Ga),t&&o(X),t&&o(Ua),t&&o(G),B(Ke),t&&o(ka),t&&o(Ye),t&&o(xa),t&&o(J),t&&o(Ha),t&&o(Q),t&&o(Wa),t&&o(Ve),t&&o(za),B(Xe,t),t&&o(Za),t&&o(qe),t&&o(Ba),t&&o(ee),t&&o(Ka),t&&o(U),B(Je),t&&o(Ya),t&&o(Qe),t&&o(ja),t&&o(oe),t&&o(Va),t&&o(gt),t&&o(Xa),t&&o(et),t&&o(qa),B(tt,t),t&&o(Ja),t&&o(ot),t&&o(Qa),t&&o(le),t&&o(er),t&&o(lt),t&&o(tr),t&&o(u),t&&o(or),t&&o(L),t&&o(lr),t&&o(at),t&&o(ar),t&&o(At),t&&o(rr),t&&o(m),t&&o(cr),t&&o(rt),t&&o(ir),t&&o(ue),t&&o(sr),t&&o(_),t&&o(nr),t&&o(ct),t&&o(fr),t&&o(Se),t&&o(dr),t&&o(A),t&&o(hr),t&&o(it),t&&o(_r),t&&o(Pe),t&&o(ur),t&&o(be),t&&o(Er),t&&o(st),t&&o(pr),t&&o(wt),t&&o(vr),t&&o(Ne),t&&o(mr),t&&o(k),B(nt),t&&o(Cr),t&&o(Fe),t&&o(Or),t&&o(Ge),t&&o(gr),t&&o(ft),t&&o(Dr),B(dt,t),t&&o(Sr),t&&o(ht),t&&o(Ar),t&&o(Ue)}}}const $u={local:"the-command-line",sections:[{local:"accelerate-config",title:"accelerate config"},{local:"accelerate-env",title:"accelerate env"},{local:"accelerate-launch",title:"accelerate launch"},{local:"accelerate-test",title:"accelerate test"}],title:"The Command Line "};function Ru(Wd){return Lu(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Uu extends yu{constructor(R){super();Iu(this,R,Ru,Nu,Pu,{})}}export{Uu as default,$u as metadata};
