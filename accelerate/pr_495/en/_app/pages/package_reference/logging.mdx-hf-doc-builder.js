import{S as xe,i as Le,s as ke,e as n,k as u,w as I,t as c,M as Ce,c as r,d as a,m as $,a as i,x as T,h as p,b as x,G as t,g as L,y as B,q as N,o as R,B as z,v as Ae,L as De}from"../../chunks/vendor-hf-doc-builder.js";import{I as Pe,D as je}from"../../chunks/Docstring-hf-doc-builder.js";import{C as be,E as qe}from"../../chunks/ExampleCodeBlock-hf-doc-builder.js";function Me(G){let l,f;return l=new be({props:{code:`logger.info("My log", main_process_only=False)
logger.debug("My log", main_process_only=False)`,highlighted:`logger.info(<span class="hljs-string">&quot;My log&quot;</span>, main_process_only=<span class="hljs-literal">False</span>)
logger.debug(<span class="hljs-string">&quot;My log&quot;</span>, main_process_only=<span class="hljs-literal">False</span>)`}}),{c(){I(l.$$.fragment)},l(o){T(l.$$.fragment,o)},m(o,m){B(l,o,m),f=!0},p:De,i(o){f||(N(l.$$.fragment,o),f=!0)},o(o){R(l.$$.fragment,o),f=!1},d(o){z(l,o)}}}function Fe(G){let l,f,o,m,D,y,K,P,Q,H,d,W,j,X,Y,q,Z,ee,J,E,U,s,w,te,_,ae,M,oe,le,F,se,ne,re,k,ge,O,ce,ie,S,pe,me,v,V;return y=new Pe({}),E=new be({props:{code:`-import logging
+from accelerate.logging import get_logger
-logger = logging.getLogger(__name__)
+logger = get_logger(__name__)`,highlighted:`<span class="hljs-deletion">-import logging</span>
<span class="hljs-addition">+from accelerate.logging import get_logger</span>
<span class="hljs-deletion">-logger = logging.getLogger(__name__)</span>
<span class="hljs-addition">+logger = get_logger(__name__)</span>`}}),w=new je({props:{name:"accelerate.logging.get_logger",anchor:"accelerate.logging.get_logger",parameters:[{name:"name",val:": str"}],parametersDescription:[{anchor:"accelerate.logging.get_logger.name",description:`<strong>name</strong> (<code>str</code>) &#x2014;
The name for the logger, such as <code>__file__</code>`,name:"name"}],source:"https://github.com/huggingface/accelerate/blob/vr_495/src/accelerate/logging.py#L46"}}),v=new qe({props:{anchor:"accelerate.logging.get_logger.example",$$slots:{default:[Me]},$$scope:{ctx:G}}}),{c(){l=n("meta"),f=u(),o=n("h1"),m=n("a"),D=n("span"),I(y.$$.fragment),K=u(),P=n("span"),Q=c("Logging with Accelerate"),H=u(),d=n("p"),W=c(`Accelerate has its own logging utility to handle logging while in a distributed system.
To utilize this replace cases of `),j=n("code"),X=c("logging"),Y=c(" with "),q=n("code"),Z=c("accelerate.logging"),ee=c(":"),J=u(),I(E.$$.fragment),U=u(),s=n("div"),I(w.$$.fragment),te=u(),_=n("p"),ae=c("Returns a "),M=n("code"),oe=c("logging.Logger"),le=c(" for "),F=n("code"),se=c("name"),ne=c(" that can handle multiprocessing."),re=u(),k=n("p"),ge=c("If a log should be called on all processes, pass "),O=n("code"),ce=c("main_process_only=False"),ie=u(),S=n("p"),pe=c("E.g."),me=u(),I(v.$$.fragment),this.h()},l(e){const g=Ce('[data-svelte="svelte-1phssyn"]',document.head);l=r(g,"META",{name:!0,content:!0}),g.forEach(a),f=$(e),o=r(e,"H1",{class:!0});var b=i(o);m=r(b,"A",{id:!0,class:!0,href:!0});var he=i(m);D=r(he,"SPAN",{});var fe=i(D);T(y.$$.fragment,fe),fe.forEach(a),he.forEach(a),K=$(b),P=r(b,"SPAN",{});var _e=i(P);Q=p(_e,"Logging with Accelerate"),_e.forEach(a),b.forEach(a),H=$(e),d=r(e,"P",{});var C=i(d);W=p(C,`Accelerate has its own logging utility to handle logging while in a distributed system.
To utilize this replace cases of `),j=r(C,"CODE",{});var ue=i(j);X=p(ue,"logging"),ue.forEach(a),Y=p(C," with "),q=r(C,"CODE",{});var $e=i(q);Z=p($e,"accelerate.logging"),$e.forEach(a),ee=p(C,":"),C.forEach(a),J=$(e),T(E.$$.fragment,e),U=$(e),s=r(e,"DIV",{class:!0});var h=i(s);T(w.$$.fragment,h),te=$(h),_=r(h,"P",{});var A=i(_);ae=p(A,"Returns a "),M=r(A,"CODE",{});var ve=i(M);oe=p(ve,"logging.Logger"),ve.forEach(a),le=p(A," for "),F=r(A,"CODE",{});var ye=i(F);se=p(ye,"name"),ye.forEach(a),ne=p(A," that can handle multiprocessing."),A.forEach(a),re=$(h),k=r(h,"P",{});var de=i(k);ge=p(de,"If a log should be called on all processes, pass "),O=r(de,"CODE",{});var Ee=i(O);ce=p(Ee,"main_process_only=False"),Ee.forEach(a),de.forEach(a),ie=$(h),S=r(h,"P",{});var we=i(S);pe=p(we,"E.g."),we.forEach(a),me=$(h),T(v.$$.fragment,h),h.forEach(a),this.h()},h(){x(l,"name","hf:doc:metadata"),x(l,"content",JSON.stringify(Oe)),x(m,"id","accelerate.logging.get_logger"),x(m,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),x(m,"href","#accelerate.logging.get_logger"),x(o,"class","relative group"),x(s,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,g){t(document.head,l),L(e,f,g),L(e,o,g),t(o,m),t(m,D),B(y,D,null),t(o,K),t(o,P),t(P,Q),L(e,H,g),L(e,d,g),t(d,W),t(d,j),t(j,X),t(d,Y),t(d,q),t(q,Z),t(d,ee),L(e,J,g),B(E,e,g),L(e,U,g),L(e,s,g),B(w,s,null),t(s,te),t(s,_),t(_,ae),t(_,M),t(M,oe),t(_,le),t(_,F),t(F,se),t(_,ne),t(s,re),t(s,k),t(k,ge),t(k,O),t(O,ce),t(s,ie),t(s,S),t(S,pe),t(s,me),B(v,s,null),V=!0},p(e,[g]){const b={};g&2&&(b.$$scope={dirty:g,ctx:e}),v.$set(b)},i(e){V||(N(y.$$.fragment,e),N(E.$$.fragment,e),N(w.$$.fragment,e),N(v.$$.fragment,e),V=!0)},o(e){R(y.$$.fragment,e),R(E.$$.fragment,e),R(w.$$.fragment,e),R(v.$$.fragment,e),V=!1},d(e){a(l),e&&a(f),e&&a(o),z(y),e&&a(H),e&&a(d),e&&a(J),z(E,e),e&&a(U),e&&a(s),z(w),z(v)}}}const Oe={local:"accelerate.logging.get_logger",title:"Logging with Accelerate"};function Se(G){return Ae(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ne extends xe{constructor(l){super();Le(this,l,Se,Fe,ke,{})}}export{Ne as default,Oe as metadata};
