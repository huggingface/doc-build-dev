import{S as wl,i as _l,s as $l,e as l,k as p,w as g,t as i,N as El,c as o,d as a,m as f,a as s,x as v,h as r,b as u,P as bl,G as t,g as h,y,L as Al,q as w,o as _,B as $,v as kl}from"../chunks/vendor-hf-doc-builder.js";import{I as le}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Ia}from"../chunks/CodeBlock-hf-doc-builder.js";function Ll(xa){let E,De,b,x,fe,D,$t,ce,Et,Ge,G,me,bt,At,Ve,A,H,de,V,kt,ge,Lt,Be,M,Pt,B,St,It,We,oe,xt,Je,c,ve,Ht,Mt,ye,jt,Nt,we,qt,Ct,_e,Ot,Re,W,Ha,Ke,k,j,$e,J,Yt,Ee,Ft,Qe,R,Xe,L,N,be,K,Tt,Ae,Ut,Ze,Q,et,se,zt,tt,q,ne,ke,Dt,Gt,Vt,ie,Le,Bt,Wt,at,P,C,Pe,X,Jt,Se,Rt,lt,m,Ie,Kt,Qt,Z,Xt,xe,Zt,ea,ta,He,aa,la,Me,oa,ot,S,O,je,ee,sa,Ne,na,st,te,nt,re,ia,it,d,he,qe,ra,ha,ua,ue,Ce,pa,fa,ca,Y,Oe,ma,da,Ye,ga,va,ya,pe,Fe,wa,_a,rt,I,F,Te,ae,$a,Ue,Ea,ht,ut;return D=new le({}),V=new le({}),J=new le({}),R=new Ia({props:{code:"",highlighted:`<span class="hljs-comment"># Clone the repository</span>
git <span class="hljs-built_in">clone</span> https://github.com/huggingface/ml-agents/

<span class="hljs-comment"># Go inside the repository and install the package</span>
<span class="hljs-built_in">cd</span> ml-agents
pip3 install -e ./ml-agents-envs
pip3 install -e ./ml-agents`}}),K=new le({}),Q=new Ia({props:{code:'mlagents-load-from-hf --repo-id="ThomasSimonini/MLAgents-Pyramids --local-dir="./downloads"',highlighted:'mlagents-load-from-hf <span class="hljs-params">--repo-id=</span><span class="hljs-string">&quot;ThomasSimonini/MLAgents-Pyramids --local-dir=&quot;</span><span class="hljs-string">./downloads</span><span class="hljs-string">&quot;</span>'}}),X=new le({}),ee=new le({}),te=new Ia({props:{code:'mlagents-push-to-hf --run-id="First Training" --local-dir="results/First Training" --repo-id="ThomasSimonini/MLAgents-Pyramids" --commit-message="Pyramids"',highlighted:'mlagents-push-to-hf --run-id<span class="hljs-operator">=</span><span class="hljs-string">&quot;First Training&quot;</span> --local-dir<span class="hljs-operator">=</span><span class="hljs-string">&quot;results/First Training&quot;</span> --repo-id<span class="hljs-operator">=</span><span class="hljs-string">&quot;ThomasSimonini/MLAgents-Pyramids&quot;</span> --commit-message<span class="hljs-operator">=</span><span class="hljs-string">&quot;Pyramids&quot;</span>'}}),ae=new le({}),{c(){E=l("meta"),De=p(),b=l("h1"),x=l("a"),fe=l("span"),g(D.$$.fragment),$t=p(),ce=l("span"),Et=i("Using ML-Agents at Hugging Face"),Ge=p(),G=l("p"),me=l("code"),bt=i("ml-agents"),At=i(" is an open-source toolkit that enables games and simulations made with Unity to serve as environments for training intelligent agents."),Ve=p(),A=l("h2"),H=l("a"),de=l("span"),g(V.$$.fragment),kt=p(),ge=l("span"),Lt=i("Exploring ML-Agents in the Hub"),Be=p(),M=l("p"),Pt=i("You can find ml-agents models by filtering at the left of the "),B=l("a"),St=i("models page"),It=i("."),We=p(),oe=l("p"),xt=i("All models on the Hub come up with useful features:"),Je=p(),c=l("ol"),ve=l("li"),Ht=i("An automatically generated model card with a description, a training configuration, and more."),Mt=p(),ye=l("li"),jt=i("Metadata tags that help for discoverability."),Nt=p(),we=l("li"),qt=i("Tensorboard summary files to visualize the training metrics."),Ct=p(),_e=l("li"),Ot=i("A link to the Spaces web demo where you can visualize your agent playing in your browser."),Re=p(),W=l("img"),Ke=p(),k=l("h2"),j=l("a"),$e=l("span"),g(J.$$.fragment),Yt=p(),Ee=l("span"),Ft=i("Install the library"),Qe=i(`

To install the \`ml-agents\` library, you need to clone the repo:

	`),g(R.$$.fragment),Xe=p(),L=l("h2"),N=l("a"),be=l("span"),g(K.$$.fragment),Tt=p(),Ae=l("span"),Ut=i("Using existing models"),Ze=i(`

You can simply download a model from the Hub using \`mlagents-load-from-hf\`

	`),g(Q.$$.fragment),et=p(),se=l("p"),zt=i("You need to define two parameters:"),tt=p(),q=l("ul"),ne=l("li"),ke=l("code"),Dt=i("--repo-id"),Gt=i(": the name of the Hugging Face repo you want to download."),Vt=p(),ie=l("li"),Le=l("code"),Bt=i("--local-dir"),Wt=i(": the path to download the model."),at=p(),P=l("h2"),C=l("a"),Pe=l("span"),g(X.$$.fragment),Jt=p(),Se=l("span"),Rt=i("Visualize an agent playing"),lt=i(`

You can easily watch any \`ml-agent\` playing directly in your browser:
`),m=l("ol"),Ie=l("li"),Kt=i("Go to your model repo."),Qt=p(),Z=l("li"),Xt=i("In the "),xe=l("code"),Zt=i("Watch Your Agent Play"),ea=i(" section, click on the link."),ta=p(),He=l("li"),aa=i("In the demo, on step 1, choose your model repository, which is the model id."),la=p(),Me=l("li"),oa=i("In step 2, choose what model you want to replay."),ot=p(),S=l("h2"),O=l("a"),je=l("span"),g(ee.$$.fragment),sa=p(),Ne=l("span"),na=i("Sharing your models"),st=i(`

You can easily upload your models using \`mlagents-push-to-hf\`:

	`),g(te.$$.fragment),nt=p(),re=l("p"),ia=i("You need to define four parameters:"),it=p(),d=l("ul"),he=l("li"),qe=l("code"),ra=i("--run-id"),ha=i(": the name of the training run id."),ua=p(),ue=l("li"),Ce=l("code"),pa=i("--local-dir"),fa=i(": where the model was saved."),ca=p(),Y=l("li"),Oe=l("code"),ma=i("--repo-id"),da=i(": the name of the Hugging Face repo you want to create or update. It\u2019s "),Ye=l("code"),ga=i("<your huggingface username>/<the repo name>"),va=i("."),ya=p(),pe=l("li"),Fe=l("code"),wa=i("--commit-message"),_a=i("."),rt=p(),I=l("h2"),F=l("a"),Te=l("span"),g(ae.$$.fragment),$a=p(),Ue=l("span"),Ea=i("Additional resources"),ht=i(`

- Hugging Face ML-Agents [documentation](https://github.com/huggingface/ml-agents)
- Official Unity ML-Agents Spaces [demos](https://huggingface.co/unity)`),this.h()},l(e){const n=El('[data-svelte="svelte-1phssyn"]',document.head);E=o(n,"META",{name:!0,content:!0}),n.forEach(a),De=f(e),b=o(e,"H1",{class:!0});var pt=s(b);x=o(pt,"A",{id:!0,class:!0,href:!0});var Ma=s(x);fe=o(Ma,"SPAN",{});var ja=s(fe);v(D.$$.fragment,ja),ja.forEach(a),Ma.forEach(a),$t=f(pt),ce=o(pt,"SPAN",{});var Na=s(ce);Et=r(Na,"Using ML-Agents at Hugging Face"),Na.forEach(a),pt.forEach(a),Ge=f(e),G=o(e,"P",{});var ba=s(G);me=o(ba,"CODE",{});var qa=s(me);bt=r(qa,"ml-agents"),qa.forEach(a),At=r(ba," is an open-source toolkit that enables games and simulations made with Unity to serve as environments for training intelligent agents."),ba.forEach(a),Ve=f(e),A=o(e,"H2",{class:!0});var ft=s(A);H=o(ft,"A",{id:!0,class:!0,href:!0});var Ca=s(H);de=o(Ca,"SPAN",{});var Oa=s(de);v(V.$$.fragment,Oa),Oa.forEach(a),Ca.forEach(a),kt=f(ft),ge=o(ft,"SPAN",{});var Ya=s(ge);Lt=r(Ya,"Exploring ML-Agents in the Hub"),Ya.forEach(a),ft.forEach(a),Be=f(e),M=o(e,"P",{});var ct=s(M);Pt=r(ct,"You can find ml-agents models by filtering at the left of the "),B=o(ct,"A",{href:!0,rel:!0});var Fa=s(B);St=r(Fa,"models page"),Fa.forEach(a),It=r(ct,"."),ct.forEach(a),We=f(e),oe=o(e,"P",{});var Ta=s(oe);xt=r(Ta,"All models on the Hub come up with useful features:"),Ta.forEach(a),Je=f(e),c=o(e,"OL",{});var T=s(c);ve=o(T,"LI",{});var Ua=s(ve);Ht=r(Ua,"An automatically generated model card with a description, a training configuration, and more."),Ua.forEach(a),Mt=f(T),ye=o(T,"LI",{});var za=s(ye);jt=r(za,"Metadata tags that help for discoverability."),za.forEach(a),Nt=f(T),we=o(T,"LI",{});var Da=s(we);qt=r(Da,"Tensorboard summary files to visualize the training metrics."),Da.forEach(a),Ct=f(T),_e=o(T,"LI",{});var Ga=s(_e);Ot=r(Ga,"A link to the Spaces web demo where you can visualize your agent playing in your browser."),Ga.forEach(a),T.forEach(a),Re=f(e),W=o(e,"IMG",{src:!0,alt:!0}),Ke=f(e),k=o(e,"H2",{class:!0});var mt=s(k);j=o(mt,"A",{id:!0,class:!0,href:!0});var Va=s(j);$e=o(Va,"SPAN",{});var Ba=s($e);v(J.$$.fragment,Ba),Ba.forEach(a),Va.forEach(a),Yt=f(mt),Ee=o(mt,"SPAN",{});var Wa=s(Ee);Ft=r(Wa,"Install the library"),Wa.forEach(a),mt.forEach(a),Qe=r(e,`

To install the \`ml-agents\` library, you need to clone the repo:

	`),v(R.$$.fragment,e),Xe=f(e),L=o(e,"H2",{class:!0});var dt=s(L);N=o(dt,"A",{id:!0,class:!0,href:!0});var Ja=s(N);be=o(Ja,"SPAN",{});var Ra=s(be);v(K.$$.fragment,Ra),Ra.forEach(a),Ja.forEach(a),Tt=f(dt),Ae=o(dt,"SPAN",{});var Ka=s(Ae);Ut=r(Ka,"Using existing models"),Ka.forEach(a),dt.forEach(a),Ze=r(e,`

You can simply download a model from the Hub using \`mlagents-load-from-hf\`

	`),v(Q.$$.fragment,e),et=f(e),se=o(e,"P",{});var Qa=s(se);zt=r(Qa,"You need to define two parameters:"),Qa.forEach(a),tt=f(e),q=o(e,"UL",{});var gt=s(q);ne=o(gt,"LI",{});var Aa=s(ne);ke=o(Aa,"CODE",{});var Xa=s(ke);Dt=r(Xa,"--repo-id"),Xa.forEach(a),Gt=r(Aa,": the name of the Hugging Face repo you want to download."),Aa.forEach(a),Vt=f(gt),ie=o(gt,"LI",{});var ka=s(ie);Le=o(ka,"CODE",{});var Za=s(Le);Bt=r(Za,"--local-dir"),Za.forEach(a),Wt=r(ka,": the path to download the model."),ka.forEach(a),gt.forEach(a),at=f(e),P=o(e,"H2",{class:!0});var vt=s(P);C=o(vt,"A",{id:!0,class:!0,href:!0});var el=s(C);Pe=o(el,"SPAN",{});var tl=s(Pe);v(X.$$.fragment,tl),tl.forEach(a),el.forEach(a),Jt=f(vt),Se=o(vt,"SPAN",{});var al=s(Se);Rt=r(al,"Visualize an agent playing"),al.forEach(a),vt.forEach(a),lt=r(e,`

You can easily watch any \`ml-agent\` playing directly in your browser:
`),m=o(e,"OL",{});var U=s(m);Ie=o(U,"LI",{});var ll=s(Ie);Kt=r(ll,"Go to your model repo."),ll.forEach(a),Qt=f(U),Z=o(U,"LI",{});var yt=s(Z);Xt=r(yt,"In the "),xe=o(yt,"CODE",{});var ol=s(xe);Zt=r(ol,"Watch Your Agent Play"),ol.forEach(a),ea=r(yt," section, click on the link."),yt.forEach(a),ta=f(U),He=o(U,"LI",{});var sl=s(He);aa=r(sl,"In the demo, on step 1, choose your model repository, which is the model id."),sl.forEach(a),la=f(U),Me=o(U,"LI",{});var nl=s(Me);oa=r(nl,"In step 2, choose what model you want to replay."),nl.forEach(a),U.forEach(a),ot=f(e),S=o(e,"H2",{class:!0});var wt=s(S);O=o(wt,"A",{id:!0,class:!0,href:!0});var il=s(O);je=o(il,"SPAN",{});var rl=s(je);v(ee.$$.fragment,rl),rl.forEach(a),il.forEach(a),sa=f(wt),Ne=o(wt,"SPAN",{});var hl=s(Ne);na=r(hl,"Sharing your models"),hl.forEach(a),wt.forEach(a),st=r(e,`

You can easily upload your models using \`mlagents-push-to-hf\`:

	`),v(te.$$.fragment,e),nt=f(e),re=o(e,"P",{});var ul=s(re);ia=r(ul,"You need to define four parameters:"),ul.forEach(a),it=f(e),d=o(e,"UL",{});var z=s(d);he=o(z,"LI",{});var La=s(he);qe=o(La,"CODE",{});var pl=s(qe);ra=r(pl,"--run-id"),pl.forEach(a),ha=r(La,": the name of the training run id."),La.forEach(a),ua=f(z),ue=o(z,"LI",{});var Pa=s(ue);Ce=o(Pa,"CODE",{});var fl=s(Ce);pa=r(fl,"--local-dir"),fl.forEach(a),fa=r(Pa,": where the model was saved."),Pa.forEach(a),ca=f(z),Y=o(z,"LI",{});var ze=s(Y);Oe=o(ze,"CODE",{});var cl=s(Oe);ma=r(cl,"--repo-id"),cl.forEach(a),da=r(ze,": the name of the Hugging Face repo you want to create or update. It\u2019s "),Ye=o(ze,"CODE",{});var ml=s(Ye);ga=r(ml,"<your huggingface username>/<the repo name>"),ml.forEach(a),va=r(ze,"."),ze.forEach(a),ya=f(z),pe=o(z,"LI",{});var Sa=s(pe);Fe=o(Sa,"CODE",{});var dl=s(Fe);wa=r(dl,"--commit-message"),dl.forEach(a),_a=r(Sa,"."),Sa.forEach(a),z.forEach(a),rt=f(e),I=o(e,"H2",{class:!0});var _t=s(I);F=o(_t,"A",{id:!0,class:!0,href:!0});var gl=s(F);Te=o(gl,"SPAN",{});var vl=s(Te);v(ae.$$.fragment,vl),vl.forEach(a),gl.forEach(a),$a=f(_t),Ue=o(_t,"SPAN",{});var yl=s(Ue);Ea=r(yl,"Additional resources"),yl.forEach(a),_t.forEach(a),ht=r(e,`

- Hugging Face ML-Agents [documentation](https://github.com/huggingface/ml-agents)
- Official Unity ML-Agents Spaces [demos](https://huggingface.co/unity)`),this.h()},h(){u(E,"name","hf:doc:metadata"),u(E,"content",JSON.stringify(Pl)),u(x,"id","using-mlagents-at-hugging-face"),u(x,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(x,"href","#using-mlagents-at-hugging-face"),u(b,"class","relative group"),u(H,"id","exploring-mlagents-in-the-hub"),u(H,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(H,"href","#exploring-mlagents-in-the-hub"),u(A,"class","relative group"),u(B,"href","https://huggingface.co/models?library=ml-agents"),u(B,"rel","nofollow"),bl(W.src,Ha="../assets/ml-agents/ml-agents-demo.gif")||u(W,"src",Ha),u(W,"alt","ML-Agents demo on Spaces"),u(j,"id","install-the-library"),u(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(j,"href","#install-the-library"),u(k,"class","relative group"),u(N,"id","using-existing-models"),u(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(N,"href","#using-existing-models"),u(L,"class","relative group"),u(C,"id","visualize-an-agent-playing"),u(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(C,"href","#visualize-an-agent-playing"),u(P,"class","relative group"),u(O,"id","sharing-your-models"),u(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(O,"href","#sharing-your-models"),u(S,"class","relative group"),u(F,"id","additional-resources"),u(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(F,"href","#additional-resources"),u(I,"class","relative group")},m(e,n){t(document.head,E),h(e,De,n),h(e,b,n),t(b,x),t(x,fe),y(D,fe,null),t(b,$t),t(b,ce),t(ce,Et),h(e,Ge,n),h(e,G,n),t(G,me),t(me,bt),t(G,At),h(e,Ve,n),h(e,A,n),t(A,H),t(H,de),y(V,de,null),t(A,kt),t(A,ge),t(ge,Lt),h(e,Be,n),h(e,M,n),t(M,Pt),t(M,B),t(B,St),t(M,It),h(e,We,n),h(e,oe,n),t(oe,xt),h(e,Je,n),h(e,c,n),t(c,ve),t(ve,Ht),t(c,Mt),t(c,ye),t(ye,jt),t(c,Nt),t(c,we),t(we,qt),t(c,Ct),t(c,_e),t(_e,Ot),h(e,Re,n),h(e,W,n),h(e,Ke,n),h(e,k,n),t(k,j),t(j,$e),y(J,$e,null),t(k,Yt),t(k,Ee),t(Ee,Ft),h(e,Qe,n),y(R,e,n),h(e,Xe,n),h(e,L,n),t(L,N),t(N,be),y(K,be,null),t(L,Tt),t(L,Ae),t(Ae,Ut),h(e,Ze,n),y(Q,e,n),h(e,et,n),h(e,se,n),t(se,zt),h(e,tt,n),h(e,q,n),t(q,ne),t(ne,ke),t(ke,Dt),t(ne,Gt),t(q,Vt),t(q,ie),t(ie,Le),t(Le,Bt),t(ie,Wt),h(e,at,n),h(e,P,n),t(P,C),t(C,Pe),y(X,Pe,null),t(P,Jt),t(P,Se),t(Se,Rt),h(e,lt,n),h(e,m,n),t(m,Ie),t(Ie,Kt),t(m,Qt),t(m,Z),t(Z,Xt),t(Z,xe),t(xe,Zt),t(Z,ea),t(m,ta),t(m,He),t(He,aa),t(m,la),t(m,Me),t(Me,oa),h(e,ot,n),h(e,S,n),t(S,O),t(O,je),y(ee,je,null),t(S,sa),t(S,Ne),t(Ne,na),h(e,st,n),y(te,e,n),h(e,nt,n),h(e,re,n),t(re,ia),h(e,it,n),h(e,d,n),t(d,he),t(he,qe),t(qe,ra),t(he,ha),t(d,ua),t(d,ue),t(ue,Ce),t(Ce,pa),t(ue,fa),t(d,ca),t(d,Y),t(Y,Oe),t(Oe,ma),t(Y,da),t(Y,Ye),t(Ye,ga),t(Y,va),t(d,ya),t(d,pe),t(pe,Fe),t(Fe,wa),t(pe,_a),h(e,rt,n),h(e,I,n),t(I,F),t(F,Te),y(ae,Te,null),t(I,$a),t(I,Ue),t(Ue,Ea),h(e,ht,n),ut=!0},p:Al,i(e){ut||(w(D.$$.fragment,e),w(V.$$.fragment,e),w(J.$$.fragment,e),w(R.$$.fragment,e),w(K.$$.fragment,e),w(Q.$$.fragment,e),w(X.$$.fragment,e),w(ee.$$.fragment,e),w(te.$$.fragment,e),w(ae.$$.fragment,e),ut=!0)},o(e){_(D.$$.fragment,e),_(V.$$.fragment,e),_(J.$$.fragment,e),_(R.$$.fragment,e),_(K.$$.fragment,e),_(Q.$$.fragment,e),_(X.$$.fragment,e),_(ee.$$.fragment,e),_(te.$$.fragment,e),_(ae.$$.fragment,e),ut=!1},d(e){a(E),e&&a(De),e&&a(b),$(D),e&&a(Ge),e&&a(G),e&&a(Ve),e&&a(A),$(V),e&&a(Be),e&&a(M),e&&a(We),e&&a(oe),e&&a(Je),e&&a(c),e&&a(Re),e&&a(W),e&&a(Ke),e&&a(k),$(J),e&&a(Qe),$(R,e),e&&a(Xe),e&&a(L),$(K),e&&a(Ze),$(Q,e),e&&a(et),e&&a(se),e&&a(tt),e&&a(q),e&&a(at),e&&a(P),$(X),e&&a(lt),e&&a(m),e&&a(ot),e&&a(S),$(ee),e&&a(st),$(te,e),e&&a(nt),e&&a(re),e&&a(it),e&&a(d),e&&a(rt),e&&a(I),$(ae),e&&a(ht)}}}const Pl={local:"using-mlagents-at-hugging-face",sections:[{local:"exploring-mlagents-in-the-hub",title:"Exploring ML-Agents in the Hub"},{local:"install-the-library",title:"Install the library"},{local:"using-existing-models",title:"Using existing models"},{local:"visualize-an-agent-playing",title:"Visualize an agent playing"},{local:"sharing-your-models",title:"Sharing your models"},{local:"additional-resources",title:"Additional resources"}],title:"Using ML-Agents at Hugging Face"};function Sl(xa){return kl(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ml extends wl{constructor(E){super();_l(this,E,Sl,Ll,$l,{})}}export{Ml as default,Pl as metadata};
