import{S as bf,i as wf,s as yf,e as r,k as n,w as Tf,t as l,N as Af,c as a,d as e,m as s,a as o,x as _f,h as d,b as h,G as t,g as rt,y as Ef,L as Pf,q as gf,o as pf,B as mf,v as Rf}from"../chunks/vendor-hf-doc-builder.js";import{I as Df}from"../chunks/IconCopyLink-hf-doc-builder.js";function Lf(ps){let at,na,ot,dt,le,ct,Da,de,ba,sa,nt,wa,ne,ya,Aa,ha,st,Pa,ut,Ra,La,ia,ht,se,u,he,Sa,ka,ie,Ha,Ca,fe,Na,Ia,Mt,$a,xa,ce,Ma,Fa,ue,Ba,Oa,f,v,ve,vt,za,Ua,Te,Wa,qa,_e,Ga,Ja,Ft,Va,Xa,Ee,Za,ja,ge,Ka,Ya,T,pe,Tt,Qa,to,me,eo,ro,De,ao,oo,Bt,lo,no,be,so,ho,we,io,fo,_,ye,_t,co,uo,Ae,vo,To,Pe,_o,Eo,Ot,go,po,Re,mo,Do,Le,bo,wo,E,Se,Et,yo,Ao,ke,Po,Ro,He,Lo,So,zt,ko,Ho,Ce,Co,No,Ne,Io,$o,g,Ie,gt,xo,Mo,$e,Fo,Bo,xe,Oo,zo,Ut,Uo,Wo,Me,qo,Go,Fe,Jo,Vo,p,Be,pt,Xo,Zo,Oe,jo,Ko,ze,Yo,Qo,Wt,tl,el,Ue,rl,al,We,ol,ll,m,qe,mt,dl,nl,Ge,sl,hl,Je,il,fl,qt,cl,ul,Ve,vl,Tl,Xe,_l,El,D,Ze,Dt,gl,pl,je,ml,Dl,Ke,bl,wl,Gt,yl,Al,Ye,Pl,Rl,Qe,Ll,Sl,b,tr,bt,kl,Hl,er,Cl,Nl,rr,Il,$l,Jt,xl,Ml,ar,Fl,Bl,or,Ol,zl,w,lr,wt,Ul,Wl,dr,ql,Gl,nr,Jl,Vl,Vt,Xl,Zl,sr,jl,Kl,hr,Yl,Ql,y,ir,yt,td,ed,fr,rd,ad,cr,od,ld,Xt,dd,nd,ur,sd,hd,vr,id,fd,A,Tr,At,cd,ud,_r,vd,Td,Er,_d,Ed,Zt,gd,pd,gr,md,Dd,pr,bd,wd,P,mr,Pt,yd,Ad,Dr,Pd,Rd,br,Ld,Sd,jt,kd,Hd,wr,Cd,Nd,yr,Id,$d,R,Ar,Rt,xd,Md,Lt,Fd,St,Bd,Od,zd,Pr,Ud,Wd,Kt,qd,Gd,Rr,Jd,Vd,Lr,Xd,Zd,L,Sr,kt,jd,Kd,kr,Yd,Qd,Hr,tn,en,Yt,rn,an,Cr,on,ln,Nr,dn,nn,S,Ir,Ht,sn,hn,$r,fn,cn,xr,un,vn,Qt,Tn,_n,Mr,En,gn,Fr,pn,mn,k,Br,Ct,Dn,bn,Or,wn,yn,zr,An,Pn,te,Rn,Ln,Ur,Sn,kn,Wr,Hn,Cn,H,qr,Nt,Nn,In,Gr,$n,xn,Jr,Mn,Fn,ee,Bn,On,Vr,zn,Un,Xr,Wn,qn,C,Zr,It,Gn,Jn,jr,Vn,Xn,Kr,Zn,jn,re,Kn,Yn,Yr,Qn,ts,Qr,es,rs,N,ta,$t,as,os,ea,ls,ds,ra,ns,ss,ae,hs,is,aa,fs,cs,oa,us,fa,lt,it,la,xt,vs,da,Ts,ca,ft,_s,oe,Es,gs,ua;return ct=new Df({}),xt=new Df({}),{c(){at=r("meta"),na=n(),ot=r("h1"),dt=r("a"),le=r("span"),Tf(ct.$$.fragment),Da=n(),de=r("span"),ba=l("Libraries"),sa=n(),nt=r("p"),wa=l("The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),ne=r("code"),ya=l("huggingface_hub"),Aa=l(" Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),ha=n(),st=r("p"),Pa=l("The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),ut=r("a"),Ra=l("here"),La=l("!"),ia=n(),ht=r("table"),se=r("thead"),u=r("tr"),he=r("th"),Sa=l("Library"),ka=n(),ie=r("th"),Ha=l("Description"),Ca=n(),fe=r("th"),Na=l("Inference API"),Ia=n(),Mt=r("th"),$a=l("Widgets"),xa=n(),ce=r("th"),Ma=l("Download from Hub"),Fa=n(),ue=r("th"),Ba=l("Push to Hub"),Oa=n(),f=r("tbody"),v=r("tr"),ve=r("td"),vt=r("a"),za=l("\u{1F917} Transformers"),Ua=n(),Te=r("td"),Wa=l("State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),qa=n(),_e=r("td"),Ga=l("\u2705"),Ja=n(),Ft=r("td"),Va=l("\u2705"),Xa=n(),Ee=r("td"),Za=l("\u2705"),ja=n(),ge=r("td"),Ka=l("\u2705"),Ya=n(),T=r("tr"),pe=r("td"),Tt=r("a"),Qa=l("\u{1F917} Diffusers"),to=n(),me=r("td"),eo=l("A modular toolbox for inference and training of diffusion models"),ro=n(),De=r("td"),ao=l("\u274C"),oo=n(),Bt=r("td"),lo=l("\u274C"),no=n(),be=r("td"),so=l("\u2705"),ho=n(),we=r("td"),io=l("\u2705"),fo=n(),_=r("tr"),ye=r("td"),_t=r("a"),co=l("Adapter Transformers"),uo=n(),Ae=r("td"),vo=l("Extends \u{1F917}Transformers with Adapters."),To=n(),Pe=r("td"),_o=l("\u274C"),Eo=n(),Ot=r("td"),go=l("\u274C"),po=n(),Re=r("td"),mo=l("\u2705"),Do=n(),Le=r("td"),bo=l("\u2705"),wo=n(),E=r("tr"),Se=r("td"),Et=r("a"),yo=l("AllenNLP"),Ao=n(),ke=r("td"),Po=l("An open-source NLP research library, built on PyTorch."),Ro=n(),He=r("td"),Lo=l("\u2705"),So=n(),zt=r("td"),ko=l("\u2705"),Ho=n(),Ce=r("td"),Co=l("\u2705"),No=n(),Ne=r("td"),Io=l("\u274C"),$o=n(),g=r("tr"),Ie=r("td"),gt=r("a"),xo=l("Asteroid"),Mo=n(),$e=r("td"),Fo=l("Pytorch-based audio source separation toolkit"),Bo=n(),xe=r("td"),Oo=l("\u2705"),zo=n(),Ut=r("td"),Uo=l("\u2705"),Wo=n(),Me=r("td"),qo=l("\u2705"),Go=n(),Fe=r("td"),Jo=l("\u274C"),Vo=n(),p=r("tr"),Be=r("td"),pt=r("a"),Xo=l("docTR"),Zo=n(),Oe=r("td"),jo=l("Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),Ko=n(),ze=r("td"),Yo=l("\u2705"),Qo=n(),Wt=r("td"),tl=l("\u2705"),el=n(),Ue=r("td"),rl=l("\u2705"),al=n(),We=r("td"),ol=l("\u274C"),ll=n(),m=r("tr"),qe=r("td"),mt=r("a"),dl=l("ESPnet"),nl=n(),Ge=r("td"),sl=l("End-to-end speech processing toolkit (e.g. TTS)"),hl=n(),Je=r("td"),il=l("\u2705"),fl=n(),qt=r("td"),cl=l("\u2705"),ul=n(),Ve=r("td"),vl=l("\u2705"),Tl=n(),Xe=r("td"),_l=l("\u274C"),El=n(),D=r("tr"),Ze=r("td"),Dt=r("a"),gl=l("fastai"),pl=n(),je=r("td"),ml=l("Library to train fast and accurate models with state-of-the-art outputs."),Dl=n(),Ke=r("td"),bl=l("\u2705"),wl=n(),Gt=r("td"),yl=l("\u2705"),Al=n(),Ye=r("td"),Pl=l("\u2705"),Rl=n(),Qe=r("td"),Ll=l("\u2705"),Sl=n(),b=r("tr"),tr=r("td"),bt=r("a"),kl=l("Flair"),Hl=n(),er=r("td"),Cl=l("Very simple framework for state-of-the-art NLP."),Nl=n(),rr=r("td"),Il=l("\u2705"),$l=n(),Jt=r("td"),xl=l("\u2705"),Ml=n(),ar=r("td"),Fl=l("\u2705"),Bl=n(),or=r("td"),Ol=l("\u274C"),zl=n(),w=r("tr"),lr=r("td"),wt=r("a"),Ul=l("ML-Agents"),Wl=n(),dr=r("td"),ql=l("Enables games and simulations made with Unity to serve as environments for training intelligent agents."),Gl=n(),nr=r("td"),Jl=l("\u274C"),Vl=n(),Vt=r("td"),Xl=l("\u274C"),Zl=n(),sr=r("td"),jl=l("\u2705"),Kl=n(),hr=r("td"),Yl=l("\u2705"),Ql=n(),y=r("tr"),ir=r("td"),yt=r("a"),td=l("NeMo"),ed=n(),fr=r("td"),rd=l("Conversational AI toolkit built for researchers"),ad=n(),cr=r("td"),od=l("\u2705"),ld=n(),Xt=r("td"),dd=l("\u2705"),nd=n(),ur=r("td"),sd=l("\u2705"),hd=n(),vr=r("td"),id=l("\u274C"),fd=n(),A=r("tr"),Tr=r("td"),At=r("a"),cd=l("Pyannote"),ud=n(),_r=r("td"),vd=l("Neural building blocks for speaker diarization."),Td=n(),Er=r("td"),_d=l("\u274C"),Ed=n(),Zt=r("td"),gd=l("\u274C"),pd=n(),gr=r("td"),md=l("\u2705"),Dd=n(),pr=r("td"),bd=l("\u274C"),wd=n(),P=r("tr"),mr=r("td"),Pt=r("a"),yd=l("PyCTCDecode"),Ad=n(),Dr=r("td"),Pd=l("Language model supported CTC decoding for speech recognition"),Rd=n(),br=r("td"),Ld=l("\u274C"),Sd=n(),jt=r("td"),kd=l("\u274C"),Hd=n(),wr=r("td"),Cd=l("\u2705"),Nd=n(),yr=r("td"),Id=l("\u274C"),$d=n(),R=r("tr"),Ar=r("td"),Rt=r("a"),xd=l("RL-Baselines3-Zoo"),Md=n(),Lt=r("td"),Fd=l("Training framework for Reinforcement Learning, using "),St=r("a"),Bd=l("Stable Baselines3"),Od=l("."),zd=n(),Pr=r("td"),Ud=l("\u274C"),Wd=n(),Kt=r("td"),qd=l("\u2705"),Gd=n(),Rr=r("td"),Jd=l("\u2705"),Vd=n(),Lr=r("td"),Xd=l("\u2705"),Zd=n(),L=r("tr"),Sr=r("td"),kt=r("a"),jd=l("Sentence Transformers"),Kd=n(),kr=r("td"),Yd=l("Compute dense vector representations for sentences, paragraphs, and images."),Qd=n(),Hr=r("td"),tn=l("\u2705"),en=n(),Yt=r("td"),rn=l("\u2705"),an=n(),Cr=r("td"),on=l("\u2705"),ln=n(),Nr=r("td"),dn=l("\u2705"),nn=n(),S=r("tr"),Ir=r("td"),Ht=r("a"),sn=l("spaCy"),hn=n(),$r=r("td"),fn=l("Advanced Natural Language Processing in Python and Cython."),cn=n(),xr=r("td"),un=l("\u2705"),vn=n(),Qt=r("td"),Tn=l("\u2705"),_n=n(),Mr=r("td"),En=l("\u2705"),gn=n(),Fr=r("td"),pn=l("\u2705"),mn=n(),k=r("tr"),Br=r("td"),Ct=r("a"),Dn=l("Speechbrain"),bn=n(),Or=r("td"),wn=l("A PyTorch Powered Speech Toolkit."),yn=n(),zr=r("td"),An=l("\u2705"),Pn=n(),te=r("td"),Rn=l("\u2705"),Ln=n(),Ur=r("td"),Sn=l("\u2705"),kn=n(),Wr=r("td"),Hn=l("\u274C"),Cn=n(),H=r("tr"),qr=r("td"),Nt=r("a"),Nn=l("Stable-Baselines3"),In=n(),Gr=r("td"),$n=l("Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),xn=n(),Jr=r("td"),Mn=l("\u274C"),Fn=n(),ee=r("td"),Bn=l("\u2705"),On=n(),Vr=r("td"),zn=l("\u2705"),Un=n(),Xr=r("td"),Wn=l("\u2705"),qn=n(),C=r("tr"),Zr=r("td"),It=r("a"),Gn=l("TensorFlowTTS"),Jn=n(),jr=r("td"),Vn=l("Real-time state-of-the-art speech synthesis architectures."),Xn=n(),Kr=r("td"),Zn=l("\u274C"),jn=n(),re=r("td"),Kn=l("\u274C"),Yn=n(),Yr=r("td"),Qn=l("\u2705"),ts=n(),Qr=r("td"),es=l("\u274C"),rs=n(),N=r("tr"),ta=r("td"),$t=r("a"),as=l("Timm"),os=n(),ea=r("td"),ls=l("Collection of image models, scripts, pretrained weights, etc."),ds=n(),ra=r("td"),ns=l("\u274C"),ss=n(),ae=r("td"),hs=l("\u274C"),is=n(),aa=r("td"),fs=l("\u2705"),cs=n(),oa=r("td"),us=l("\u274C"),fa=n(),lt=r("h3"),it=r("a"),la=r("span"),Tf(xt.$$.fragment),vs=n(),da=r("span"),Ts=l("How can I add a new library to the Inference API?"),ca=n(),ft=r("p"),_s=l("If you\u2019re interested in adding your library, please reach out to us! Read about it in "),oe=r("a"),Es=l("Adding a Library Guide"),gs=l("."),this.h()},l(i){const I=Af('[data-svelte="svelte-1phssyn"]',document.head);at=a(I,"META",{name:!0,content:!0}),I.forEach(e),na=s(i),ot=a(i,"H1",{class:!0});var va=o(ot);dt=a(va,"A",{id:!0,class:!0,href:!0});var ms=o(dt);le=a(ms,"SPAN",{});var Ds=o(le);_f(ct.$$.fragment,Ds),Ds.forEach(e),ms.forEach(e),Da=s(va),de=a(va,"SPAN",{});var bs=o(de);ba=d(bs,"Libraries"),bs.forEach(e),va.forEach(e),sa=s(i),nt=a(i,"P",{});var Ta=o(nt);wa=d(Ta,"The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),ne=a(Ta,"CODE",{});var ws=o(ne);ya=d(ws,"huggingface_hub"),ws.forEach(e),Aa=d(Ta," Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),Ta.forEach(e),ha=s(i),st=a(i,"P",{});var _a=o(st);Pa=d(_a,"The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),ut=a(_a,"A",{href:!0,rel:!0});var ys=o(ut);Ra=d(ys,"here"),ys.forEach(e),La=d(_a,"!"),_a.forEach(e),ia=s(i),ht=a(i,"TABLE",{});var Ea=o(ht);se=a(Ea,"THEAD",{});var As=o(se);u=a(As,"TR",{});var $=o(u);he=a($,"TH",{});var Ps=o(he);Sa=d(Ps,"Library"),Ps.forEach(e),ka=s($),ie=a($,"TH",{});var Rs=o(ie);Ha=d(Rs,"Description"),Rs.forEach(e),Ca=s($),fe=a($,"TH",{});var Ls=o(fe);Na=d(Ls,"Inference API"),Ls.forEach(e),Ia=s($),Mt=a($,"TH",{align:!0});var Ss=o(Mt);$a=d(Ss,"Widgets"),Ss.forEach(e),xa=s($),ce=a($,"TH",{});var ks=o(ce);Ma=d(ks,"Download from Hub"),ks.forEach(e),Fa=s($),ue=a($,"TH",{});var Hs=o(ue);Ba=d(Hs,"Push to Hub"),Hs.forEach(e),$.forEach(e),As.forEach(e),Oa=s(Ea),f=a(Ea,"TBODY",{});var c=o(f);v=a(c,"TR",{});var x=o(v);ve=a(x,"TD",{});var Cs=o(ve);vt=a(Cs,"A",{href:!0,rel:!0});var Ns=o(vt);za=d(Ns,"\u{1F917} Transformers"),Ns.forEach(e),Cs.forEach(e),Ua=s(x),Te=a(x,"TD",{});var Is=o(Te);Wa=d(Is,"State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),Is.forEach(e),qa=s(x),_e=a(x,"TD",{});var $s=o(_e);Ga=d($s,"\u2705"),$s.forEach(e),Ja=s(x),Ft=a(x,"TD",{align:!0});var xs=o(Ft);Va=d(xs,"\u2705"),xs.forEach(e),Xa=s(x),Ee=a(x,"TD",{});var Ms=o(Ee);Za=d(Ms,"\u2705"),Ms.forEach(e),ja=s(x),ge=a(x,"TD",{});var Fs=o(ge);Ka=d(Fs,"\u2705"),Fs.forEach(e),x.forEach(e),Ya=s(c),T=a(c,"TR",{});var M=o(T);pe=a(M,"TD",{});var Bs=o(pe);Tt=a(Bs,"A",{href:!0,rel:!0});var Os=o(Tt);Qa=d(Os,"\u{1F917} Diffusers"),Os.forEach(e),Bs.forEach(e),to=s(M),me=a(M,"TD",{});var zs=o(me);eo=d(zs,"A modular toolbox for inference and training of diffusion models"),zs.forEach(e),ro=s(M),De=a(M,"TD",{});var Us=o(De);ao=d(Us,"\u274C"),Us.forEach(e),oo=s(M),Bt=a(M,"TD",{align:!0});var Ws=o(Bt);lo=d(Ws,"\u274C"),Ws.forEach(e),no=s(M),be=a(M,"TD",{});var qs=o(be);so=d(qs,"\u2705"),qs.forEach(e),ho=s(M),we=a(M,"TD",{});var Gs=o(we);io=d(Gs,"\u2705"),Gs.forEach(e),M.forEach(e),fo=s(c),_=a(c,"TR",{});var F=o(_);ye=a(F,"TD",{});var Js=o(ye);_t=a(Js,"A",{href:!0,rel:!0});var Vs=o(_t);co=d(Vs,"Adapter Transformers"),Vs.forEach(e),Js.forEach(e),uo=s(F),Ae=a(F,"TD",{});var Xs=o(Ae);vo=d(Xs,"Extends \u{1F917}Transformers with Adapters."),Xs.forEach(e),To=s(F),Pe=a(F,"TD",{});var Zs=o(Pe);_o=d(Zs,"\u274C"),Zs.forEach(e),Eo=s(F),Ot=a(F,"TD",{align:!0});var js=o(Ot);go=d(js,"\u274C"),js.forEach(e),po=s(F),Re=a(F,"TD",{});var Ks=o(Re);mo=d(Ks,"\u2705"),Ks.forEach(e),Do=s(F),Le=a(F,"TD",{});var Ys=o(Le);bo=d(Ys,"\u2705"),Ys.forEach(e),F.forEach(e),wo=s(c),E=a(c,"TR",{});var B=o(E);Se=a(B,"TD",{});var Qs=o(Se);Et=a(Qs,"A",{href:!0,rel:!0});var th=o(Et);yo=d(th,"AllenNLP"),th.forEach(e),Qs.forEach(e),Ao=s(B),ke=a(B,"TD",{});var eh=o(ke);Po=d(eh,"An open-source NLP research library, built on PyTorch."),eh.forEach(e),Ro=s(B),He=a(B,"TD",{});var rh=o(He);Lo=d(rh,"\u2705"),rh.forEach(e),So=s(B),zt=a(B,"TD",{align:!0});var ah=o(zt);ko=d(ah,"\u2705"),ah.forEach(e),Ho=s(B),Ce=a(B,"TD",{});var oh=o(Ce);Co=d(oh,"\u2705"),oh.forEach(e),No=s(B),Ne=a(B,"TD",{});var lh=o(Ne);Io=d(lh,"\u274C"),lh.forEach(e),B.forEach(e),$o=s(c),g=a(c,"TR",{});var O=o(g);Ie=a(O,"TD",{});var dh=o(Ie);gt=a(dh,"A",{href:!0,rel:!0});var nh=o(gt);xo=d(nh,"Asteroid"),nh.forEach(e),dh.forEach(e),Mo=s(O),$e=a(O,"TD",{});var sh=o($e);Fo=d(sh,"Pytorch-based audio source separation toolkit"),sh.forEach(e),Bo=s(O),xe=a(O,"TD",{});var hh=o(xe);Oo=d(hh,"\u2705"),hh.forEach(e),zo=s(O),Ut=a(O,"TD",{align:!0});var ih=o(Ut);Uo=d(ih,"\u2705"),ih.forEach(e),Wo=s(O),Me=a(O,"TD",{});var fh=o(Me);qo=d(fh,"\u2705"),fh.forEach(e),Go=s(O),Fe=a(O,"TD",{});var ch=o(Fe);Jo=d(ch,"\u274C"),ch.forEach(e),O.forEach(e),Vo=s(c),p=a(c,"TR",{});var z=o(p);Be=a(z,"TD",{});var uh=o(Be);pt=a(uh,"A",{href:!0,rel:!0});var vh=o(pt);Xo=d(vh,"docTR"),vh.forEach(e),uh.forEach(e),Zo=s(z),Oe=a(z,"TD",{});var Th=o(Oe);jo=d(Th,"Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),Th.forEach(e),Ko=s(z),ze=a(z,"TD",{});var _h=o(ze);Yo=d(_h,"\u2705"),_h.forEach(e),Qo=s(z),Wt=a(z,"TD",{align:!0});var Eh=o(Wt);tl=d(Eh,"\u2705"),Eh.forEach(e),el=s(z),Ue=a(z,"TD",{});var gh=o(Ue);rl=d(gh,"\u2705"),gh.forEach(e),al=s(z),We=a(z,"TD",{});var ph=o(We);ol=d(ph,"\u274C"),ph.forEach(e),z.forEach(e),ll=s(c),m=a(c,"TR",{});var U=o(m);qe=a(U,"TD",{});var mh=o(qe);mt=a(mh,"A",{href:!0,rel:!0});var Dh=o(mt);dl=d(Dh,"ESPnet"),Dh.forEach(e),mh.forEach(e),nl=s(U),Ge=a(U,"TD",{});var bh=o(Ge);sl=d(bh,"End-to-end speech processing toolkit (e.g. TTS)"),bh.forEach(e),hl=s(U),Je=a(U,"TD",{});var wh=o(Je);il=d(wh,"\u2705"),wh.forEach(e),fl=s(U),qt=a(U,"TD",{align:!0});var yh=o(qt);cl=d(yh,"\u2705"),yh.forEach(e),ul=s(U),Ve=a(U,"TD",{});var Ah=o(Ve);vl=d(Ah,"\u2705"),Ah.forEach(e),Tl=s(U),Xe=a(U,"TD",{});var Ph=o(Xe);_l=d(Ph,"\u274C"),Ph.forEach(e),U.forEach(e),El=s(c),D=a(c,"TR",{});var W=o(D);Ze=a(W,"TD",{});var Rh=o(Ze);Dt=a(Rh,"A",{href:!0,rel:!0});var Lh=o(Dt);gl=d(Lh,"fastai"),Lh.forEach(e),Rh.forEach(e),pl=s(W),je=a(W,"TD",{});var Sh=o(je);ml=d(Sh,"Library to train fast and accurate models with state-of-the-art outputs."),Sh.forEach(e),Dl=s(W),Ke=a(W,"TD",{});var kh=o(Ke);bl=d(kh,"\u2705"),kh.forEach(e),wl=s(W),Gt=a(W,"TD",{align:!0});var Hh=o(Gt);yl=d(Hh,"\u2705"),Hh.forEach(e),Al=s(W),Ye=a(W,"TD",{});var Ch=o(Ye);Pl=d(Ch,"\u2705"),Ch.forEach(e),Rl=s(W),Qe=a(W,"TD",{});var Nh=o(Qe);Ll=d(Nh,"\u2705"),Nh.forEach(e),W.forEach(e),Sl=s(c),b=a(c,"TR",{});var q=o(b);tr=a(q,"TD",{});var Ih=o(tr);bt=a(Ih,"A",{href:!0,rel:!0});var $h=o(bt);kl=d($h,"Flair"),$h.forEach(e),Ih.forEach(e),Hl=s(q),er=a(q,"TD",{});var xh=o(er);Cl=d(xh,"Very simple framework for state-of-the-art NLP."),xh.forEach(e),Nl=s(q),rr=a(q,"TD",{});var Mh=o(rr);Il=d(Mh,"\u2705"),Mh.forEach(e),$l=s(q),Jt=a(q,"TD",{align:!0});var Fh=o(Jt);xl=d(Fh,"\u2705"),Fh.forEach(e),Ml=s(q),ar=a(q,"TD",{});var Bh=o(ar);Fl=d(Bh,"\u2705"),Bh.forEach(e),Bl=s(q),or=a(q,"TD",{});var Oh=o(or);Ol=d(Oh,"\u274C"),Oh.forEach(e),q.forEach(e),zl=s(c),w=a(c,"TR",{});var G=o(w);lr=a(G,"TD",{});var zh=o(lr);wt=a(zh,"A",{href:!0,rel:!0});var Uh=o(wt);Ul=d(Uh,"ML-Agents"),Uh.forEach(e),zh.forEach(e),Wl=s(G),dr=a(G,"TD",{});var Wh=o(dr);ql=d(Wh,"Enables games and simulations made with Unity to serve as environments for training intelligent agents."),Wh.forEach(e),Gl=s(G),nr=a(G,"TD",{});var qh=o(nr);Jl=d(qh,"\u274C"),qh.forEach(e),Vl=s(G),Vt=a(G,"TD",{align:!0});var Gh=o(Vt);Xl=d(Gh,"\u274C"),Gh.forEach(e),Zl=s(G),sr=a(G,"TD",{});var Jh=o(sr);jl=d(Jh,"\u2705"),Jh.forEach(e),Kl=s(G),hr=a(G,"TD",{});var Vh=o(hr);Yl=d(Vh,"\u2705"),Vh.forEach(e),G.forEach(e),Ql=s(c),y=a(c,"TR",{});var J=o(y);ir=a(J,"TD",{});var Xh=o(ir);yt=a(Xh,"A",{href:!0,rel:!0});var Zh=o(yt);td=d(Zh,"NeMo"),Zh.forEach(e),Xh.forEach(e),ed=s(J),fr=a(J,"TD",{});var jh=o(fr);rd=d(jh,"Conversational AI toolkit built for researchers"),jh.forEach(e),ad=s(J),cr=a(J,"TD",{});var Kh=o(cr);od=d(Kh,"\u2705"),Kh.forEach(e),ld=s(J),Xt=a(J,"TD",{align:!0});var Yh=o(Xt);dd=d(Yh,"\u2705"),Yh.forEach(e),nd=s(J),ur=a(J,"TD",{});var Qh=o(ur);sd=d(Qh,"\u2705"),Qh.forEach(e),hd=s(J),vr=a(J,"TD",{});var ti=o(vr);id=d(ti,"\u274C"),ti.forEach(e),J.forEach(e),fd=s(c),A=a(c,"TR",{});var V=o(A);Tr=a(V,"TD",{});var ei=o(Tr);At=a(ei,"A",{href:!0,rel:!0});var ri=o(At);cd=d(ri,"Pyannote"),ri.forEach(e),ei.forEach(e),ud=s(V),_r=a(V,"TD",{});var ai=o(_r);vd=d(ai,"Neural building blocks for speaker diarization."),ai.forEach(e),Td=s(V),Er=a(V,"TD",{});var oi=o(Er);_d=d(oi,"\u274C"),oi.forEach(e),Ed=s(V),Zt=a(V,"TD",{align:!0});var li=o(Zt);gd=d(li,"\u274C"),li.forEach(e),pd=s(V),gr=a(V,"TD",{});var di=o(gr);md=d(di,"\u2705"),di.forEach(e),Dd=s(V),pr=a(V,"TD",{});var ni=o(pr);bd=d(ni,"\u274C"),ni.forEach(e),V.forEach(e),wd=s(c),P=a(c,"TR",{});var X=o(P);mr=a(X,"TD",{});var si=o(mr);Pt=a(si,"A",{href:!0,rel:!0});var hi=o(Pt);yd=d(hi,"PyCTCDecode"),hi.forEach(e),si.forEach(e),Ad=s(X),Dr=a(X,"TD",{});var ii=o(Dr);Pd=d(ii,"Language model supported CTC decoding for speech recognition"),ii.forEach(e),Rd=s(X),br=a(X,"TD",{});var fi=o(br);Ld=d(fi,"\u274C"),fi.forEach(e),Sd=s(X),jt=a(X,"TD",{align:!0});var ci=o(jt);kd=d(ci,"\u274C"),ci.forEach(e),Hd=s(X),wr=a(X,"TD",{});var ui=o(wr);Cd=d(ui,"\u2705"),ui.forEach(e),Nd=s(X),yr=a(X,"TD",{});var vi=o(yr);Id=d(vi,"\u274C"),vi.forEach(e),X.forEach(e),$d=s(c),R=a(c,"TR",{});var Z=o(R);Ar=a(Z,"TD",{});var Ti=o(Ar);Rt=a(Ti,"A",{href:!0,rel:!0});var _i=o(Rt);xd=d(_i,"RL-Baselines3-Zoo"),_i.forEach(e),Ti.forEach(e),Md=s(Z),Lt=a(Z,"TD",{});var ga=o(Lt);Fd=d(ga,"Training framework for Reinforcement Learning, using "),St=a(ga,"A",{href:!0,rel:!0});var Ei=o(St);Bd=d(Ei,"Stable Baselines3"),Ei.forEach(e),Od=d(ga,"."),ga.forEach(e),zd=s(Z),Pr=a(Z,"TD",{});var gi=o(Pr);Ud=d(gi,"\u274C"),gi.forEach(e),Wd=s(Z),Kt=a(Z,"TD",{align:!0});var pi=o(Kt);qd=d(pi,"\u2705"),pi.forEach(e),Gd=s(Z),Rr=a(Z,"TD",{});var mi=o(Rr);Jd=d(mi,"\u2705"),mi.forEach(e),Vd=s(Z),Lr=a(Z,"TD",{});var Di=o(Lr);Xd=d(Di,"\u2705"),Di.forEach(e),Z.forEach(e),Zd=s(c),L=a(c,"TR",{});var j=o(L);Sr=a(j,"TD",{});var bi=o(Sr);kt=a(bi,"A",{href:!0,rel:!0});var wi=o(kt);jd=d(wi,"Sentence Transformers"),wi.forEach(e),bi.forEach(e),Kd=s(j),kr=a(j,"TD",{});var yi=o(kr);Yd=d(yi,"Compute dense vector representations for sentences, paragraphs, and images."),yi.forEach(e),Qd=s(j),Hr=a(j,"TD",{});var Ai=o(Hr);tn=d(Ai,"\u2705"),Ai.forEach(e),en=s(j),Yt=a(j,"TD",{align:!0});var Pi=o(Yt);rn=d(Pi,"\u2705"),Pi.forEach(e),an=s(j),Cr=a(j,"TD",{});var Ri=o(Cr);on=d(Ri,"\u2705"),Ri.forEach(e),ln=s(j),Nr=a(j,"TD",{});var Li=o(Nr);dn=d(Li,"\u2705"),Li.forEach(e),j.forEach(e),nn=s(c),S=a(c,"TR",{});var K=o(S);Ir=a(K,"TD",{});var Si=o(Ir);Ht=a(Si,"A",{href:!0,rel:!0});var ki=o(Ht);sn=d(ki,"spaCy"),ki.forEach(e),Si.forEach(e),hn=s(K),$r=a(K,"TD",{});var Hi=o($r);fn=d(Hi,"Advanced Natural Language Processing in Python and Cython."),Hi.forEach(e),cn=s(K),xr=a(K,"TD",{});var Ci=o(xr);un=d(Ci,"\u2705"),Ci.forEach(e),vn=s(K),Qt=a(K,"TD",{align:!0});var Ni=o(Qt);Tn=d(Ni,"\u2705"),Ni.forEach(e),_n=s(K),Mr=a(K,"TD",{});var Ii=o(Mr);En=d(Ii,"\u2705"),Ii.forEach(e),gn=s(K),Fr=a(K,"TD",{});var $i=o(Fr);pn=d($i,"\u2705"),$i.forEach(e),K.forEach(e),mn=s(c),k=a(c,"TR",{});var Y=o(k);Br=a(Y,"TD",{});var xi=o(Br);Ct=a(xi,"A",{href:!0,rel:!0});var Mi=o(Ct);Dn=d(Mi,"Speechbrain"),Mi.forEach(e),xi.forEach(e),bn=s(Y),Or=a(Y,"TD",{});var Fi=o(Or);wn=d(Fi,"A PyTorch Powered Speech Toolkit."),Fi.forEach(e),yn=s(Y),zr=a(Y,"TD",{});var Bi=o(zr);An=d(Bi,"\u2705"),Bi.forEach(e),Pn=s(Y),te=a(Y,"TD",{align:!0});var Oi=o(te);Rn=d(Oi,"\u2705"),Oi.forEach(e),Ln=s(Y),Ur=a(Y,"TD",{});var zi=o(Ur);Sn=d(zi,"\u2705"),zi.forEach(e),kn=s(Y),Wr=a(Y,"TD",{});var Ui=o(Wr);Hn=d(Ui,"\u274C"),Ui.forEach(e),Y.forEach(e),Cn=s(c),H=a(c,"TR",{});var Q=o(H);qr=a(Q,"TD",{});var Wi=o(qr);Nt=a(Wi,"A",{href:!0,rel:!0});var qi=o(Nt);Nn=d(qi,"Stable-Baselines3"),qi.forEach(e),Wi.forEach(e),In=s(Q),Gr=a(Q,"TD",{});var Gi=o(Gr);$n=d(Gi,"Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Gi.forEach(e),xn=s(Q),Jr=a(Q,"TD",{});var Ji=o(Jr);Mn=d(Ji,"\u274C"),Ji.forEach(e),Fn=s(Q),ee=a(Q,"TD",{align:!0});var Vi=o(ee);Bn=d(Vi,"\u2705"),Vi.forEach(e),On=s(Q),Vr=a(Q,"TD",{});var Xi=o(Vr);zn=d(Xi,"\u2705"),Xi.forEach(e),Un=s(Q),Xr=a(Q,"TD",{});var Zi=o(Xr);Wn=d(Zi,"\u2705"),Zi.forEach(e),Q.forEach(e),qn=s(c),C=a(c,"TR",{});var tt=o(C);Zr=a(tt,"TD",{});var ji=o(Zr);It=a(ji,"A",{href:!0,rel:!0});var Ki=o(It);Gn=d(Ki,"TensorFlowTTS"),Ki.forEach(e),ji.forEach(e),Jn=s(tt),jr=a(tt,"TD",{});var Yi=o(jr);Vn=d(Yi,"Real-time state-of-the-art speech synthesis architectures."),Yi.forEach(e),Xn=s(tt),Kr=a(tt,"TD",{});var Qi=o(Kr);Zn=d(Qi,"\u274C"),Qi.forEach(e),jn=s(tt),re=a(tt,"TD",{align:!0});var tf=o(re);Kn=d(tf,"\u274C"),tf.forEach(e),Yn=s(tt),Yr=a(tt,"TD",{});var ef=o(Yr);Qn=d(ef,"\u2705"),ef.forEach(e),ts=s(tt),Qr=a(tt,"TD",{});var rf=o(Qr);es=d(rf,"\u274C"),rf.forEach(e),tt.forEach(e),rs=s(c),N=a(c,"TR",{});var et=o(N);ta=a(et,"TD",{});var af=o(ta);$t=a(af,"A",{href:!0,rel:!0});var of=o($t);as=d(of,"Timm"),of.forEach(e),af.forEach(e),os=s(et),ea=a(et,"TD",{});var lf=o(ea);ls=d(lf,"Collection of image models, scripts, pretrained weights, etc."),lf.forEach(e),ds=s(et),ra=a(et,"TD",{});var df=o(ra);ns=d(df,"\u274C"),df.forEach(e),ss=s(et),ae=a(et,"TD",{align:!0});var nf=o(ae);hs=d(nf,"\u274C"),nf.forEach(e),is=s(et),aa=a(et,"TD",{});var sf=o(aa);fs=d(sf,"\u2705"),sf.forEach(e),cs=s(et),oa=a(et,"TD",{});var hf=o(oa);us=d(hf,"\u274C"),hf.forEach(e),et.forEach(e),c.forEach(e),Ea.forEach(e),fa=s(i),lt=a(i,"H3",{class:!0});var pa=o(lt);it=a(pa,"A",{id:!0,class:!0,href:!0});var ff=o(it);la=a(ff,"SPAN",{});var cf=o(la);_f(xt.$$.fragment,cf),cf.forEach(e),ff.forEach(e),vs=s(pa),da=a(pa,"SPAN",{});var uf=o(da);Ts=d(uf,"How can I add a new library to the Inference API?"),uf.forEach(e),pa.forEach(e),ca=s(i),ft=a(i,"P",{});var ma=o(ft);_s=d(ma,"If you\u2019re interested in adding your library, please reach out to us! Read about it in "),oe=a(ma,"A",{href:!0});var vf=o(oe);Es=d(vf,"Adding a Library Guide"),vf.forEach(e),gs=d(ma,"."),ma.forEach(e),this.h()},h(){h(at,"name","hf:doc:metadata"),h(at,"content",JSON.stringify(Sf)),h(dt,"id","libraries"),h(dt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(dt,"href","#libraries"),h(ot,"class","relative group"),h(ut,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Libraries.ts"),h(ut,"rel","nofollow"),h(Mt,"align","right"),h(vt,"href","https://github.com/huggingface/transformers"),h(vt,"rel","nofollow"),h(Ft,"align","right"),h(Tt,"href","https://github.com/huggingface/diffusers"),h(Tt,"rel","nofollow"),h(Bt,"align","right"),h(_t,"href","https://github.com/Adapter-Hub/adapter-transformers"),h(_t,"rel","nofollow"),h(Ot,"align","right"),h(Et,"href","https://github.com/allenai/allennlp"),h(Et,"rel","nofollow"),h(zt,"align","right"),h(gt,"href","https://github.com/asteroid-team/asteroid"),h(gt,"rel","nofollow"),h(Ut,"align","right"),h(pt,"href","https://github.com/mindee/doctr"),h(pt,"rel","nofollow"),h(Wt,"align","right"),h(mt,"href","https://github.com/espnet/espnet"),h(mt,"rel","nofollow"),h(qt,"align","right"),h(Dt,"href","https://github.com/fastai/fastai"),h(Dt,"rel","nofollow"),h(Gt,"align","right"),h(bt,"href","https://github.com/flairNLP/flair"),h(bt,"rel","nofollow"),h(Jt,"align","right"),h(wt,"href","https://github.com/huggingface/ml-agents"),h(wt,"rel","nofollow"),h(Vt,"align","right"),h(yt,"href","https://github.com/NVIDIA/NeMo"),h(yt,"rel","nofollow"),h(Xt,"align","right"),h(At,"href","https://github.com/pyannote/pyannote-audio"),h(At,"rel","nofollow"),h(Zt,"align","right"),h(Pt,"href","https://github.com/kensho-technologies/pyctcdecode"),h(Pt,"rel","nofollow"),h(jt,"align","right"),h(Rt,"href","https://github.com/DLR-RM/rl-baselines3-zoo"),h(Rt,"rel","nofollow"),h(St,"href","https://github.com/DLR-RM/stable-baselines3"),h(St,"rel","nofollow"),h(Kt,"align","right"),h(kt,"href","https://github.com/UKPLab/sentence-transformers"),h(kt,"rel","nofollow"),h(Yt,"align","right"),h(Ht,"href","https://github.com/explosion/spaCy"),h(Ht,"rel","nofollow"),h(Qt,"align","right"),h(Ct,"href","https://speechbrain.github.io/"),h(Ct,"rel","nofollow"),h(te,"align","right"),h(Nt,"href","https://github.com/DLR-RM/stable-baselines3"),h(Nt,"rel","nofollow"),h(ee,"align","right"),h(It,"href","https://github.com/TensorSpeech/TensorFlowTTS"),h(It,"rel","nofollow"),h(re,"align","right"),h($t,"href","https://github.com/rwightman/pytorch-image-models"),h($t,"rel","nofollow"),h(ae,"align","right"),h(it,"id","how-can-i-add-a-new-library-to-the-inference-api"),h(it,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(it,"href","#how-can-i-add-a-new-library-to-the-inference-api"),h(lt,"class","relative group"),h(oe,"href","./models-adding-libraries")},m(i,I){t(document.head,at),rt(i,na,I),rt(i,ot,I),t(ot,dt),t(dt,le),Ef(ct,le,null),t(ot,Da),t(ot,de),t(de,ba),rt(i,sa,I),rt(i,nt,I),t(nt,wa),t(nt,ne),t(ne,ya),t(nt,Aa),rt(i,ha,I),rt(i,st,I),t(st,Pa),t(st,ut),t(ut,Ra),t(st,La),rt(i,ia,I),rt(i,ht,I),t(ht,se),t(se,u),t(u,he),t(he,Sa),t(u,ka),t(u,ie),t(ie,Ha),t(u,Ca),t(u,fe),t(fe,Na),t(u,Ia),t(u,Mt),t(Mt,$a),t(u,xa),t(u,ce),t(ce,Ma),t(u,Fa),t(u,ue),t(ue,Ba),t(ht,Oa),t(ht,f),t(f,v),t(v,ve),t(ve,vt),t(vt,za),t(v,Ua),t(v,Te),t(Te,Wa),t(v,qa),t(v,_e),t(_e,Ga),t(v,Ja),t(v,Ft),t(Ft,Va),t(v,Xa),t(v,Ee),t(Ee,Za),t(v,ja),t(v,ge),t(ge,Ka),t(f,Ya),t(f,T),t(T,pe),t(pe,Tt),t(Tt,Qa),t(T,to),t(T,me),t(me,eo),t(T,ro),t(T,De),t(De,ao),t(T,oo),t(T,Bt),t(Bt,lo),t(T,no),t(T,be),t(be,so),t(T,ho),t(T,we),t(we,io),t(f,fo),t(f,_),t(_,ye),t(ye,_t),t(_t,co),t(_,uo),t(_,Ae),t(Ae,vo),t(_,To),t(_,Pe),t(Pe,_o),t(_,Eo),t(_,Ot),t(Ot,go),t(_,po),t(_,Re),t(Re,mo),t(_,Do),t(_,Le),t(Le,bo),t(f,wo),t(f,E),t(E,Se),t(Se,Et),t(Et,yo),t(E,Ao),t(E,ke),t(ke,Po),t(E,Ro),t(E,He),t(He,Lo),t(E,So),t(E,zt),t(zt,ko),t(E,Ho),t(E,Ce),t(Ce,Co),t(E,No),t(E,Ne),t(Ne,Io),t(f,$o),t(f,g),t(g,Ie),t(Ie,gt),t(gt,xo),t(g,Mo),t(g,$e),t($e,Fo),t(g,Bo),t(g,xe),t(xe,Oo),t(g,zo),t(g,Ut),t(Ut,Uo),t(g,Wo),t(g,Me),t(Me,qo),t(g,Go),t(g,Fe),t(Fe,Jo),t(f,Vo),t(f,p),t(p,Be),t(Be,pt),t(pt,Xo),t(p,Zo),t(p,Oe),t(Oe,jo),t(p,Ko),t(p,ze),t(ze,Yo),t(p,Qo),t(p,Wt),t(Wt,tl),t(p,el),t(p,Ue),t(Ue,rl),t(p,al),t(p,We),t(We,ol),t(f,ll),t(f,m),t(m,qe),t(qe,mt),t(mt,dl),t(m,nl),t(m,Ge),t(Ge,sl),t(m,hl),t(m,Je),t(Je,il),t(m,fl),t(m,qt),t(qt,cl),t(m,ul),t(m,Ve),t(Ve,vl),t(m,Tl),t(m,Xe),t(Xe,_l),t(f,El),t(f,D),t(D,Ze),t(Ze,Dt),t(Dt,gl),t(D,pl),t(D,je),t(je,ml),t(D,Dl),t(D,Ke),t(Ke,bl),t(D,wl),t(D,Gt),t(Gt,yl),t(D,Al),t(D,Ye),t(Ye,Pl),t(D,Rl),t(D,Qe),t(Qe,Ll),t(f,Sl),t(f,b),t(b,tr),t(tr,bt),t(bt,kl),t(b,Hl),t(b,er),t(er,Cl),t(b,Nl),t(b,rr),t(rr,Il),t(b,$l),t(b,Jt),t(Jt,xl),t(b,Ml),t(b,ar),t(ar,Fl),t(b,Bl),t(b,or),t(or,Ol),t(f,zl),t(f,w),t(w,lr),t(lr,wt),t(wt,Ul),t(w,Wl),t(w,dr),t(dr,ql),t(w,Gl),t(w,nr),t(nr,Jl),t(w,Vl),t(w,Vt),t(Vt,Xl),t(w,Zl),t(w,sr),t(sr,jl),t(w,Kl),t(w,hr),t(hr,Yl),t(f,Ql),t(f,y),t(y,ir),t(ir,yt),t(yt,td),t(y,ed),t(y,fr),t(fr,rd),t(y,ad),t(y,cr),t(cr,od),t(y,ld),t(y,Xt),t(Xt,dd),t(y,nd),t(y,ur),t(ur,sd),t(y,hd),t(y,vr),t(vr,id),t(f,fd),t(f,A),t(A,Tr),t(Tr,At),t(At,cd),t(A,ud),t(A,_r),t(_r,vd),t(A,Td),t(A,Er),t(Er,_d),t(A,Ed),t(A,Zt),t(Zt,gd),t(A,pd),t(A,gr),t(gr,md),t(A,Dd),t(A,pr),t(pr,bd),t(f,wd),t(f,P),t(P,mr),t(mr,Pt),t(Pt,yd),t(P,Ad),t(P,Dr),t(Dr,Pd),t(P,Rd),t(P,br),t(br,Ld),t(P,Sd),t(P,jt),t(jt,kd),t(P,Hd),t(P,wr),t(wr,Cd),t(P,Nd),t(P,yr),t(yr,Id),t(f,$d),t(f,R),t(R,Ar),t(Ar,Rt),t(Rt,xd),t(R,Md),t(R,Lt),t(Lt,Fd),t(Lt,St),t(St,Bd),t(Lt,Od),t(R,zd),t(R,Pr),t(Pr,Ud),t(R,Wd),t(R,Kt),t(Kt,qd),t(R,Gd),t(R,Rr),t(Rr,Jd),t(R,Vd),t(R,Lr),t(Lr,Xd),t(f,Zd),t(f,L),t(L,Sr),t(Sr,kt),t(kt,jd),t(L,Kd),t(L,kr),t(kr,Yd),t(L,Qd),t(L,Hr),t(Hr,tn),t(L,en),t(L,Yt),t(Yt,rn),t(L,an),t(L,Cr),t(Cr,on),t(L,ln),t(L,Nr),t(Nr,dn),t(f,nn),t(f,S),t(S,Ir),t(Ir,Ht),t(Ht,sn),t(S,hn),t(S,$r),t($r,fn),t(S,cn),t(S,xr),t(xr,un),t(S,vn),t(S,Qt),t(Qt,Tn),t(S,_n),t(S,Mr),t(Mr,En),t(S,gn),t(S,Fr),t(Fr,pn),t(f,mn),t(f,k),t(k,Br),t(Br,Ct),t(Ct,Dn),t(k,bn),t(k,Or),t(Or,wn),t(k,yn),t(k,zr),t(zr,An),t(k,Pn),t(k,te),t(te,Rn),t(k,Ln),t(k,Ur),t(Ur,Sn),t(k,kn),t(k,Wr),t(Wr,Hn),t(f,Cn),t(f,H),t(H,qr),t(qr,Nt),t(Nt,Nn),t(H,In),t(H,Gr),t(Gr,$n),t(H,xn),t(H,Jr),t(Jr,Mn),t(H,Fn),t(H,ee),t(ee,Bn),t(H,On),t(H,Vr),t(Vr,zn),t(H,Un),t(H,Xr),t(Xr,Wn),t(f,qn),t(f,C),t(C,Zr),t(Zr,It),t(It,Gn),t(C,Jn),t(C,jr),t(jr,Vn),t(C,Xn),t(C,Kr),t(Kr,Zn),t(C,jn),t(C,re),t(re,Kn),t(C,Yn),t(C,Yr),t(Yr,Qn),t(C,ts),t(C,Qr),t(Qr,es),t(f,rs),t(f,N),t(N,ta),t(ta,$t),t($t,as),t(N,os),t(N,ea),t(ea,ls),t(N,ds),t(N,ra),t(ra,ns),t(N,ss),t(N,ae),t(ae,hs),t(N,is),t(N,aa),t(aa,fs),t(N,cs),t(N,oa),t(oa,us),rt(i,fa,I),rt(i,lt,I),t(lt,it),t(it,la),Ef(xt,la,null),t(lt,vs),t(lt,da),t(da,Ts),rt(i,ca,I),rt(i,ft,I),t(ft,_s),t(ft,oe),t(oe,Es),t(ft,gs),ua=!0},p:Pf,i(i){ua||(gf(ct.$$.fragment,i),gf(xt.$$.fragment,i),ua=!0)},o(i){pf(ct.$$.fragment,i),pf(xt.$$.fragment,i),ua=!1},d(i){e(at),i&&e(na),i&&e(ot),mf(ct),i&&e(sa),i&&e(nt),i&&e(ha),i&&e(st),i&&e(ia),i&&e(ht),i&&e(fa),i&&e(lt),mf(xt),i&&e(ca),i&&e(ft)}}}const Sf={local:"libraries",sections:[{local:"how-can-i-add-a-new-library-to-the-inference-api",title:"How can I add a new library to the Inference API?"}],title:"Libraries"};function kf(ps){return Rf(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Nf extends bf{constructor(at){super();wf(this,at,kf,Lf,yf,{})}}export{Nf as default,Sf as metadata};
