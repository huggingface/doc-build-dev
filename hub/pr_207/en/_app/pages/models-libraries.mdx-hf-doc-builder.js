import{S as Vi,i as Xi,s as Zi,e as r,k as n,w as Oi,t as l,N as ji,c as a,d as e,m as s,a as o,x as zi,h as d,b as h,G as t,g as tt,y as Ui,L as Ki,q as Wi,o as qi,B as Gi,v as Yi}from"../chunks/vendor-hf-doc-builder.js";import{I as Ji}from"../chunks/IconCopyLink-hf-doc-builder.js";function Qi(Yn){let et,Yr,rt,ot,ee,it,ca,re,ua,Qr,lt,va,ae,Ta,_a,ta,dt,Ea,ft,pa,ga,ea,nt,oe,u,le,ma,Da,de,ba,wa,ne,ya,Aa,It,Pa,La,se,Ra,Sa,he,ka,Ha,f,v,ie,ct,Ca,Na,fe,Ia,$a,ce,Ma,xa,$t,Fa,Ba,ue,Oa,za,ve,Ua,Wa,T,Te,ut,qa,Ga,_e,Ja,Va,Ee,Xa,Za,Mt,ja,Ka,pe,Ya,Qa,ge,to,eo,_,me,vt,ro,ao,De,oo,lo,be,no,so,xt,ho,io,we,fo,co,ye,uo,vo,E,Ae,Tt,To,_o,Pe,Eo,po,Le,go,mo,Ft,Do,bo,Re,wo,yo,Se,Ao,Po,p,ke,_t,Lo,Ro,He,So,ko,Ce,Ho,Co,Bt,No,Io,Ne,$o,Mo,Ie,xo,Fo,g,$e,Et,Bo,Oo,Me,zo,Uo,xe,Wo,qo,Ot,Go,Jo,Fe,Vo,Xo,Be,Zo,jo,m,Oe,pt,Ko,Yo,ze,Qo,tl,Ue,el,rl,zt,al,ol,We,ll,dl,qe,nl,sl,D,Ge,gt,hl,il,Je,fl,cl,Ve,ul,vl,Ut,Tl,_l,Xe,El,pl,Ze,gl,ml,b,je,mt,Dl,bl,Ke,wl,yl,Ye,Al,Pl,Wt,Ll,Rl,Qe,Sl,kl,tr,Hl,Cl,w,er,Dt,Nl,Il,rr,$l,Ml,ar,xl,Fl,qt,Bl,Ol,or,zl,Ul,lr,Wl,ql,y,dr,bt,Gl,Jl,nr,Vl,Xl,sr,Zl,jl,Gt,Kl,Yl,hr,Ql,td,ir,ed,rd,A,fr,wt,ad,od,cr,ld,dd,ur,nd,sd,Jt,hd,id,vr,fd,cd,Tr,ud,vd,P,_r,yt,Td,_d,At,Ed,Pt,pd,gd,md,Er,Dd,bd,Vt,wd,yd,pr,Ad,Pd,gr,Ld,Rd,L,mr,Lt,Sd,kd,Dr,Hd,Cd,br,Nd,Id,Xt,$d,Md,wr,xd,Fd,yr,Bd,Od,R,Ar,Rt,zd,Ud,Pr,Wd,qd,Lr,Gd,Jd,Zt,Vd,Xd,Rr,Zd,jd,Sr,Kd,Yd,S,kr,St,Qd,tn,Hr,en,rn,Cr,an,on,jt,ln,dn,Nr,nn,sn,Ir,hn,fn,k,$r,kt,cn,un,Mr,vn,Tn,xr,_n,En,Kt,pn,gn,Fr,mn,Dn,Br,bn,wn,H,Or,Ht,yn,An,zr,Pn,Ln,Ur,Rn,Sn,Yt,kn,Hn,Wr,Cn,Nn,qr,In,$n,C,Gr,Ct,Mn,xn,Jr,Fn,Bn,Vr,On,zn,Qt,Un,Wn,Xr,qn,Gn,Zr,Jn,ra,at,st,jr,Nt,Vn,Kr,Xn,aa,ht,Zn,te,jn,Kn,oa;return it=new Ji({}),Nt=new Ji({}),{c(){et=r("meta"),Yr=n(),rt=r("h1"),ot=r("a"),ee=r("span"),Oi(it.$$.fragment),ca=n(),re=r("span"),ua=l("Libraries"),Qr=n(),lt=r("p"),va=l("The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),ae=r("code"),Ta=l("huggingface_hub"),_a=l(" Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),ta=n(),dt=r("p"),Ea=l("The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),ft=r("a"),pa=l("here"),ga=l("!"),ea=n(),nt=r("table"),oe=r("thead"),u=r("tr"),le=r("th"),ma=l("Library"),Da=n(),de=r("th"),ba=l("Description"),wa=n(),ne=r("th"),ya=l("Inference API"),Aa=n(),It=r("th"),Pa=l("Widgets"),La=n(),se=r("th"),Ra=l("Download from Hub"),Sa=n(),he=r("th"),ka=l("Push to Hub"),Ha=n(),f=r("tbody"),v=r("tr"),ie=r("td"),ct=r("a"),Ca=l("\u{1F917} Transformers"),Na=n(),fe=r("td"),Ia=l("State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),$a=n(),ce=r("td"),Ma=l("\u2705"),xa=n(),$t=r("td"),Fa=l("\u2705"),Ba=n(),ue=r("td"),Oa=l("\u2705"),za=n(),ve=r("td"),Ua=l("\u2705"),Wa=n(),T=r("tr"),Te=r("td"),ut=r("a"),qa=l("Adapter Transformers"),Ga=n(),_e=r("td"),Ja=l("Extends \u{1F917}Transformers with Adapters."),Va=n(),Ee=r("td"),Xa=l("\u274C"),Za=n(),Mt=r("td"),ja=l("\u274C"),Ka=n(),pe=r("td"),Ya=l("\u2705"),Qa=n(),ge=r("td"),to=l("\u2705"),eo=n(),_=r("tr"),me=r("td"),vt=r("a"),ro=l("AllenNLP"),ao=n(),De=r("td"),oo=l("An open-source NLP research library, built on PyTorch."),lo=n(),be=r("td"),no=l("\u2705"),so=n(),xt=r("td"),ho=l("\u2705"),io=n(),we=r("td"),fo=l("\u2705"),co=n(),ye=r("td"),uo=l("\u274C"),vo=n(),E=r("tr"),Ae=r("td"),Tt=r("a"),To=l("Asteroid"),_o=n(),Pe=r("td"),Eo=l("Pytorch-based audio source separation toolkit"),po=n(),Le=r("td"),go=l("\u2705"),mo=n(),Ft=r("td"),Do=l("\u2705"),bo=n(),Re=r("td"),wo=l("\u2705"),yo=n(),Se=r("td"),Ao=l("\u274C"),Po=n(),p=r("tr"),ke=r("td"),_t=r("a"),Lo=l("docTR"),Ro=n(),He=r("td"),So=l("Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),ko=n(),Ce=r("td"),Ho=l("\u2705"),Co=n(),Bt=r("td"),No=l("\u2705"),Io=n(),Ne=r("td"),$o=l("\u2705"),Mo=n(),Ie=r("td"),xo=l("\u274C"),Fo=n(),g=r("tr"),$e=r("td"),Et=r("a"),Bo=l("ESPnet"),Oo=n(),Me=r("td"),zo=l("End-to-end speech processing toolkit (e.g. TTS)"),Uo=n(),xe=r("td"),Wo=l("\u2705"),qo=n(),Ot=r("td"),Go=l("\u2705"),Jo=n(),Fe=r("td"),Vo=l("\u2705"),Xo=n(),Be=r("td"),Zo=l("\u274C"),jo=n(),m=r("tr"),Oe=r("td"),pt=r("a"),Ko=l("fastai"),Yo=n(),ze=r("td"),Qo=l("Library to train fast and accurate models with state-of-the-art outputs."),tl=n(),Ue=r("td"),el=l("\u2705"),rl=n(),zt=r("td"),al=l("\u2705"),ol=n(),We=r("td"),ll=l("\u2705"),dl=n(),qe=r("td"),nl=l("\u2705"),sl=n(),D=r("tr"),Ge=r("td"),gt=r("a"),hl=l("Flair"),il=n(),Je=r("td"),fl=l("Very simple framework for state-of-the-art NLP."),cl=n(),Ve=r("td"),ul=l("\u2705"),vl=n(),Ut=r("td"),Tl=l("\u2705"),_l=n(),Xe=r("td"),El=l("\u2705"),pl=n(),Ze=r("td"),gl=l("\u274C"),ml=n(),b=r("tr"),je=r("td"),mt=r("a"),Dl=l("ML-Agents"),bl=n(),Ke=r("td"),wl=l("Enables games and simulations made with Unity to serve as environments for training intelligent agents."),yl=n(),Ye=r("td"),Al=l("\u274C"),Pl=n(),Wt=r("td"),Ll=l("\u274C"),Rl=n(),Qe=r("td"),Sl=l("\u2705"),kl=n(),tr=r("td"),Hl=l("\u2705"),Cl=n(),w=r("tr"),er=r("td"),Dt=r("a"),Nl=l("NeMo"),Il=n(),rr=r("td"),$l=l("Conversational AI toolkit built for researchers"),Ml=n(),ar=r("td"),xl=l("\u2705"),Fl=n(),qt=r("td"),Bl=l("\u2705"),Ol=n(),or=r("td"),zl=l("\u2705"),Ul=n(),lr=r("td"),Wl=l("\u274C"),ql=n(),y=r("tr"),dr=r("td"),bt=r("a"),Gl=l("Pyannote"),Jl=n(),nr=r("td"),Vl=l("Neural building blocks for speaker diarization."),Xl=n(),sr=r("td"),Zl=l("\u274C"),jl=n(),Gt=r("td"),Kl=l("\u274C"),Yl=n(),hr=r("td"),Ql=l("\u2705"),td=n(),ir=r("td"),ed=l("\u274C"),rd=n(),A=r("tr"),fr=r("td"),wt=r("a"),ad=l("PyCTCDecode"),od=n(),cr=r("td"),ld=l("Language model supported CTC decoding for speech recognition"),dd=n(),ur=r("td"),nd=l("\u274C"),sd=n(),Jt=r("td"),hd=l("\u274C"),id=n(),vr=r("td"),fd=l("\u2705"),cd=n(),Tr=r("td"),ud=l("\u274C"),vd=n(),P=r("tr"),_r=r("td"),yt=r("a"),Td=l("RL-Baselines3-Zoo"),_d=n(),At=r("td"),Ed=l("Training framework for Reinforcement Learning, using "),Pt=r("a"),pd=l("Stable Baselines3"),gd=l("."),md=n(),Er=r("td"),Dd=l("\u274C"),bd=n(),Vt=r("td"),wd=l("\u2705"),yd=n(),pr=r("td"),Ad=l("\u2705"),Pd=n(),gr=r("td"),Ld=l("\u2705"),Rd=n(),L=r("tr"),mr=r("td"),Lt=r("a"),Sd=l("Sentence Transformers"),kd=n(),Dr=r("td"),Hd=l("Compute dense vector representations for sentences, paragraphs, and images."),Cd=n(),br=r("td"),Nd=l("\u2705"),Id=n(),Xt=r("td"),$d=l("\u2705"),Md=n(),wr=r("td"),xd=l("\u2705"),Fd=n(),yr=r("td"),Bd=l("\u2705"),Od=n(),R=r("tr"),Ar=r("td"),Rt=r("a"),zd=l("spaCy"),Ud=n(),Pr=r("td"),Wd=l("Advanced Natural Language Processing in Python and Cython."),qd=n(),Lr=r("td"),Gd=l("\u2705"),Jd=n(),Zt=r("td"),Vd=l("\u2705"),Xd=n(),Rr=r("td"),Zd=l("\u2705"),jd=n(),Sr=r("td"),Kd=l("\u2705"),Yd=n(),S=r("tr"),kr=r("td"),St=r("a"),Qd=l("Speechbrain"),tn=n(),Hr=r("td"),en=l("A PyTorch Powered Speech Toolkit."),rn=n(),Cr=r("td"),an=l("\u2705"),on=n(),jt=r("td"),ln=l("\u2705"),dn=n(),Nr=r("td"),nn=l("\u2705"),sn=n(),Ir=r("td"),hn=l("\u274C"),fn=n(),k=r("tr"),$r=r("td"),kt=r("a"),cn=l("Stable-Baselines3"),un=n(),Mr=r("td"),vn=l("Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Tn=n(),xr=r("td"),_n=l("\u274C"),En=n(),Kt=r("td"),pn=l("\u2705"),gn=n(),Fr=r("td"),mn=l("\u2705"),Dn=n(),Br=r("td"),bn=l("\u2705"),wn=n(),H=r("tr"),Or=r("td"),Ht=r("a"),yn=l("TensorFlowTTS"),An=n(),zr=r("td"),Pn=l("Real-time state-of-the-art speech synthesis architectures."),Ln=n(),Ur=r("td"),Rn=l("\u274C"),Sn=n(),Yt=r("td"),kn=l("\u274C"),Hn=n(),Wr=r("td"),Cn=l("\u2705"),Nn=n(),qr=r("td"),In=l("\u274C"),$n=n(),C=r("tr"),Gr=r("td"),Ct=r("a"),Mn=l("Timm"),xn=n(),Jr=r("td"),Fn=l("Collection of image models, scripts, pretrained weights, etc."),Bn=n(),Vr=r("td"),On=l("\u274C"),zn=n(),Qt=r("td"),Un=l("\u274C"),Wn=n(),Xr=r("td"),qn=l("\u2705"),Gn=n(),Zr=r("td"),Jn=l("\u274C"),ra=n(),at=r("h3"),st=r("a"),jr=r("span"),Oi(Nt.$$.fragment),Vn=n(),Kr=r("span"),Xn=l("How can I add a new library to the Inference API?"),aa=n(),ht=r("p"),Zn=l("If you\u2019re interested in adding your library, please reach out to us! Read about it in "),te=r("a"),jn=l("Adding a Library Guide"),Kn=l("."),this.h()},l(i){const N=ji('[data-svelte="svelte-1phssyn"]',document.head);et=a(N,"META",{name:!0,content:!0}),N.forEach(e),Yr=s(i),rt=a(i,"H1",{class:!0});var la=o(rt);ot=a(la,"A",{id:!0,class:!0,href:!0});var Qn=o(ot);ee=a(Qn,"SPAN",{});var ts=o(ee);zi(it.$$.fragment,ts),ts.forEach(e),Qn.forEach(e),ca=s(la),re=a(la,"SPAN",{});var es=o(re);ua=d(es,"Libraries"),es.forEach(e),la.forEach(e),Qr=s(i),lt=a(i,"P",{});var da=o(lt);va=d(da,"The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),ae=a(da,"CODE",{});var rs=o(ae);Ta=d(rs,"huggingface_hub"),rs.forEach(e),_a=d(da," Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),da.forEach(e),ta=s(i),dt=a(i,"P",{});var na=o(dt);Ea=d(na,"The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),ft=a(na,"A",{href:!0,rel:!0});var as=o(ft);pa=d(as,"here"),as.forEach(e),ga=d(na,"!"),na.forEach(e),ea=s(i),nt=a(i,"TABLE",{});var sa=o(nt);oe=a(sa,"THEAD",{});var os=o(oe);u=a(os,"TR",{});var I=o(u);le=a(I,"TH",{});var ls=o(le);ma=d(ls,"Library"),ls.forEach(e),Da=s(I),de=a(I,"TH",{});var ds=o(de);ba=d(ds,"Description"),ds.forEach(e),wa=s(I),ne=a(I,"TH",{});var ns=o(ne);ya=d(ns,"Inference API"),ns.forEach(e),Aa=s(I),It=a(I,"TH",{align:!0});var ss=o(It);Pa=d(ss,"Widgets"),ss.forEach(e),La=s(I),se=a(I,"TH",{});var hs=o(se);Ra=d(hs,"Download from Hub"),hs.forEach(e),Sa=s(I),he=a(I,"TH",{});var is=o(he);ka=d(is,"Push to Hub"),is.forEach(e),I.forEach(e),os.forEach(e),Ha=s(sa),f=a(sa,"TBODY",{});var c=o(f);v=a(c,"TR",{});var $=o(v);ie=a($,"TD",{});var fs=o(ie);ct=a(fs,"A",{href:!0,rel:!0});var cs=o(ct);Ca=d(cs,"\u{1F917} Transformers"),cs.forEach(e),fs.forEach(e),Na=s($),fe=a($,"TD",{});var us=o(fe);Ia=d(us,"State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),us.forEach(e),$a=s($),ce=a($,"TD",{});var vs=o(ce);Ma=d(vs,"\u2705"),vs.forEach(e),xa=s($),$t=a($,"TD",{align:!0});var Ts=o($t);Fa=d(Ts,"\u2705"),Ts.forEach(e),Ba=s($),ue=a($,"TD",{});var _s=o(ue);Oa=d(_s,"\u2705"),_s.forEach(e),za=s($),ve=a($,"TD",{});var Es=o(ve);Ua=d(Es,"\u2705"),Es.forEach(e),$.forEach(e),Wa=s(c),T=a(c,"TR",{});var M=o(T);Te=a(M,"TD",{});var ps=o(Te);ut=a(ps,"A",{href:!0,rel:!0});var gs=o(ut);qa=d(gs,"Adapter Transformers"),gs.forEach(e),ps.forEach(e),Ga=s(M),_e=a(M,"TD",{});var ms=o(_e);Ja=d(ms,"Extends \u{1F917}Transformers with Adapters."),ms.forEach(e),Va=s(M),Ee=a(M,"TD",{});var Ds=o(Ee);Xa=d(Ds,"\u274C"),Ds.forEach(e),Za=s(M),Mt=a(M,"TD",{align:!0});var bs=o(Mt);ja=d(bs,"\u274C"),bs.forEach(e),Ka=s(M),pe=a(M,"TD",{});var ws=o(pe);Ya=d(ws,"\u2705"),ws.forEach(e),Qa=s(M),ge=a(M,"TD",{});var ys=o(ge);to=d(ys,"\u2705"),ys.forEach(e),M.forEach(e),eo=s(c),_=a(c,"TR",{});var x=o(_);me=a(x,"TD",{});var As=o(me);vt=a(As,"A",{href:!0,rel:!0});var Ps=o(vt);ro=d(Ps,"AllenNLP"),Ps.forEach(e),As.forEach(e),ao=s(x),De=a(x,"TD",{});var Ls=o(De);oo=d(Ls,"An open-source NLP research library, built on PyTorch."),Ls.forEach(e),lo=s(x),be=a(x,"TD",{});var Rs=o(be);no=d(Rs,"\u2705"),Rs.forEach(e),so=s(x),xt=a(x,"TD",{align:!0});var Ss=o(xt);ho=d(Ss,"\u2705"),Ss.forEach(e),io=s(x),we=a(x,"TD",{});var ks=o(we);fo=d(ks,"\u2705"),ks.forEach(e),co=s(x),ye=a(x,"TD",{});var Hs=o(ye);uo=d(Hs,"\u274C"),Hs.forEach(e),x.forEach(e),vo=s(c),E=a(c,"TR",{});var F=o(E);Ae=a(F,"TD",{});var Cs=o(Ae);Tt=a(Cs,"A",{href:!0,rel:!0});var Ns=o(Tt);To=d(Ns,"Asteroid"),Ns.forEach(e),Cs.forEach(e),_o=s(F),Pe=a(F,"TD",{});var Is=o(Pe);Eo=d(Is,"Pytorch-based audio source separation toolkit"),Is.forEach(e),po=s(F),Le=a(F,"TD",{});var $s=o(Le);go=d($s,"\u2705"),$s.forEach(e),mo=s(F),Ft=a(F,"TD",{align:!0});var Ms=o(Ft);Do=d(Ms,"\u2705"),Ms.forEach(e),bo=s(F),Re=a(F,"TD",{});var xs=o(Re);wo=d(xs,"\u2705"),xs.forEach(e),yo=s(F),Se=a(F,"TD",{});var Fs=o(Se);Ao=d(Fs,"\u274C"),Fs.forEach(e),F.forEach(e),Po=s(c),p=a(c,"TR",{});var B=o(p);ke=a(B,"TD",{});var Bs=o(ke);_t=a(Bs,"A",{href:!0,rel:!0});var Os=o(_t);Lo=d(Os,"docTR"),Os.forEach(e),Bs.forEach(e),Ro=s(B),He=a(B,"TD",{});var zs=o(He);So=d(zs,"Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),zs.forEach(e),ko=s(B),Ce=a(B,"TD",{});var Us=o(Ce);Ho=d(Us,"\u2705"),Us.forEach(e),Co=s(B),Bt=a(B,"TD",{align:!0});var Ws=o(Bt);No=d(Ws,"\u2705"),Ws.forEach(e),Io=s(B),Ne=a(B,"TD",{});var qs=o(Ne);$o=d(qs,"\u2705"),qs.forEach(e),Mo=s(B),Ie=a(B,"TD",{});var Gs=o(Ie);xo=d(Gs,"\u274C"),Gs.forEach(e),B.forEach(e),Fo=s(c),g=a(c,"TR",{});var O=o(g);$e=a(O,"TD",{});var Js=o($e);Et=a(Js,"A",{href:!0,rel:!0});var Vs=o(Et);Bo=d(Vs,"ESPnet"),Vs.forEach(e),Js.forEach(e),Oo=s(O),Me=a(O,"TD",{});var Xs=o(Me);zo=d(Xs,"End-to-end speech processing toolkit (e.g. TTS)"),Xs.forEach(e),Uo=s(O),xe=a(O,"TD",{});var Zs=o(xe);Wo=d(Zs,"\u2705"),Zs.forEach(e),qo=s(O),Ot=a(O,"TD",{align:!0});var js=o(Ot);Go=d(js,"\u2705"),js.forEach(e),Jo=s(O),Fe=a(O,"TD",{});var Ks=o(Fe);Vo=d(Ks,"\u2705"),Ks.forEach(e),Xo=s(O),Be=a(O,"TD",{});var Ys=o(Be);Zo=d(Ys,"\u274C"),Ys.forEach(e),O.forEach(e),jo=s(c),m=a(c,"TR",{});var z=o(m);Oe=a(z,"TD",{});var Qs=o(Oe);pt=a(Qs,"A",{href:!0,rel:!0});var th=o(pt);Ko=d(th,"fastai"),th.forEach(e),Qs.forEach(e),Yo=s(z),ze=a(z,"TD",{});var eh=o(ze);Qo=d(eh,"Library to train fast and accurate models with state-of-the-art outputs."),eh.forEach(e),tl=s(z),Ue=a(z,"TD",{});var rh=o(Ue);el=d(rh,"\u2705"),rh.forEach(e),rl=s(z),zt=a(z,"TD",{align:!0});var ah=o(zt);al=d(ah,"\u2705"),ah.forEach(e),ol=s(z),We=a(z,"TD",{});var oh=o(We);ll=d(oh,"\u2705"),oh.forEach(e),dl=s(z),qe=a(z,"TD",{});var lh=o(qe);nl=d(lh,"\u2705"),lh.forEach(e),z.forEach(e),sl=s(c),D=a(c,"TR",{});var U=o(D);Ge=a(U,"TD",{});var dh=o(Ge);gt=a(dh,"A",{href:!0,rel:!0});var nh=o(gt);hl=d(nh,"Flair"),nh.forEach(e),dh.forEach(e),il=s(U),Je=a(U,"TD",{});var sh=o(Je);fl=d(sh,"Very simple framework for state-of-the-art NLP."),sh.forEach(e),cl=s(U),Ve=a(U,"TD",{});var hh=o(Ve);ul=d(hh,"\u2705"),hh.forEach(e),vl=s(U),Ut=a(U,"TD",{align:!0});var ih=o(Ut);Tl=d(ih,"\u2705"),ih.forEach(e),_l=s(U),Xe=a(U,"TD",{});var fh=o(Xe);El=d(fh,"\u2705"),fh.forEach(e),pl=s(U),Ze=a(U,"TD",{});var ch=o(Ze);gl=d(ch,"\u274C"),ch.forEach(e),U.forEach(e),ml=s(c),b=a(c,"TR",{});var W=o(b);je=a(W,"TD",{});var uh=o(je);mt=a(uh,"A",{href:!0,rel:!0});var vh=o(mt);Dl=d(vh,"ML-Agents"),vh.forEach(e),uh.forEach(e),bl=s(W),Ke=a(W,"TD",{});var Th=o(Ke);wl=d(Th,"Enables games and simulations made with Unity to serve as environments for training intelligent agents."),Th.forEach(e),yl=s(W),Ye=a(W,"TD",{});var _h=o(Ye);Al=d(_h,"\u274C"),_h.forEach(e),Pl=s(W),Wt=a(W,"TD",{align:!0});var Eh=o(Wt);Ll=d(Eh,"\u274C"),Eh.forEach(e),Rl=s(W),Qe=a(W,"TD",{});var ph=o(Qe);Sl=d(ph,"\u2705"),ph.forEach(e),kl=s(W),tr=a(W,"TD",{});var gh=o(tr);Hl=d(gh,"\u2705"),gh.forEach(e),W.forEach(e),Cl=s(c),w=a(c,"TR",{});var q=o(w);er=a(q,"TD",{});var mh=o(er);Dt=a(mh,"A",{href:!0,rel:!0});var Dh=o(Dt);Nl=d(Dh,"NeMo"),Dh.forEach(e),mh.forEach(e),Il=s(q),rr=a(q,"TD",{});var bh=o(rr);$l=d(bh,"Conversational AI toolkit built for researchers"),bh.forEach(e),Ml=s(q),ar=a(q,"TD",{});var wh=o(ar);xl=d(wh,"\u2705"),wh.forEach(e),Fl=s(q),qt=a(q,"TD",{align:!0});var yh=o(qt);Bl=d(yh,"\u2705"),yh.forEach(e),Ol=s(q),or=a(q,"TD",{});var Ah=o(or);zl=d(Ah,"\u2705"),Ah.forEach(e),Ul=s(q),lr=a(q,"TD",{});var Ph=o(lr);Wl=d(Ph,"\u274C"),Ph.forEach(e),q.forEach(e),ql=s(c),y=a(c,"TR",{});var G=o(y);dr=a(G,"TD",{});var Lh=o(dr);bt=a(Lh,"A",{href:!0,rel:!0});var Rh=o(bt);Gl=d(Rh,"Pyannote"),Rh.forEach(e),Lh.forEach(e),Jl=s(G),nr=a(G,"TD",{});var Sh=o(nr);Vl=d(Sh,"Neural building blocks for speaker diarization."),Sh.forEach(e),Xl=s(G),sr=a(G,"TD",{});var kh=o(sr);Zl=d(kh,"\u274C"),kh.forEach(e),jl=s(G),Gt=a(G,"TD",{align:!0});var Hh=o(Gt);Kl=d(Hh,"\u274C"),Hh.forEach(e),Yl=s(G),hr=a(G,"TD",{});var Ch=o(hr);Ql=d(Ch,"\u2705"),Ch.forEach(e),td=s(G),ir=a(G,"TD",{});var Nh=o(ir);ed=d(Nh,"\u274C"),Nh.forEach(e),G.forEach(e),rd=s(c),A=a(c,"TR",{});var J=o(A);fr=a(J,"TD",{});var Ih=o(fr);wt=a(Ih,"A",{href:!0,rel:!0});var $h=o(wt);ad=d($h,"PyCTCDecode"),$h.forEach(e),Ih.forEach(e),od=s(J),cr=a(J,"TD",{});var Mh=o(cr);ld=d(Mh,"Language model supported CTC decoding for speech recognition"),Mh.forEach(e),dd=s(J),ur=a(J,"TD",{});var xh=o(ur);nd=d(xh,"\u274C"),xh.forEach(e),sd=s(J),Jt=a(J,"TD",{align:!0});var Fh=o(Jt);hd=d(Fh,"\u274C"),Fh.forEach(e),id=s(J),vr=a(J,"TD",{});var Bh=o(vr);fd=d(Bh,"\u2705"),Bh.forEach(e),cd=s(J),Tr=a(J,"TD",{});var Oh=o(Tr);ud=d(Oh,"\u274C"),Oh.forEach(e),J.forEach(e),vd=s(c),P=a(c,"TR",{});var V=o(P);_r=a(V,"TD",{});var zh=o(_r);yt=a(zh,"A",{href:!0,rel:!0});var Uh=o(yt);Td=d(Uh,"RL-Baselines3-Zoo"),Uh.forEach(e),zh.forEach(e),_d=s(V),At=a(V,"TD",{});var ha=o(At);Ed=d(ha,"Training framework for Reinforcement Learning, using "),Pt=a(ha,"A",{href:!0,rel:!0});var Wh=o(Pt);pd=d(Wh,"Stable Baselines3"),Wh.forEach(e),gd=d(ha,"."),ha.forEach(e),md=s(V),Er=a(V,"TD",{});var qh=o(Er);Dd=d(qh,"\u274C"),qh.forEach(e),bd=s(V),Vt=a(V,"TD",{align:!0});var Gh=o(Vt);wd=d(Gh,"\u2705"),Gh.forEach(e),yd=s(V),pr=a(V,"TD",{});var Jh=o(pr);Ad=d(Jh,"\u2705"),Jh.forEach(e),Pd=s(V),gr=a(V,"TD",{});var Vh=o(gr);Ld=d(Vh,"\u2705"),Vh.forEach(e),V.forEach(e),Rd=s(c),L=a(c,"TR",{});var X=o(L);mr=a(X,"TD",{});var Xh=o(mr);Lt=a(Xh,"A",{href:!0,rel:!0});var Zh=o(Lt);Sd=d(Zh,"Sentence Transformers"),Zh.forEach(e),Xh.forEach(e),kd=s(X),Dr=a(X,"TD",{});var jh=o(Dr);Hd=d(jh,"Compute dense vector representations for sentences, paragraphs, and images."),jh.forEach(e),Cd=s(X),br=a(X,"TD",{});var Kh=o(br);Nd=d(Kh,"\u2705"),Kh.forEach(e),Id=s(X),Xt=a(X,"TD",{align:!0});var Yh=o(Xt);$d=d(Yh,"\u2705"),Yh.forEach(e),Md=s(X),wr=a(X,"TD",{});var Qh=o(wr);xd=d(Qh,"\u2705"),Qh.forEach(e),Fd=s(X),yr=a(X,"TD",{});var ti=o(yr);Bd=d(ti,"\u2705"),ti.forEach(e),X.forEach(e),Od=s(c),R=a(c,"TR",{});var Z=o(R);Ar=a(Z,"TD",{});var ei=o(Ar);Rt=a(ei,"A",{href:!0,rel:!0});var ri=o(Rt);zd=d(ri,"spaCy"),ri.forEach(e),ei.forEach(e),Ud=s(Z),Pr=a(Z,"TD",{});var ai=o(Pr);Wd=d(ai,"Advanced Natural Language Processing in Python and Cython."),ai.forEach(e),qd=s(Z),Lr=a(Z,"TD",{});var oi=o(Lr);Gd=d(oi,"\u2705"),oi.forEach(e),Jd=s(Z),Zt=a(Z,"TD",{align:!0});var li=o(Zt);Vd=d(li,"\u2705"),li.forEach(e),Xd=s(Z),Rr=a(Z,"TD",{});var di=o(Rr);Zd=d(di,"\u2705"),di.forEach(e),jd=s(Z),Sr=a(Z,"TD",{});var ni=o(Sr);Kd=d(ni,"\u2705"),ni.forEach(e),Z.forEach(e),Yd=s(c),S=a(c,"TR",{});var j=o(S);kr=a(j,"TD",{});var si=o(kr);St=a(si,"A",{href:!0,rel:!0});var hi=o(St);Qd=d(hi,"Speechbrain"),hi.forEach(e),si.forEach(e),tn=s(j),Hr=a(j,"TD",{});var ii=o(Hr);en=d(ii,"A PyTorch Powered Speech Toolkit."),ii.forEach(e),rn=s(j),Cr=a(j,"TD",{});var fi=o(Cr);an=d(fi,"\u2705"),fi.forEach(e),on=s(j),jt=a(j,"TD",{align:!0});var ci=o(jt);ln=d(ci,"\u2705"),ci.forEach(e),dn=s(j),Nr=a(j,"TD",{});var ui=o(Nr);nn=d(ui,"\u2705"),ui.forEach(e),sn=s(j),Ir=a(j,"TD",{});var vi=o(Ir);hn=d(vi,"\u274C"),vi.forEach(e),j.forEach(e),fn=s(c),k=a(c,"TR",{});var K=o(k);$r=a(K,"TD",{});var Ti=o($r);kt=a(Ti,"A",{href:!0,rel:!0});var _i=o(kt);cn=d(_i,"Stable-Baselines3"),_i.forEach(e),Ti.forEach(e),un=s(K),Mr=a(K,"TD",{});var Ei=o(Mr);vn=d(Ei,"Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Ei.forEach(e),Tn=s(K),xr=a(K,"TD",{});var pi=o(xr);_n=d(pi,"\u274C"),pi.forEach(e),En=s(K),Kt=a(K,"TD",{align:!0});var gi=o(Kt);pn=d(gi,"\u2705"),gi.forEach(e),gn=s(K),Fr=a(K,"TD",{});var mi=o(Fr);mn=d(mi,"\u2705"),mi.forEach(e),Dn=s(K),Br=a(K,"TD",{});var Di=o(Br);bn=d(Di,"\u2705"),Di.forEach(e),K.forEach(e),wn=s(c),H=a(c,"TR",{});var Y=o(H);Or=a(Y,"TD",{});var bi=o(Or);Ht=a(bi,"A",{href:!0,rel:!0});var wi=o(Ht);yn=d(wi,"TensorFlowTTS"),wi.forEach(e),bi.forEach(e),An=s(Y),zr=a(Y,"TD",{});var yi=o(zr);Pn=d(yi,"Real-time state-of-the-art speech synthesis architectures."),yi.forEach(e),Ln=s(Y),Ur=a(Y,"TD",{});var Ai=o(Ur);Rn=d(Ai,"\u274C"),Ai.forEach(e),Sn=s(Y),Yt=a(Y,"TD",{align:!0});var Pi=o(Yt);kn=d(Pi,"\u274C"),Pi.forEach(e),Hn=s(Y),Wr=a(Y,"TD",{});var Li=o(Wr);Cn=d(Li,"\u2705"),Li.forEach(e),Nn=s(Y),qr=a(Y,"TD",{});var Ri=o(qr);In=d(Ri,"\u274C"),Ri.forEach(e),Y.forEach(e),$n=s(c),C=a(c,"TR",{});var Q=o(C);Gr=a(Q,"TD",{});var Si=o(Gr);Ct=a(Si,"A",{href:!0,rel:!0});var ki=o(Ct);Mn=d(ki,"Timm"),ki.forEach(e),Si.forEach(e),xn=s(Q),Jr=a(Q,"TD",{});var Hi=o(Jr);Fn=d(Hi,"Collection of image models, scripts, pretrained weights, etc."),Hi.forEach(e),Bn=s(Q),Vr=a(Q,"TD",{});var Ci=o(Vr);On=d(Ci,"\u274C"),Ci.forEach(e),zn=s(Q),Qt=a(Q,"TD",{align:!0});var Ni=o(Qt);Un=d(Ni,"\u274C"),Ni.forEach(e),Wn=s(Q),Xr=a(Q,"TD",{});var Ii=o(Xr);qn=d(Ii,"\u2705"),Ii.forEach(e),Gn=s(Q),Zr=a(Q,"TD",{});var $i=o(Zr);Jn=d($i,"\u274C"),$i.forEach(e),Q.forEach(e),c.forEach(e),sa.forEach(e),ra=s(i),at=a(i,"H3",{class:!0});var ia=o(at);st=a(ia,"A",{id:!0,class:!0,href:!0});var Mi=o(st);jr=a(Mi,"SPAN",{});var xi=o(jr);zi(Nt.$$.fragment,xi),xi.forEach(e),Mi.forEach(e),Vn=s(ia),Kr=a(ia,"SPAN",{});var Fi=o(Kr);Xn=d(Fi,"How can I add a new library to the Inference API?"),Fi.forEach(e),ia.forEach(e),aa=s(i),ht=a(i,"P",{});var fa=o(ht);Zn=d(fa,"If you\u2019re interested in adding your library, please reach out to us! Read about it in "),te=a(fa,"A",{href:!0});var Bi=o(te);jn=d(Bi,"Adding a Library Guide"),Bi.forEach(e),Kn=d(fa,"."),fa.forEach(e),this.h()},h(){h(et,"name","hf:doc:metadata"),h(et,"content",JSON.stringify(tf)),h(ot,"id","libraries"),h(ot,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(ot,"href","#libraries"),h(rt,"class","relative group"),h(ft,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Libraries.ts"),h(ft,"rel","nofollow"),h(It,"align","right"),h(ct,"href","https://github.com/huggingface/transformers"),h(ct,"rel","nofollow"),h($t,"align","right"),h(ut,"href","https://github.com/Adapter-Hub/adapter-transformers"),h(ut,"rel","nofollow"),h(Mt,"align","right"),h(vt,"href","https://github.com/allenai/allennlp"),h(vt,"rel","nofollow"),h(xt,"align","right"),h(Tt,"href","https://github.com/asteroid-team/asteroid"),h(Tt,"rel","nofollow"),h(Ft,"align","right"),h(_t,"href","https://github.com/mindee/doctr"),h(_t,"rel","nofollow"),h(Bt,"align","right"),h(Et,"href","https://github.com/espnet/espnet"),h(Et,"rel","nofollow"),h(Ot,"align","right"),h(pt,"href","https://github.com/fastai/fastai"),h(pt,"rel","nofollow"),h(zt,"align","right"),h(gt,"href","https://github.com/flairNLP/flair"),h(gt,"rel","nofollow"),h(Ut,"align","right"),h(mt,"href","https://github.com/huggingface/ml-agents"),h(mt,"rel","nofollow"),h(Wt,"align","right"),h(Dt,"href","https://github.com/NVIDIA/NeMo"),h(Dt,"rel","nofollow"),h(qt,"align","right"),h(bt,"href","https://github.com/pyannote/pyannote-audio"),h(bt,"rel","nofollow"),h(Gt,"align","right"),h(wt,"href","https://github.com/kensho-technologies/pyctcdecode"),h(wt,"rel","nofollow"),h(Jt,"align","right"),h(yt,"href","https://github.com/DLR-RM/rl-baselines3-zoo"),h(yt,"rel","nofollow"),h(Pt,"href","https://github.com/DLR-RM/stable-baselines3"),h(Pt,"rel","nofollow"),h(Vt,"align","right"),h(Lt,"href","https://github.com/UKPLab/sentence-transformers"),h(Lt,"rel","nofollow"),h(Xt,"align","right"),h(Rt,"href","https://github.com/explosion/spaCy"),h(Rt,"rel","nofollow"),h(Zt,"align","right"),h(St,"href","https://speechbrain.github.io/"),h(St,"rel","nofollow"),h(jt,"align","right"),h(kt,"href","https://github.com/DLR-RM/stable-baselines3"),h(kt,"rel","nofollow"),h(Kt,"align","right"),h(Ht,"href","https://github.com/TensorSpeech/TensorFlowTTS"),h(Ht,"rel","nofollow"),h(Yt,"align","right"),h(Ct,"href","https://github.com/rwightman/pytorch-image-models"),h(Ct,"rel","nofollow"),h(Qt,"align","right"),h(st,"id","how-can-i-add-a-new-library-to-the-inference-api"),h(st,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(st,"href","#how-can-i-add-a-new-library-to-the-inference-api"),h(at,"class","relative group"),h(te,"href","./models-adding-libraries")},m(i,N){t(document.head,et),tt(i,Yr,N),tt(i,rt,N),t(rt,ot),t(ot,ee),Ui(it,ee,null),t(rt,ca),t(rt,re),t(re,ua),tt(i,Qr,N),tt(i,lt,N),t(lt,va),t(lt,ae),t(ae,Ta),t(lt,_a),tt(i,ta,N),tt(i,dt,N),t(dt,Ea),t(dt,ft),t(ft,pa),t(dt,ga),tt(i,ea,N),tt(i,nt,N),t(nt,oe),t(oe,u),t(u,le),t(le,ma),t(u,Da),t(u,de),t(de,ba),t(u,wa),t(u,ne),t(ne,ya),t(u,Aa),t(u,It),t(It,Pa),t(u,La),t(u,se),t(se,Ra),t(u,Sa),t(u,he),t(he,ka),t(nt,Ha),t(nt,f),t(f,v),t(v,ie),t(ie,ct),t(ct,Ca),t(v,Na),t(v,fe),t(fe,Ia),t(v,$a),t(v,ce),t(ce,Ma),t(v,xa),t(v,$t),t($t,Fa),t(v,Ba),t(v,ue),t(ue,Oa),t(v,za),t(v,ve),t(ve,Ua),t(f,Wa),t(f,T),t(T,Te),t(Te,ut),t(ut,qa),t(T,Ga),t(T,_e),t(_e,Ja),t(T,Va),t(T,Ee),t(Ee,Xa),t(T,Za),t(T,Mt),t(Mt,ja),t(T,Ka),t(T,pe),t(pe,Ya),t(T,Qa),t(T,ge),t(ge,to),t(f,eo),t(f,_),t(_,me),t(me,vt),t(vt,ro),t(_,ao),t(_,De),t(De,oo),t(_,lo),t(_,be),t(be,no),t(_,so),t(_,xt),t(xt,ho),t(_,io),t(_,we),t(we,fo),t(_,co),t(_,ye),t(ye,uo),t(f,vo),t(f,E),t(E,Ae),t(Ae,Tt),t(Tt,To),t(E,_o),t(E,Pe),t(Pe,Eo),t(E,po),t(E,Le),t(Le,go),t(E,mo),t(E,Ft),t(Ft,Do),t(E,bo),t(E,Re),t(Re,wo),t(E,yo),t(E,Se),t(Se,Ao),t(f,Po),t(f,p),t(p,ke),t(ke,_t),t(_t,Lo),t(p,Ro),t(p,He),t(He,So),t(p,ko),t(p,Ce),t(Ce,Ho),t(p,Co),t(p,Bt),t(Bt,No),t(p,Io),t(p,Ne),t(Ne,$o),t(p,Mo),t(p,Ie),t(Ie,xo),t(f,Fo),t(f,g),t(g,$e),t($e,Et),t(Et,Bo),t(g,Oo),t(g,Me),t(Me,zo),t(g,Uo),t(g,xe),t(xe,Wo),t(g,qo),t(g,Ot),t(Ot,Go),t(g,Jo),t(g,Fe),t(Fe,Vo),t(g,Xo),t(g,Be),t(Be,Zo),t(f,jo),t(f,m),t(m,Oe),t(Oe,pt),t(pt,Ko),t(m,Yo),t(m,ze),t(ze,Qo),t(m,tl),t(m,Ue),t(Ue,el),t(m,rl),t(m,zt),t(zt,al),t(m,ol),t(m,We),t(We,ll),t(m,dl),t(m,qe),t(qe,nl),t(f,sl),t(f,D),t(D,Ge),t(Ge,gt),t(gt,hl),t(D,il),t(D,Je),t(Je,fl),t(D,cl),t(D,Ve),t(Ve,ul),t(D,vl),t(D,Ut),t(Ut,Tl),t(D,_l),t(D,Xe),t(Xe,El),t(D,pl),t(D,Ze),t(Ze,gl),t(f,ml),t(f,b),t(b,je),t(je,mt),t(mt,Dl),t(b,bl),t(b,Ke),t(Ke,wl),t(b,yl),t(b,Ye),t(Ye,Al),t(b,Pl),t(b,Wt),t(Wt,Ll),t(b,Rl),t(b,Qe),t(Qe,Sl),t(b,kl),t(b,tr),t(tr,Hl),t(f,Cl),t(f,w),t(w,er),t(er,Dt),t(Dt,Nl),t(w,Il),t(w,rr),t(rr,$l),t(w,Ml),t(w,ar),t(ar,xl),t(w,Fl),t(w,qt),t(qt,Bl),t(w,Ol),t(w,or),t(or,zl),t(w,Ul),t(w,lr),t(lr,Wl),t(f,ql),t(f,y),t(y,dr),t(dr,bt),t(bt,Gl),t(y,Jl),t(y,nr),t(nr,Vl),t(y,Xl),t(y,sr),t(sr,Zl),t(y,jl),t(y,Gt),t(Gt,Kl),t(y,Yl),t(y,hr),t(hr,Ql),t(y,td),t(y,ir),t(ir,ed),t(f,rd),t(f,A),t(A,fr),t(fr,wt),t(wt,ad),t(A,od),t(A,cr),t(cr,ld),t(A,dd),t(A,ur),t(ur,nd),t(A,sd),t(A,Jt),t(Jt,hd),t(A,id),t(A,vr),t(vr,fd),t(A,cd),t(A,Tr),t(Tr,ud),t(f,vd),t(f,P),t(P,_r),t(_r,yt),t(yt,Td),t(P,_d),t(P,At),t(At,Ed),t(At,Pt),t(Pt,pd),t(At,gd),t(P,md),t(P,Er),t(Er,Dd),t(P,bd),t(P,Vt),t(Vt,wd),t(P,yd),t(P,pr),t(pr,Ad),t(P,Pd),t(P,gr),t(gr,Ld),t(f,Rd),t(f,L),t(L,mr),t(mr,Lt),t(Lt,Sd),t(L,kd),t(L,Dr),t(Dr,Hd),t(L,Cd),t(L,br),t(br,Nd),t(L,Id),t(L,Xt),t(Xt,$d),t(L,Md),t(L,wr),t(wr,xd),t(L,Fd),t(L,yr),t(yr,Bd),t(f,Od),t(f,R),t(R,Ar),t(Ar,Rt),t(Rt,zd),t(R,Ud),t(R,Pr),t(Pr,Wd),t(R,qd),t(R,Lr),t(Lr,Gd),t(R,Jd),t(R,Zt),t(Zt,Vd),t(R,Xd),t(R,Rr),t(Rr,Zd),t(R,jd),t(R,Sr),t(Sr,Kd),t(f,Yd),t(f,S),t(S,kr),t(kr,St),t(St,Qd),t(S,tn),t(S,Hr),t(Hr,en),t(S,rn),t(S,Cr),t(Cr,an),t(S,on),t(S,jt),t(jt,ln),t(S,dn),t(S,Nr),t(Nr,nn),t(S,sn),t(S,Ir),t(Ir,hn),t(f,fn),t(f,k),t(k,$r),t($r,kt),t(kt,cn),t(k,un),t(k,Mr),t(Mr,vn),t(k,Tn),t(k,xr),t(xr,_n),t(k,En),t(k,Kt),t(Kt,pn),t(k,gn),t(k,Fr),t(Fr,mn),t(k,Dn),t(k,Br),t(Br,bn),t(f,wn),t(f,H),t(H,Or),t(Or,Ht),t(Ht,yn),t(H,An),t(H,zr),t(zr,Pn),t(H,Ln),t(H,Ur),t(Ur,Rn),t(H,Sn),t(H,Yt),t(Yt,kn),t(H,Hn),t(H,Wr),t(Wr,Cn),t(H,Nn),t(H,qr),t(qr,In),t(f,$n),t(f,C),t(C,Gr),t(Gr,Ct),t(Ct,Mn),t(C,xn),t(C,Jr),t(Jr,Fn),t(C,Bn),t(C,Vr),t(Vr,On),t(C,zn),t(C,Qt),t(Qt,Un),t(C,Wn),t(C,Xr),t(Xr,qn),t(C,Gn),t(C,Zr),t(Zr,Jn),tt(i,ra,N),tt(i,at,N),t(at,st),t(st,jr),Ui(Nt,jr,null),t(at,Vn),t(at,Kr),t(Kr,Xn),tt(i,aa,N),tt(i,ht,N),t(ht,Zn),t(ht,te),t(te,jn),t(ht,Kn),oa=!0},p:Ki,i(i){oa||(Wi(it.$$.fragment,i),Wi(Nt.$$.fragment,i),oa=!0)},o(i){qi(it.$$.fragment,i),qi(Nt.$$.fragment,i),oa=!1},d(i){e(et),i&&e(Yr),i&&e(rt),Gi(it),i&&e(Qr),i&&e(lt),i&&e(ta),i&&e(dt),i&&e(ea),i&&e(nt),i&&e(ra),i&&e(at),Gi(Nt),i&&e(aa),i&&e(ht)}}}const tf={local:"libraries",sections:[{local:"how-can-i-add-a-new-library-to-the-inference-api",title:"How can I add a new library to the Inference API?"}],title:"Libraries"};function ef(Yn){return Yi(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class of extends Vi{constructor(et){super();Xi(this,et,ef,Qi,Zi,{})}}export{of as default,tf as metadata};
