import{S as qo,i as Bo,s as No,e as l,k as u,w as _,t as r,N as Uo,c as o,d as a,m as f,a as s,x as g,h as i,b as d,G as t,g as h,y as b,L as Yo,q as E,o as y,B as w,v as Fo}from"../chunks/vendor-hf-doc-builder.js";import{I as ke}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Rt}from"../chunks/CodeBlock-hf-doc-builder.js";function To(Nl){let $,ft,L,C,Ae,z,Kt,He,Vt,dt,M,Ce,Wt,Xt,pt,S,I,Ie,Q,Zt,Oe,ea,ct,O,ta,G,aa,la,mt,oe,oa,vt,m,xe,sa,ra,je,ia,na,De,ha,_t,P,x,qe,J,ua,Be,fa,gt,j,da,Ne,pa,ca,bt,D,se,Ue,ma,va,_a,re,Ye,ga,ba,Et,R,yt,k,q,Fe,K,Ea,Te,ya,wt,V,$t,ie,wa,Lt,B,ne,ze,$a,La,Sa,he,Me,Pa,ka,St,A,N,Qe,W,Aa,Ge,Ha,Pt,ue,fe,Je,Ca,Ia,kt,X,At,de,Oa,Ht,p,pe,Re,xa,ja,Da,ce,Ke,qa,Ba,Na,me,Ve,Ua,Ya,Fa,ve,We,Ta,za,Ma,U,Xe,Qa,Ga,Ze,Ja,Ra,Ka,_e,et,Va,Wa,Xa,ge,tt,Za,el,Ct,Z,be,at,tl,al,It,ee,Ot,Ee,ll,xt,v,Y,lt,ol,sl,ot,rl,il,nl,ye,st,hl,ul,fl,we,rt,dl,pl,jt,H,F,it,te,cl,nt,ml,Dt,T,$e,vl,ae,_l,gl,Le,bl,le,El,qt;return z=new ke({}),Q=new ke({}),J=new ke({}),R=new Rt({props:{code:`pip install stable-baselines3
pip install huggingface-sb3`,highlighted:`pip <span class="hljs-keyword">install </span>stable-<span class="hljs-keyword">baselines3
</span>pip <span class="hljs-keyword">install </span>huggingface-<span class="hljs-keyword">sb3</span>`}}),K=new ke({}),V=new Rt({props:{code:`checkpoint = load_from_hub(
    repo_id="sb3/demo-hf-CartPole-v1",
    filename="ppo-CartPole-v1.zip",
)`,highlighted:`<span class="hljs-keyword">checkpoint</span> = load_from_hub(
    repo_id=&quot;sb3/demo-hf-CartPole-v1&quot;,
    filename=&quot;ppo-CartPole-v1.zip&quot;,
)`}}),W=new ke({}),X=new Rt({props:{code:`package_to_hub(model=model, 
               model_name="ppo-LunarLander-v2",
               model_architecture="PPO",
               env_id=env_id,
               eval_env=eval_env,
               repo_id="ThomasSimonini/ppo-LunarLander-v2",
               commit_message="Test commit")`,highlighted:`package_to_hub(<span class="hljs-attribute">model</span>=model, 
               <span class="hljs-attribute">model_name</span>=<span class="hljs-string">&quot;ppo-LunarLander-v2&quot;</span>,
               <span class="hljs-attribute">model_architecture</span>=<span class="hljs-string">&quot;PPO&quot;</span>,
               <span class="hljs-attribute">env_id</span>=env_id,
               <span class="hljs-attribute">eval_env</span>=eval_env,
               <span class="hljs-attribute">repo_id</span>=<span class="hljs-string">&quot;ThomasSimonini/ppo-LunarLander-v2&quot;</span>,
               <span class="hljs-attribute">commit_message</span>=<span class="hljs-string">&quot;Test commit&quot;</span>)`}}),ee=new Rt({props:{code:`push_to_hub(
    repo_id="ThomasSimonini/ppo-LunarLander-v2",
    filename="ppo-LunarLander-v2.zip",
    commit_message="Added LunarLander-v2 model trained with PPO",
)`,highlighted:`push_to_hub(
    <span class="hljs-attribute">repo_id</span>=<span class="hljs-string">&quot;ThomasSimonini/ppo-LunarLander-v2&quot;</span>,
    <span class="hljs-attribute">filename</span>=<span class="hljs-string">&quot;ppo-LunarLander-v2.zip&quot;</span>,
    <span class="hljs-attribute">commit_message</span>=<span class="hljs-string">&quot;Added LunarLander-v2 model trained with PPO&quot;</span>,
)`}}),te=new ke({}),{c(){$=l("meta"),ft=u(),L=l("h1"),C=l("a"),Ae=l("span"),_(z.$$.fragment),Kt=u(),He=l("span"),Vt=r("Using Stable-Baselines3 at Hugging Face"),dt=u(),M=l("p"),Ce=l("code"),Wt=r("stable-baselines3"),Xt=r(" is a set of reliable implementations of reinforcement learning algorithms in PyTorch."),pt=u(),S=l("h2"),I=l("a"),Ie=l("span"),_(Q.$$.fragment),Zt=u(),Oe=l("span"),ea=r("Exploring Stable-Baselines3 in the Hub"),ct=u(),O=l("p"),ta=r("You can find Stable-Baselines3 models by filtering at the left of the "),G=l("a"),aa=r("models page"),la=r("."),mt=u(),oe=l("p"),oa=r("All models on the Hub come up with useful features:"),vt=u(),m=l("ol"),xe=l("li"),sa=r("An automatically generated model card with a description, a training configuration, and more."),ra=u(),je=l("li"),ia=r("Metadata tags that help for discoverability."),na=u(),De=l("li"),ha=r("A video widget where you can watch your agent performing."),_t=u(),P=l("h2"),x=l("a"),qe=l("span"),_(J.$$.fragment),ua=u(),Be=l("span"),fa=r("Install the library"),gt=u(),j=l("p"),da=r("To install the "),Ne=l("code"),pa=r("stable-baselines3"),ca=r(" library, you need to install two packages:"),bt=u(),D=l("ul"),se=l("li"),Ue=l("code"),ma=r("stable-baselines3"),va=r(": Stable-Baselines3 library."),_a=u(),re=l("li"),Ye=l("code"),ga=r("huggingface-sb3"),ba=r(": additional code to load and upload Stable-baselines3 models from the Hub."),Et=u(),_(R.$$.fragment),yt=u(),k=l("h2"),q=l("a"),Fe=l("span"),_(K.$$.fragment),Ea=u(),Te=l("span"),ya=r("Using existing models"),wt=r(`

You can simply download a model from the Hub using the \`load_from_hub\` function

	`),_(V.$$.fragment),$t=u(),ie=l("p"),wa=r("You need to define two parameters:"),Lt=u(),B=l("ul"),ne=l("li"),ze=l("code"),$a=r("--repo-id"),La=r(": the name of the Hugging Face repo you want to download."),Sa=u(),he=l("li"),Me=l("code"),Pa=r("--filename"),ka=r(": the file you want to download."),St=u(),A=l("h2"),N=l("a"),Qe=l("span"),_(W.$$.fragment),Aa=u(),Ge=l("span"),Ha=r("Sharing your models"),Pt=r(`

You can easily upload your models using two different functions:
`),ue=l("ol"),fe=l("li"),Je=l("code"),Ca=r("package_to_hub()"),Ia=r(": save the model, evaluate it, generate a model card and record a replay video of your agent before pushing the complete repo to the Hub."),kt=u(),_(X.$$.fragment),At=u(),de=l("p"),Oa=r("You need to define seven parameters:"),Ht=u(),p=l("ul"),pe=l("li"),Re=l("code"),xa=r("--model"),ja=r(": your trained model."),Da=u(),ce=l("li"),Ke=l("code"),qa=r("--model_architecture"),Ba=r(": name of the architecture of your model (DQN, PPO, A2C, SAC\u2026)."),Na=u(),me=l("li"),Ve=l("code"),Ua=r("--env_id"),Ya=r(": name of the environment."),Fa=u(),ve=l("li"),We=l("code"),Ta=r("--eval_env"),za=r(": environment used to evaluate the agent."),Ma=u(),U=l("li"),Xe=l("code"),Qa=r("--repo-id"),Ga=r(": the name of the Hugging Face repo you want to create or update. It\u2019s "),Ze=l("code"),Ja=r("<your huggingface username>/<the repo name>"),Ra=r("."),Ka=u(),_e=l("li"),et=l("code"),Va=r("--commit-message"),Wa=r("."),Xa=u(),ge=l("li"),tt=l("code"),Za=r("--filename"),el=r(": the file you want to push to the Hub."),Ct=u(),Z=l("ol"),be=l("li"),at=l("code"),tl=r("push_to_hub()"),al=r(": simply push a file to the Hub"),It=u(),_(ee.$$.fragment),Ot=u(),Ee=l("p"),ll=r("You need to define three parameters:"),xt=u(),v=l("ul"),Y=l("li"),lt=l("code"),ol=r("--repo-id"),sl=r(": the name of the Hugging Face repo you want to create or update. It\u2019s "),ot=l("code"),rl=r("<your huggingface username>/<the repo name>"),il=r("."),nl=u(),ye=l("li"),st=l("code"),hl=r("--filename"),ul=r(": the file you want to push to the Hub."),fl=u(),we=l("li"),rt=l("code"),dl=r("--commit-message"),pl=r("."),jt=u(),H=l("h2"),F=l("a"),it=l("span"),_(te.$$.fragment),cl=u(),nt=l("span"),ml=r("Additional resources"),Dt=u(),T=l("ul"),$e=l("li"),vl=r("Hugging Face Stable-Baselines3 "),ae=l("a"),_l=r("documentation"),gl=u(),Le=l("li"),bl=r("Stable-Baselines3 "),le=l("a"),El=r("documentation"),this.h()},l(e){const n=Uo('[data-svelte="svelte-1phssyn"]',document.head);$=o(n,"META",{name:!0,content:!0}),n.forEach(a),ft=f(e),L=o(e,"H1",{class:!0});var Bt=s(L);C=o(Bt,"A",{id:!0,class:!0,href:!0});var Ul=s(C);Ae=o(Ul,"SPAN",{});var Yl=s(Ae);g(z.$$.fragment,Yl),Yl.forEach(a),Ul.forEach(a),Kt=f(Bt),He=o(Bt,"SPAN",{});var Fl=s(He);Vt=i(Fl,"Using Stable-Baselines3 at Hugging Face"),Fl.forEach(a),Bt.forEach(a),dt=f(e),M=o(e,"P",{});var yl=s(M);Ce=o(yl,"CODE",{});var Tl=s(Ce);Wt=i(Tl,"stable-baselines3"),Tl.forEach(a),Xt=i(yl," is a set of reliable implementations of reinforcement learning algorithms in PyTorch."),yl.forEach(a),pt=f(e),S=o(e,"H2",{class:!0});var Nt=s(S);I=o(Nt,"A",{id:!0,class:!0,href:!0});var zl=s(I);Ie=o(zl,"SPAN",{});var Ml=s(Ie);g(Q.$$.fragment,Ml),Ml.forEach(a),zl.forEach(a),Zt=f(Nt),Oe=o(Nt,"SPAN",{});var Ql=s(Oe);ea=i(Ql,"Exploring Stable-Baselines3 in the Hub"),Ql.forEach(a),Nt.forEach(a),ct=f(e),O=o(e,"P",{});var Ut=s(O);ta=i(Ut,"You can find Stable-Baselines3 models by filtering at the left of the "),G=o(Ut,"A",{href:!0,rel:!0});var Gl=s(G);aa=i(Gl,"models page"),Gl.forEach(a),la=i(Ut,"."),Ut.forEach(a),mt=f(e),oe=o(e,"P",{});var Jl=s(oe);oa=i(Jl,"All models on the Hub come up with useful features:"),Jl.forEach(a),vt=f(e),m=o(e,"OL",{});var Se=s(m);xe=o(Se,"LI",{});var Rl=s(xe);sa=i(Rl,"An automatically generated model card with a description, a training configuration, and more."),Rl.forEach(a),ra=f(Se),je=o(Se,"LI",{});var Kl=s(je);ia=i(Kl,"Metadata tags that help for discoverability."),Kl.forEach(a),na=f(Se),De=o(Se,"LI",{});var Vl=s(De);ha=i(Vl,"A video widget where you can watch your agent performing."),Vl.forEach(a),Se.forEach(a),_t=f(e),P=o(e,"H2",{class:!0});var Yt=s(P);x=o(Yt,"A",{id:!0,class:!0,href:!0});var Wl=s(x);qe=o(Wl,"SPAN",{});var Xl=s(qe);g(J.$$.fragment,Xl),Xl.forEach(a),Wl.forEach(a),ua=f(Yt),Be=o(Yt,"SPAN",{});var Zl=s(Be);fa=i(Zl,"Install the library"),Zl.forEach(a),Yt.forEach(a),gt=f(e),j=o(e,"P",{});var Ft=s(j);da=i(Ft,"To install the "),Ne=o(Ft,"CODE",{});var eo=s(Ne);pa=i(eo,"stable-baselines3"),eo.forEach(a),ca=i(Ft," library, you need to install two packages:"),Ft.forEach(a),bt=f(e),D=o(e,"UL",{});var Tt=s(D);se=o(Tt,"LI",{});var wl=s(se);Ue=o(wl,"CODE",{});var to=s(Ue);ma=i(to,"stable-baselines3"),to.forEach(a),va=i(wl,": Stable-Baselines3 library."),wl.forEach(a),_a=f(Tt),re=o(Tt,"LI",{});var $l=s(re);Ye=o($l,"CODE",{});var ao=s(Ye);ga=i(ao,"huggingface-sb3"),ao.forEach(a),ba=i($l,": additional code to load and upload Stable-baselines3 models from the Hub."),$l.forEach(a),Tt.forEach(a),Et=f(e),g(R.$$.fragment,e),yt=f(e),k=o(e,"H2",{class:!0});var zt=s(k);q=o(zt,"A",{id:!0,class:!0,href:!0});var lo=s(q);Fe=o(lo,"SPAN",{});var oo=s(Fe);g(K.$$.fragment,oo),oo.forEach(a),lo.forEach(a),Ea=f(zt),Te=o(zt,"SPAN",{});var so=s(Te);ya=i(so,"Using existing models"),so.forEach(a),zt.forEach(a),wt=i(e,`

You can simply download a model from the Hub using the \`load_from_hub\` function

	`),g(V.$$.fragment,e),$t=f(e),ie=o(e,"P",{});var ro=s(ie);wa=i(ro,"You need to define two parameters:"),ro.forEach(a),Lt=f(e),B=o(e,"UL",{});var Mt=s(B);ne=o(Mt,"LI",{});var Ll=s(ne);ze=o(Ll,"CODE",{});var io=s(ze);$a=i(io,"--repo-id"),io.forEach(a),La=i(Ll,": the name of the Hugging Face repo you want to download."),Ll.forEach(a),Sa=f(Mt),he=o(Mt,"LI",{});var Sl=s(he);Me=o(Sl,"CODE",{});var no=s(Me);Pa=i(no,"--filename"),no.forEach(a),ka=i(Sl,": the file you want to download."),Sl.forEach(a),Mt.forEach(a),St=f(e),A=o(e,"H2",{class:!0});var Qt=s(A);N=o(Qt,"A",{id:!0,class:!0,href:!0});var ho=s(N);Qe=o(ho,"SPAN",{});var uo=s(Qe);g(W.$$.fragment,uo),uo.forEach(a),ho.forEach(a),Aa=f(Qt),Ge=o(Qt,"SPAN",{});var fo=s(Ge);Ha=i(fo,"Sharing your models"),fo.forEach(a),Qt.forEach(a),Pt=i(e,`

You can easily upload your models using two different functions:
`),ue=o(e,"OL",{});var po=s(ue);fe=o(po,"LI",{});var Pl=s(fe);Je=o(Pl,"CODE",{});var co=s(Je);Ca=i(co,"package_to_hub()"),co.forEach(a),Ia=i(Pl,": save the model, evaluate it, generate a model card and record a replay video of your agent before pushing the complete repo to the Hub."),Pl.forEach(a),po.forEach(a),kt=f(e),g(X.$$.fragment,e),At=f(e),de=o(e,"P",{});var mo=s(de);Oa=i(mo,"You need to define seven parameters:"),mo.forEach(a),Ht=f(e),p=o(e,"UL",{});var c=s(p);pe=o(c,"LI",{});var kl=s(pe);Re=o(kl,"CODE",{});var vo=s(Re);xa=i(vo,"--model"),vo.forEach(a),ja=i(kl,": your trained model."),kl.forEach(a),Da=f(c),ce=o(c,"LI",{});var Al=s(ce);Ke=o(Al,"CODE",{});var _o=s(Ke);qa=i(_o,"--model_architecture"),_o.forEach(a),Ba=i(Al,": name of the architecture of your model (DQN, PPO, A2C, SAC\u2026)."),Al.forEach(a),Na=f(c),me=o(c,"LI",{});var Hl=s(me);Ve=o(Hl,"CODE",{});var go=s(Ve);Ua=i(go,"--env_id"),go.forEach(a),Ya=i(Hl,": name of the environment."),Hl.forEach(a),Fa=f(c),ve=o(c,"LI",{});var Cl=s(ve);We=o(Cl,"CODE",{});var bo=s(We);Ta=i(bo,"--eval_env"),bo.forEach(a),za=i(Cl,": environment used to evaluate the agent."),Cl.forEach(a),Ma=f(c),U=o(c,"LI",{});var ht=s(U);Xe=o(ht,"CODE",{});var Eo=s(Xe);Qa=i(Eo,"--repo-id"),Eo.forEach(a),Ga=i(ht,": the name of the Hugging Face repo you want to create or update. It\u2019s "),Ze=o(ht,"CODE",{});var yo=s(Ze);Ja=i(yo,"<your huggingface username>/<the repo name>"),yo.forEach(a),Ra=i(ht,"."),ht.forEach(a),Ka=f(c),_e=o(c,"LI",{});var Il=s(_e);et=o(Il,"CODE",{});var wo=s(et);Va=i(wo,"--commit-message"),wo.forEach(a),Wa=i(Il,"."),Il.forEach(a),Xa=f(c),ge=o(c,"LI",{});var Ol=s(ge);tt=o(Ol,"CODE",{});var $o=s(tt);Za=i($o,"--filename"),$o.forEach(a),el=i(Ol,": the file you want to push to the Hub."),Ol.forEach(a),c.forEach(a),Ct=f(e),Z=o(e,"OL",{start:!0});var Lo=s(Z);be=o(Lo,"LI",{});var xl=s(be);at=o(xl,"CODE",{});var So=s(at);tl=i(So,"push_to_hub()"),So.forEach(a),al=i(xl,": simply push a file to the Hub"),xl.forEach(a),Lo.forEach(a),It=f(e),g(ee.$$.fragment,e),Ot=f(e),Ee=o(e,"P",{});var Po=s(Ee);ll=i(Po,"You need to define three parameters:"),Po.forEach(a),xt=f(e),v=o(e,"UL",{});var Pe=s(v);Y=o(Pe,"LI",{});var ut=s(Y);lt=o(ut,"CODE",{});var ko=s(lt);ol=i(ko,"--repo-id"),ko.forEach(a),sl=i(ut,": the name of the Hugging Face repo you want to create or update. It\u2019s "),ot=o(ut,"CODE",{});var Ao=s(ot);rl=i(Ao,"<your huggingface username>/<the repo name>"),Ao.forEach(a),il=i(ut,"."),ut.forEach(a),nl=f(Pe),ye=o(Pe,"LI",{});var jl=s(ye);st=o(jl,"CODE",{});var Ho=s(st);hl=i(Ho,"--filename"),Ho.forEach(a),ul=i(jl,": the file you want to push to the Hub."),jl.forEach(a),fl=f(Pe),we=o(Pe,"LI",{});var Dl=s(we);rt=o(Dl,"CODE",{});var Co=s(rt);dl=i(Co,"--commit-message"),Co.forEach(a),pl=i(Dl,"."),Dl.forEach(a),Pe.forEach(a),jt=f(e),H=o(e,"H2",{class:!0});var Gt=s(H);F=o(Gt,"A",{id:!0,class:!0,href:!0});var Io=s(F);it=o(Io,"SPAN",{});var Oo=s(it);g(te.$$.fragment,Oo),Oo.forEach(a),Io.forEach(a),cl=f(Gt),nt=o(Gt,"SPAN",{});var xo=s(nt);ml=i(xo,"Additional resources"),xo.forEach(a),Gt.forEach(a),Dt=f(e),T=o(e,"UL",{});var Jt=s(T);$e=o(Jt,"LI",{});var ql=s($e);vl=i(ql,"Hugging Face Stable-Baselines3 "),ae=o(ql,"A",{href:!0,rel:!0});var jo=s(ae);_l=i(jo,"documentation"),jo.forEach(a),ql.forEach(a),gl=f(Jt),Le=o(Jt,"LI",{});var Bl=s(Le);bl=i(Bl,"Stable-Baselines3 "),le=o(Bl,"A",{href:!0,rel:!0});var Do=s(le);El=i(Do,"documentation"),Do.forEach(a),Bl.forEach(a),Jt.forEach(a),this.h()},h(){d($,"name","hf:doc:metadata"),d($,"content",JSON.stringify(zo)),d(C,"id","using-stablebaselines3-at-hugging-face"),d(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(C,"href","#using-stablebaselines3-at-hugging-face"),d(L,"class","relative group"),d(I,"id","exploring-stablebaselines3-in-the-hub"),d(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(I,"href","#exploring-stablebaselines3-in-the-hub"),d(S,"class","relative group"),d(G,"href","https://huggingface.co/models?library=stable-baselines3"),d(G,"rel","nofollow"),d(x,"id","install-the-library"),d(x,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(x,"href","#install-the-library"),d(P,"class","relative group"),d(q,"id","using-existing-models"),d(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(q,"href","#using-existing-models"),d(k,"class","relative group"),d(N,"id","sharing-your-models"),d(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(N,"href","#sharing-your-models"),d(A,"class","relative group"),d(Z,"start","2"),d(F,"id","additional-resources"),d(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(F,"href","#additional-resources"),d(H,"class","relative group"),d(ae,"href","https://github.com/huggingface/huggingface_sb3#hugging-face--x-stable-baselines3-v20"),d(ae,"rel","nofollow"),d(le,"href","https://stable-baselines3.readthedocs.io/en/master/"),d(le,"rel","nofollow")},m(e,n){t(document.head,$),h(e,ft,n),h(e,L,n),t(L,C),t(C,Ae),b(z,Ae,null),t(L,Kt),t(L,He),t(He,Vt),h(e,dt,n),h(e,M,n),t(M,Ce),t(Ce,Wt),t(M,Xt),h(e,pt,n),h(e,S,n),t(S,I),t(I,Ie),b(Q,Ie,null),t(S,Zt),t(S,Oe),t(Oe,ea),h(e,ct,n),h(e,O,n),t(O,ta),t(O,G),t(G,aa),t(O,la),h(e,mt,n),h(e,oe,n),t(oe,oa),h(e,vt,n),h(e,m,n),t(m,xe),t(xe,sa),t(m,ra),t(m,je),t(je,ia),t(m,na),t(m,De),t(De,ha),h(e,_t,n),h(e,P,n),t(P,x),t(x,qe),b(J,qe,null),t(P,ua),t(P,Be),t(Be,fa),h(e,gt,n),h(e,j,n),t(j,da),t(j,Ne),t(Ne,pa),t(j,ca),h(e,bt,n),h(e,D,n),t(D,se),t(se,Ue),t(Ue,ma),t(se,va),t(D,_a),t(D,re),t(re,Ye),t(Ye,ga),t(re,ba),h(e,Et,n),b(R,e,n),h(e,yt,n),h(e,k,n),t(k,q),t(q,Fe),b(K,Fe,null),t(k,Ea),t(k,Te),t(Te,ya),h(e,wt,n),b(V,e,n),h(e,$t,n),h(e,ie,n),t(ie,wa),h(e,Lt,n),h(e,B,n),t(B,ne),t(ne,ze),t(ze,$a),t(ne,La),t(B,Sa),t(B,he),t(he,Me),t(Me,Pa),t(he,ka),h(e,St,n),h(e,A,n),t(A,N),t(N,Qe),b(W,Qe,null),t(A,Aa),t(A,Ge),t(Ge,Ha),h(e,Pt,n),h(e,ue,n),t(ue,fe),t(fe,Je),t(Je,Ca),t(fe,Ia),h(e,kt,n),b(X,e,n),h(e,At,n),h(e,de,n),t(de,Oa),h(e,Ht,n),h(e,p,n),t(p,pe),t(pe,Re),t(Re,xa),t(pe,ja),t(p,Da),t(p,ce),t(ce,Ke),t(Ke,qa),t(ce,Ba),t(p,Na),t(p,me),t(me,Ve),t(Ve,Ua),t(me,Ya),t(p,Fa),t(p,ve),t(ve,We),t(We,Ta),t(ve,za),t(p,Ma),t(p,U),t(U,Xe),t(Xe,Qa),t(U,Ga),t(U,Ze),t(Ze,Ja),t(U,Ra),t(p,Ka),t(p,_e),t(_e,et),t(et,Va),t(_e,Wa),t(p,Xa),t(p,ge),t(ge,tt),t(tt,Za),t(ge,el),h(e,Ct,n),h(e,Z,n),t(Z,be),t(be,at),t(at,tl),t(be,al),h(e,It,n),b(ee,e,n),h(e,Ot,n),h(e,Ee,n),t(Ee,ll),h(e,xt,n),h(e,v,n),t(v,Y),t(Y,lt),t(lt,ol),t(Y,sl),t(Y,ot),t(ot,rl),t(Y,il),t(v,nl),t(v,ye),t(ye,st),t(st,hl),t(ye,ul),t(v,fl),t(v,we),t(we,rt),t(rt,dl),t(we,pl),h(e,jt,n),h(e,H,n),t(H,F),t(F,it),b(te,it,null),t(H,cl),t(H,nt),t(nt,ml),h(e,Dt,n),h(e,T,n),t(T,$e),t($e,vl),t($e,ae),t(ae,_l),t(T,gl),t(T,Le),t(Le,bl),t(Le,le),t(le,El),qt=!0},p:Yo,i(e){qt||(E(z.$$.fragment,e),E(Q.$$.fragment,e),E(J.$$.fragment,e),E(R.$$.fragment,e),E(K.$$.fragment,e),E(V.$$.fragment,e),E(W.$$.fragment,e),E(X.$$.fragment,e),E(ee.$$.fragment,e),E(te.$$.fragment,e),qt=!0)},o(e){y(z.$$.fragment,e),y(Q.$$.fragment,e),y(J.$$.fragment,e),y(R.$$.fragment,e),y(K.$$.fragment,e),y(V.$$.fragment,e),y(W.$$.fragment,e),y(X.$$.fragment,e),y(ee.$$.fragment,e),y(te.$$.fragment,e),qt=!1},d(e){a($),e&&a(ft),e&&a(L),w(z),e&&a(dt),e&&a(M),e&&a(pt),e&&a(S),w(Q),e&&a(ct),e&&a(O),e&&a(mt),e&&a(oe),e&&a(vt),e&&a(m),e&&a(_t),e&&a(P),w(J),e&&a(gt),e&&a(j),e&&a(bt),e&&a(D),e&&a(Et),w(R,e),e&&a(yt),e&&a(k),w(K),e&&a(wt),w(V,e),e&&a($t),e&&a(ie),e&&a(Lt),e&&a(B),e&&a(St),e&&a(A),w(W),e&&a(Pt),e&&a(ue),e&&a(kt),w(X,e),e&&a(At),e&&a(de),e&&a(Ht),e&&a(p),e&&a(Ct),e&&a(Z),e&&a(It),w(ee,e),e&&a(Ot),e&&a(Ee),e&&a(xt),e&&a(v),e&&a(jt),e&&a(H),w(te),e&&a(Dt),e&&a(T)}}}const zo={local:"using-stablebaselines3-at-hugging-face",sections:[{local:"exploring-stablebaselines3-in-the-hub",title:"Exploring Stable-Baselines3 in the Hub"},{local:"install-the-library",title:"Install the library"},{local:"using-existing-models",title:"Using existing models"},{local:"sharing-your-models",title:"Sharing your models"},{local:"additional-resources",title:"Additional resources"}],title:"Using Stable-Baselines3 at Hugging Face"};function Mo(Nl){return Fo(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ro extends qo{constructor($){super();Bo(this,$,Mo,To,No,{})}}export{Ro as default,zo as metadata};
