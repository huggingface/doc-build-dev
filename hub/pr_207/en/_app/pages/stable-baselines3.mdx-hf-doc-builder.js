import{S as ho,i as uo,s as fo,e as l,k as u,w as L,t as n,N as po,c as o,d as a,m as f,a as s,x as S,h as r,b as d,G as t,g as h,y as P,L as co,q as A,o as H,B as k,v as mo}from"../chunks/vendor-hf-doc-builder.js";import{I as we}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as cl}from"../chunks/CodeBlock-hf-doc-builder.js";function vo(ml){let g,lt,_,C,$e,T,Dt,Le,jt,ot,U,Se,Bt,Nt,st,b,I,Pe,z,Yt,Ae,Ft,nt,O,Tt,M,Ut,zt,rt,te,Mt,it,m,He,Qt,Gt,ke,Jt,Rt,Ce,Kt,ht,E,x,Ie,Q,Vt,Oe,Wt,ut,y,q,xe,G,Xt,qe,Zt,ft,J,dt,ae,ea,pt,D,le,De,ta,aa,la,oe,je,oa,sa,ct,w,j,Be,R,na,Ne,ra,mt,se,ne,Ye,ia,ha,vt,K,gt,re,ua,_t,p,ie,Fe,fa,da,pa,he,Te,ca,ma,va,ue,Ue,ga,_a,ba,fe,ze,Ea,ya,wa,B,Me,$a,La,Qe,Sa,Pa,Aa,de,Ge,Ha,ka,Ca,pe,Je,Ia,Oa,bt,V,ce,Re,xa,qa,Et,W,yt,me,Da,wt,v,N,Ke,ja,Ba,Ve,Na,Ya,Fa,ve,We,Ta,Ua,za,ge,Xe,Ma,Qa,$t,$,Y,Ze,X,Ga,et,Ja,Lt,F,_e,Ra,Z,Ka,Va,be,Wa,ee,Xa,St;return T=new we({}),z=new we({}),Q=new we({}),G=new we({}),J=new cl({props:{code:`checkpoint = load_from_hub(
    repo_id="sb3/demo-hf-CartPole-v1",
    filename="ppo-CartPole-v1.zip",
)`,highlighted:`<span class="hljs-keyword">checkpoint</span> = load_from_hub(
    repo_id=&quot;sb3/demo-hf-CartPole-v1&quot;,
    filename=&quot;ppo-CartPole-v1.zip&quot;,
)`}}),R=new we({}),K=new cl({props:{code:`package_to_hub(model=model, 
               model_name="ppo-LunarLander-v2",
               model_architecture="PPO",
               env_id=env_id,
               eval_env=eval_env,
               repo_id="ThomasSimonini/ppo-LunarLander-v2",
               commit_message="Test commit")`,highlighted:`package_to_hub(<span class="hljs-attribute">model</span>=model, 
               <span class="hljs-attribute">model_name</span>=<span class="hljs-string">&quot;ppo-LunarLander-v2&quot;</span>,
               <span class="hljs-attribute">model_architecture</span>=<span class="hljs-string">&quot;PPO&quot;</span>,
               <span class="hljs-attribute">env_id</span>=env_id,
               <span class="hljs-attribute">eval_env</span>=eval_env,
               <span class="hljs-attribute">repo_id</span>=<span class="hljs-string">&quot;ThomasSimonini/ppo-LunarLander-v2&quot;</span>,
               <span class="hljs-attribute">commit_message</span>=<span class="hljs-string">&quot;Test commit&quot;</span>)`}}),W=new cl({props:{code:`push_to_hub(
    repo_id="ThomasSimonini/ppo-LunarLander-v2",
    filename="ppo-LunarLander-v2.zip",
    commit_message="Added LunarLander-v2 model trained with PPO",
)`,highlighted:`push_to_hub(
    <span class="hljs-attribute">repo_id</span>=<span class="hljs-string">&quot;ThomasSimonini/ppo-LunarLander-v2&quot;</span>,
    <span class="hljs-attribute">filename</span>=<span class="hljs-string">&quot;ppo-LunarLander-v2.zip&quot;</span>,
    <span class="hljs-attribute">commit_message</span>=<span class="hljs-string">&quot;Added LunarLander-v2 model trained with PPO&quot;</span>,
)`}}),X=new we({}),{c(){g=l("meta"),lt=u(),_=l("h1"),C=l("a"),$e=l("span"),L(T.$$.fragment),Dt=u(),Le=l("span"),jt=n("Using Stable-Baselines3 at Hugging Face"),ot=u(),U=l("p"),Se=l("code"),Bt=n("stable-baselines3"),Nt=n(" is a set of reliable implementations of reinforcement learning algorithms in PyTorch."),st=u(),b=l("h2"),I=l("a"),Pe=l("span"),L(z.$$.fragment),Yt=u(),Ae=l("span"),Ft=n("Exploring Stable-Baselines3 in the Hub"),nt=u(),O=l("p"),Tt=n("You can find Stable-Baselines3 models by filtering at the left of the "),M=l("a"),Ut=n("models page"),zt=n("."),rt=u(),te=l("p"),Mt=n("All models on the Hub come up with useful features:"),it=u(),m=l("ol"),He=l("li"),Qt=n("An automatically generated model card with a description, a training configuration, and more."),Gt=u(),ke=l("li"),Jt=n("Metadata tags that help for discoverability."),Rt=u(),Ce=l("li"),Kt=n("A video widget where you can watch your agent performing."),ht=u(),E=l("h2"),x=l("a"),Ie=l("span"),L(Q.$$.fragment),Vt=u(),Oe=l("span"),Wt=n("Install the library"),ut=n("\n\nTo install the `stable-baselines3` library, you need to install two packages:\n- `stable-baselines3`: Stable-Baselines3 library.\n- `huggingface-sb3`: additional code to load and upload Stable-baselines3 models from the Hub.\n```\npip install stable-baselines3\npip install huggingface-sb3\n```\n"),y=l("h2"),q=l("a"),xe=l("span"),L(G.$$.fragment),Xt=u(),qe=l("span"),Zt=n("Using existing models"),ft=n(`

You can simply download a model from the Hub using the \`load_from_hub\` function

	`),L(J.$$.fragment),dt=u(),ae=l("p"),ea=n("You need to define two parameters:"),pt=u(),D=l("ul"),le=l("li"),De=l("code"),ta=n("--repo-id"),aa=n(": the name of the Hugging Face repo you want to download."),la=u(),oe=l("li"),je=l("code"),oa=n("--filename"),sa=n(": the file you want to download."),ct=u(),w=l("h2"),j=l("a"),Be=l("span"),L(R.$$.fragment),na=u(),Ne=l("span"),ra=n("Sharing your models"),mt=n(`

You can easily upload your models using two different functions:
`),se=l("ol"),ne=l("li"),Ye=l("code"),ia=n("package_to_hub()"),ha=n(": save the model, evaluate it, generate a model card and record a replay video of your agent before pushing the complete repo to the Hub."),vt=u(),L(K.$$.fragment),gt=u(),re=l("p"),ua=n("You need to define seven parameters:"),_t=u(),p=l("ul"),ie=l("li"),Fe=l("code"),fa=n("--model"),da=n(": your trained model."),pa=u(),he=l("li"),Te=l("code"),ca=n("--model_architecture"),ma=n(": name of the architecture of your model (DQN, PPO, A2C, SAC\u2026)."),va=u(),ue=l("li"),Ue=l("code"),ga=n("--env_id"),_a=n(": name of the environment."),ba=u(),fe=l("li"),ze=l("code"),Ea=n("--eval_env"),ya=n(": environment used to evaluate the agent."),wa=u(),B=l("li"),Me=l("code"),$a=n("--repo-id"),La=n(": the name of the Hugging Face repo you want to create or update. It\u2019s "),Qe=l("code"),Sa=n("<your huggingface username>/<the repo name>"),Pa=n("."),Aa=u(),de=l("li"),Ge=l("code"),Ha=n("--commit-message"),ka=n("."),Ca=u(),pe=l("li"),Je=l("code"),Ia=n("--filename"),Oa=n(": the file you want to push to the Hub."),bt=u(),V=l("ol"),ce=l("li"),Re=l("code"),xa=n("push_to_hub()"),qa=n(": simply push a file to the Hub"),Et=u(),L(W.$$.fragment),yt=u(),me=l("p"),Da=n("You need to define three parameters:"),wt=u(),v=l("ul"),N=l("li"),Ke=l("code"),ja=n("--repo-id"),Ba=n(": the name of the Hugging Face repo you want to create or update. It\u2019s "),Ve=l("code"),Na=n("<your huggingface username>/<the repo name>"),Ya=n("."),Fa=u(),ve=l("li"),We=l("code"),Ta=n("--filename"),Ua=n(": the file you want to push to the Hub."),za=u(),ge=l("li"),Xe=l("code"),Ma=n("--commit-message"),Qa=n("."),$t=u(),$=l("h2"),Y=l("a"),Ze=l("span"),L(X.$$.fragment),Ga=u(),et=l("span"),Ja=n("Additional resources"),Lt=u(),F=l("ul"),_e=l("li"),Ra=n("Hugging Face Stable-Baselines3 "),Z=l("a"),Ka=n("documentation"),Va=u(),be=l("li"),Wa=n("Stable-Baselines3 "),ee=l("a"),Xa=n("documentation"),this.h()},l(e){const i=po('[data-svelte="svelte-1phssyn"]',document.head);g=o(i,"META",{name:!0,content:!0}),i.forEach(a),lt=f(e),_=o(e,"H1",{class:!0});var Pt=s(_);C=o(Pt,"A",{id:!0,class:!0,href:!0});var vl=s(C);$e=o(vl,"SPAN",{});var gl=s($e);S(T.$$.fragment,gl),gl.forEach(a),vl.forEach(a),Dt=f(Pt),Le=o(Pt,"SPAN",{});var _l=s(Le);jt=r(_l,"Using Stable-Baselines3 at Hugging Face"),_l.forEach(a),Pt.forEach(a),ot=f(e),U=o(e,"P",{});var Za=s(U);Se=o(Za,"CODE",{});var bl=s(Se);Bt=r(bl,"stable-baselines3"),bl.forEach(a),Nt=r(Za," is a set of reliable implementations of reinforcement learning algorithms in PyTorch."),Za.forEach(a),st=f(e),b=o(e,"H2",{class:!0});var At=s(b);I=o(At,"A",{id:!0,class:!0,href:!0});var El=s(I);Pe=o(El,"SPAN",{});var yl=s(Pe);S(z.$$.fragment,yl),yl.forEach(a),El.forEach(a),Yt=f(At),Ae=o(At,"SPAN",{});var wl=s(Ae);Ft=r(wl,"Exploring Stable-Baselines3 in the Hub"),wl.forEach(a),At.forEach(a),nt=f(e),O=o(e,"P",{});var Ht=s(O);Tt=r(Ht,"You can find Stable-Baselines3 models by filtering at the left of the "),M=o(Ht,"A",{href:!0,rel:!0});var $l=s(M);Ut=r($l,"models page"),$l.forEach(a),zt=r(Ht,"."),Ht.forEach(a),rt=f(e),te=o(e,"P",{});var Ll=s(te);Mt=r(Ll,"All models on the Hub come up with useful features:"),Ll.forEach(a),it=f(e),m=o(e,"OL",{});var Ee=s(m);He=o(Ee,"LI",{});var Sl=s(He);Qt=r(Sl,"An automatically generated model card with a description, a training configuration, and more."),Sl.forEach(a),Gt=f(Ee),ke=o(Ee,"LI",{});var Pl=s(ke);Jt=r(Pl,"Metadata tags that help for discoverability."),Pl.forEach(a),Rt=f(Ee),Ce=o(Ee,"LI",{});var Al=s(Ce);Kt=r(Al,"A video widget where you can watch your agent performing."),Al.forEach(a),Ee.forEach(a),ht=f(e),E=o(e,"H2",{class:!0});var kt=s(E);x=o(kt,"A",{id:!0,class:!0,href:!0});var Hl=s(x);Ie=o(Hl,"SPAN",{});var kl=s(Ie);S(Q.$$.fragment,kl),kl.forEach(a),Hl.forEach(a),Vt=f(kt),Oe=o(kt,"SPAN",{});var Cl=s(Oe);Wt=r(Cl,"Install the library"),Cl.forEach(a),kt.forEach(a),ut=r(e,"\n\nTo install the `stable-baselines3` library, you need to install two packages:\n- `stable-baselines3`: Stable-Baselines3 library.\n- `huggingface-sb3`: additional code to load and upload Stable-baselines3 models from the Hub.\n```\npip install stable-baselines3\npip install huggingface-sb3\n```\n"),y=o(e,"H2",{class:!0});var Ct=s(y);q=o(Ct,"A",{id:!0,class:!0,href:!0});var Il=s(q);xe=o(Il,"SPAN",{});var Ol=s(xe);S(G.$$.fragment,Ol),Ol.forEach(a),Il.forEach(a),Xt=f(Ct),qe=o(Ct,"SPAN",{});var xl=s(qe);Zt=r(xl,"Using existing models"),xl.forEach(a),Ct.forEach(a),ft=r(e,`

You can simply download a model from the Hub using the \`load_from_hub\` function

	`),S(J.$$.fragment,e),dt=f(e),ae=o(e,"P",{});var ql=s(ae);ea=r(ql,"You need to define two parameters:"),ql.forEach(a),pt=f(e),D=o(e,"UL",{});var It=s(D);le=o(It,"LI",{});var el=s(le);De=o(el,"CODE",{});var Dl=s(De);ta=r(Dl,"--repo-id"),Dl.forEach(a),aa=r(el,": the name of the Hugging Face repo you want to download."),el.forEach(a),la=f(It),oe=o(It,"LI",{});var tl=s(oe);je=o(tl,"CODE",{});var jl=s(je);oa=r(jl,"--filename"),jl.forEach(a),sa=r(tl,": the file you want to download."),tl.forEach(a),It.forEach(a),ct=f(e),w=o(e,"H2",{class:!0});var Ot=s(w);j=o(Ot,"A",{id:!0,class:!0,href:!0});var Bl=s(j);Be=o(Bl,"SPAN",{});var Nl=s(Be);S(R.$$.fragment,Nl),Nl.forEach(a),Bl.forEach(a),na=f(Ot),Ne=o(Ot,"SPAN",{});var Yl=s(Ne);ra=r(Yl,"Sharing your models"),Yl.forEach(a),Ot.forEach(a),mt=r(e,`

You can easily upload your models using two different functions:
`),se=o(e,"OL",{});var Fl=s(se);ne=o(Fl,"LI",{});var al=s(ne);Ye=o(al,"CODE",{});var Tl=s(Ye);ia=r(Tl,"package_to_hub()"),Tl.forEach(a),ha=r(al,": save the model, evaluate it, generate a model card and record a replay video of your agent before pushing the complete repo to the Hub."),al.forEach(a),Fl.forEach(a),vt=f(e),S(K.$$.fragment,e),gt=f(e),re=o(e,"P",{});var Ul=s(re);ua=r(Ul,"You need to define seven parameters:"),Ul.forEach(a),_t=f(e),p=o(e,"UL",{});var c=s(p);ie=o(c,"LI",{});var ll=s(ie);Fe=o(ll,"CODE",{});var zl=s(Fe);fa=r(zl,"--model"),zl.forEach(a),da=r(ll,": your trained model."),ll.forEach(a),pa=f(c),he=o(c,"LI",{});var ol=s(he);Te=o(ol,"CODE",{});var Ml=s(Te);ca=r(Ml,"--model_architecture"),Ml.forEach(a),ma=r(ol,": name of the architecture of your model (DQN, PPO, A2C, SAC\u2026)."),ol.forEach(a),va=f(c),ue=o(c,"LI",{});var sl=s(ue);Ue=o(sl,"CODE",{});var Ql=s(Ue);ga=r(Ql,"--env_id"),Ql.forEach(a),_a=r(sl,": name of the environment."),sl.forEach(a),ba=f(c),fe=o(c,"LI",{});var nl=s(fe);ze=o(nl,"CODE",{});var Gl=s(ze);Ea=r(Gl,"--eval_env"),Gl.forEach(a),ya=r(nl,": environment used to evaluate the agent."),nl.forEach(a),wa=f(c),B=o(c,"LI",{});var tt=s(B);Me=o(tt,"CODE",{});var Jl=s(Me);$a=r(Jl,"--repo-id"),Jl.forEach(a),La=r(tt,": the name of the Hugging Face repo you want to create or update. It\u2019s "),Qe=o(tt,"CODE",{});var Rl=s(Qe);Sa=r(Rl,"<your huggingface username>/<the repo name>"),Rl.forEach(a),Pa=r(tt,"."),tt.forEach(a),Aa=f(c),de=o(c,"LI",{});var rl=s(de);Ge=o(rl,"CODE",{});var Kl=s(Ge);Ha=r(Kl,"--commit-message"),Kl.forEach(a),ka=r(rl,"."),rl.forEach(a),Ca=f(c),pe=o(c,"LI",{});var il=s(pe);Je=o(il,"CODE",{});var Vl=s(Je);Ia=r(Vl,"--filename"),Vl.forEach(a),Oa=r(il,": the file you want to push to the Hub."),il.forEach(a),c.forEach(a),bt=f(e),V=o(e,"OL",{start:!0});var Wl=s(V);ce=o(Wl,"LI",{});var hl=s(ce);Re=o(hl,"CODE",{});var Xl=s(Re);xa=r(Xl,"push_to_hub()"),Xl.forEach(a),qa=r(hl,": simply push a file to the Hub"),hl.forEach(a),Wl.forEach(a),Et=f(e),S(W.$$.fragment,e),yt=f(e),me=o(e,"P",{});var Zl=s(me);Da=r(Zl,"You need to define three parameters:"),Zl.forEach(a),wt=f(e),v=o(e,"UL",{});var ye=s(v);N=o(ye,"LI",{});var at=s(N);Ke=o(at,"CODE",{});var eo=s(Ke);ja=r(eo,"--repo-id"),eo.forEach(a),Ba=r(at,": the name of the Hugging Face repo you want to create or update. It\u2019s "),Ve=o(at,"CODE",{});var to=s(Ve);Na=r(to,"<your huggingface username>/<the repo name>"),to.forEach(a),Ya=r(at,"."),at.forEach(a),Fa=f(ye),ve=o(ye,"LI",{});var ul=s(ve);We=o(ul,"CODE",{});var ao=s(We);Ta=r(ao,"--filename"),ao.forEach(a),Ua=r(ul,": the file you want to push to the Hub."),ul.forEach(a),za=f(ye),ge=o(ye,"LI",{});var fl=s(ge);Xe=o(fl,"CODE",{});var lo=s(Xe);Ma=r(lo,"--commit-message"),lo.forEach(a),Qa=r(fl,"."),fl.forEach(a),ye.forEach(a),$t=f(e),$=o(e,"H2",{class:!0});var xt=s($);Y=o(xt,"A",{id:!0,class:!0,href:!0});var oo=s(Y);Ze=o(oo,"SPAN",{});var so=s(Ze);S(X.$$.fragment,so),so.forEach(a),oo.forEach(a),Ga=f(xt),et=o(xt,"SPAN",{});var no=s(et);Ja=r(no,"Additional resources"),no.forEach(a),xt.forEach(a),Lt=f(e),F=o(e,"UL",{});var qt=s(F);_e=o(qt,"LI",{});var dl=s(_e);Ra=r(dl,"Hugging Face Stable-Baselines3 "),Z=o(dl,"A",{href:!0,rel:!0});var ro=s(Z);Ka=r(ro,"documentation"),ro.forEach(a),dl.forEach(a),Va=f(qt),be=o(qt,"LI",{});var pl=s(be);Wa=r(pl,"Stable-Baselines3 "),ee=o(pl,"A",{href:!0,rel:!0});var io=s(ee);Xa=r(io,"documentation"),io.forEach(a),pl.forEach(a),qt.forEach(a),this.h()},h(){d(g,"name","hf:doc:metadata"),d(g,"content",JSON.stringify(go)),d(C,"id","using-stablebaselines3-at-hugging-face"),d(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(C,"href","#using-stablebaselines3-at-hugging-face"),d(_,"class","relative group"),d(I,"id","exploring-stablebaselines3-in-the-hub"),d(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(I,"href","#exploring-stablebaselines3-in-the-hub"),d(b,"class","relative group"),d(M,"href","https://huggingface.co/models?library=stable-baselines3"),d(M,"rel","nofollow"),d(x,"id","install-the-library"),d(x,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(x,"href","#install-the-library"),d(E,"class","relative group"),d(q,"id","using-existing-models"),d(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(q,"href","#using-existing-models"),d(y,"class","relative group"),d(j,"id","sharing-your-models"),d(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(j,"href","#sharing-your-models"),d(w,"class","relative group"),d(V,"start","2"),d(Y,"id","additional-resources"),d(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Y,"href","#additional-resources"),d($,"class","relative group"),d(Z,"href","https://github.com/huggingface/huggingface_sb3#hugging-face--x-stable-baselines3-v20"),d(Z,"rel","nofollow"),d(ee,"href","https://stable-baselines3.readthedocs.io/en/master/"),d(ee,"rel","nofollow")},m(e,i){t(document.head,g),h(e,lt,i),h(e,_,i),t(_,C),t(C,$e),P(T,$e,null),t(_,Dt),t(_,Le),t(Le,jt),h(e,ot,i),h(e,U,i),t(U,Se),t(Se,Bt),t(U,Nt),h(e,st,i),h(e,b,i),t(b,I),t(I,Pe),P(z,Pe,null),t(b,Yt),t(b,Ae),t(Ae,Ft),h(e,nt,i),h(e,O,i),t(O,Tt),t(O,M),t(M,Ut),t(O,zt),h(e,rt,i),h(e,te,i),t(te,Mt),h(e,it,i),h(e,m,i),t(m,He),t(He,Qt),t(m,Gt),t(m,ke),t(ke,Jt),t(m,Rt),t(m,Ce),t(Ce,Kt),h(e,ht,i),h(e,E,i),t(E,x),t(x,Ie),P(Q,Ie,null),t(E,Vt),t(E,Oe),t(Oe,Wt),h(e,ut,i),h(e,y,i),t(y,q),t(q,xe),P(G,xe,null),t(y,Xt),t(y,qe),t(qe,Zt),h(e,ft,i),P(J,e,i),h(e,dt,i),h(e,ae,i),t(ae,ea),h(e,pt,i),h(e,D,i),t(D,le),t(le,De),t(De,ta),t(le,aa),t(D,la),t(D,oe),t(oe,je),t(je,oa),t(oe,sa),h(e,ct,i),h(e,w,i),t(w,j),t(j,Be),P(R,Be,null),t(w,na),t(w,Ne),t(Ne,ra),h(e,mt,i),h(e,se,i),t(se,ne),t(ne,Ye),t(Ye,ia),t(ne,ha),h(e,vt,i),P(K,e,i),h(e,gt,i),h(e,re,i),t(re,ua),h(e,_t,i),h(e,p,i),t(p,ie),t(ie,Fe),t(Fe,fa),t(ie,da),t(p,pa),t(p,he),t(he,Te),t(Te,ca),t(he,ma),t(p,va),t(p,ue),t(ue,Ue),t(Ue,ga),t(ue,_a),t(p,ba),t(p,fe),t(fe,ze),t(ze,Ea),t(fe,ya),t(p,wa),t(p,B),t(B,Me),t(Me,$a),t(B,La),t(B,Qe),t(Qe,Sa),t(B,Pa),t(p,Aa),t(p,de),t(de,Ge),t(Ge,Ha),t(de,ka),t(p,Ca),t(p,pe),t(pe,Je),t(Je,Ia),t(pe,Oa),h(e,bt,i),h(e,V,i),t(V,ce),t(ce,Re),t(Re,xa),t(ce,qa),h(e,Et,i),P(W,e,i),h(e,yt,i),h(e,me,i),t(me,Da),h(e,wt,i),h(e,v,i),t(v,N),t(N,Ke),t(Ke,ja),t(N,Ba),t(N,Ve),t(Ve,Na),t(N,Ya),t(v,Fa),t(v,ve),t(ve,We),t(We,Ta),t(ve,Ua),t(v,za),t(v,ge),t(ge,Xe),t(Xe,Ma),t(ge,Qa),h(e,$t,i),h(e,$,i),t($,Y),t(Y,Ze),P(X,Ze,null),t($,Ga),t($,et),t(et,Ja),h(e,Lt,i),h(e,F,i),t(F,_e),t(_e,Ra),t(_e,Z),t(Z,Ka),t(F,Va),t(F,be),t(be,Wa),t(be,ee),t(ee,Xa),St=!0},p:co,i(e){St||(A(T.$$.fragment,e),A(z.$$.fragment,e),A(Q.$$.fragment,e),A(G.$$.fragment,e),A(J.$$.fragment,e),A(R.$$.fragment,e),A(K.$$.fragment,e),A(W.$$.fragment,e),A(X.$$.fragment,e),St=!0)},o(e){H(T.$$.fragment,e),H(z.$$.fragment,e),H(Q.$$.fragment,e),H(G.$$.fragment,e),H(J.$$.fragment,e),H(R.$$.fragment,e),H(K.$$.fragment,e),H(W.$$.fragment,e),H(X.$$.fragment,e),St=!1},d(e){a(g),e&&a(lt),e&&a(_),k(T),e&&a(ot),e&&a(U),e&&a(st),e&&a(b),k(z),e&&a(nt),e&&a(O),e&&a(rt),e&&a(te),e&&a(it),e&&a(m),e&&a(ht),e&&a(E),k(Q),e&&a(ut),e&&a(y),k(G),e&&a(ft),k(J,e),e&&a(dt),e&&a(ae),e&&a(pt),e&&a(D),e&&a(ct),e&&a(w),k(R),e&&a(mt),e&&a(se),e&&a(vt),k(K,e),e&&a(gt),e&&a(re),e&&a(_t),e&&a(p),e&&a(bt),e&&a(V),e&&a(Et),k(W,e),e&&a(yt),e&&a(me),e&&a(wt),e&&a(v),e&&a($t),e&&a($),k(X),e&&a(Lt),e&&a(F)}}}const go={local:"using-stablebaselines3-at-hugging-face",sections:[{local:"exploring-stablebaselines3-in-the-hub",title:"Exploring Stable-Baselines3 in the Hub"},{local:"install-the-library",title:"Install the library"},{local:"using-existing-models",title:"Using existing models"},{local:"sharing-your-models",title:"Sharing your models"},{local:"additional-resources",title:"Additional resources"}],title:"Using Stable-Baselines3 at Hugging Face"};function _o(ml){return mo(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class wo extends ho{constructor(g){super();uo(this,g,_o,vo,fo,{})}}export{wo as default,go as metadata};
