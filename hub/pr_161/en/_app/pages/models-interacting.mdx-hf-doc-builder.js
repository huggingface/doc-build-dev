import{S as fs,i as us,s as ds,e as o,k as f,w as j,t as n,N as ms,c as l,d as a,m as u,a as r,x as H,h as c,b as s,P as p,G as t,g as h,y as N,L as ps,q as F,o as Y,B as z,v as gs}from"../chunks/vendor-hf-doc-builder.js";import{I as Le}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as hs}from"../chunks/CodeBlock-hf-doc-builder.js";function vs(Ul){let w,Ht,E,R,at,le,Ba,ot,qa,Nt,k,B,lt,re,Va,rt,Ja,Ft,Me,Ka,Yt,se,zt,xe,Qa,Rt,$,Ge,jl,Wa,Oe,Hl,Bt,Se,Xa,qt,I,De,Nl,Za,Ce,Fl,Vt,A,q,st,ie,eo,it,to,Jt,V,ao,ne,nt,oo,lo,Kt,ce,Qt,P,J,ct,he,ro,ht,so,Wt,K,io,fe,no,co,Xt,g,ho,ue,fo,uo,de,mo,po,me,go,vo,Zt,Ue,_o,ea,T,Q,ft,pe,bo,ut,yo,ta,W,wo,ge,Eo,ko,aa,je,dt,$o,oa,L,ve,Yl,Io,_e,zl,la,be,mt,Ao,ra,M,He,Rl,Po,Ne,Bl,sa,x,pt,ye,To,gt,Lo,Mo,xo,vt,_t,Go,ia,Fe,Oo,na,G,Ye,ql,So,ze,Vl,ca,Re,Do,ha,O,Be,Jl,Co,qe,Kl,fa,we,bt,Uo,ua,Ve,jo,da,d,yt,Ho,No,S,Fo,wt,Yo,zo,Et,Ro,Bo,qo,kt,Vo,Jo,$t,Ko,Qo,It,Wo,Xo,At,Zo,el,Pt,tl,ma,X,al,Je,ol,ll,pa,Ee,Tt,rl,ga,v,sl,Lt,il,nl,Z,Mt,cl,hl,fl,xt,ul,dl,va,D,Ke,Ql,ml,Qe,Wl,_a,_,pl,ke,gl,vl,$e,Gt,_l,bl,ba,C,ee,Ot,Ie,yl,St,wl,ya,b,El,We,kl,$l,Dt,Il,Al,wa,U,te,Ct,Ae,Pl,Pe,Tl,Ut,Ll,Ml,Ea,y,xl,jt,Gl,Ol,Te,Sl,Dl,ka;return le=new Le({}),re=new Le({}),se=new hs({props:{code:`git lfs install
git clone <MODEL URL>`,highlighted:`git lfs install
git <span class="hljs-built_in">clone</span> &lt;MODEL URL&gt;`}}),ie=new Le({}),ce=new hs({props:{code:`from huggingface_hub import hf_hub_url, cached_download
import joblib

REPO_ID = "YOUR_REPO_ID"
FILENAME = "sklearn_model.joblib"

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_url, cached_download
<span class="hljs-keyword">import</span> joblib

REPO_ID = <span class="hljs-string">&quot;YOUR_REPO_ID&quot;</span>
FILENAME = <span class="hljs-string">&quot;sklearn_model.joblib&quot;</span>

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`}}),he=new Le({}),pe=new Le({}),Ie=new Le({}),Ae=new Le({}),{c(){w=o("meta"),Ht=f(),E=o("h1"),R=o("a"),at=o("span"),j(le.$$.fragment),Ba=f(),ot=o("span"),qa=n("Interacting with models on the hub"),Nt=f(),k=o("h2"),B=o("a"),lt=o("span"),j(re.$$.fragment),Va=f(),rt=o("span"),Ja=n("Accessing models for local use"),Ft=f(),Me=o("p"),Ka=n("Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),Yt=f(),j(se.$$.fragment),zt=f(),xe=o("p"),Qa=n("For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),Rt=f(),$=o("div"),Ge=o("img"),Wa=f(),Oe=o("img"),Bt=f(),Se=o("p"),Xa=n("If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),qt=f(),I=o("div"),De=o("img"),Za=f(),Ce=o("img"),Vt=f(),A=o("h3"),q=o("a"),st=o("span"),j(ie.$$.fragment),eo=f(),it=o("span"),to=n("Can I access models programmatically?"),Jt=f(),V=o("p"),ao=n("You can use the "),ne=o("a"),nt=o("code"),oo=n("huggingface_hub"),lo=n(" library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),Kt=f(),j(ce.$$.fragment),Qt=f(),P=o("h2"),J=o("a"),ct=o("span"),j(he.$$.fragment),ro=f(),ht=o("span"),so=n("Uploading models"),Wt=f(),K=o("p"),io=n("The first step is to create an account at "),fe=o("a"),no=n("Hugging Face"),co=n(". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),Xt=f(),g=o("p"),ho=n("You can link repositories with an individual, such as "),ue=o("a"),fo=n("osanseviero/fashion_brands_patterns"),uo=n(", or with an organization, such as "),de=o("a"),mo=n("facebook/bart-large-xsum"),po=n(". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),me=o("a"),go=n("here"),vo=n("."),Zt=f(),Ue=o("p"),_o=n("There are several ways to upload models to the Hub, described below."),ea=f(),T=o("h3"),Q=o("a"),ft=o("span"),j(pe.$$.fragment),bo=f(),ut=o("span"),yo=n("Using the web interface"),ta=f(),W=o("p"),wo=n("To create a brand new model repository, visit "),ge=o("a"),Eo=n("huggingface.co/new"),ko=n(". Then follow these steps:"),aa=f(),je=o("ol"),dt=o("li"),$o=n("In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),oa=f(),L=o("div"),ve=o("img"),Io=f(),_e=o("img"),la=f(),be=o("ol"),mt=o("li"),Ao=n("From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),ra=f(),M=o("div"),He=o("img"),Po=f(),Ne=o("img"),sa=f(),x=o("ol"),pt=o("li"),ye=o("p"),To=n("Afterwards, click "),gt=o("strong"),Lo=n("Commit changes"),Mo=n(" to upload your model to the Hub!"),xo=f(),vt=o("li"),_t=o("p"),Go=n("Inspect files and history"),ia=f(),Fe=o("p"),Oo=n("You can check your repository with all the recently added files!"),na=f(),G=o("div"),Ye=o("img"),So=f(),ze=o("img"),ca=f(),Re=o("p"),Do=n("The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),ha=f(),O=o("div"),Be=o("img"),Co=f(),qe=o("img"),fa=f(),we=o("ol"),bt=o("li"),Uo=n("Add metadata"),ua=f(),Ve=o("p"),jo=n("You can add metadata to your model card. You can specify:"),da=f(),d=o("ul"),yt=o("li"),Ho=n("the type of task this model is for, enabling widgets and the Inference API."),No=f(),S=o("li"),Fo=n("the used library ("),wt=o("code"),Yo=n("transformers"),zo=n(", "),Et=o("code"),Ro=n("spaCy"),Bo=n(", etc.)"),qo=f(),kt=o("li"),Vo=n("the language"),Jo=f(),$t=o("li"),Ko=n("the dataset"),Qo=f(),It=o("li"),Wo=n("metrics"),Xo=f(),At=o("li"),Zo=n("license"),el=f(),Pt=o("li"),tl=n("a lot more!"),ma=f(),X=o("p"),al=n("Read more about model tags "),Je=o("a"),ol=n("here"),ll=n("."),pa=f(),Ee=o("ol"),Tt=o("li"),rl=n("Add TensorBoard traces"),ga=f(),v=o("p"),sl=n("Any repository that contains TensorBoard traces (filenames that contain "),Lt=o("code"),il=n("tfevents"),nl=n(") is categorized with the "),Z=o("a"),Mt=o("code"),cl=n("TensorBoard"),hl=n(" tag"),fl=n(". As a convention, we suggest that you save traces under the "),xt=o("code"),ul=n("runs/"),dl=n(" subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),va=f(),D=o("div"),Ke=o("img"),ml=f(),Qe=o("img"),_a=f(),_=o("p"),pl=n("Models trained with \u{1F917} Transformers will generate "),ke=o("a"),gl=n("TensorBoard traces"),vl=n(" by default if "),$e=o("a"),Gt=o("code"),_l=n("tensorboard"),bl=n(" is installed."),ba=f(),C=o("h3"),ee=o("a"),Ot=o("span"),j(Ie.$$.fragment),yl=f(),St=o("span"),wl=n("Using Git"),ya=f(),b=o("p"),El=n("Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),We=o("a"),kl=n("Getting Started with Repositories"),$l=n(" to learn about using the "),Dt=o("code"),Il=n("git"),Al=n(" CLI to commit and push your models."),wa=f(),U=o("h3"),te=o("a"),Ct=o("span"),j(Ae.$$.fragment),Pl=f(),Pe=o("span"),Tl=n("Using the "),Ut=o("code"),Ll=n("huggingface_hub"),Ml=n(" client library"),Ea=f(),y=o("p"),xl=n("The rich feature set in the "),jt=o("code"),Gl=n("huggingface_hub"),Ol=n(" library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),Te=o("a"),Sl=n("the client library\u2019s documentation"),Dl=n(" to learn more."),this.h()},l(e){const i=ms('[data-svelte="svelte-1phssyn"]',document.head);w=l(i,"META",{name:!0,content:!0}),i.forEach(a),Ht=u(e),E=l(e,"H1",{class:!0});var $a=r(E);R=l($a,"A",{id:!0,class:!0,href:!0});var Xl=r(R);at=l(Xl,"SPAN",{});var Zl=r(at);H(le.$$.fragment,Zl),Zl.forEach(a),Xl.forEach(a),Ba=u($a),ot=l($a,"SPAN",{});var er=r(ot);qa=c(er,"Interacting with models on the hub"),er.forEach(a),$a.forEach(a),Nt=u(e),k=l(e,"H2",{class:!0});var Ia=r(k);B=l(Ia,"A",{id:!0,class:!0,href:!0});var tr=r(B);lt=l(tr,"SPAN",{});var ar=r(lt);H(re.$$.fragment,ar),ar.forEach(a),tr.forEach(a),Va=u(Ia),rt=l(Ia,"SPAN",{});var or=r(rt);Ja=c(or,"Accessing models for local use"),or.forEach(a),Ia.forEach(a),Ft=u(e),Me=l(e,"P",{});var lr=r(Me);Ka=c(lr,"Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),lr.forEach(a),Yt=u(e),H(se.$$.fragment,e),zt=u(e),xe=l(e,"P",{});var rr=r(xe);Qa=c(rr,"For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),rr.forEach(a),Rt=u(e),$=l(e,"DIV",{class:!0});var Aa=r($);Ge=l(Aa,"IMG",{class:!0,src:!0}),Wa=u(Aa),Oe=l(Aa,"IMG",{class:!0,src:!0}),Aa.forEach(a),Bt=u(e),Se=l(e,"P",{});var sr=r(Se);Xa=c(sr,"If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),sr.forEach(a),qt=u(e),I=l(e,"DIV",{class:!0});var Pa=r(I);De=l(Pa,"IMG",{class:!0,src:!0}),Za=u(Pa),Ce=l(Pa,"IMG",{class:!0,src:!0}),Pa.forEach(a),Vt=u(e),A=l(e,"H3",{class:!0});var Ta=r(A);q=l(Ta,"A",{id:!0,class:!0,href:!0});var ir=r(q);st=l(ir,"SPAN",{});var nr=r(st);H(ie.$$.fragment,nr),nr.forEach(a),ir.forEach(a),eo=u(Ta),it=l(Ta,"SPAN",{});var cr=r(it);to=c(cr,"Can I access models programmatically?"),cr.forEach(a),Ta.forEach(a),Jt=u(e),V=l(e,"P",{});var La=r(V);ao=c(La,"You can use the "),ne=l(La,"A",{href:!0,rel:!0});var hr=r(ne);nt=l(hr,"CODE",{});var fr=r(nt);oo=c(fr,"huggingface_hub"),fr.forEach(a),hr.forEach(a),lo=c(La," library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),La.forEach(a),Kt=u(e),H(ce.$$.fragment,e),Qt=u(e),P=l(e,"H2",{class:!0});var Ma=r(P);J=l(Ma,"A",{id:!0,class:!0,href:!0});var ur=r(J);ct=l(ur,"SPAN",{});var dr=r(ct);H(he.$$.fragment,dr),dr.forEach(a),ur.forEach(a),ro=u(Ma),ht=l(Ma,"SPAN",{});var mr=r(ht);so=c(mr,"Uploading models"),mr.forEach(a),Ma.forEach(a),Wt=u(e),K=l(e,"P",{});var xa=r(K);io=c(xa,"The first step is to create an account at "),fe=l(xa,"A",{href:!0,rel:!0});var pr=r(fe);no=c(pr,"Hugging Face"),pr.forEach(a),co=c(xa,". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),xa.forEach(a),Xt=u(e),g=l(e,"P",{});var ae=r(g);ho=c(ae,"You can link repositories with an individual, such as "),ue=l(ae,"A",{href:!0,rel:!0});var gr=r(ue);fo=c(gr,"osanseviero/fashion_brands_patterns"),gr.forEach(a),uo=c(ae,", or with an organization, such as "),de=l(ae,"A",{href:!0,rel:!0});var vr=r(de);mo=c(vr,"facebook/bart-large-xsum"),vr.forEach(a),po=c(ae,". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),me=l(ae,"A",{href:!0,rel:!0});var _r=r(me);go=c(_r,"here"),_r.forEach(a),vo=c(ae,"."),ae.forEach(a),Zt=u(e),Ue=l(e,"P",{});var br=r(Ue);_o=c(br,"There are several ways to upload models to the Hub, described below."),br.forEach(a),ea=u(e),T=l(e,"H3",{class:!0});var Ga=r(T);Q=l(Ga,"A",{id:!0,class:!0,href:!0});var yr=r(Q);ft=l(yr,"SPAN",{});var wr=r(ft);H(pe.$$.fragment,wr),wr.forEach(a),yr.forEach(a),bo=u(Ga),ut=l(Ga,"SPAN",{});var Er=r(ut);yo=c(Er,"Using the web interface"),Er.forEach(a),Ga.forEach(a),ta=u(e),W=l(e,"P",{});var Oa=r(W);wo=c(Oa,"To create a brand new model repository, visit "),ge=l(Oa,"A",{href:!0,rel:!0});var kr=r(ge);Eo=c(kr,"huggingface.co/new"),kr.forEach(a),ko=c(Oa,". Then follow these steps:"),Oa.forEach(a),aa=u(e),je=l(e,"OL",{});var $r=r(je);dt=l($r,"LI",{});var Ir=r(dt);$o=c(Ir,"In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),Ir.forEach(a),$r.forEach(a),oa=u(e),L=l(e,"DIV",{class:!0});var Sa=r(L);ve=l(Sa,"IMG",{class:!0,width:!0,src:!0}),Io=u(Sa),_e=l(Sa,"IMG",{class:!0,width:!0,src:!0}),Sa.forEach(a),la=u(e),be=l(e,"OL",{start:!0});var Ar=r(be);mt=l(Ar,"LI",{});var Pr=r(mt);Ao=c(Pr,"From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),Pr.forEach(a),Ar.forEach(a),ra=u(e),M=l(e,"DIV",{class:!0});var Da=r(M);He=l(Da,"IMG",{class:!0,src:!0}),Po=u(Da),Ne=l(Da,"IMG",{class:!0,src:!0}),Da.forEach(a),sa=u(e),x=l(e,"OL",{start:!0});var Ca=r(x);pt=l(Ca,"LI",{});var Tr=r(pt);ye=l(Tr,"P",{});var Ua=r(ye);To=c(Ua,"Afterwards, click "),gt=l(Ua,"STRONG",{});var Lr=r(gt);Lo=c(Lr,"Commit changes"),Lr.forEach(a),Mo=c(Ua," to upload your model to the Hub!"),Ua.forEach(a),Tr.forEach(a),xo=u(Ca),vt=l(Ca,"LI",{});var Mr=r(vt);_t=l(Mr,"P",{});var xr=r(_t);Go=c(xr,"Inspect files and history"),xr.forEach(a),Mr.forEach(a),Ca.forEach(a),ia=u(e),Fe=l(e,"P",{});var Gr=r(Fe);Oo=c(Gr,"You can check your repository with all the recently added files!"),Gr.forEach(a),na=u(e),G=l(e,"DIV",{class:!0});var ja=r(G);Ye=l(ja,"IMG",{class:!0,src:!0}),So=u(ja),ze=l(ja,"IMG",{class:!0,src:!0}),ja.forEach(a),ca=u(e),Re=l(e,"P",{});var Or=r(Re);Do=c(Or,"The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),Or.forEach(a),ha=u(e),O=l(e,"DIV",{class:!0});var Ha=r(O);Be=l(Ha,"IMG",{class:!0,src:!0}),Co=u(Ha),qe=l(Ha,"IMG",{class:!0,src:!0}),Ha.forEach(a),fa=u(e),we=l(e,"OL",{start:!0});var Sr=r(we);bt=l(Sr,"LI",{});var Dr=r(bt);Uo=c(Dr,"Add metadata"),Dr.forEach(a),Sr.forEach(a),ua=u(e),Ve=l(e,"P",{});var Cr=r(Ve);jo=c(Cr,"You can add metadata to your model card. You can specify:"),Cr.forEach(a),da=u(e),d=l(e,"UL",{});var m=r(d);yt=l(m,"LI",{});var Ur=r(yt);Ho=c(Ur,"the type of task this model is for, enabling widgets and the Inference API."),Ur.forEach(a),No=u(m),S=l(m,"LI",{});var Xe=r(S);Fo=c(Xe,"the used library ("),wt=l(Xe,"CODE",{});var jr=r(wt);Yo=c(jr,"transformers"),jr.forEach(a),zo=c(Xe,", "),Et=l(Xe,"CODE",{});var Hr=r(Et);Ro=c(Hr,"spaCy"),Hr.forEach(a),Bo=c(Xe,", etc.)"),Xe.forEach(a),qo=u(m),kt=l(m,"LI",{});var Nr=r(kt);Vo=c(Nr,"the language"),Nr.forEach(a),Jo=u(m),$t=l(m,"LI",{});var Fr=r($t);Ko=c(Fr,"the dataset"),Fr.forEach(a),Qo=u(m),It=l(m,"LI",{});var Yr=r(It);Wo=c(Yr,"metrics"),Yr.forEach(a),Xo=u(m),At=l(m,"LI",{});var zr=r(At);Zo=c(zr,"license"),zr.forEach(a),el=u(m),Pt=l(m,"LI",{});var Rr=r(Pt);tl=c(Rr,"a lot more!"),Rr.forEach(a),m.forEach(a),ma=u(e),X=l(e,"P",{});var Na=r(X);al=c(Na,"Read more about model tags "),Je=l(Na,"A",{href:!0});var Br=r(Je);ol=c(Br,"here"),Br.forEach(a),ll=c(Na,"."),Na.forEach(a),pa=u(e),Ee=l(e,"OL",{start:!0});var qr=r(Ee);Tt=l(qr,"LI",{});var Vr=r(Tt);rl=c(Vr,"Add TensorBoard traces"),Vr.forEach(a),qr.forEach(a),ga=u(e),v=l(e,"P",{});var oe=r(v);sl=c(oe,"Any repository that contains TensorBoard traces (filenames that contain "),Lt=l(oe,"CODE",{});var Jr=r(Lt);il=c(Jr,"tfevents"),Jr.forEach(a),nl=c(oe,") is categorized with the "),Z=l(oe,"A",{href:!0,rel:!0});var Cl=r(Z);Mt=l(Cl,"CODE",{});var Kr=r(Mt);cl=c(Kr,"TensorBoard"),Kr.forEach(a),hl=c(Cl," tag"),Cl.forEach(a),fl=c(oe,". As a convention, we suggest that you save traces under the "),xt=l(oe,"CODE",{});var Qr=r(xt);ul=c(Qr,"runs/"),Qr.forEach(a),dl=c(oe," subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),oe.forEach(a),va=u(e),D=l(e,"DIV",{class:!0});var Fa=r(D);Ke=l(Fa,"IMG",{class:!0,src:!0}),ml=u(Fa),Qe=l(Fa,"IMG",{class:!0,src:!0}),Fa.forEach(a),_a=u(e),_=l(e,"P",{});var Ze=r(_);pl=c(Ze,"Models trained with \u{1F917} Transformers will generate "),ke=l(Ze,"A",{href:!0,rel:!0});var Wr=r(ke);gl=c(Wr,"TensorBoard traces"),Wr.forEach(a),vl=c(Ze," by default if "),$e=l(Ze,"A",{href:!0,rel:!0});var Xr=r($e);Gt=l(Xr,"CODE",{});var Zr=r(Gt);_l=c(Zr,"tensorboard"),Zr.forEach(a),Xr.forEach(a),bl=c(Ze," is installed."),Ze.forEach(a),ba=u(e),C=l(e,"H3",{class:!0});var Ya=r(C);ee=l(Ya,"A",{id:!0,class:!0,href:!0});var es=r(ee);Ot=l(es,"SPAN",{});var ts=r(Ot);H(Ie.$$.fragment,ts),ts.forEach(a),es.forEach(a),yl=u(Ya),St=l(Ya,"SPAN",{});var as=r(St);wl=c(as,"Using Git"),as.forEach(a),Ya.forEach(a),ya=u(e),b=l(e,"P",{});var et=r(b);El=c(et,"Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),We=l(et,"A",{href:!0});var os=r(We);kl=c(os,"Getting Started with Repositories"),os.forEach(a),$l=c(et," to learn about using the "),Dt=l(et,"CODE",{});var ls=r(Dt);Il=c(ls,"git"),ls.forEach(a),Al=c(et," CLI to commit and push your models."),et.forEach(a),wa=u(e),U=l(e,"H3",{class:!0});var za=r(U);te=l(za,"A",{id:!0,class:!0,href:!0});var rs=r(te);Ct=l(rs,"SPAN",{});var ss=r(Ct);H(Ae.$$.fragment,ss),ss.forEach(a),rs.forEach(a),Pl=u(za),Pe=l(za,"SPAN",{});var Ra=r(Pe);Tl=c(Ra,"Using the "),Ut=l(Ra,"CODE",{});var is=r(Ut);Ll=c(is,"huggingface_hub"),is.forEach(a),Ml=c(Ra," client library"),Ra.forEach(a),za.forEach(a),Ea=u(e),y=l(e,"P",{});var tt=r(y);xl=c(tt,"The rich feature set in the "),jt=l(tt,"CODE",{});var ns=r(jt);Gl=c(ns,"huggingface_hub"),ns.forEach(a),Ol=c(tt," library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),Te=l(tt,"A",{href:!0,rel:!0});var cs=r(Te);Sl=c(cs,"the client library\u2019s documentation"),cs.forEach(a),Dl=c(tt," to learn more."),tt.forEach(a),this.h()},h(){s(w,"name","hf:doc:metadata"),s(w,"content",JSON.stringify(_s)),s(R,"id","interacting-with-models-on-the-hub"),s(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(R,"href","#interacting-with-models-on-the-hub"),s(E,"class","relative group"),s(B,"id","accessing-models-for-local-use"),s(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(B,"href","#accessing-models-for-local-use"),s(k,"class","relative group"),s(Ge,"class","block dark:hidden"),p(Ge.src,jl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage.png")||s(Ge,"src",jl),s(Oe,"class","hidden dark:block"),p(Oe.src,Hl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-dark.png")||s(Oe,"src",Hl),s($,"class","flex justify-center"),s(De,"class","block dark:hidden"),p(De.src,Nl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-modal.png")||s(De,"src",Nl),s(Ce,"class","hidden dark:block"),p(Ce.src,Fl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-modal-dark.png")||s(Ce,"src",Fl),s(I,"class","flex justify-center"),s(q,"id","can-i-access-models-programmatically"),s(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(q,"href","#can-i-access-models-programmatically"),s(A,"class","relative group"),s(ne,"href","https://github.com/huggingface/huggingface_hub"),s(ne,"rel","nofollow"),s(J,"id","uploading-models"),s(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(J,"href","#uploading-models"),s(P,"class","relative group"),s(fe,"href","https://huggingface.co/login"),s(fe,"rel","nofollow"),s(ue,"href","https://huggingface.co/osanseviero/fashion_brands_patterns"),s(ue,"rel","nofollow"),s(de,"href","https://huggingface.co/facebook/bart-large-xsum"),s(de,"rel","nofollow"),s(me,"href","https://huggingface.co/organizations/new"),s(me,"rel","nofollow"),s(Q,"id","using-the-web-interface"),s(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(Q,"href","#using-the-web-interface"),s(T,"class","relative group"),s(ge,"href","http://huggingface.co/new"),s(ge,"rel","nofollow"),s(ve,"class","block dark:hidden"),s(ve,"width","300"),p(ve.src,Yl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file.png")||s(ve,"src",Yl),s(_e,"class","hidden dark:block"),s(_e,"width","300"),p(_e.src,zl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file-dark.png")||s(_e,"src",zl),s(L,"class","flex justify-center"),s(be,"start","2"),s(He,"class","block dark:hidden"),p(He.src,Rl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file.png")||s(He,"src",Rl),s(Ne,"class","hidden dark:block"),p(Ne.src,Bl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file-dark.png")||s(Ne,"src",Bl),s(M,"class","flex justify-center"),s(x,"start","3"),s(Ye,"class","block dark:hidden"),p(Ye.src,ql="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png")||s(Ye,"src",ql),s(ze,"class","hidden dark:block"),p(ze.src,Vl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files-dark.png")||s(ze,"src",Vl),s(G,"class","flex justify-center"),s(Be,"class","block dark:hidden"),p(Be.src,Jl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif")||s(Be,"src",Jl),s(qe,"class","hidden dark:block"),p(qe.src,Kl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history-dark.gif")||s(qe,"src",Kl),s(O,"class","flex justify-center"),s(we,"start","5"),s(Je,"href","/docs/hub/model-repos#model-card-metadata"),s(Ee,"start","6"),s(Z,"href","https://huggingface.co/models?filter=tensorboard"),s(Z,"rel","nofollow"),s(Ke,"class","block dark:hidden"),p(Ke.src,Ql="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/tensorboard.png")||s(Ke,"src",Ql),s(Qe,"class","hidden dark:block"),p(Qe.src,Wl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/tensorboard-dark.png")||s(Qe,"src",Wl),s(D,"class","flex justify-center"),s(ke,"href","https://huggingface.co/transformers/main_classes/callback.html?highlight=tensorboard#transformers.integrations.TensorBoardCallback"),s(ke,"rel","nofollow"),s($e,"href","https://pypi.org/project/tensorboard/"),s($e,"rel","nofollow"),s(ee,"id","using-git"),s(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ee,"href","#using-git"),s(C,"class","relative group"),s(We,"href","repositories-getting-started.md"),s(te,"id","using-the-huggingfacehub-client-library"),s(te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(te,"href","#using-the-huggingfacehub-client-library"),s(U,"class","relative group"),s(Te,"href","https://huggingface.co/docs/huggingface_hub/index"),s(Te,"rel","nofollow")},m(e,i){t(document.head,w),h(e,Ht,i),h(e,E,i),t(E,R),t(R,at),N(le,at,null),t(E,Ba),t(E,ot),t(ot,qa),h(e,Nt,i),h(e,k,i),t(k,B),t(B,lt),N(re,lt,null),t(k,Va),t(k,rt),t(rt,Ja),h(e,Ft,i),h(e,Me,i),t(Me,Ka),h(e,Yt,i),N(se,e,i),h(e,zt,i),h(e,xe,i),t(xe,Qa),h(e,Rt,i),h(e,$,i),t($,Ge),t($,Wa),t($,Oe),h(e,Bt,i),h(e,Se,i),t(Se,Xa),h(e,qt,i),h(e,I,i),t(I,De),t(I,Za),t(I,Ce),h(e,Vt,i),h(e,A,i),t(A,q),t(q,st),N(ie,st,null),t(A,eo),t(A,it),t(it,to),h(e,Jt,i),h(e,V,i),t(V,ao),t(V,ne),t(ne,nt),t(nt,oo),t(V,lo),h(e,Kt,i),N(ce,e,i),h(e,Qt,i),h(e,P,i),t(P,J),t(J,ct),N(he,ct,null),t(P,ro),t(P,ht),t(ht,so),h(e,Wt,i),h(e,K,i),t(K,io),t(K,fe),t(fe,no),t(K,co),h(e,Xt,i),h(e,g,i),t(g,ho),t(g,ue),t(ue,fo),t(g,uo),t(g,de),t(de,mo),t(g,po),t(g,me),t(me,go),t(g,vo),h(e,Zt,i),h(e,Ue,i),t(Ue,_o),h(e,ea,i),h(e,T,i),t(T,Q),t(Q,ft),N(pe,ft,null),t(T,bo),t(T,ut),t(ut,yo),h(e,ta,i),h(e,W,i),t(W,wo),t(W,ge),t(ge,Eo),t(W,ko),h(e,aa,i),h(e,je,i),t(je,dt),t(dt,$o),h(e,oa,i),h(e,L,i),t(L,ve),t(L,Io),t(L,_e),h(e,la,i),h(e,be,i),t(be,mt),t(mt,Ao),h(e,ra,i),h(e,M,i),t(M,He),t(M,Po),t(M,Ne),h(e,sa,i),h(e,x,i),t(x,pt),t(pt,ye),t(ye,To),t(ye,gt),t(gt,Lo),t(ye,Mo),t(x,xo),t(x,vt),t(vt,_t),t(_t,Go),h(e,ia,i),h(e,Fe,i),t(Fe,Oo),h(e,na,i),h(e,G,i),t(G,Ye),t(G,So),t(G,ze),h(e,ca,i),h(e,Re,i),t(Re,Do),h(e,ha,i),h(e,O,i),t(O,Be),t(O,Co),t(O,qe),h(e,fa,i),h(e,we,i),t(we,bt),t(bt,Uo),h(e,ua,i),h(e,Ve,i),t(Ve,jo),h(e,da,i),h(e,d,i),t(d,yt),t(yt,Ho),t(d,No),t(d,S),t(S,Fo),t(S,wt),t(wt,Yo),t(S,zo),t(S,Et),t(Et,Ro),t(S,Bo),t(d,qo),t(d,kt),t(kt,Vo),t(d,Jo),t(d,$t),t($t,Ko),t(d,Qo),t(d,It),t(It,Wo),t(d,Xo),t(d,At),t(At,Zo),t(d,el),t(d,Pt),t(Pt,tl),h(e,ma,i),h(e,X,i),t(X,al),t(X,Je),t(Je,ol),t(X,ll),h(e,pa,i),h(e,Ee,i),t(Ee,Tt),t(Tt,rl),h(e,ga,i),h(e,v,i),t(v,sl),t(v,Lt),t(Lt,il),t(v,nl),t(v,Z),t(Z,Mt),t(Mt,cl),t(Z,hl),t(v,fl),t(v,xt),t(xt,ul),t(v,dl),h(e,va,i),h(e,D,i),t(D,Ke),t(D,ml),t(D,Qe),h(e,_a,i),h(e,_,i),t(_,pl),t(_,ke),t(ke,gl),t(_,vl),t(_,$e),t($e,Gt),t(Gt,_l),t(_,bl),h(e,ba,i),h(e,C,i),t(C,ee),t(ee,Ot),N(Ie,Ot,null),t(C,yl),t(C,St),t(St,wl),h(e,ya,i),h(e,b,i),t(b,El),t(b,We),t(We,kl),t(b,$l),t(b,Dt),t(Dt,Il),t(b,Al),h(e,wa,i),h(e,U,i),t(U,te),t(te,Ct),N(Ae,Ct,null),t(U,Pl),t(U,Pe),t(Pe,Tl),t(Pe,Ut),t(Ut,Ll),t(Pe,Ml),h(e,Ea,i),h(e,y,i),t(y,xl),t(y,jt),t(jt,Gl),t(y,Ol),t(y,Te),t(Te,Sl),t(y,Dl),ka=!0},p:ps,i(e){ka||(F(le.$$.fragment,e),F(re.$$.fragment,e),F(se.$$.fragment,e),F(ie.$$.fragment,e),F(ce.$$.fragment,e),F(he.$$.fragment,e),F(pe.$$.fragment,e),F(Ie.$$.fragment,e),F(Ae.$$.fragment,e),ka=!0)},o(e){Y(le.$$.fragment,e),Y(re.$$.fragment,e),Y(se.$$.fragment,e),Y(ie.$$.fragment,e),Y(ce.$$.fragment,e),Y(he.$$.fragment,e),Y(pe.$$.fragment,e),Y(Ie.$$.fragment,e),Y(Ae.$$.fragment,e),ka=!1},d(e){a(w),e&&a(Ht),e&&a(E),z(le),e&&a(Nt),e&&a(k),z(re),e&&a(Ft),e&&a(Me),e&&a(Yt),z(se,e),e&&a(zt),e&&a(xe),e&&a(Rt),e&&a($),e&&a(Bt),e&&a(Se),e&&a(qt),e&&a(I),e&&a(Vt),e&&a(A),z(ie),e&&a(Jt),e&&a(V),e&&a(Kt),z(ce,e),e&&a(Qt),e&&a(P),z(he),e&&a(Wt),e&&a(K),e&&a(Xt),e&&a(g),e&&a(Zt),e&&a(Ue),e&&a(ea),e&&a(T),z(pe),e&&a(ta),e&&a(W),e&&a(aa),e&&a(je),e&&a(oa),e&&a(L),e&&a(la),e&&a(be),e&&a(ra),e&&a(M),e&&a(sa),e&&a(x),e&&a(ia),e&&a(Fe),e&&a(na),e&&a(G),e&&a(ca),e&&a(Re),e&&a(ha),e&&a(O),e&&a(fa),e&&a(we),e&&a(ua),e&&a(Ve),e&&a(da),e&&a(d),e&&a(ma),e&&a(X),e&&a(pa),e&&a(Ee),e&&a(ga),e&&a(v),e&&a(va),e&&a(D),e&&a(_a),e&&a(_),e&&a(ba),e&&a(C),z(Ie),e&&a(ya),e&&a(b),e&&a(wa),e&&a(U),z(Ae),e&&a(Ea),e&&a(y)}}}const _s={local:"interacting-with-models-on-the-hub",sections:[{local:"accessing-models-for-local-use",sections:[{local:"can-i-access-models-programmatically",title:"Can I access models programmatically?"}],title:"Accessing models for local use"},{local:"uploading-models",sections:[{local:"using-the-web-interface",title:"Using the web interface"},{local:"using-git",title:"Using Git"},{local:"using-the-huggingfacehub-client-library",title:"Using the `huggingface_hub` client library"}],title:"Uploading models"}],title:"Interacting with models on the hub"};function bs(Ul){return gs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ks extends fs{constructor(w){super();us(this,w,bs,vs,ds,{})}}export{ks as default,_s as metadata};
