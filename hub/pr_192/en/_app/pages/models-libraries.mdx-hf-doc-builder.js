import{S as Bh,i as Wh,s as qh,e as r,k as n,w as Ih,t as l,N as Gh,c as a,d as e,m as s,a as o,x as $h,h as d,b as h,G as t,g as K,y as xh,L as Jh,q as Fh,o as Mh,B as Oh,v as Vh}from"../chunks/vendor-hf-doc-builder.js";import{I as zh}from"../chunks/IconCopyLink-hf-doc-builder.js";function Uh(ln){let Y,Nr,Q,tt,Jt,dt,Vr,Vt,Ur,Ir,et,Xr,Ut,jr,Kr,$r,rt,Yr,nt,Qr,Zr,xr,at,Xt,u,jt,ta,ea,Kt,ra,aa,Yt,oa,la,Pt,da,na,Qt,sa,ha,Zt,ia,fa,f,v,te,st,ca,ua,ee,va,Ta,re,_a,pa,St,Ea,ga,ae,ma,ba,oe,Da,ya,T,le,ht,wa,Aa,de,Pa,Sa,ne,La,ka,Lt,Ra,Ha,se,Ca,Na,he,Ia,$a,_,ie,it,xa,Fa,fe,Ma,Oa,ce,za,Ba,kt,Wa,qa,ue,Ga,Ja,ve,Va,Ua,p,Te,ft,Xa,ja,_e,Ka,Ya,pe,Qa,Za,Rt,to,eo,Ee,ro,ao,ge,oo,lo,E,me,ct,no,so,be,ho,io,De,fo,co,Ht,uo,vo,ye,To,_o,we,po,Eo,g,Ae,ut,go,mo,Pe,bo,Do,Se,yo,wo,Ct,Ao,Po,Le,So,Lo,ke,ko,Ro,m,Re,vt,Ho,Co,He,No,Io,Ce,$o,xo,Nt,Fo,Mo,Ne,Oo,zo,Ie,Bo,Wo,b,$e,Tt,qo,Go,xe,Jo,Vo,Fe,Uo,Xo,It,jo,Ko,Me,Yo,Qo,Oe,Zo,tl,D,ze,_t,el,rl,Be,al,ol,We,ll,dl,$t,nl,sl,qe,hl,il,Ge,fl,cl,y,Je,pt,ul,vl,Ve,Tl,_l,Ue,pl,El,xt,gl,ml,Xe,bl,Dl,je,yl,wl,w,Ke,Et,Al,Pl,Ye,Sl,Ll,Qe,kl,Rl,Ft,Hl,Cl,Ze,Nl,Il,tr,$l,xl,A,er,gt,Fl,Ml,rr,Ol,zl,ar,Bl,Wl,Mt,ql,Gl,or,Jl,Vl,lr,Ul,Xl,P,dr,mt,jl,Kl,nr,Yl,Ql,sr,Zl,td,Ot,ed,rd,hr,ad,od,ir,ld,dd,S,fr,bt,nd,sd,cr,hd,id,ur,fd,cd,zt,ud,vd,vr,Td,_d,Tr,pd,Ed,L,_r,Dt,gd,md,pr,bd,Dd,Er,yd,wd,Bt,Ad,Pd,gr,Sd,Ld,mr,kd,Rd,k,br,yt,Hd,Cd,Dr,Nd,Id,yr,$d,xd,Wt,Fd,Md,wr,Od,zd,Ar,Bd,Wd,R,Pr,wt,qd,Gd,Sr,Jd,Vd,Lr,Ud,Xd,qt,jd,Kd,kr,Yd,Qd,Rr,Zd,Fr,Z,ot,Hr,At,tn,Cr,en,Mr,lt,rn,Gt,an,on,Or;return dt=new zh({}),At=new zh({}),{c(){Y=r("meta"),Nr=n(),Q=r("h1"),tt=r("a"),Jt=r("span"),Ih(dt.$$.fragment),Vr=n(),Vt=r("span"),Ur=l("Libraries"),Ir=n(),et=r("p"),Xr=l("The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),Ut=r("code"),jr=l("huggingface_hub"),Kr=l(" Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),$r=n(),rt=r("p"),Yr=l("The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),nt=r("a"),Qr=l("here"),Zr=l("!"),xr=n(),at=r("table"),Xt=r("thead"),u=r("tr"),jt=r("th"),ta=l("Library"),ea=n(),Kt=r("th"),ra=l("Description"),aa=n(),Yt=r("th"),oa=l("Inference API"),la=n(),Pt=r("th"),da=l("Widgets"),na=n(),Qt=r("th"),sa=l("Download from Hub"),ha=n(),Zt=r("th"),ia=l("Push to Hub"),fa=n(),f=r("tbody"),v=r("tr"),te=r("td"),st=r("a"),ca=l("\u{1F917} Transformers"),ua=n(),ee=r("td"),va=l("State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),Ta=n(),re=r("td"),_a=l("\u2705"),pa=n(),St=r("td"),Ea=l("\u2705"),ga=n(),ae=r("td"),ma=l("\u2705"),ba=n(),oe=r("td"),Da=l("\u2705"),ya=n(),T=r("tr"),le=r("td"),ht=r("a"),wa=l("Adapter Transformers"),Aa=n(),de=r("td"),Pa=l("Extends \u{1F917}Transformers with Adapters."),Sa=n(),ne=r("td"),La=l("\u274C"),ka=n(),Lt=r("td"),Ra=l("\u274C"),Ha=n(),se=r("td"),Ca=l("\u2705"),Na=n(),he=r("td"),Ia=l("\u2705"),$a=n(),_=r("tr"),ie=r("td"),it=r("a"),xa=l("AllenNLP"),Fa=n(),fe=r("td"),Ma=l("An open-source NLP research library, built on PyTorch."),Oa=n(),ce=r("td"),za=l("\u2705"),Ba=n(),kt=r("td"),Wa=l("\u2705"),qa=n(),ue=r("td"),Ga=l("\u2705"),Ja=n(),ve=r("td"),Va=l("\u274C"),Ua=n(),p=r("tr"),Te=r("td"),ft=r("a"),Xa=l("Asteroid"),ja=n(),_e=r("td"),Ka=l("Pytorch-based audio source separation toolkit"),Ya=n(),pe=r("td"),Qa=l("\u2705"),Za=n(),Rt=r("td"),to=l("\u2705"),eo=n(),Ee=r("td"),ro=l("\u2705"),ao=n(),ge=r("td"),oo=l("\u274C"),lo=n(),E=r("tr"),me=r("td"),ct=r("a"),no=l("docTR"),so=n(),be=r("td"),ho=l("Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),io=n(),De=r("td"),fo=l("\u2705"),co=n(),Ht=r("td"),uo=l("\u2705"),vo=n(),ye=r("td"),To=l("\u2705"),_o=n(),we=r("td"),po=l("\u274C"),Eo=n(),g=r("tr"),Ae=r("td"),ut=r("a"),go=l("ESPnet"),mo=n(),Pe=r("td"),bo=l("End-to-end speech processing toolkit (e.g. TTS)"),Do=n(),Se=r("td"),yo=l("\u2705"),wo=n(),Ct=r("td"),Ao=l("\u2705"),Po=n(),Le=r("td"),So=l("\u2705"),Lo=n(),ke=r("td"),ko=l("\u274C"),Ro=n(),m=r("tr"),Re=r("td"),vt=r("a"),Ho=l("fastai"),Co=n(),He=r("td"),No=l("Library to train fast and accurate models with state-of-the-art outputs."),Io=n(),Ce=r("td"),$o=l("\u2705"),xo=n(),Nt=r("td"),Fo=l("\u2705"),Mo=n(),Ne=r("td"),Oo=l("\u2705"),zo=n(),Ie=r("td"),Bo=l("\u2705"),Wo=n(),b=r("tr"),$e=r("td"),Tt=r("a"),qo=l("Flair"),Go=n(),xe=r("td"),Jo=l("Very simple framework for state-of-the-art NLP."),Vo=n(),Fe=r("td"),Uo=l("\u2705"),Xo=n(),It=r("td"),jo=l("\u2705"),Ko=n(),Me=r("td"),Yo=l("\u2705"),Qo=n(),Oe=r("td"),Zo=l("\u274C"),tl=n(),D=r("tr"),ze=r("td"),_t=r("a"),el=l("NeMo"),rl=n(),Be=r("td"),al=l("Conversational AI toolkit built for researchers"),ol=n(),We=r("td"),ll=l("\u2705"),dl=n(),$t=r("td"),nl=l("\u2705"),sl=n(),qe=r("td"),hl=l("\u2705"),il=n(),Ge=r("td"),fl=l("\u274C"),cl=n(),y=r("tr"),Je=r("td"),pt=r("a"),ul=l("Pyannote"),vl=n(),Ve=r("td"),Tl=l("Neural building blocks for speaker diarization."),_l=n(),Ue=r("td"),pl=l("\u274C"),El=n(),xt=r("td"),gl=l("\u274C"),ml=n(),Xe=r("td"),bl=l("\u2705"),Dl=n(),je=r("td"),yl=l("\u274C"),wl=n(),w=r("tr"),Ke=r("td"),Et=r("a"),Al=l("PyCTCDecode"),Pl=n(),Ye=r("td"),Sl=l("Language model supported CTC decoding for speech recognition"),Ll=n(),Qe=r("td"),kl=l("\u274C"),Rl=n(),Ft=r("td"),Hl=l("\u274C"),Cl=n(),Ze=r("td"),Nl=l("\u2705"),Il=n(),tr=r("td"),$l=l("\u274C"),xl=n(),A=r("tr"),er=r("td"),gt=r("a"),Fl=l("Sentence Transformers"),Ml=n(),rr=r("td"),Ol=l("Compute dense vector representations for sentences, paragraphs, and images."),zl=n(),ar=r("td"),Bl=l("\u2705"),Wl=n(),Mt=r("td"),ql=l("\u2705"),Gl=n(),or=r("td"),Jl=l("\u2705"),Vl=n(),lr=r("td"),Ul=l("\u2705"),Xl=n(),P=r("tr"),dr=r("td"),mt=r("a"),jl=l("spaCy"),Kl=n(),nr=r("td"),Yl=l("Advanced Natural Language Processing in Python and Cython."),Ql=n(),sr=r("td"),Zl=l("\u2705"),td=n(),Ot=r("td"),ed=l("\u2705"),rd=n(),hr=r("td"),ad=l("\u2705"),od=n(),ir=r("td"),ld=l("\u2705"),dd=n(),S=r("tr"),fr=r("td"),bt=r("a"),nd=l("Speechbrain"),sd=n(),cr=r("td"),hd=l("A PyTorch Powered Speech Toolkit."),id=n(),ur=r("td"),fd=l("\u2705"),cd=n(),zt=r("td"),ud=l("\u2705"),vd=n(),vr=r("td"),Td=l("\u2705"),_d=n(),Tr=r("td"),pd=l("\u274C"),Ed=n(),L=r("tr"),_r=r("td"),Dt=r("a"),gd=l("Stable-Baselines3"),md=n(),pr=r("td"),bd=l("Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Dd=n(),Er=r("td"),yd=l("\u274C"),wd=n(),Bt=r("td"),Ad=l("\u2705"),Pd=n(),gr=r("td"),Sd=l("\u2705"),Ld=n(),mr=r("td"),kd=l("\u2705"),Rd=n(),k=r("tr"),br=r("td"),yt=r("a"),Hd=l("TensorFlowTTS"),Cd=n(),Dr=r("td"),Nd=l("Real-time state-of-the-art speech synthesis architectures."),Id=n(),yr=r("td"),$d=l("\u274C"),xd=n(),Wt=r("td"),Fd=l("\u274C"),Md=n(),wr=r("td"),Od=l("\u2705"),zd=n(),Ar=r("td"),Bd=l("\u274C"),Wd=n(),R=r("tr"),Pr=r("td"),wt=r("a"),qd=l("Timm"),Gd=n(),Sr=r("td"),Jd=l("Collection of image models, scripts, pretrained weights, etc."),Vd=n(),Lr=r("td"),Ud=l("\u274C"),Xd=n(),qt=r("td"),jd=l("\u274C"),Kd=n(),kr=r("td"),Yd=l("\u2705"),Qd=n(),Rr=r("td"),Zd=l("\u274C"),Fr=n(),Z=r("h3"),ot=r("a"),Hr=r("span"),Ih(At.$$.fragment),tn=n(),Cr=r("span"),en=l("How can I add a new library to the Inference API?"),Mr=n(),lt=r("p"),rn=l("If you\u2019re interested in adding your library, please reach out to us! Read about it in "),Gt=r("a"),an=l("Adding a Library Guide"),on=l("."),this.h()},l(i){const H=Gh('[data-svelte="svelte-1phssyn"]',document.head);Y=a(H,"META",{name:!0,content:!0}),H.forEach(e),Nr=s(i),Q=a(i,"H1",{class:!0});var zr=o(Q);tt=a(zr,"A",{id:!0,class:!0,href:!0});var dn=o(tt);Jt=a(dn,"SPAN",{});var nn=o(Jt);$h(dt.$$.fragment,nn),nn.forEach(e),dn.forEach(e),Vr=s(zr),Vt=a(zr,"SPAN",{});var sn=o(Vt);Ur=d(sn,"Libraries"),sn.forEach(e),zr.forEach(e),Ir=s(i),et=a(i,"P",{});var Br=o(et);Xr=d(Br,"The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),Ut=a(Br,"CODE",{});var hn=o(Ut);jr=d(hn,"huggingface_hub"),hn.forEach(e),Kr=d(Br," Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),Br.forEach(e),$r=s(i),rt=a(i,"P",{});var Wr=o(rt);Yr=d(Wr,"The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),nt=a(Wr,"A",{href:!0,rel:!0});var fn=o(nt);Qr=d(fn,"here"),fn.forEach(e),Zr=d(Wr,"!"),Wr.forEach(e),xr=s(i),at=a(i,"TABLE",{});var qr=o(at);Xt=a(qr,"THEAD",{});var cn=o(Xt);u=a(cn,"TR",{});var C=o(u);jt=a(C,"TH",{});var un=o(jt);ta=d(un,"Library"),un.forEach(e),ea=s(C),Kt=a(C,"TH",{});var vn=o(Kt);ra=d(vn,"Description"),vn.forEach(e),aa=s(C),Yt=a(C,"TH",{});var Tn=o(Yt);oa=d(Tn,"Inference API"),Tn.forEach(e),la=s(C),Pt=a(C,"TH",{align:!0});var _n=o(Pt);da=d(_n,"Widgets"),_n.forEach(e),na=s(C),Qt=a(C,"TH",{});var pn=o(Qt);sa=d(pn,"Download from Hub"),pn.forEach(e),ha=s(C),Zt=a(C,"TH",{});var En=o(Zt);ia=d(En,"Push to Hub"),En.forEach(e),C.forEach(e),cn.forEach(e),fa=s(qr),f=a(qr,"TBODY",{});var c=o(f);v=a(c,"TR",{});var N=o(v);te=a(N,"TD",{});var gn=o(te);st=a(gn,"A",{href:!0,rel:!0});var mn=o(st);ca=d(mn,"\u{1F917} Transformers"),mn.forEach(e),gn.forEach(e),ua=s(N),ee=a(N,"TD",{});var bn=o(ee);va=d(bn,"State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),bn.forEach(e),Ta=s(N),re=a(N,"TD",{});var Dn=o(re);_a=d(Dn,"\u2705"),Dn.forEach(e),pa=s(N),St=a(N,"TD",{align:!0});var yn=o(St);Ea=d(yn,"\u2705"),yn.forEach(e),ga=s(N),ae=a(N,"TD",{});var wn=o(ae);ma=d(wn,"\u2705"),wn.forEach(e),ba=s(N),oe=a(N,"TD",{});var An=o(oe);Da=d(An,"\u2705"),An.forEach(e),N.forEach(e),ya=s(c),T=a(c,"TR",{});var I=o(T);le=a(I,"TD",{});var Pn=o(le);ht=a(Pn,"A",{href:!0,rel:!0});var Sn=o(ht);wa=d(Sn,"Adapter Transformers"),Sn.forEach(e),Pn.forEach(e),Aa=s(I),de=a(I,"TD",{});var Ln=o(de);Pa=d(Ln,"Extends \u{1F917}Transformers with Adapters."),Ln.forEach(e),Sa=s(I),ne=a(I,"TD",{});var kn=o(ne);La=d(kn,"\u274C"),kn.forEach(e),ka=s(I),Lt=a(I,"TD",{align:!0});var Rn=o(Lt);Ra=d(Rn,"\u274C"),Rn.forEach(e),Ha=s(I),se=a(I,"TD",{});var Hn=o(se);Ca=d(Hn,"\u2705"),Hn.forEach(e),Na=s(I),he=a(I,"TD",{});var Cn=o(he);Ia=d(Cn,"\u2705"),Cn.forEach(e),I.forEach(e),$a=s(c),_=a(c,"TR",{});var $=o(_);ie=a($,"TD",{});var Nn=o(ie);it=a(Nn,"A",{href:!0,rel:!0});var In=o(it);xa=d(In,"AllenNLP"),In.forEach(e),Nn.forEach(e),Fa=s($),fe=a($,"TD",{});var $n=o(fe);Ma=d($n,"An open-source NLP research library, built on PyTorch."),$n.forEach(e),Oa=s($),ce=a($,"TD",{});var xn=o(ce);za=d(xn,"\u2705"),xn.forEach(e),Ba=s($),kt=a($,"TD",{align:!0});var Fn=o(kt);Wa=d(Fn,"\u2705"),Fn.forEach(e),qa=s($),ue=a($,"TD",{});var Mn=o(ue);Ga=d(Mn,"\u2705"),Mn.forEach(e),Ja=s($),ve=a($,"TD",{});var On=o(ve);Va=d(On,"\u274C"),On.forEach(e),$.forEach(e),Ua=s(c),p=a(c,"TR",{});var x=o(p);Te=a(x,"TD",{});var zn=o(Te);ft=a(zn,"A",{href:!0,rel:!0});var Bn=o(ft);Xa=d(Bn,"Asteroid"),Bn.forEach(e),zn.forEach(e),ja=s(x),_e=a(x,"TD",{});var Wn=o(_e);Ka=d(Wn,"Pytorch-based audio source separation toolkit"),Wn.forEach(e),Ya=s(x),pe=a(x,"TD",{});var qn=o(pe);Qa=d(qn,"\u2705"),qn.forEach(e),Za=s(x),Rt=a(x,"TD",{align:!0});var Gn=o(Rt);to=d(Gn,"\u2705"),Gn.forEach(e),eo=s(x),Ee=a(x,"TD",{});var Jn=o(Ee);ro=d(Jn,"\u2705"),Jn.forEach(e),ao=s(x),ge=a(x,"TD",{});var Vn=o(ge);oo=d(Vn,"\u274C"),Vn.forEach(e),x.forEach(e),lo=s(c),E=a(c,"TR",{});var F=o(E);me=a(F,"TD",{});var Un=o(me);ct=a(Un,"A",{href:!0,rel:!0});var Xn=o(ct);no=d(Xn,"docTR"),Xn.forEach(e),Un.forEach(e),so=s(F),be=a(F,"TD",{});var jn=o(be);ho=d(jn,"Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),jn.forEach(e),io=s(F),De=a(F,"TD",{});var Kn=o(De);fo=d(Kn,"\u2705"),Kn.forEach(e),co=s(F),Ht=a(F,"TD",{align:!0});var Yn=o(Ht);uo=d(Yn,"\u2705"),Yn.forEach(e),vo=s(F),ye=a(F,"TD",{});var Qn=o(ye);To=d(Qn,"\u2705"),Qn.forEach(e),_o=s(F),we=a(F,"TD",{});var Zn=o(we);po=d(Zn,"\u274C"),Zn.forEach(e),F.forEach(e),Eo=s(c),g=a(c,"TR",{});var M=o(g);Ae=a(M,"TD",{});var ts=o(Ae);ut=a(ts,"A",{href:!0,rel:!0});var es=o(ut);go=d(es,"ESPnet"),es.forEach(e),ts.forEach(e),mo=s(M),Pe=a(M,"TD",{});var rs=o(Pe);bo=d(rs,"End-to-end speech processing toolkit (e.g. TTS)"),rs.forEach(e),Do=s(M),Se=a(M,"TD",{});var as=o(Se);yo=d(as,"\u2705"),as.forEach(e),wo=s(M),Ct=a(M,"TD",{align:!0});var os=o(Ct);Ao=d(os,"\u2705"),os.forEach(e),Po=s(M),Le=a(M,"TD",{});var ls=o(Le);So=d(ls,"\u2705"),ls.forEach(e),Lo=s(M),ke=a(M,"TD",{});var ds=o(ke);ko=d(ds,"\u274C"),ds.forEach(e),M.forEach(e),Ro=s(c),m=a(c,"TR",{});var O=o(m);Re=a(O,"TD",{});var ns=o(Re);vt=a(ns,"A",{href:!0,rel:!0});var ss=o(vt);Ho=d(ss,"fastai"),ss.forEach(e),ns.forEach(e),Co=s(O),He=a(O,"TD",{});var hs=o(He);No=d(hs,"Library to train fast and accurate models with state-of-the-art outputs."),hs.forEach(e),Io=s(O),Ce=a(O,"TD",{});var is=o(Ce);$o=d(is,"\u2705"),is.forEach(e),xo=s(O),Nt=a(O,"TD",{align:!0});var fs=o(Nt);Fo=d(fs,"\u2705"),fs.forEach(e),Mo=s(O),Ne=a(O,"TD",{});var cs=o(Ne);Oo=d(cs,"\u2705"),cs.forEach(e),zo=s(O),Ie=a(O,"TD",{});var us=o(Ie);Bo=d(us,"\u2705"),us.forEach(e),O.forEach(e),Wo=s(c),b=a(c,"TR",{});var z=o(b);$e=a(z,"TD",{});var vs=o($e);Tt=a(vs,"A",{href:!0,rel:!0});var Ts=o(Tt);qo=d(Ts,"Flair"),Ts.forEach(e),vs.forEach(e),Go=s(z),xe=a(z,"TD",{});var _s=o(xe);Jo=d(_s,"Very simple framework for state-of-the-art NLP."),_s.forEach(e),Vo=s(z),Fe=a(z,"TD",{});var ps=o(Fe);Uo=d(ps,"\u2705"),ps.forEach(e),Xo=s(z),It=a(z,"TD",{align:!0});var Es=o(It);jo=d(Es,"\u2705"),Es.forEach(e),Ko=s(z),Me=a(z,"TD",{});var gs=o(Me);Yo=d(gs,"\u2705"),gs.forEach(e),Qo=s(z),Oe=a(z,"TD",{});var ms=o(Oe);Zo=d(ms,"\u274C"),ms.forEach(e),z.forEach(e),tl=s(c),D=a(c,"TR",{});var B=o(D);ze=a(B,"TD",{});var bs=o(ze);_t=a(bs,"A",{href:!0,rel:!0});var Ds=o(_t);el=d(Ds,"NeMo"),Ds.forEach(e),bs.forEach(e),rl=s(B),Be=a(B,"TD",{});var ys=o(Be);al=d(ys,"Conversational AI toolkit built for researchers"),ys.forEach(e),ol=s(B),We=a(B,"TD",{});var ws=o(We);ll=d(ws,"\u2705"),ws.forEach(e),dl=s(B),$t=a(B,"TD",{align:!0});var As=o($t);nl=d(As,"\u2705"),As.forEach(e),sl=s(B),qe=a(B,"TD",{});var Ps=o(qe);hl=d(Ps,"\u2705"),Ps.forEach(e),il=s(B),Ge=a(B,"TD",{});var Ss=o(Ge);fl=d(Ss,"\u274C"),Ss.forEach(e),B.forEach(e),cl=s(c),y=a(c,"TR",{});var W=o(y);Je=a(W,"TD",{});var Ls=o(Je);pt=a(Ls,"A",{href:!0,rel:!0});var ks=o(pt);ul=d(ks,"Pyannote"),ks.forEach(e),Ls.forEach(e),vl=s(W),Ve=a(W,"TD",{});var Rs=o(Ve);Tl=d(Rs,"Neural building blocks for speaker diarization."),Rs.forEach(e),_l=s(W),Ue=a(W,"TD",{});var Hs=o(Ue);pl=d(Hs,"\u274C"),Hs.forEach(e),El=s(W),xt=a(W,"TD",{align:!0});var Cs=o(xt);gl=d(Cs,"\u274C"),Cs.forEach(e),ml=s(W),Xe=a(W,"TD",{});var Ns=o(Xe);bl=d(Ns,"\u2705"),Ns.forEach(e),Dl=s(W),je=a(W,"TD",{});var Is=o(je);yl=d(Is,"\u274C"),Is.forEach(e),W.forEach(e),wl=s(c),w=a(c,"TR",{});var q=o(w);Ke=a(q,"TD",{});var $s=o(Ke);Et=a($s,"A",{href:!0,rel:!0});var xs=o(Et);Al=d(xs,"PyCTCDecode"),xs.forEach(e),$s.forEach(e),Pl=s(q),Ye=a(q,"TD",{});var Fs=o(Ye);Sl=d(Fs,"Language model supported CTC decoding for speech recognition"),Fs.forEach(e),Ll=s(q),Qe=a(q,"TD",{});var Ms=o(Qe);kl=d(Ms,"\u274C"),Ms.forEach(e),Rl=s(q),Ft=a(q,"TD",{align:!0});var Os=o(Ft);Hl=d(Os,"\u274C"),Os.forEach(e),Cl=s(q),Ze=a(q,"TD",{});var zs=o(Ze);Nl=d(zs,"\u2705"),zs.forEach(e),Il=s(q),tr=a(q,"TD",{});var Bs=o(tr);$l=d(Bs,"\u274C"),Bs.forEach(e),q.forEach(e),xl=s(c),A=a(c,"TR",{});var G=o(A);er=a(G,"TD",{});var Ws=o(er);gt=a(Ws,"A",{href:!0,rel:!0});var qs=o(gt);Fl=d(qs,"Sentence Transformers"),qs.forEach(e),Ws.forEach(e),Ml=s(G),rr=a(G,"TD",{});var Gs=o(rr);Ol=d(Gs,"Compute dense vector representations for sentences, paragraphs, and images."),Gs.forEach(e),zl=s(G),ar=a(G,"TD",{});var Js=o(ar);Bl=d(Js,"\u2705"),Js.forEach(e),Wl=s(G),Mt=a(G,"TD",{align:!0});var Vs=o(Mt);ql=d(Vs,"\u2705"),Vs.forEach(e),Gl=s(G),or=a(G,"TD",{});var Us=o(or);Jl=d(Us,"\u2705"),Us.forEach(e),Vl=s(G),lr=a(G,"TD",{});var Xs=o(lr);Ul=d(Xs,"\u2705"),Xs.forEach(e),G.forEach(e),Xl=s(c),P=a(c,"TR",{});var J=o(P);dr=a(J,"TD",{});var js=o(dr);mt=a(js,"A",{href:!0,rel:!0});var Ks=o(mt);jl=d(Ks,"spaCy"),Ks.forEach(e),js.forEach(e),Kl=s(J),nr=a(J,"TD",{});var Ys=o(nr);Yl=d(Ys,"Advanced Natural Language Processing in Python and Cython."),Ys.forEach(e),Ql=s(J),sr=a(J,"TD",{});var Qs=o(sr);Zl=d(Qs,"\u2705"),Qs.forEach(e),td=s(J),Ot=a(J,"TD",{align:!0});var Zs=o(Ot);ed=d(Zs,"\u2705"),Zs.forEach(e),rd=s(J),hr=a(J,"TD",{});var th=o(hr);ad=d(th,"\u2705"),th.forEach(e),od=s(J),ir=a(J,"TD",{});var eh=o(ir);ld=d(eh,"\u2705"),eh.forEach(e),J.forEach(e),dd=s(c),S=a(c,"TR",{});var V=o(S);fr=a(V,"TD",{});var rh=o(fr);bt=a(rh,"A",{href:!0,rel:!0});var ah=o(bt);nd=d(ah,"Speechbrain"),ah.forEach(e),rh.forEach(e),sd=s(V),cr=a(V,"TD",{});var oh=o(cr);hd=d(oh,"A PyTorch Powered Speech Toolkit."),oh.forEach(e),id=s(V),ur=a(V,"TD",{});var lh=o(ur);fd=d(lh,"\u2705"),lh.forEach(e),cd=s(V),zt=a(V,"TD",{align:!0});var dh=o(zt);ud=d(dh,"\u2705"),dh.forEach(e),vd=s(V),vr=a(V,"TD",{});var nh=o(vr);Td=d(nh,"\u2705"),nh.forEach(e),_d=s(V),Tr=a(V,"TD",{});var sh=o(Tr);pd=d(sh,"\u274C"),sh.forEach(e),V.forEach(e),Ed=s(c),L=a(c,"TR",{});var U=o(L);_r=a(U,"TD",{});var hh=o(_r);Dt=a(hh,"A",{href:!0,rel:!0});var ih=o(Dt);gd=d(ih,"Stable-Baselines3"),ih.forEach(e),hh.forEach(e),md=s(U),pr=a(U,"TD",{});var fh=o(pr);bd=d(fh,"Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),fh.forEach(e),Dd=s(U),Er=a(U,"TD",{});var ch=o(Er);yd=d(ch,"\u274C"),ch.forEach(e),wd=s(U),Bt=a(U,"TD",{align:!0});var uh=o(Bt);Ad=d(uh,"\u2705"),uh.forEach(e),Pd=s(U),gr=a(U,"TD",{});var vh=o(gr);Sd=d(vh,"\u2705"),vh.forEach(e),Ld=s(U),mr=a(U,"TD",{});var Th=o(mr);kd=d(Th,"\u2705"),Th.forEach(e),U.forEach(e),Rd=s(c),k=a(c,"TR",{});var X=o(k);br=a(X,"TD",{});var _h=o(br);yt=a(_h,"A",{href:!0,rel:!0});var ph=o(yt);Hd=d(ph,"TensorFlowTTS"),ph.forEach(e),_h.forEach(e),Cd=s(X),Dr=a(X,"TD",{});var Eh=o(Dr);Nd=d(Eh,"Real-time state-of-the-art speech synthesis architectures."),Eh.forEach(e),Id=s(X),yr=a(X,"TD",{});var gh=o(yr);$d=d(gh,"\u274C"),gh.forEach(e),xd=s(X),Wt=a(X,"TD",{align:!0});var mh=o(Wt);Fd=d(mh,"\u274C"),mh.forEach(e),Md=s(X),wr=a(X,"TD",{});var bh=o(wr);Od=d(bh,"\u2705"),bh.forEach(e),zd=s(X),Ar=a(X,"TD",{});var Dh=o(Ar);Bd=d(Dh,"\u274C"),Dh.forEach(e),X.forEach(e),Wd=s(c),R=a(c,"TR",{});var j=o(R);Pr=a(j,"TD",{});var yh=o(Pr);wt=a(yh,"A",{href:!0,rel:!0});var wh=o(wt);qd=d(wh,"Timm"),wh.forEach(e),yh.forEach(e),Gd=s(j),Sr=a(j,"TD",{});var Ah=o(Sr);Jd=d(Ah,"Collection of image models, scripts, pretrained weights, etc."),Ah.forEach(e),Vd=s(j),Lr=a(j,"TD",{});var Ph=o(Lr);Ud=d(Ph,"\u274C"),Ph.forEach(e),Xd=s(j),qt=a(j,"TD",{align:!0});var Sh=o(qt);jd=d(Sh,"\u274C"),Sh.forEach(e),Kd=s(j),kr=a(j,"TD",{});var Lh=o(kr);Yd=d(Lh,"\u2705"),Lh.forEach(e),Qd=s(j),Rr=a(j,"TD",{});var kh=o(Rr);Zd=d(kh,"\u274C"),kh.forEach(e),j.forEach(e),c.forEach(e),qr.forEach(e),Fr=s(i),Z=a(i,"H3",{class:!0});var Gr=o(Z);ot=a(Gr,"A",{id:!0,class:!0,href:!0});var Rh=o(ot);Hr=a(Rh,"SPAN",{});var Hh=o(Hr);$h(At.$$.fragment,Hh),Hh.forEach(e),Rh.forEach(e),tn=s(Gr),Cr=a(Gr,"SPAN",{});var Ch=o(Cr);en=d(Ch,"How can I add a new library to the Inference API?"),Ch.forEach(e),Gr.forEach(e),Mr=s(i),lt=a(i,"P",{});var Jr=o(lt);rn=d(Jr,"If you\u2019re interested in adding your library, please reach out to us! Read about it in "),Gt=a(Jr,"A",{href:!0});var Nh=o(Gt);an=d(Nh,"Adding a Library Guide"),Nh.forEach(e),on=d(Jr,"."),Jr.forEach(e),this.h()},h(){h(Y,"name","hf:doc:metadata"),h(Y,"content",JSON.stringify(Xh)),h(tt,"id","libraries"),h(tt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(tt,"href","#libraries"),h(Q,"class","relative group"),h(nt,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Libraries.ts"),h(nt,"rel","nofollow"),h(Pt,"align","right"),h(st,"href","https://github.com/huggingface/transformers"),h(st,"rel","nofollow"),h(St,"align","right"),h(ht,"href","https://github.com/Adapter-Hub/adapter-transformers"),h(ht,"rel","nofollow"),h(Lt,"align","right"),h(it,"href","https://github.com/allenai/allennlp"),h(it,"rel","nofollow"),h(kt,"align","right"),h(ft,"href","https://github.com/asteroid-team/asteroid"),h(ft,"rel","nofollow"),h(Rt,"align","right"),h(ct,"href","https://github.com/mindee/doctr"),h(ct,"rel","nofollow"),h(Ht,"align","right"),h(ut,"href","https://github.com/espnet/espnet"),h(ut,"rel","nofollow"),h(Ct,"align","right"),h(vt,"href","https://github.com/fastai/fastai"),h(vt,"rel","nofollow"),h(Nt,"align","right"),h(Tt,"href","https://github.com/flairNLP/flair"),h(Tt,"rel","nofollow"),h(It,"align","right"),h(_t,"href","https://github.com/NVIDIA/NeMo"),h(_t,"rel","nofollow"),h($t,"align","right"),h(pt,"href","https://github.com/pyannote/pyannote-audio"),h(pt,"rel","nofollow"),h(xt,"align","right"),h(Et,"href","https://github.com/kensho-technologies/pyctcdecode"),h(Et,"rel","nofollow"),h(Ft,"align","right"),h(gt,"href","https://github.com/UKPLab/sentence-transformers"),h(gt,"rel","nofollow"),h(Mt,"align","right"),h(mt,"href","https://github.com/explosion/spaCy"),h(mt,"rel","nofollow"),h(Ot,"align","right"),h(bt,"href","https://speechbrain.github.io/"),h(bt,"rel","nofollow"),h(zt,"align","right"),h(Dt,"href","https://github.com/DLR-RM/stable-baselines3"),h(Dt,"rel","nofollow"),h(Bt,"align","right"),h(yt,"href","https://github.com/TensorSpeech/TensorFlowTTS"),h(yt,"rel","nofollow"),h(Wt,"align","right"),h(wt,"href","https://github.com/rwightman/pytorch-image-models"),h(wt,"rel","nofollow"),h(qt,"align","right"),h(ot,"id","how-can-i-add-a-new-library-to-the-inference-api"),h(ot,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(ot,"href","#how-can-i-add-a-new-library-to-the-inference-api"),h(Z,"class","relative group"),h(Gt,"href","./models-adding-libraries")},m(i,H){t(document.head,Y),K(i,Nr,H),K(i,Q,H),t(Q,tt),t(tt,Jt),xh(dt,Jt,null),t(Q,Vr),t(Q,Vt),t(Vt,Ur),K(i,Ir,H),K(i,et,H),t(et,Xr),t(et,Ut),t(Ut,jr),t(et,Kr),K(i,$r,H),K(i,rt,H),t(rt,Yr),t(rt,nt),t(nt,Qr),t(rt,Zr),K(i,xr,H),K(i,at,H),t(at,Xt),t(Xt,u),t(u,jt),t(jt,ta),t(u,ea),t(u,Kt),t(Kt,ra),t(u,aa),t(u,Yt),t(Yt,oa),t(u,la),t(u,Pt),t(Pt,da),t(u,na),t(u,Qt),t(Qt,sa),t(u,ha),t(u,Zt),t(Zt,ia),t(at,fa),t(at,f),t(f,v),t(v,te),t(te,st),t(st,ca),t(v,ua),t(v,ee),t(ee,va),t(v,Ta),t(v,re),t(re,_a),t(v,pa),t(v,St),t(St,Ea),t(v,ga),t(v,ae),t(ae,ma),t(v,ba),t(v,oe),t(oe,Da),t(f,ya),t(f,T),t(T,le),t(le,ht),t(ht,wa),t(T,Aa),t(T,de),t(de,Pa),t(T,Sa),t(T,ne),t(ne,La),t(T,ka),t(T,Lt),t(Lt,Ra),t(T,Ha),t(T,se),t(se,Ca),t(T,Na),t(T,he),t(he,Ia),t(f,$a),t(f,_),t(_,ie),t(ie,it),t(it,xa),t(_,Fa),t(_,fe),t(fe,Ma),t(_,Oa),t(_,ce),t(ce,za),t(_,Ba),t(_,kt),t(kt,Wa),t(_,qa),t(_,ue),t(ue,Ga),t(_,Ja),t(_,ve),t(ve,Va),t(f,Ua),t(f,p),t(p,Te),t(Te,ft),t(ft,Xa),t(p,ja),t(p,_e),t(_e,Ka),t(p,Ya),t(p,pe),t(pe,Qa),t(p,Za),t(p,Rt),t(Rt,to),t(p,eo),t(p,Ee),t(Ee,ro),t(p,ao),t(p,ge),t(ge,oo),t(f,lo),t(f,E),t(E,me),t(me,ct),t(ct,no),t(E,so),t(E,be),t(be,ho),t(E,io),t(E,De),t(De,fo),t(E,co),t(E,Ht),t(Ht,uo),t(E,vo),t(E,ye),t(ye,To),t(E,_o),t(E,we),t(we,po),t(f,Eo),t(f,g),t(g,Ae),t(Ae,ut),t(ut,go),t(g,mo),t(g,Pe),t(Pe,bo),t(g,Do),t(g,Se),t(Se,yo),t(g,wo),t(g,Ct),t(Ct,Ao),t(g,Po),t(g,Le),t(Le,So),t(g,Lo),t(g,ke),t(ke,ko),t(f,Ro),t(f,m),t(m,Re),t(Re,vt),t(vt,Ho),t(m,Co),t(m,He),t(He,No),t(m,Io),t(m,Ce),t(Ce,$o),t(m,xo),t(m,Nt),t(Nt,Fo),t(m,Mo),t(m,Ne),t(Ne,Oo),t(m,zo),t(m,Ie),t(Ie,Bo),t(f,Wo),t(f,b),t(b,$e),t($e,Tt),t(Tt,qo),t(b,Go),t(b,xe),t(xe,Jo),t(b,Vo),t(b,Fe),t(Fe,Uo),t(b,Xo),t(b,It),t(It,jo),t(b,Ko),t(b,Me),t(Me,Yo),t(b,Qo),t(b,Oe),t(Oe,Zo),t(f,tl),t(f,D),t(D,ze),t(ze,_t),t(_t,el),t(D,rl),t(D,Be),t(Be,al),t(D,ol),t(D,We),t(We,ll),t(D,dl),t(D,$t),t($t,nl),t(D,sl),t(D,qe),t(qe,hl),t(D,il),t(D,Ge),t(Ge,fl),t(f,cl),t(f,y),t(y,Je),t(Je,pt),t(pt,ul),t(y,vl),t(y,Ve),t(Ve,Tl),t(y,_l),t(y,Ue),t(Ue,pl),t(y,El),t(y,xt),t(xt,gl),t(y,ml),t(y,Xe),t(Xe,bl),t(y,Dl),t(y,je),t(je,yl),t(f,wl),t(f,w),t(w,Ke),t(Ke,Et),t(Et,Al),t(w,Pl),t(w,Ye),t(Ye,Sl),t(w,Ll),t(w,Qe),t(Qe,kl),t(w,Rl),t(w,Ft),t(Ft,Hl),t(w,Cl),t(w,Ze),t(Ze,Nl),t(w,Il),t(w,tr),t(tr,$l),t(f,xl),t(f,A),t(A,er),t(er,gt),t(gt,Fl),t(A,Ml),t(A,rr),t(rr,Ol),t(A,zl),t(A,ar),t(ar,Bl),t(A,Wl),t(A,Mt),t(Mt,ql),t(A,Gl),t(A,or),t(or,Jl),t(A,Vl),t(A,lr),t(lr,Ul),t(f,Xl),t(f,P),t(P,dr),t(dr,mt),t(mt,jl),t(P,Kl),t(P,nr),t(nr,Yl),t(P,Ql),t(P,sr),t(sr,Zl),t(P,td),t(P,Ot),t(Ot,ed),t(P,rd),t(P,hr),t(hr,ad),t(P,od),t(P,ir),t(ir,ld),t(f,dd),t(f,S),t(S,fr),t(fr,bt),t(bt,nd),t(S,sd),t(S,cr),t(cr,hd),t(S,id),t(S,ur),t(ur,fd),t(S,cd),t(S,zt),t(zt,ud),t(S,vd),t(S,vr),t(vr,Td),t(S,_d),t(S,Tr),t(Tr,pd),t(f,Ed),t(f,L),t(L,_r),t(_r,Dt),t(Dt,gd),t(L,md),t(L,pr),t(pr,bd),t(L,Dd),t(L,Er),t(Er,yd),t(L,wd),t(L,Bt),t(Bt,Ad),t(L,Pd),t(L,gr),t(gr,Sd),t(L,Ld),t(L,mr),t(mr,kd),t(f,Rd),t(f,k),t(k,br),t(br,yt),t(yt,Hd),t(k,Cd),t(k,Dr),t(Dr,Nd),t(k,Id),t(k,yr),t(yr,$d),t(k,xd),t(k,Wt),t(Wt,Fd),t(k,Md),t(k,wr),t(wr,Od),t(k,zd),t(k,Ar),t(Ar,Bd),t(f,Wd),t(f,R),t(R,Pr),t(Pr,wt),t(wt,qd),t(R,Gd),t(R,Sr),t(Sr,Jd),t(R,Vd),t(R,Lr),t(Lr,Ud),t(R,Xd),t(R,qt),t(qt,jd),t(R,Kd),t(R,kr),t(kr,Yd),t(R,Qd),t(R,Rr),t(Rr,Zd),K(i,Fr,H),K(i,Z,H),t(Z,ot),t(ot,Hr),xh(At,Hr,null),t(Z,tn),t(Z,Cr),t(Cr,en),K(i,Mr,H),K(i,lt,H),t(lt,rn),t(lt,Gt),t(Gt,an),t(lt,on),Or=!0},p:Jh,i(i){Or||(Fh(dt.$$.fragment,i),Fh(At.$$.fragment,i),Or=!0)},o(i){Mh(dt.$$.fragment,i),Mh(At.$$.fragment,i),Or=!1},d(i){e(Y),i&&e(Nr),i&&e(Q),Oh(dt),i&&e(Ir),i&&e(et),i&&e($r),i&&e(rt),i&&e(xr),i&&e(at),i&&e(Fr),i&&e(Z),Oh(At),i&&e(Mr),i&&e(lt)}}}const Xh={local:"libraries",sections:[{local:"how-can-i-add-a-new-library-to-the-inference-api",title:"How can I add a new library to the Inference API?"}],title:"Libraries"};function jh(ln){return Vh(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Qh extends Bh{constructor(Y){super();Wh(this,Y,jh,Uh,qh,{})}}export{Qh as default,Xh as metadata};
