import{S as we,i as ye,s as $e,e as i,k as m,w as he,t as d,N as be,c as n,d as t,m as h,a as u,x as pe,h as v,b as s,P as R,G as a,g as o,y as ge,q as de,o as ve,B as _e,v as ke}from"../chunks/vendor-hf-doc-builder.js";import{T as Ee}from"../chunks/Tip-hf-doc-builder.js";import{I as Ie}from"../chunks/IconCopyLink-hf-doc-builder.js";function Se(N){let l;return{c(){l=d("If your file has neither an ok nor infected badge, it could mean that it is either currently being scanned, waiting to be scanned, or that there was an error during the scan. It can take up to a few minutes to be scanned.")},l(f){l=v(f,"If your file has neither an ok nor infected badge, it could mean that it is either currently being scanned, waiting to be scanned, or that there was an error during the scan. It can take up to a few minutes to be scanned.")},m(f,c){o(f,l,c)},d(f){f&&t(l)}}}function xe(N){let l,f,c,_,G,b,U,q,z,H,w,F,k,K,Q,T,S,X,j,y,Y,E,Z,ee,C,p,x,re,te,M,se,D,g,P,ie,ae,A,ne,L,$,V;return b=new Ie({}),$=new Ee({props:{$$slots:{default:[Se]},$$scope:{ctx:N}}}),{c(){l=i("meta"),f=m(),c=i("h1"),_=i("a"),G=i("span"),he(b.$$.fragment),U=m(),q=i("span"),z=d("Malware Scanning"),H=m(),w=i("p"),F=d("We run every file of your repositories through a "),k=i("a"),K=d("malware scanner"),Q=d("."),T=m(),S=i("p"),X=d("Scanning is triggered at each commit or when you visit a repository page."),j=m(),y=i("p"),Y=d("Here is an "),E=i("a"),Z=d("example view"),ee=d(" of an infected file:"),C=m(),p=i("div"),x=i("img"),te=m(),M=i("img"),D=m(),g=i("div"),P=i("img"),ae=m(),A=i("img"),L=m(),he($.$$.fragment),this.h()},l(e){const r=be('[data-svelte="svelte-1phssyn"]',document.head);l=n(r,"META",{name:!0,content:!0}),r.forEach(t),f=h(e),c=n(e,"H1",{class:!0});var I=u(c);_=n(I,"A",{id:!0,class:!0,href:!0});var le=u(_);G=n(le,"SPAN",{});var oe=u(G);pe(b.$$.fragment,oe),oe.forEach(t),le.forEach(t),U=h(I),q=n(I,"SPAN",{});var ce=u(q);z=v(ce,"Malware Scanning"),ce.forEach(t),I.forEach(t),H=h(e),w=n(e,"P",{});var W=u(w);F=v(W,"We run every file of your repositories through a "),k=n(W,"A",{href:!0,rel:!0});var ue=u(k);K=v(ue,"malware scanner"),ue.forEach(t),Q=v(W,"."),W.forEach(t),T=h(e),S=n(e,"P",{});var fe=u(S);X=v(fe,"Scanning is triggered at each commit or when you visit a repository page."),fe.forEach(t),j=h(e),y=n(e,"P",{});var B=u(y);Y=v(B,"Here is an "),E=n(B,"A",{href:!0,rel:!0});var me=u(E);Z=v(me,"example view"),me.forEach(t),ee=v(B," of an infected file:"),B.forEach(t),C=h(e),p=n(e,"DIV",{class:!0});var J=u(p);x=n(J,"IMG",{class:!0,src:!0}),te=h(J),M=n(J,"IMG",{class:!0,src:!0}),J.forEach(t),D=h(e),g=n(e,"DIV",{class:!0});var O=u(g);P=n(O,"IMG",{class:!0,src:!0}),ae=h(O),A=n(O,"IMG",{class:!0,src:!0}),O.forEach(t),L=h(e),pe($.$$.fragment,e),this.h()},h(){s(l,"name","hf:doc:metadata"),s(l,"content",JSON.stringify(Me)),s(_,"id","malware-scanning"),s(_,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(_,"href","#malware-scanning"),s(c,"class","relative group"),s(k,"href","https://www.clamav.net/"),s(k,"rel","nofollow"),s(E,"href","https://huggingface.co/mcpotato/42-eicar-street/tree/main"),s(E,"rel","nofollow"),s(x,"class","block dark:hidden"),R(x.src,re="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/eicar-hub-tree-view.png")||s(x,"src",re),s(M,"class","hidden dark:block"),R(M.src,se="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/eicar-hub-tree-view-dark.png")||s(M,"src",se),s(p,"class","flex justify-center"),s(P,"class","block dark:hidden"),R(P.src,ie="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/eicar-hub-file-view.png")||s(P,"src",ie),s(A,"class","hidden dark:block"),R(A.src,ne="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/eicar-hub-file-view-dark.png")||s(A,"src",ne),s(g,"class","flex justify-center")},m(e,r){a(document.head,l),o(e,f,r),o(e,c,r),a(c,_),a(_,G),ge(b,G,null),a(c,U),a(c,q),a(q,z),o(e,H,r),o(e,w,r),a(w,F),a(w,k),a(k,K),a(w,Q),o(e,T,r),o(e,S,r),a(S,X),o(e,j,r),o(e,y,r),a(y,Y),a(y,E),a(E,Z),a(y,ee),o(e,C,r),o(e,p,r),a(p,x),a(p,te),a(p,M),o(e,D,r),o(e,g,r),a(g,P),a(g,ae),a(g,A),o(e,L,r),ge($,e,r),V=!0},p(e,[r]){const I={};r&2&&(I.$$scope={dirty:r,ctx:e}),$.$set(I)},i(e){V||(de(b.$$.fragment,e),de($.$$.fragment,e),V=!0)},o(e){ve(b.$$.fragment,e),ve($.$$.fragment,e),V=!1},d(e){t(l),e&&t(f),e&&t(c),_e(b),e&&t(H),e&&t(w),e&&t(T),e&&t(S),e&&t(j),e&&t(y),e&&t(C),e&&t(p),e&&t(D),e&&t(g),e&&t(L),_e($,e)}}}const Me={local:"malware-scanning",title:"Malware Scanning"};function Pe(N){return ke(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ne extends we{constructor(l){super();ye(this,l,Pe,xe,$e,{})}}export{Ne as default,Me as metadata};
