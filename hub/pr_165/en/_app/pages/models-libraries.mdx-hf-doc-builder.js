import{S as uh,i as vh,s as _h,e as r,k as n,w as dh,t as l,N as Th,c as a,d as e,m as s,a as o,x as nh,h as d,b as h,G as t,g as U,y as sh,L as Eh,q as hh,o as ih,B as ch,v as ph}from"../chunks/vendor-hf-doc-builder.js";import{I as fh}from"../chunks/IconCopyLink-hf-doc-builder.js";function gh(Md){let X,yr,K,Q,zt,ot,Fr,Wt,Mr,Ar,Z,Or,jt,Br,zr,Pr,tt,Wr,lt,jr,qr,Sr,et,qt,u,Gt,Gr,Jr,Jt,Vr,Ur,Vt,Xr,Kr,wt,Yr,Qr,Ut,Zr,ta,Xt,ea,ra,c,v,Kt,dt,aa,oa,Yt,la,da,Qt,na,sa,yt,ha,ia,Zt,ca,fa,te,ua,va,_,ee,nt,_a,Ta,re,Ea,pa,ae,ga,ma,At,Da,ba,oe,wa,ya,le,Aa,Pa,T,de,st,Sa,La,ne,Ra,ka,se,Ca,Ha,Pt,Na,Ia,he,$a,xa,ie,Fa,Ma,E,ce,ht,Oa,Ba,fe,za,Wa,ue,ja,qa,St,Ga,Ja,ve,Va,Ua,_e,Xa,Ka,p,Te,it,Ya,Qa,Ee,Za,to,pe,eo,ro,Lt,ao,oo,ge,lo,no,me,so,ho,g,De,ct,io,co,be,fo,uo,we,vo,_o,Rt,To,Eo,ye,po,go,Ae,mo,Do,m,Pe,ft,bo,wo,Se,yo,Ao,Le,Po,So,kt,Lo,Ro,Re,ko,Co,ke,Ho,No,D,Ce,ut,Io,$o,He,xo,Fo,Ne,Mo,Oo,Ct,Bo,zo,Ie,Wo,jo,$e,qo,Go,b,xe,vt,Jo,Vo,Fe,Uo,Xo,Me,Ko,Yo,Ht,Qo,Zo,Oe,tl,el,Be,rl,al,w,ze,_t,ol,ll,We,dl,nl,je,sl,hl,Nt,il,cl,qe,fl,ul,Ge,vl,_l,y,Je,Tt,Tl,El,Ve,pl,gl,Ue,ml,Dl,It,bl,wl,Xe,yl,Al,Ke,Pl,Sl,A,Ye,Et,Ll,Rl,Qe,kl,Cl,Ze,Hl,Nl,$t,Il,$l,tr,xl,Fl,er,Ml,Ol,P,rr,pt,Bl,zl,ar,Wl,jl,or,ql,Gl,xt,Jl,Vl,lr,Ul,Xl,dr,Kl,Yl,S,nr,gt,Ql,Zl,sr,td,ed,hr,rd,ad,Ft,od,ld,ir,dd,nd,cr,sd,hd,L,fr,mt,id,cd,ur,fd,ud,vr,vd,_d,Mt,Td,Ed,_r,pd,gd,Tr,md,Dd,R,Er,Dt,bd,wd,pr,yd,Ad,gr,Pd,Sd,Ot,Ld,Rd,mr,kd,Cd,Dr,Hd,Lr,Y,rt,br,bt,Nd,wr,Id,Rr,at,$d,Bt,xd,Fd,kr;return ot=new fh({}),bt=new fh({}),{c(){X=r("meta"),yr=n(),K=r("h1"),Q=r("a"),zt=r("span"),dh(ot.$$.fragment),Fr=n(),Wt=r("span"),Mr=l("Libraries"),Ar=n(),Z=r("p"),Or=l("Integrating the "),jt=r("code"),Br=l("huggingface_hub"),zr=l(" library into your projects allows users to interact with the Hub directly from your library. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),Pr=n(),tt=r("p"),Wr=l("The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),lt=r("a"),jr=l("here"),qr=l("!"),Sr=n(),et=r("table"),qt=r("thead"),u=r("tr"),Gt=r("th"),Gr=l("Library"),Jr=n(),Jt=r("th"),Vr=l("Description"),Ur=n(),Vt=r("th"),Xr=l("Inference API"),Kr=n(),wt=r("th"),Yr=l("Widgets"),Qr=n(),Ut=r("th"),Zr=l("Download from Hub"),ta=n(),Xt=r("th"),ea=l("Push to Hub"),ra=n(),c=r("tbody"),v=r("tr"),Kt=r("td"),dt=r("a"),aa=l("\u{1F917} Transformers"),oa=n(),Yt=r("td"),la=l("State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),da=n(),Qt=r("td"),na=l("\u2705"),sa=n(),yt=r("td"),ha=l("\u2705"),ia=n(),Zt=r("td"),ca=l("\u2705"),fa=n(),te=r("td"),ua=l("\u2705"),va=n(),_=r("tr"),ee=r("td"),nt=r("a"),_a=l("Adapter Transformers"),Ta=n(),re=r("td"),Ea=l("Extends \u{1F917}Transformers with Adapters."),pa=n(),ae=r("td"),ga=l("\u274C"),ma=n(),At=r("td"),Da=l("\u274C"),ba=n(),oe=r("td"),wa=l("\u2705"),ya=n(),le=r("td"),Aa=l("\u2705"),Pa=n(),T=r("tr"),de=r("td"),st=r("a"),Sa=l("AllenNLP"),La=n(),ne=r("td"),Ra=l("An open-source NLP research library, built on PyTorch."),ka=n(),se=r("td"),Ca=l("\u2705"),Ha=n(),Pt=r("td"),Na=l("\u2705"),Ia=n(),he=r("td"),$a=l("\u2705"),xa=n(),ie=r("td"),Fa=l("\u274C"),Ma=n(),E=r("tr"),ce=r("td"),ht=r("a"),Oa=l("Asteroid"),Ba=n(),fe=r("td"),za=l("Pytorch-based audio source separation toolkit"),Wa=n(),ue=r("td"),ja=l("\u2705"),qa=n(),St=r("td"),Ga=l("\u2705"),Ja=n(),ve=r("td"),Va=l("\u2705"),Ua=n(),_e=r("td"),Xa=l("\u274C"),Ka=n(),p=r("tr"),Te=r("td"),it=r("a"),Ya=l("docTR"),Qa=n(),Ee=r("td"),Za=l("Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),to=n(),pe=r("td"),eo=l("\u2705"),ro=n(),Lt=r("td"),ao=l("\u2705"),oo=n(),ge=r("td"),lo=l("\u2705"),no=n(),me=r("td"),so=l("\u274C"),ho=n(),g=r("tr"),De=r("td"),ct=r("a"),io=l("ESPnet"),co=n(),be=r("td"),fo=l("End-to-end speech processing toolkit (e.g. TTS)"),uo=n(),we=r("td"),vo=l("\u2705"),_o=n(),Rt=r("td"),To=l("\u2705"),Eo=n(),ye=r("td"),po=l("\u2705"),go=n(),Ae=r("td"),mo=l("\u274C"),Do=n(),m=r("tr"),Pe=r("td"),ft=r("a"),bo=l("Flair"),wo=n(),Se=r("td"),yo=l("Very simple framework for state-of-the-art NLP."),Ao=n(),Le=r("td"),Po=l("\u2705"),So=n(),kt=r("td"),Lo=l("\u2705"),Ro=n(),Re=r("td"),ko=l("\u2705"),Co=n(),ke=r("td"),Ho=l("\u274C"),No=n(),D=r("tr"),Ce=r("td"),ut=r("a"),Io=l("NeMo"),$o=n(),He=r("td"),xo=l("Conversational AI toolkit built for researchers"),Fo=n(),Ne=r("td"),Mo=l("\u2705"),Oo=n(),Ct=r("td"),Bo=l("\u2705"),zo=n(),Ie=r("td"),Wo=l("\u2705"),jo=n(),$e=r("td"),qo=l("\u274C"),Go=n(),b=r("tr"),xe=r("td"),vt=r("a"),Jo=l("Pyannote"),Vo=n(),Fe=r("td"),Uo=l("Neural building blocks for speaker diarization."),Xo=n(),Me=r("td"),Ko=l("\u274C"),Yo=n(),Ht=r("td"),Qo=l("\u274C"),Zo=n(),Oe=r("td"),tl=l("\u2705"),el=n(),Be=r("td"),rl=l("\u274C"),al=n(),w=r("tr"),ze=r("td"),_t=r("a"),ol=l("PyCTCDecode"),ll=n(),We=r("td"),dl=l("Language model supported CTC decoding for speech recognition"),nl=n(),je=r("td"),sl=l("\u274C"),hl=n(),Nt=r("td"),il=l("\u274C"),cl=n(),qe=r("td"),fl=l("\u2705"),ul=n(),Ge=r("td"),vl=l("\u274C"),_l=n(),y=r("tr"),Je=r("td"),Tt=r("a"),Tl=l("Sentence Transformers"),El=n(),Ve=r("td"),pl=l("Compute dense vector representations for sentences, paragraphs, and images."),gl=n(),Ue=r("td"),ml=l("\u2705"),Dl=n(),It=r("td"),bl=l("\u2705"),wl=n(),Xe=r("td"),yl=l("\u2705"),Al=n(),Ke=r("td"),Pl=l("\u2705"),Sl=n(),A=r("tr"),Ye=r("td"),Et=r("a"),Ll=l("spaCy"),Rl=n(),Qe=r("td"),kl=l("Advanced Natural Language Processing in Python and Cython."),Cl=n(),Ze=r("td"),Hl=l("\u2705"),Nl=n(),$t=r("td"),Il=l("\u2705"),$l=n(),tr=r("td"),xl=l("\u2705"),Fl=n(),er=r("td"),Ml=l("\u2705"),Ol=n(),P=r("tr"),rr=r("td"),pt=r("a"),Bl=l("Speechbrain"),zl=n(),ar=r("td"),Wl=l("A PyTorch Powered Speech Toolkit."),jl=n(),or=r("td"),ql=l("\u2705"),Gl=n(),xt=r("td"),Jl=l("\u2705"),Vl=n(),lr=r("td"),Ul=l("\u2705"),Xl=n(),dr=r("td"),Kl=l("\u274C"),Yl=n(),S=r("tr"),nr=r("td"),gt=r("a"),Ql=l("TensorFlowTTS"),Zl=n(),sr=r("td"),td=l("Real-time state-of-the-art speech synthesis architectures."),ed=n(),hr=r("td"),rd=l("\u274C"),ad=n(),Ft=r("td"),od=l("\u274C"),ld=n(),ir=r("td"),dd=l("\u2705"),nd=n(),cr=r("td"),sd=l("\u274C"),hd=n(),L=r("tr"),fr=r("td"),mt=r("a"),id=l("Timm"),cd=n(),ur=r("td"),fd=l("Collection of image models, scripts, pretrained weights, etc."),ud=n(),vr=r("td"),vd=l("\u274C"),_d=n(),Mt=r("td"),Td=l("\u274C"),Ed=n(),_r=r("td"),pd=l("\u2705"),gd=n(),Tr=r("td"),md=l("\u274C"),Dd=n(),R=r("tr"),Er=r("td"),Dt=r("a"),bd=l("Stable-Baselines3"),wd=n(),pr=r("td"),yd=l("Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Ad=n(),gr=r("td"),Pd=l("\u274C"),Sd=n(),Ot=r("td"),Ld=l("\u274C"),Rd=n(),mr=r("td"),kd=l("\u2705"),Cd=n(),Dr=r("td"),Hd=l("\u2705"),Lr=n(),Y=r("h3"),rt=r("a"),br=r("span"),dh(bt.$$.fragment),Nd=n(),wr=r("span"),Id=l("How can I add a new library to the Inference API?"),Rr=n(),at=r("p"),$d=l("Read about it in "),Bt=r("a"),xd=l("Adding a Library Guide"),Fd=l("."),this.h()},l(i){const k=Th('[data-svelte="svelte-1phssyn"]',document.head);X=a(k,"META",{name:!0,content:!0}),k.forEach(e),yr=s(i),K=a(i,"H1",{class:!0});var Cr=o(K);Q=a(Cr,"A",{id:!0,class:!0,href:!0});var Od=o(Q);zt=a(Od,"SPAN",{});var Bd=o(zt);nh(ot.$$.fragment,Bd),Bd.forEach(e),Od.forEach(e),Fr=s(Cr),Wt=a(Cr,"SPAN",{});var zd=o(Wt);Mr=d(zd,"Libraries"),zd.forEach(e),Cr.forEach(e),Ar=s(i),Z=a(i,"P",{});var Hr=o(Z);Or=d(Hr,"Integrating the "),jt=a(Hr,"CODE",{});var Wd=o(jt);Br=d(Wd,"huggingface_hub"),Wd.forEach(e),zr=d(Hr," library into your projects allows users to interact with the Hub directly from your library. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),Hr.forEach(e),Pr=s(i),tt=a(i,"P",{});var Nr=o(tt);Wr=d(Nr,"The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),lt=a(Nr,"A",{href:!0,rel:!0});var jd=o(lt);jr=d(jd,"here"),jd.forEach(e),qr=d(Nr,"!"),Nr.forEach(e),Sr=s(i),et=a(i,"TABLE",{});var Ir=o(et);qt=a(Ir,"THEAD",{});var qd=o(qt);u=a(qd,"TR",{});var C=o(u);Gt=a(C,"TH",{});var Gd=o(Gt);Gr=d(Gd,"Library"),Gd.forEach(e),Jr=s(C),Jt=a(C,"TH",{});var Jd=o(Jt);Vr=d(Jd,"Description"),Jd.forEach(e),Ur=s(C),Vt=a(C,"TH",{});var Vd=o(Vt);Xr=d(Vd,"Inference API"),Vd.forEach(e),Kr=s(C),wt=a(C,"TH",{align:!0});var Ud=o(wt);Yr=d(Ud,"Widgets"),Ud.forEach(e),Qr=s(C),Ut=a(C,"TH",{});var Xd=o(Ut);Zr=d(Xd,"Download from Hub"),Xd.forEach(e),ta=s(C),Xt=a(C,"TH",{});var Kd=o(Xt);ea=d(Kd,"Push to Hub"),Kd.forEach(e),C.forEach(e),qd.forEach(e),ra=s(Ir),c=a(Ir,"TBODY",{});var f=o(c);v=a(f,"TR",{});var H=o(v);Kt=a(H,"TD",{});var Yd=o(Kt);dt=a(Yd,"A",{href:!0,rel:!0});var Qd=o(dt);aa=d(Qd,"\u{1F917} Transformers"),Qd.forEach(e),Yd.forEach(e),oa=s(H),Yt=a(H,"TD",{});var Zd=o(Yt);la=d(Zd,"State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),Zd.forEach(e),da=s(H),Qt=a(H,"TD",{});var tn=o(Qt);na=d(tn,"\u2705"),tn.forEach(e),sa=s(H),yt=a(H,"TD",{align:!0});var en=o(yt);ha=d(en,"\u2705"),en.forEach(e),ia=s(H),Zt=a(H,"TD",{});var rn=o(Zt);ca=d(rn,"\u2705"),rn.forEach(e),fa=s(H),te=a(H,"TD",{});var an=o(te);ua=d(an,"\u2705"),an.forEach(e),H.forEach(e),va=s(f),_=a(f,"TR",{});var N=o(_);ee=a(N,"TD",{});var on=o(ee);nt=a(on,"A",{href:!0,rel:!0});var ln=o(nt);_a=d(ln,"Adapter Transformers"),ln.forEach(e),on.forEach(e),Ta=s(N),re=a(N,"TD",{});var dn=o(re);Ea=d(dn,"Extends \u{1F917}Transformers with Adapters."),dn.forEach(e),pa=s(N),ae=a(N,"TD",{});var nn=o(ae);ga=d(nn,"\u274C"),nn.forEach(e),ma=s(N),At=a(N,"TD",{align:!0});var sn=o(At);Da=d(sn,"\u274C"),sn.forEach(e),ba=s(N),oe=a(N,"TD",{});var hn=o(oe);wa=d(hn,"\u2705"),hn.forEach(e),ya=s(N),le=a(N,"TD",{});var cn=o(le);Aa=d(cn,"\u2705"),cn.forEach(e),N.forEach(e),Pa=s(f),T=a(f,"TR",{});var I=o(T);de=a(I,"TD",{});var fn=o(de);st=a(fn,"A",{href:!0,rel:!0});var un=o(st);Sa=d(un,"AllenNLP"),un.forEach(e),fn.forEach(e),La=s(I),ne=a(I,"TD",{});var vn=o(ne);Ra=d(vn,"An open-source NLP research library, built on PyTorch."),vn.forEach(e),ka=s(I),se=a(I,"TD",{});var _n=o(se);Ca=d(_n,"\u2705"),_n.forEach(e),Ha=s(I),Pt=a(I,"TD",{align:!0});var Tn=o(Pt);Na=d(Tn,"\u2705"),Tn.forEach(e),Ia=s(I),he=a(I,"TD",{});var En=o(he);$a=d(En,"\u2705"),En.forEach(e),xa=s(I),ie=a(I,"TD",{});var pn=o(ie);Fa=d(pn,"\u274C"),pn.forEach(e),I.forEach(e),Ma=s(f),E=a(f,"TR",{});var $=o(E);ce=a($,"TD",{});var gn=o(ce);ht=a(gn,"A",{href:!0,rel:!0});var mn=o(ht);Oa=d(mn,"Asteroid"),mn.forEach(e),gn.forEach(e),Ba=s($),fe=a($,"TD",{});var Dn=o(fe);za=d(Dn,"Pytorch-based audio source separation toolkit"),Dn.forEach(e),Wa=s($),ue=a($,"TD",{});var bn=o(ue);ja=d(bn,"\u2705"),bn.forEach(e),qa=s($),St=a($,"TD",{align:!0});var wn=o(St);Ga=d(wn,"\u2705"),wn.forEach(e),Ja=s($),ve=a($,"TD",{});var yn=o(ve);Va=d(yn,"\u2705"),yn.forEach(e),Ua=s($),_e=a($,"TD",{});var An=o(_e);Xa=d(An,"\u274C"),An.forEach(e),$.forEach(e),Ka=s(f),p=a(f,"TR",{});var x=o(p);Te=a(x,"TD",{});var Pn=o(Te);it=a(Pn,"A",{href:!0,rel:!0});var Sn=o(it);Ya=d(Sn,"docTR"),Sn.forEach(e),Pn.forEach(e),Qa=s(x),Ee=a(x,"TD",{});var Ln=o(Ee);Za=d(Ln,"Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),Ln.forEach(e),to=s(x),pe=a(x,"TD",{});var Rn=o(pe);eo=d(Rn,"\u2705"),Rn.forEach(e),ro=s(x),Lt=a(x,"TD",{align:!0});var kn=o(Lt);ao=d(kn,"\u2705"),kn.forEach(e),oo=s(x),ge=a(x,"TD",{});var Cn=o(ge);lo=d(Cn,"\u2705"),Cn.forEach(e),no=s(x),me=a(x,"TD",{});var Hn=o(me);so=d(Hn,"\u274C"),Hn.forEach(e),x.forEach(e),ho=s(f),g=a(f,"TR",{});var F=o(g);De=a(F,"TD",{});var Nn=o(De);ct=a(Nn,"A",{href:!0,rel:!0});var In=o(ct);io=d(In,"ESPnet"),In.forEach(e),Nn.forEach(e),co=s(F),be=a(F,"TD",{});var $n=o(be);fo=d($n,"End-to-end speech processing toolkit (e.g. TTS)"),$n.forEach(e),uo=s(F),we=a(F,"TD",{});var xn=o(we);vo=d(xn,"\u2705"),xn.forEach(e),_o=s(F),Rt=a(F,"TD",{align:!0});var Fn=o(Rt);To=d(Fn,"\u2705"),Fn.forEach(e),Eo=s(F),ye=a(F,"TD",{});var Mn=o(ye);po=d(Mn,"\u2705"),Mn.forEach(e),go=s(F),Ae=a(F,"TD",{});var On=o(Ae);mo=d(On,"\u274C"),On.forEach(e),F.forEach(e),Do=s(f),m=a(f,"TR",{});var M=o(m);Pe=a(M,"TD",{});var Bn=o(Pe);ft=a(Bn,"A",{href:!0,rel:!0});var zn=o(ft);bo=d(zn,"Flair"),zn.forEach(e),Bn.forEach(e),wo=s(M),Se=a(M,"TD",{});var Wn=o(Se);yo=d(Wn,"Very simple framework for state-of-the-art NLP."),Wn.forEach(e),Ao=s(M),Le=a(M,"TD",{});var jn=o(Le);Po=d(jn,"\u2705"),jn.forEach(e),So=s(M),kt=a(M,"TD",{align:!0});var qn=o(kt);Lo=d(qn,"\u2705"),qn.forEach(e),Ro=s(M),Re=a(M,"TD",{});var Gn=o(Re);ko=d(Gn,"\u2705"),Gn.forEach(e),Co=s(M),ke=a(M,"TD",{});var Jn=o(ke);Ho=d(Jn,"\u274C"),Jn.forEach(e),M.forEach(e),No=s(f),D=a(f,"TR",{});var O=o(D);Ce=a(O,"TD",{});var Vn=o(Ce);ut=a(Vn,"A",{href:!0,rel:!0});var Un=o(ut);Io=d(Un,"NeMo"),Un.forEach(e),Vn.forEach(e),$o=s(O),He=a(O,"TD",{});var Xn=o(He);xo=d(Xn,"Conversational AI toolkit built for researchers"),Xn.forEach(e),Fo=s(O),Ne=a(O,"TD",{});var Kn=o(Ne);Mo=d(Kn,"\u2705"),Kn.forEach(e),Oo=s(O),Ct=a(O,"TD",{align:!0});var Yn=o(Ct);Bo=d(Yn,"\u2705"),Yn.forEach(e),zo=s(O),Ie=a(O,"TD",{});var Qn=o(Ie);Wo=d(Qn,"\u2705"),Qn.forEach(e),jo=s(O),$e=a(O,"TD",{});var Zn=o($e);qo=d(Zn,"\u274C"),Zn.forEach(e),O.forEach(e),Go=s(f),b=a(f,"TR",{});var B=o(b);xe=a(B,"TD",{});var ts=o(xe);vt=a(ts,"A",{href:!0,rel:!0});var es=o(vt);Jo=d(es,"Pyannote"),es.forEach(e),ts.forEach(e),Vo=s(B),Fe=a(B,"TD",{});var rs=o(Fe);Uo=d(rs,"Neural building blocks for speaker diarization."),rs.forEach(e),Xo=s(B),Me=a(B,"TD",{});var as=o(Me);Ko=d(as,"\u274C"),as.forEach(e),Yo=s(B),Ht=a(B,"TD",{align:!0});var os=o(Ht);Qo=d(os,"\u274C"),os.forEach(e),Zo=s(B),Oe=a(B,"TD",{});var ls=o(Oe);tl=d(ls,"\u2705"),ls.forEach(e),el=s(B),Be=a(B,"TD",{});var ds=o(Be);rl=d(ds,"\u274C"),ds.forEach(e),B.forEach(e),al=s(f),w=a(f,"TR",{});var z=o(w);ze=a(z,"TD",{});var ns=o(ze);_t=a(ns,"A",{href:!0,rel:!0});var ss=o(_t);ol=d(ss,"PyCTCDecode"),ss.forEach(e),ns.forEach(e),ll=s(z),We=a(z,"TD",{});var hs=o(We);dl=d(hs,"Language model supported CTC decoding for speech recognition"),hs.forEach(e),nl=s(z),je=a(z,"TD",{});var is=o(je);sl=d(is,"\u274C"),is.forEach(e),hl=s(z),Nt=a(z,"TD",{align:!0});var cs=o(Nt);il=d(cs,"\u274C"),cs.forEach(e),cl=s(z),qe=a(z,"TD",{});var fs=o(qe);fl=d(fs,"\u2705"),fs.forEach(e),ul=s(z),Ge=a(z,"TD",{});var us=o(Ge);vl=d(us,"\u274C"),us.forEach(e),z.forEach(e),_l=s(f),y=a(f,"TR",{});var W=o(y);Je=a(W,"TD",{});var vs=o(Je);Tt=a(vs,"A",{href:!0,rel:!0});var _s=o(Tt);Tl=d(_s,"Sentence Transformers"),_s.forEach(e),vs.forEach(e),El=s(W),Ve=a(W,"TD",{});var Ts=o(Ve);pl=d(Ts,"Compute dense vector representations for sentences, paragraphs, and images."),Ts.forEach(e),gl=s(W),Ue=a(W,"TD",{});var Es=o(Ue);ml=d(Es,"\u2705"),Es.forEach(e),Dl=s(W),It=a(W,"TD",{align:!0});var ps=o(It);bl=d(ps,"\u2705"),ps.forEach(e),wl=s(W),Xe=a(W,"TD",{});var gs=o(Xe);yl=d(gs,"\u2705"),gs.forEach(e),Al=s(W),Ke=a(W,"TD",{});var ms=o(Ke);Pl=d(ms,"\u2705"),ms.forEach(e),W.forEach(e),Sl=s(f),A=a(f,"TR",{});var j=o(A);Ye=a(j,"TD",{});var Ds=o(Ye);Et=a(Ds,"A",{href:!0,rel:!0});var bs=o(Et);Ll=d(bs,"spaCy"),bs.forEach(e),Ds.forEach(e),Rl=s(j),Qe=a(j,"TD",{});var ws=o(Qe);kl=d(ws,"Advanced Natural Language Processing in Python and Cython."),ws.forEach(e),Cl=s(j),Ze=a(j,"TD",{});var ys=o(Ze);Hl=d(ys,"\u2705"),ys.forEach(e),Nl=s(j),$t=a(j,"TD",{align:!0});var As=o($t);Il=d(As,"\u2705"),As.forEach(e),$l=s(j),tr=a(j,"TD",{});var Ps=o(tr);xl=d(Ps,"\u2705"),Ps.forEach(e),Fl=s(j),er=a(j,"TD",{});var Ss=o(er);Ml=d(Ss,"\u2705"),Ss.forEach(e),j.forEach(e),Ol=s(f),P=a(f,"TR",{});var q=o(P);rr=a(q,"TD",{});var Ls=o(rr);pt=a(Ls,"A",{href:!0,rel:!0});var Rs=o(pt);Bl=d(Rs,"Speechbrain"),Rs.forEach(e),Ls.forEach(e),zl=s(q),ar=a(q,"TD",{});var ks=o(ar);Wl=d(ks,"A PyTorch Powered Speech Toolkit."),ks.forEach(e),jl=s(q),or=a(q,"TD",{});var Cs=o(or);ql=d(Cs,"\u2705"),Cs.forEach(e),Gl=s(q),xt=a(q,"TD",{align:!0});var Hs=o(xt);Jl=d(Hs,"\u2705"),Hs.forEach(e),Vl=s(q),lr=a(q,"TD",{});var Ns=o(lr);Ul=d(Ns,"\u2705"),Ns.forEach(e),Xl=s(q),dr=a(q,"TD",{});var Is=o(dr);Kl=d(Is,"\u274C"),Is.forEach(e),q.forEach(e),Yl=s(f),S=a(f,"TR",{});var G=o(S);nr=a(G,"TD",{});var $s=o(nr);gt=a($s,"A",{href:!0,rel:!0});var xs=o(gt);Ql=d(xs,"TensorFlowTTS"),xs.forEach(e),$s.forEach(e),Zl=s(G),sr=a(G,"TD",{});var Fs=o(sr);td=d(Fs,"Real-time state-of-the-art speech synthesis architectures."),Fs.forEach(e),ed=s(G),hr=a(G,"TD",{});var Ms=o(hr);rd=d(Ms,"\u274C"),Ms.forEach(e),ad=s(G),Ft=a(G,"TD",{align:!0});var Os=o(Ft);od=d(Os,"\u274C"),Os.forEach(e),ld=s(G),ir=a(G,"TD",{});var Bs=o(ir);dd=d(Bs,"\u2705"),Bs.forEach(e),nd=s(G),cr=a(G,"TD",{});var zs=o(cr);sd=d(zs,"\u274C"),zs.forEach(e),G.forEach(e),hd=s(f),L=a(f,"TR",{});var J=o(L);fr=a(J,"TD",{});var Ws=o(fr);mt=a(Ws,"A",{href:!0,rel:!0});var js=o(mt);id=d(js,"Timm"),js.forEach(e),Ws.forEach(e),cd=s(J),ur=a(J,"TD",{});var qs=o(ur);fd=d(qs,"Collection of image models, scripts, pretrained weights, etc."),qs.forEach(e),ud=s(J),vr=a(J,"TD",{});var Gs=o(vr);vd=d(Gs,"\u274C"),Gs.forEach(e),_d=s(J),Mt=a(J,"TD",{align:!0});var Js=o(Mt);Td=d(Js,"\u274C"),Js.forEach(e),Ed=s(J),_r=a(J,"TD",{});var Vs=o(_r);pd=d(Vs,"\u2705"),Vs.forEach(e),gd=s(J),Tr=a(J,"TD",{});var Us=o(Tr);md=d(Us,"\u274C"),Us.forEach(e),J.forEach(e),Dd=s(f),R=a(f,"TR",{});var V=o(R);Er=a(V,"TD",{});var Xs=o(Er);Dt=a(Xs,"A",{href:!0,rel:!0});var Ks=o(Dt);bd=d(Ks,"Stable-Baselines3"),Ks.forEach(e),Xs.forEach(e),wd=s(V),pr=a(V,"TD",{});var Ys=o(pr);yd=d(Ys,"Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Ys.forEach(e),Ad=s(V),gr=a(V,"TD",{});var Qs=o(gr);Pd=d(Qs,"\u274C"),Qs.forEach(e),Sd=s(V),Ot=a(V,"TD",{align:!0});var Zs=o(Ot);Ld=d(Zs,"\u274C"),Zs.forEach(e),Rd=s(V),mr=a(V,"TD",{});var th=o(mr);kd=d(th,"\u2705"),th.forEach(e),Cd=s(V),Dr=a(V,"TD",{});var eh=o(Dr);Hd=d(eh,"\u2705"),eh.forEach(e),V.forEach(e),f.forEach(e),Ir.forEach(e),Lr=s(i),Y=a(i,"H3",{class:!0});var $r=o(Y);rt=a($r,"A",{id:!0,class:!0,href:!0});var rh=o(rt);br=a(rh,"SPAN",{});var ah=o(br);nh(bt.$$.fragment,ah),ah.forEach(e),rh.forEach(e),Nd=s($r),wr=a($r,"SPAN",{});var oh=o(wr);Id=d(oh,"How can I add a new library to the Inference API?"),oh.forEach(e),$r.forEach(e),Rr=s(i),at=a(i,"P",{});var xr=o(at);$d=d(xr,"Read about it in "),Bt=a(xr,"A",{href:!0});var lh=o(Bt);xd=d(lh,"Adding a Library Guide"),lh.forEach(e),Fd=d(xr,"."),xr.forEach(e),this.h()},h(){h(X,"name","hf:doc:metadata"),h(X,"content",JSON.stringify(mh)),h(Q,"id","libraries"),h(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(Q,"href","#libraries"),h(K,"class","relative group"),h(lt,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Libraries.ts"),h(lt,"rel","nofollow"),h(wt,"align","right"),h(dt,"href","https://github.com/huggingface/transformers"),h(dt,"rel","nofollow"),h(yt,"align","right"),h(nt,"href","https://github.com/Adapter-Hub/adapter-transformers"),h(nt,"rel","nofollow"),h(At,"align","right"),h(st,"href","https://github.com/allenai/allennlp"),h(st,"rel","nofollow"),h(Pt,"align","right"),h(ht,"href","https://github.com/asteroid-team/asteroid"),h(ht,"rel","nofollow"),h(St,"align","right"),h(it,"href","https://github.com/mindee/doctr"),h(it,"rel","nofollow"),h(Lt,"align","right"),h(ct,"href","https://github.com/espnet/espnet"),h(ct,"rel","nofollow"),h(Rt,"align","right"),h(ft,"href","https://github.com/flairNLP/flair"),h(ft,"rel","nofollow"),h(kt,"align","right"),h(ut,"href","https://github.com/NVIDIA/NeMo"),h(ut,"rel","nofollow"),h(Ct,"align","right"),h(vt,"href","https://github.com/pyannote/pyannote-audio"),h(vt,"rel","nofollow"),h(Ht,"align","right"),h(_t,"href","https://github.com/kensho-technologies/pyctcdecode"),h(_t,"rel","nofollow"),h(Nt,"align","right"),h(Tt,"href","https://github.com/UKPLab/sentence-transformers"),h(Tt,"rel","nofollow"),h(It,"align","right"),h(Et,"href","https://github.com/explosion/spaCy"),h(Et,"rel","nofollow"),h($t,"align","right"),h(pt,"href","https://speechbrain.github.io/"),h(pt,"rel","nofollow"),h(xt,"align","right"),h(gt,"href","https://github.com/TensorSpeech/TensorFlowTTS"),h(gt,"rel","nofollow"),h(Ft,"align","right"),h(mt,"href","https://github.com/rwightman/pytorch-image-models"),h(mt,"rel","nofollow"),h(Mt,"align","right"),h(Dt,"href","https://github.com/DLR-RM/stable-baselines3"),h(Dt,"rel","nofollow"),h(Ot,"align","right"),h(rt,"id","how-can-i-add-a-new-library-to-the-inference-api"),h(rt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(rt,"href","#how-can-i-add-a-new-library-to-the-inference-api"),h(Y,"class","relative group"),h(Bt,"href","./models-adding-libraries")},m(i,k){t(document.head,X),U(i,yr,k),U(i,K,k),t(K,Q),t(Q,zt),sh(ot,zt,null),t(K,Fr),t(K,Wt),t(Wt,Mr),U(i,Ar,k),U(i,Z,k),t(Z,Or),t(Z,jt),t(jt,Br),t(Z,zr),U(i,Pr,k),U(i,tt,k),t(tt,Wr),t(tt,lt),t(lt,jr),t(tt,qr),U(i,Sr,k),U(i,et,k),t(et,qt),t(qt,u),t(u,Gt),t(Gt,Gr),t(u,Jr),t(u,Jt),t(Jt,Vr),t(u,Ur),t(u,Vt),t(Vt,Xr),t(u,Kr),t(u,wt),t(wt,Yr),t(u,Qr),t(u,Ut),t(Ut,Zr),t(u,ta),t(u,Xt),t(Xt,ea),t(et,ra),t(et,c),t(c,v),t(v,Kt),t(Kt,dt),t(dt,aa),t(v,oa),t(v,Yt),t(Yt,la),t(v,da),t(v,Qt),t(Qt,na),t(v,sa),t(v,yt),t(yt,ha),t(v,ia),t(v,Zt),t(Zt,ca),t(v,fa),t(v,te),t(te,ua),t(c,va),t(c,_),t(_,ee),t(ee,nt),t(nt,_a),t(_,Ta),t(_,re),t(re,Ea),t(_,pa),t(_,ae),t(ae,ga),t(_,ma),t(_,At),t(At,Da),t(_,ba),t(_,oe),t(oe,wa),t(_,ya),t(_,le),t(le,Aa),t(c,Pa),t(c,T),t(T,de),t(de,st),t(st,Sa),t(T,La),t(T,ne),t(ne,Ra),t(T,ka),t(T,se),t(se,Ca),t(T,Ha),t(T,Pt),t(Pt,Na),t(T,Ia),t(T,he),t(he,$a),t(T,xa),t(T,ie),t(ie,Fa),t(c,Ma),t(c,E),t(E,ce),t(ce,ht),t(ht,Oa),t(E,Ba),t(E,fe),t(fe,za),t(E,Wa),t(E,ue),t(ue,ja),t(E,qa),t(E,St),t(St,Ga),t(E,Ja),t(E,ve),t(ve,Va),t(E,Ua),t(E,_e),t(_e,Xa),t(c,Ka),t(c,p),t(p,Te),t(Te,it),t(it,Ya),t(p,Qa),t(p,Ee),t(Ee,Za),t(p,to),t(p,pe),t(pe,eo),t(p,ro),t(p,Lt),t(Lt,ao),t(p,oo),t(p,ge),t(ge,lo),t(p,no),t(p,me),t(me,so),t(c,ho),t(c,g),t(g,De),t(De,ct),t(ct,io),t(g,co),t(g,be),t(be,fo),t(g,uo),t(g,we),t(we,vo),t(g,_o),t(g,Rt),t(Rt,To),t(g,Eo),t(g,ye),t(ye,po),t(g,go),t(g,Ae),t(Ae,mo),t(c,Do),t(c,m),t(m,Pe),t(Pe,ft),t(ft,bo),t(m,wo),t(m,Se),t(Se,yo),t(m,Ao),t(m,Le),t(Le,Po),t(m,So),t(m,kt),t(kt,Lo),t(m,Ro),t(m,Re),t(Re,ko),t(m,Co),t(m,ke),t(ke,Ho),t(c,No),t(c,D),t(D,Ce),t(Ce,ut),t(ut,Io),t(D,$o),t(D,He),t(He,xo),t(D,Fo),t(D,Ne),t(Ne,Mo),t(D,Oo),t(D,Ct),t(Ct,Bo),t(D,zo),t(D,Ie),t(Ie,Wo),t(D,jo),t(D,$e),t($e,qo),t(c,Go),t(c,b),t(b,xe),t(xe,vt),t(vt,Jo),t(b,Vo),t(b,Fe),t(Fe,Uo),t(b,Xo),t(b,Me),t(Me,Ko),t(b,Yo),t(b,Ht),t(Ht,Qo),t(b,Zo),t(b,Oe),t(Oe,tl),t(b,el),t(b,Be),t(Be,rl),t(c,al),t(c,w),t(w,ze),t(ze,_t),t(_t,ol),t(w,ll),t(w,We),t(We,dl),t(w,nl),t(w,je),t(je,sl),t(w,hl),t(w,Nt),t(Nt,il),t(w,cl),t(w,qe),t(qe,fl),t(w,ul),t(w,Ge),t(Ge,vl),t(c,_l),t(c,y),t(y,Je),t(Je,Tt),t(Tt,Tl),t(y,El),t(y,Ve),t(Ve,pl),t(y,gl),t(y,Ue),t(Ue,ml),t(y,Dl),t(y,It),t(It,bl),t(y,wl),t(y,Xe),t(Xe,yl),t(y,Al),t(y,Ke),t(Ke,Pl),t(c,Sl),t(c,A),t(A,Ye),t(Ye,Et),t(Et,Ll),t(A,Rl),t(A,Qe),t(Qe,kl),t(A,Cl),t(A,Ze),t(Ze,Hl),t(A,Nl),t(A,$t),t($t,Il),t(A,$l),t(A,tr),t(tr,xl),t(A,Fl),t(A,er),t(er,Ml),t(c,Ol),t(c,P),t(P,rr),t(rr,pt),t(pt,Bl),t(P,zl),t(P,ar),t(ar,Wl),t(P,jl),t(P,or),t(or,ql),t(P,Gl),t(P,xt),t(xt,Jl),t(P,Vl),t(P,lr),t(lr,Ul),t(P,Xl),t(P,dr),t(dr,Kl),t(c,Yl),t(c,S),t(S,nr),t(nr,gt),t(gt,Ql),t(S,Zl),t(S,sr),t(sr,td),t(S,ed),t(S,hr),t(hr,rd),t(S,ad),t(S,Ft),t(Ft,od),t(S,ld),t(S,ir),t(ir,dd),t(S,nd),t(S,cr),t(cr,sd),t(c,hd),t(c,L),t(L,fr),t(fr,mt),t(mt,id),t(L,cd),t(L,ur),t(ur,fd),t(L,ud),t(L,vr),t(vr,vd),t(L,_d),t(L,Mt),t(Mt,Td),t(L,Ed),t(L,_r),t(_r,pd),t(L,gd),t(L,Tr),t(Tr,md),t(c,Dd),t(c,R),t(R,Er),t(Er,Dt),t(Dt,bd),t(R,wd),t(R,pr),t(pr,yd),t(R,Ad),t(R,gr),t(gr,Pd),t(R,Sd),t(R,Ot),t(Ot,Ld),t(R,Rd),t(R,mr),t(mr,kd),t(R,Cd),t(R,Dr),t(Dr,Hd),U(i,Lr,k),U(i,Y,k),t(Y,rt),t(rt,br),sh(bt,br,null),t(Y,Nd),t(Y,wr),t(wr,Id),U(i,Rr,k),U(i,at,k),t(at,$d),t(at,Bt),t(Bt,xd),t(at,Fd),kr=!0},p:Eh,i(i){kr||(hh(ot.$$.fragment,i),hh(bt.$$.fragment,i),kr=!0)},o(i){ih(ot.$$.fragment,i),ih(bt.$$.fragment,i),kr=!1},d(i){e(X),i&&e(yr),i&&e(K),ch(ot),i&&e(Ar),i&&e(Z),i&&e(Pr),i&&e(tt),i&&e(Sr),i&&e(et),i&&e(Lr),i&&e(Y),ch(bt),i&&e(Rr),i&&e(at)}}}const mh={local:"libraries",sections:[{local:"how-can-i-add-a-new-library-to-the-inference-api",title:"How can I add a new library to the Inference API?"}],title:"Libraries"};function Dh(Md){return ph(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class yh extends uh{constructor(X){super();vh(this,X,Dh,gh,_h,{})}}export{yh as default,mh as metadata};
