import{S as Mi,i as Oi,s as Ci,e as r,k as u,w as p,t as h,N as Wi,c as i,d as t,m as c,a as o,x as d,h as f,b as l,P as b,G as s,g as n,y as m,L as Vi,q as v,o as g,B as _,v as Fi}from"../chunks/vendor-hf-doc-builder.js";import{I as y}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as gt}from"../chunks/CodeBlock-hf-doc-builder.js";function Ti(Ar){let w,_t,k,O,Ce,Z,ks,We,Es,bt,C,Ps,Ve,qs,As,$t,$e,Is,yt,$,ee,Ns,Fe,xs,Ss,Gs,Te,Ds,Ls,Ye,js,wt,E,W,Be,te,Hs,Ue,Rs,kt,P,ye,Ir,Ms,we,Nr,Et,q,V,Je,se,Os,ze,Cs,Pt,A,ke,xr,Ws,Ee,Sr,qt,I,F,Ke,re,Vs,Qe,Fs,At,Pe,Ts,It,N,qe,Gr,Ys,Ae,Dr,Nt,x,T,Xe,ie,Bs,Ze,Us,xt,Ie,Js,St,S,Ne,Lr,zs,xe,jr,Gt,G,Se,Hr,Ks,Ge,Rr,Dt,De,Qs,Lt,D,Le,Mr,Xs,je,Or,jt,L,Y,et,ae,Zs,tt,er,Ht,He,tr,Rt,le,Mt,j,B,st,oe,sr,rt,rr,Ot,Re,ir,Ct,H,U,it,ne,ar,at,lr,Wt,R,J,lt,ue,or,ot,nr,Vt,z,ur,nt,cr,hr,Ft,ce,he,fr,pr,Tt,K,dr,ut,mr,vr,Yt,M,Q,ct,fe,gr,ht,_r,Bt,X,br,ft,$r,yr,Ut,Me,pt,wr,Jt,pe,zt,de,dt,kr,Kt,me,Qt,ve,mt,Er,Xt,ge,Zt,_e,vt,Pr,es,be,ts;return Z=new y({}),te=new y({}),se=new y({}),re=new y({}),ie=new y({}),ae=new y({}),le=new gt({props:{code:`git fetch origin refs/pr/42:pr/42
git checkout pr/42
# Do your changes
git add .
git commit -m "Add your change"
git push origin pr/42:refs/pr/42`,highlighted:`git fetch origin refs/pr/42:<span class="hljs-built_in">pr</span>/42
git checkout <span class="hljs-built_in">pr</span>/42
<span class="hljs-comment"># Do your changes</span>
git add .
git commit -m <span class="hljs-string">&quot;Add your change&quot;</span>
git push origin <span class="hljs-built_in">pr</span>/42:refs/pr/42`}}),oe=new y({}),ne=new y({}),ue=new y({}),fe=new y({}),pe=new gt({props:{code:`[remote "origin"]
	fetch = +refs/pr/*:refs/remotes/origin/pr/*`,highlighted:`[remote <span class="hljs-string">&quot;origin&quot;</span>]
	fetch = +refs/pr/*:refs/remotes/origin/pr/*`}}),me=new gt({props:{code:"git fetch",highlighted:"git fetch"}}),ge=new gt({props:{code:"git checkout pr/:num",highlighted:'git checkout <span class="hljs-built_in">pr</span>/:num'}}),be=new gt({props:{code:"git push origin pr/42:refs/pr/42",highlighted:'git push origin <span class="hljs-built_in">pr</span>/42:refs/pr/42'}}),{c(){w=r("meta"),_t=u(),k=r("h1"),O=r("a"),Ce=r("span"),p(Z.$$.fragment),ks=u(),We=r("span"),Es=h("Pull requests and Discussions"),bt=u(),C=r("p"),Ps=h("We just enabled "),Ve=r("strong"),qs=h("community contributions to repos"),As=h(", a feature called \u2018Hub Pull requests and Discussions\u2019. Pull requests and discussions work the same for all the repo types."),$t=u(),$e=r("p"),Is=h("At a high level, the aim is to build a simpler version of other git hosts\u2019 (like GitHub\u2019s) PRs and Issues:"),yt=u(),$=r("ul"),ee=r("li"),Ns=h("no forks are involved: contributors push to a special "),Fe=r("code"),xs=h("ref"),Ss=h(" branch directly on the source repo."),Gs=u(),Te=r("li"),Ds=h("there\u2019s no hard distinction between discussions and PRs: they are essentially the same so they are displayed in the same lists."),Ls=u(),Ye=r("li"),js=h("they are streamlined for ML (i.e. models/datasets/spaces repos), not arbitrary repos."),wt=u(),E=r("h2"),W=r("a"),Be=r("span"),p(te.$$.fragment),Hs=u(),Ue=r("span"),Rs=h("List"),kt=u(),P=r("div"),ye=r("img"),Ms=u(),we=r("img"),Et=u(),q=r("h2"),V=r("a"),Je=r("span"),p(se.$$.fragment),Os=u(),ze=r("span"),Cs=h("View"),Pt=u(),A=r("div"),ke=r("img"),Ws=u(),Ee=r("img"),qt=u(),I=r("h2"),F=r("a"),Ke=r("span"),p(re.$$.fragment),Vs=u(),Qe=r("span"),Fs=h("Editing a Discussion / Pull request title"),At=u(),Pe=r("p"),Ts=h("If you opened a PR or discussion, are the author of the repository, or have write access to it, you can edit the discussion title by clicking on the pencil button."),It=u(),N=r("div"),qe=r("img"),Ys=u(),Ae=r("img"),Nt=u(),x=r("h2"),T=r("a"),Xe=r("span"),p(ie.$$.fragment),Bs=u(),Ze=r("span"),Us=h("Comment edition and moderation"),xt=u(),Ie=r("p"),Js=h("If you wrote a comment or have write access to the repository, you can edit the content of the comment from the contextual menu in the top-right corner of the comment box."),St=u(),S=r("div"),Ne=r("img"),zs=u(),xe=r("img"),Gt=u(),G=r("div"),Se=r("img"),Ks=u(),Ge=r("img"),Dt=u(),De=r("p"),Qs=h("You can also hide a comment. Hiding a comment is irreversible, and nobody will be able to see its content nor edit it anymore."),Lt=u(),D=r("div"),Le=r("img"),Xs=u(),je=r("img"),jt=u(),L=r("h2"),Y=r("a"),et=r("span"),p(ae.$$.fragment),Zs=u(),tt=r("span"),er=h("How do I manage Pull requests locally?"),Ht=u(),He=r("p"),tr=h("Let\u2019s assume your PR number is 42."),Rt=u(),p(le.$$.fragment),Mt=u(),j=r("h3"),B=r("a"),st=r("span"),p(oe.$$.fragment),sr=u(),rt=r("span"),rr=h("Draft mode"),Ot=u(),Re=r("p"),ir=h("Draft mode is the default status when opening a new Pull request from scratch in \u201CAdvanced mode\u201D. With this status, other contributors know that your Pull request is under work and it cannot be merged. When your branch is ready, just hit the \u201CPublish\u201D button to change the status of the Pull request to \u201COpen\u201D. Note that once published you cannot go back to draft mode."),Ct=u(),H=r("h1"),U=r("a"),it=r("span"),p(ne.$$.fragment),ar=u(),at=r("span"),lr=h("Pull requests advanced usage"),Wt=u(),R=r("h2"),J=r("a"),lt=r("span"),p(ue.$$.fragment),or=u(),ot=r("span"),nr=h("Where in the git repo are changes stored?"),Vt=u(),z=r("p"),ur=h("Our Pull requests do not use forks and branches, but instead custom \u201Cbranches\u201D called "),nt=r("code"),cr=h("refs"),hr=h(" that are stored directly on the source repo."),Ft=u(),ce=r("p"),he=r("a"),fr=h("Git References"),pr=h(" are the internal machinery of git which already stores tags and branches."),Tt=u(),K=r("p"),dr=h("The advantage of using custom refs (like "),ut=r("code"),mr=h("refs/pr/42"),vr=h(" for instance) instead of branches is that they\u2019re not fetched (by default) by people (including the repo \u201Cowner\u201D) cloning the repo, but they can still be fetched on demand."),Yt=u(),M=r("h2"),Q=r("a"),ct=r("span"),p(fe.$$.fragment),gr=u(),ht=r("span"),_r=h("Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"),Bt=u(),X=r("p"),br=h("You can tweak your local "),ft=r("strong"),$r=h("refspec"),yr=h(" to fetch all Pull requests:"),Ut=u(),Me=r("ol"),pt=r("li"),wr=h("Add this refspec to your .git/config:"),Jt=u(),p(pe.$$.fragment),zt=u(),de=r("ol"),dt=r("li"),kr=h("Fetch"),Kt=u(),p(me.$$.fragment),Qt=u(),ve=r("ol"),mt=r("li"),Er=h("create a local branch tracking the ref"),Xt=u(),p(ge.$$.fragment),Zt=u(),_e=r("ol"),vt=r("li"),Pr=h("IF you make local changes, to push to the PR ref:"),es=u(),p(be.$$.fragment),this.h()},l(e){const a=Wi('[data-svelte="svelte-1phssyn"]',document.head);w=i(a,"META",{name:!0,content:!0}),a.forEach(t),_t=c(e),k=i(e,"H1",{class:!0});var ss=o(k);O=i(ss,"A",{id:!0,class:!0,href:!0});var Cr=o(O);Ce=i(Cr,"SPAN",{});var Wr=o(Ce);d(Z.$$.fragment,Wr),Wr.forEach(t),Cr.forEach(t),ks=c(ss),We=i(ss,"SPAN",{});var Vr=o(We);Es=f(Vr,"Pull requests and Discussions"),Vr.forEach(t),ss.forEach(t),bt=c(e),C=i(e,"P",{});var rs=o(C);Ps=f(rs,"We just enabled "),Ve=i(rs,"STRONG",{});var Fr=o(Ve);qs=f(Fr,"community contributions to repos"),Fr.forEach(t),As=f(rs,", a feature called \u2018Hub Pull requests and Discussions\u2019. Pull requests and discussions work the same for all the repo types."),rs.forEach(t),$t=c(e),$e=i(e,"P",{});var Tr=o($e);Is=f(Tr,"At a high level, the aim is to build a simpler version of other git hosts\u2019 (like GitHub\u2019s) PRs and Issues:"),Tr.forEach(t),yt=c(e),$=i(e,"UL",{});var Oe=o($);ee=i(Oe,"LI",{});var is=o(ee);Ns=f(is,"no forks are involved: contributors push to a special "),Fe=i(is,"CODE",{});var Yr=o(Fe);xs=f(Yr,"ref"),Yr.forEach(t),Ss=f(is," branch directly on the source repo."),is.forEach(t),Gs=c(Oe),Te=i(Oe,"LI",{});var Br=o(Te);Ds=f(Br,"there\u2019s no hard distinction between discussions and PRs: they are essentially the same so they are displayed in the same lists."),Br.forEach(t),Ls=c(Oe),Ye=i(Oe,"LI",{});var Ur=o(Ye);js=f(Ur,"they are streamlined for ML (i.e. models/datasets/spaces repos), not arbitrary repos."),Ur.forEach(t),Oe.forEach(t),wt=c(e),E=i(e,"H2",{class:!0});var as=o(E);W=i(as,"A",{id:!0,class:!0,href:!0});var Jr=o(W);Be=i(Jr,"SPAN",{});var zr=o(Be);d(te.$$.fragment,zr),zr.forEach(t),Jr.forEach(t),Hs=c(as),Ue=i(as,"SPAN",{});var Kr=o(Ue);Rs=f(Kr,"List"),Kr.forEach(t),as.forEach(t),kt=c(e),P=i(e,"DIV",{class:!0});var ls=o(P);ye=i(ls,"IMG",{class:!0,src:!0}),Ms=c(ls),we=i(ls,"IMG",{class:!0,src:!0}),ls.forEach(t),Et=c(e),q=i(e,"H2",{class:!0});var os=o(q);V=i(os,"A",{id:!0,class:!0,href:!0});var Qr=o(V);Je=i(Qr,"SPAN",{});var Xr=o(Je);d(se.$$.fragment,Xr),Xr.forEach(t),Qr.forEach(t),Os=c(os),ze=i(os,"SPAN",{});var Zr=o(ze);Cs=f(Zr,"View"),Zr.forEach(t),os.forEach(t),Pt=c(e),A=i(e,"DIV",{class:!0});var ns=o(A);ke=i(ns,"IMG",{class:!0,src:!0}),Ws=c(ns),Ee=i(ns,"IMG",{class:!0,src:!0}),ns.forEach(t),qt=c(e),I=i(e,"H2",{class:!0});var us=o(I);F=i(us,"A",{id:!0,class:!0,href:!0});var ei=o(F);Ke=i(ei,"SPAN",{});var ti=o(Ke);d(re.$$.fragment,ti),ti.forEach(t),ei.forEach(t),Vs=c(us),Qe=i(us,"SPAN",{});var si=o(Qe);Fs=f(si,"Editing a Discussion / Pull request title"),si.forEach(t),us.forEach(t),At=c(e),Pe=i(e,"P",{});var ri=o(Pe);Ts=f(ri,"If you opened a PR or discussion, are the author of the repository, or have write access to it, you can edit the discussion title by clicking on the pencil button."),ri.forEach(t),It=c(e),N=i(e,"DIV",{class:!0});var cs=o(N);qe=i(cs,"IMG",{class:!0,src:!0}),Ys=c(cs),Ae=i(cs,"IMG",{class:!0,src:!0}),cs.forEach(t),Nt=c(e),x=i(e,"H2",{class:!0});var hs=o(x);T=i(hs,"A",{id:!0,class:!0,href:!0});var ii=o(T);Xe=i(ii,"SPAN",{});var ai=o(Xe);d(ie.$$.fragment,ai),ai.forEach(t),ii.forEach(t),Bs=c(hs),Ze=i(hs,"SPAN",{});var li=o(Ze);Us=f(li,"Comment edition and moderation"),li.forEach(t),hs.forEach(t),xt=c(e),Ie=i(e,"P",{});var oi=o(Ie);Js=f(oi,"If you wrote a comment or have write access to the repository, you can edit the content of the comment from the contextual menu in the top-right corner of the comment box."),oi.forEach(t),St=c(e),S=i(e,"DIV",{class:!0});var fs=o(S);Ne=i(fs,"IMG",{class:!0,src:!0}),zs=c(fs),xe=i(fs,"IMG",{class:!0,src:!0}),fs.forEach(t),Gt=c(e),G=i(e,"DIV",{class:!0});var ps=o(G);Se=i(ps,"IMG",{class:!0,src:!0}),Ks=c(ps),Ge=i(ps,"IMG",{class:!0,src:!0}),ps.forEach(t),Dt=c(e),De=i(e,"P",{});var ni=o(De);Qs=f(ni,"You can also hide a comment. Hiding a comment is irreversible, and nobody will be able to see its content nor edit it anymore."),ni.forEach(t),Lt=c(e),D=i(e,"DIV",{class:!0});var ds=o(D);Le=i(ds,"IMG",{class:!0,src:!0}),Xs=c(ds),je=i(ds,"IMG",{class:!0,src:!0}),ds.forEach(t),jt=c(e),L=i(e,"H2",{class:!0});var ms=o(L);Y=i(ms,"A",{id:!0,class:!0,href:!0});var ui=o(Y);et=i(ui,"SPAN",{});var ci=o(et);d(ae.$$.fragment,ci),ci.forEach(t),ui.forEach(t),Zs=c(ms),tt=i(ms,"SPAN",{});var hi=o(tt);er=f(hi,"How do I manage Pull requests locally?"),hi.forEach(t),ms.forEach(t),Ht=c(e),He=i(e,"P",{});var fi=o(He);tr=f(fi,"Let\u2019s assume your PR number is 42."),fi.forEach(t),Rt=c(e),d(le.$$.fragment,e),Mt=c(e),j=i(e,"H3",{class:!0});var vs=o(j);B=i(vs,"A",{id:!0,class:!0,href:!0});var pi=o(B);st=i(pi,"SPAN",{});var di=o(st);d(oe.$$.fragment,di),di.forEach(t),pi.forEach(t),sr=c(vs),rt=i(vs,"SPAN",{});var mi=o(rt);rr=f(mi,"Draft mode"),mi.forEach(t),vs.forEach(t),Ot=c(e),Re=i(e,"P",{});var vi=o(Re);ir=f(vi,"Draft mode is the default status when opening a new Pull request from scratch in \u201CAdvanced mode\u201D. With this status, other contributors know that your Pull request is under work and it cannot be merged. When your branch is ready, just hit the \u201CPublish\u201D button to change the status of the Pull request to \u201COpen\u201D. Note that once published you cannot go back to draft mode."),vi.forEach(t),Ct=c(e),H=i(e,"H1",{class:!0});var gs=o(H);U=i(gs,"A",{id:!0,class:!0,href:!0});var gi=o(U);it=i(gi,"SPAN",{});var _i=o(it);d(ne.$$.fragment,_i),_i.forEach(t),gi.forEach(t),ar=c(gs),at=i(gs,"SPAN",{});var bi=o(at);lr=f(bi,"Pull requests advanced usage"),bi.forEach(t),gs.forEach(t),Wt=c(e),R=i(e,"H2",{class:!0});var _s=o(R);J=i(_s,"A",{id:!0,class:!0,href:!0});var $i=o(J);lt=i($i,"SPAN",{});var yi=o(lt);d(ue.$$.fragment,yi),yi.forEach(t),$i.forEach(t),or=c(_s),ot=i(_s,"SPAN",{});var wi=o(ot);nr=f(wi,"Where in the git repo are changes stored?"),wi.forEach(t),_s.forEach(t),Vt=c(e),z=i(e,"P",{});var bs=o(z);ur=f(bs,"Our Pull requests do not use forks and branches, but instead custom \u201Cbranches\u201D called "),nt=i(bs,"CODE",{});var ki=o(nt);cr=f(ki,"refs"),ki.forEach(t),hr=f(bs," that are stored directly on the source repo."),bs.forEach(t),Ft=c(e),ce=i(e,"P",{});var qr=o(ce);he=i(qr,"A",{href:!0,rel:!0});var Ei=o(he);fr=f(Ei,"Git References"),Ei.forEach(t),pr=f(qr," are the internal machinery of git which already stores tags and branches."),qr.forEach(t),Tt=c(e),K=i(e,"P",{});var $s=o(K);dr=f($s,"The advantage of using custom refs (like "),ut=i($s,"CODE",{});var Pi=o(ut);mr=f(Pi,"refs/pr/42"),Pi.forEach(t),vr=f($s," for instance) instead of branches is that they\u2019re not fetched (by default) by people (including the repo \u201Cowner\u201D) cloning the repo, but they can still be fetched on demand."),$s.forEach(t),Yt=c(e),M=i(e,"H2",{class:!0});var ys=o(M);Q=i(ys,"A",{id:!0,class:!0,href:!0});var qi=o(Q);ct=i(qi,"SPAN",{});var Ai=o(ct);d(fe.$$.fragment,Ai),Ai.forEach(t),qi.forEach(t),gr=c(ys),ht=i(ys,"SPAN",{});var Ii=o(ht);_r=f(Ii,"Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"),Ii.forEach(t),ys.forEach(t),Bt=c(e),X=i(e,"P",{});var ws=o(X);br=f(ws,"You can tweak your local "),ft=i(ws,"STRONG",{});var Ni=o(ft);$r=f(Ni,"refspec"),Ni.forEach(t),yr=f(ws," to fetch all Pull requests:"),ws.forEach(t),Ut=c(e),Me=i(e,"OL",{});var xi=o(Me);pt=i(xi,"LI",{});var Si=o(pt);wr=f(Si,"Add this refspec to your .git/config:"),Si.forEach(t),xi.forEach(t),Jt=c(e),d(pe.$$.fragment,e),zt=c(e),de=i(e,"OL",{start:!0});var Gi=o(de);dt=i(Gi,"LI",{});var Di=o(dt);kr=f(Di,"Fetch"),Di.forEach(t),Gi.forEach(t),Kt=c(e),d(me.$$.fragment,e),Qt=c(e),ve=i(e,"OL",{start:!0});var Li=o(ve);mt=i(Li,"LI",{});var ji=o(mt);Er=f(ji,"create a local branch tracking the ref"),ji.forEach(t),Li.forEach(t),Xt=c(e),d(ge.$$.fragment,e),Zt=c(e),_e=i(e,"OL",{start:!0});var Hi=o(_e);vt=i(Hi,"LI",{});var Ri=o(vt);Pr=f(Ri,"IF you make local changes, to push to the PR ref:"),Ri.forEach(t),Hi.forEach(t),es=c(e),d(be.$$.fragment,e),this.h()},h(){l(w,"name","hf:doc:metadata"),l(w,"content",JSON.stringify(Yi)),l(O,"id","pull-requests-and-discussions"),l(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(O,"href","#pull-requests-and-discussions"),l(k,"class","relative group"),l(W,"id","list"),l(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(W,"href","#list"),l(E,"class","relative group"),l(ye,"class","block dark:hidden"),b(ye.src,Ir="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-list.png")||l(ye,"src",Ir),l(we,"class","hidden dark:block"),b(we.src,Nr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-list-dark.png")||l(we,"src",Nr),l(P,"class","flex justify-center"),l(V,"id","view"),l(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(V,"href","#view"),l(q,"class","relative group"),l(ke,"class","block dark:hidden"),b(ke.src,xr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-view.png")||l(ke,"src",xr),l(Ee,"class","hidden dark:block"),b(Ee.src,Sr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-view-dark.png")||l(Ee,"src",Sr),l(A,"class","flex justify-center"),l(F,"id","editing-a-discussion-pull-request-title"),l(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(F,"href","#editing-a-discussion-pull-request-title"),l(I,"class","relative group"),l(qe,"class","block dark:hidden"),b(qe.src,Gr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-edit-title.PNG")||l(qe,"src",Gr),l(Ae,"class","hidden dark:block"),b(Ae.src,Dr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-edit-title-dark.PNG")||l(Ae,"src",Dr),l(N,"class","flex justify-center"),l(T,"id","comment-edition-and-moderation"),l(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(T,"href","#comment-edition-and-moderation"),l(x,"class","relative group"),l(Ne,"class","block dark:hidden"),b(Ne.src,Lr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu.png")||l(Ne,"src",Lr),l(xe,"class","hidden dark:block"),b(xe.src,jr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-dark.png")||l(xe,"src",jr),l(S,"class","flex justify-center"),l(Se,"class","block dark:hidden"),b(Se.src,Hr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-edit.png")||l(Se,"src",Hr),l(Ge,"class","hidden dark:block"),b(Ge.src,Rr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-edit-dark.png")||l(Ge,"src",Rr),l(G,"class","flex justify-center"),l(Le,"class","block dark:hidden"),b(Le.src,Mr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-hidden.png")||l(Le,"src",Mr),l(je,"class","hidden dark:block"),b(je.src,Or="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-hidden-dark.png")||l(je,"src",Or),l(D,"class","flex justify-center"),l(Y,"id","how-do-i-manage-pull-requests-locally"),l(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(Y,"href","#how-do-i-manage-pull-requests-locally"),l(L,"class","relative group"),l(B,"id","draft-mode"),l(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(B,"href","#draft-mode"),l(j,"class","relative group"),l(U,"id","pull-requests-advanced-usage"),l(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(U,"href","#pull-requests-advanced-usage"),l(H,"class","relative group"),l(J,"id","where-in-the-git-repo-are-changes-stored"),l(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(J,"href","#where-in-the-git-repo-are-changes-stored"),l(R,"class","relative group"),l(he,"href","https://git-scm.com/book/en/v2/Git-Internals-Git-References"),l(he,"rel","nofollow"),l(Q,"id","fetching-all-pull-requests-for-git-magicians"),l(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(Q,"href","#fetching-all-pull-requests-for-git-magicians"),l(M,"class","relative group"),l(de,"start","2"),l(ve,"start","3"),l(_e,"start","4")},m(e,a){s(document.head,w),n(e,_t,a),n(e,k,a),s(k,O),s(O,Ce),m(Z,Ce,null),s(k,ks),s(k,We),s(We,Es),n(e,bt,a),n(e,C,a),s(C,Ps),s(C,Ve),s(Ve,qs),s(C,As),n(e,$t,a),n(e,$e,a),s($e,Is),n(e,yt,a),n(e,$,a),s($,ee),s(ee,Ns),s(ee,Fe),s(Fe,xs),s(ee,Ss),s($,Gs),s($,Te),s(Te,Ds),s($,Ls),s($,Ye),s(Ye,js),n(e,wt,a),n(e,E,a),s(E,W),s(W,Be),m(te,Be,null),s(E,Hs),s(E,Ue),s(Ue,Rs),n(e,kt,a),n(e,P,a),s(P,ye),s(P,Ms),s(P,we),n(e,Et,a),n(e,q,a),s(q,V),s(V,Je),m(se,Je,null),s(q,Os),s(q,ze),s(ze,Cs),n(e,Pt,a),n(e,A,a),s(A,ke),s(A,Ws),s(A,Ee),n(e,qt,a),n(e,I,a),s(I,F),s(F,Ke),m(re,Ke,null),s(I,Vs),s(I,Qe),s(Qe,Fs),n(e,At,a),n(e,Pe,a),s(Pe,Ts),n(e,It,a),n(e,N,a),s(N,qe),s(N,Ys),s(N,Ae),n(e,Nt,a),n(e,x,a),s(x,T),s(T,Xe),m(ie,Xe,null),s(x,Bs),s(x,Ze),s(Ze,Us),n(e,xt,a),n(e,Ie,a),s(Ie,Js),n(e,St,a),n(e,S,a),s(S,Ne),s(S,zs),s(S,xe),n(e,Gt,a),n(e,G,a),s(G,Se),s(G,Ks),s(G,Ge),n(e,Dt,a),n(e,De,a),s(De,Qs),n(e,Lt,a),n(e,D,a),s(D,Le),s(D,Xs),s(D,je),n(e,jt,a),n(e,L,a),s(L,Y),s(Y,et),m(ae,et,null),s(L,Zs),s(L,tt),s(tt,er),n(e,Ht,a),n(e,He,a),s(He,tr),n(e,Rt,a),m(le,e,a),n(e,Mt,a),n(e,j,a),s(j,B),s(B,st),m(oe,st,null),s(j,sr),s(j,rt),s(rt,rr),n(e,Ot,a),n(e,Re,a),s(Re,ir),n(e,Ct,a),n(e,H,a),s(H,U),s(U,it),m(ne,it,null),s(H,ar),s(H,at),s(at,lr),n(e,Wt,a),n(e,R,a),s(R,J),s(J,lt),m(ue,lt,null),s(R,or),s(R,ot),s(ot,nr),n(e,Vt,a),n(e,z,a),s(z,ur),s(z,nt),s(nt,cr),s(z,hr),n(e,Ft,a),n(e,ce,a),s(ce,he),s(he,fr),s(ce,pr),n(e,Tt,a),n(e,K,a),s(K,dr),s(K,ut),s(ut,mr),s(K,vr),n(e,Yt,a),n(e,M,a),s(M,Q),s(Q,ct),m(fe,ct,null),s(M,gr),s(M,ht),s(ht,_r),n(e,Bt,a),n(e,X,a),s(X,br),s(X,ft),s(ft,$r),s(X,yr),n(e,Ut,a),n(e,Me,a),s(Me,pt),s(pt,wr),n(e,Jt,a),m(pe,e,a),n(e,zt,a),n(e,de,a),s(de,dt),s(dt,kr),n(e,Kt,a),m(me,e,a),n(e,Qt,a),n(e,ve,a),s(ve,mt),s(mt,Er),n(e,Xt,a),m(ge,e,a),n(e,Zt,a),n(e,_e,a),s(_e,vt),s(vt,Pr),n(e,es,a),m(be,e,a),ts=!0},p:Vi,i(e){ts||(v(Z.$$.fragment,e),v(te.$$.fragment,e),v(se.$$.fragment,e),v(re.$$.fragment,e),v(ie.$$.fragment,e),v(ae.$$.fragment,e),v(le.$$.fragment,e),v(oe.$$.fragment,e),v(ne.$$.fragment,e),v(ue.$$.fragment,e),v(fe.$$.fragment,e),v(pe.$$.fragment,e),v(me.$$.fragment,e),v(ge.$$.fragment,e),v(be.$$.fragment,e),ts=!0)},o(e){g(Z.$$.fragment,e),g(te.$$.fragment,e),g(se.$$.fragment,e),g(re.$$.fragment,e),g(ie.$$.fragment,e),g(ae.$$.fragment,e),g(le.$$.fragment,e),g(oe.$$.fragment,e),g(ne.$$.fragment,e),g(ue.$$.fragment,e),g(fe.$$.fragment,e),g(pe.$$.fragment,e),g(me.$$.fragment,e),g(ge.$$.fragment,e),g(be.$$.fragment,e),ts=!1},d(e){t(w),e&&t(_t),e&&t(k),_(Z),e&&t(bt),e&&t(C),e&&t($t),e&&t($e),e&&t(yt),e&&t($),e&&t(wt),e&&t(E),_(te),e&&t(kt),e&&t(P),e&&t(Et),e&&t(q),_(se),e&&t(Pt),e&&t(A),e&&t(qt),e&&t(I),_(re),e&&t(At),e&&t(Pe),e&&t(It),e&&t(N),e&&t(Nt),e&&t(x),_(ie),e&&t(xt),e&&t(Ie),e&&t(St),e&&t(S),e&&t(Gt),e&&t(G),e&&t(Dt),e&&t(De),e&&t(Lt),e&&t(D),e&&t(jt),e&&t(L),_(ae),e&&t(Ht),e&&t(He),e&&t(Rt),_(le,e),e&&t(Mt),e&&t(j),_(oe),e&&t(Ot),e&&t(Re),e&&t(Ct),e&&t(H),_(ne),e&&t(Wt),e&&t(R),_(ue),e&&t(Vt),e&&t(z),e&&t(Ft),e&&t(ce),e&&t(Tt),e&&t(K),e&&t(Yt),e&&t(M),_(fe),e&&t(Bt),e&&t(X),e&&t(Ut),e&&t(Me),e&&t(Jt),_(pe,e),e&&t(zt),e&&t(de),e&&t(Kt),_(me,e),e&&t(Qt),e&&t(ve),e&&t(Xt),_(ge,e),e&&t(Zt),e&&t(_e),e&&t(es),_(be,e)}}}const Yi={local:"pull-requests-advanced-usage",sections:[{local:"where-in-the-git-repo-are-changes-stored",title:"Where in the git repo are changes stored?"},{local:"fetching-all-pull-requests-for-git-magicians",title:"Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"}],title:"Pull requests advanced usage"};function Bi(Ar){return Fi(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ki extends Mi{constructor(w){super();Oi(this,w,Bi,Ti,Ci,{})}}export{Ki as default,Yi as metadata};
