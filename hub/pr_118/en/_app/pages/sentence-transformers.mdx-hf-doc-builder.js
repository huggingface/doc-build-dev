import{S as Tr,i as Pr,s as Ir,e as r,k as h,w as A,t as l,N as Hr,c as a,d as s,m,a as n,x as T,h as c,b as o,P as be,G as t,g as f,y as P,L as Lr,q as I,o as H,B as L,v as jr}from"../chunks/vendor-hf-doc-builder.js";import{I as ye}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Ms}from"../chunks/CodeBlock-hf-doc-builder.js";function qr(Ns){let v,Ve,Be,Re,_,j,$e,F,It,Ee,Ht,Je,w,q,ke,V,Lt,xe,jt,Ke,B,Se,qt,Mt,ze,b,M,Ae,R,Nt,Te,Ut,Qe,d,Ct,Pe,Dt,Ot,J,Gt,Yt,K,Ie,Ft,Vt,z,He,Bt,Rt,Q,Jt,Kt,We,fe,zt,Xe,p,Le,Qt,Wt,je,Xt,Zt,qe,es,ts,Me,ss,Ze,y,he,Us,rs,me,Cs,et,$,N,Ne,W,as,Ue,ns,tt,de,os,st,X,rt,pe,is,at,Z,nt,U,ls,Ce,cs,fs,ot,E,ue,Ds,hs,ge,Os,it,k,ve,Gs,ms,_e,Ys,lt,x,C,De,ee,ds,Oe,ps,ct,D,us,Ge,gs,vs,ft,te,ht,O,_s,se,ws,bs,mt,S,G,Ye,re,ys,Fe,$s,dt,g,ae,Es,ne,ks,xs,Ss,oe,As,ie,Ts,Ps,Is,le,Hs,ce,Ls,js,pt;return F=new ye({}),V=new ye({}),R=new ye({}),W=new ye({}),X=new Ms({props:{code:`from sentence_transformers import SentenceTransformer
model = SentenceTransformer('model_name')`,highlighted:`<span class="hljs-keyword">from</span> sentence_transformers <span class="hljs-keyword">import</span> SentenceTransformer
model = SentenceTransformer(<span class="hljs-string">&#x27;model_name&#x27;</span>)`}}),Z=new Ms({props:{code:`from sentence_transformers import SentenceTransformer, util
model = SentenceTransformer('multi-qa-MiniLM-L6-cos-v1')

query_embedding = model.encode('How big is London')
passage_embedding = model.encode(['London has 9,787,426 inhabitants at the 2011 census',
                                  'London is known for its finacial district'])

print("Similarity:", util.dot_score(query_embedding, passage_embedding))`,highlighted:`<span class="hljs-keyword">from</span> sentence_transformers <span class="hljs-keyword">import</span> SentenceTransformer, util
model = SentenceTransformer(<span class="hljs-string">&#x27;multi-qa-MiniLM-L6-cos-v1&#x27;</span>)

query_embedding = model.encode(<span class="hljs-string">&#x27;How big is London&#x27;</span>)
passage_embedding = model.encode([<span class="hljs-string">&#x27;London has 9,787,426 inhabitants at the 2011 census&#x27;</span>,
                                  <span class="hljs-string">&#x27;London is known for its finacial district&#x27;</span>])

<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Similarity:&quot;</span>, util.dot_score(query_embedding, passage_embedding))`}}),ee=new ye({}),te=new Ms({props:{code:`from sentence_transformers import SentenceTransformer

# Load or train a model
model.save_to_hub("my_new_model")`,highlighted:`<span class="hljs-keyword">from</span> sentence_transformers <span class="hljs-keyword">import</span> SentenceTransformer

<span class="hljs-comment"># Load or train a model</span>
model.save_to_hub(<span class="hljs-string">&quot;my_new_model&quot;</span>)`}}),re=new ye({}),{c(){v=r("meta"),Ve=h(),Be=r("hr"),Re=h(),_=r("h2"),j=r("a"),$e=r("span"),A(F.$$.fragment),It=h(),Ee=r("span"),Ht=l("title: Sentence Transformers"),Je=h(),w=r("h1"),q=r("a"),ke=r("span"),A(V.$$.fragment),Lt=h(),xe=r("span"),jt=l("Using Sentence Transformers at Hugging Face"),Ke=h(),B=r("p"),Se=r("code"),qt=l("sentence-transformers"),Mt=l(" is a library that provides easy methods to compute embeddings (dense vector representations) for sentences, paragraphs and images. Texts are embedded in a vector space such that similar text is close, which enables applications such as semantic search, clustering, and retrieval."),ze=h(),b=r("h2"),M=r("a"),Ae=r("span"),A(R.$$.fragment),Nt=h(),Te=r("span"),Ut=l("Exploring sentence-transformers in the Hub"),Qe=h(),d=r("p"),Ct=l("You can find over 500 hundred "),Pe=r("code"),Dt=l("sentence-transformer"),Ot=l(" models by filtering at the left of the "),J=r("a"),Gt=l("models page"),Yt=l(". Most of these models support different tasks, such as doing "),K=r("a"),Ie=r("code"),Ft=l("feature-extraction"),Vt=l(" to generate the embedding, and "),z=r("a"),He=r("code"),Bt=l("sentence-similarity"),Rt=l(" as a way to determine how similar is a given sentence to other. You can also find an overview of the official pre-trained models in "),Q=r("a"),Jt=l("the official docs"),Kt=l("."),We=h(),fe=r("p"),zt=l("All models on the Hub come up with features:"),Xe=h(),p=r("ol"),Le=r("li"),Qt=l("An automatically generated model card with a description, example code snippets, architecture overview, and more."),Wt=h(),je=r("li"),Xt=l("Metadata tags that help for discoverability and contain information such as license."),Zt=h(),qe=r("li"),es=l("An interactive widget you can use to play out with the model directly in the browser."),ts=h(),Me=r("li"),ss=l("An Inference API that allows to make inference requests."),Ze=h(),y=r("div"),he=r("img"),rs=h(),me=r("img"),et=h(),$=r("h2"),N=r("a"),Ne=r("span"),A(W.$$.fragment),as=h(),Ue=r("span"),ns=l("Using existing models"),tt=h(),de=r("p"),os=l("The pre-trained models on the Hub can be loaded with a single line of code"),st=h(),A(X.$$.fragment),rt=h(),pe=r("p"),is=l("Here is an example that encodes sentences and then computes the distance between them for doing semantic search."),at=h(),A(Z.$$.fragment),nt=h(),U=r("p"),ls=l("If you want to see how to load a specific model, you can click "),Ce=r("code"),cs=l("Use in sentence-transformers"),fs=l(" and you will be given a working snippet that you can load it!"),ot=h(),E=r("div"),ue=r("img"),hs=h(),ge=r("img"),it=h(),k=r("div"),ve=r("img"),ms=h(),_e=r("img"),lt=h(),x=r("h2"),C=r("a"),De=r("span"),A(ee.$$.fragment),ds=h(),Oe=r("span"),ps=l("Sharing your models"),ct=h(),D=r("p"),us=l("You can share your Sentence Transformers by using the "),Ge=r("code"),gs=l("save_to_hub"),vs=l(" method from a trained model."),ft=h(),A(te.$$.fragment),ht=h(),O=r("p"),_s=l("This command creates a repository with an automatically generated model card, an inference widget, example code snippets, and more! "),se=r("a"),ws=l("Here"),bs=l(" is an example."),mt=h(),S=r("h2"),G=r("a"),Ye=r("span"),A(re.$$.fragment),ys=h(),Fe=r("span"),$s=l("Additional resources"),dt=h(),g=r("ul"),ae=r("li"),Es=l("Sentence Transformers "),ne=r("a"),ks=l("library"),xs=l("."),Ss=h(),oe=r("li"),As=l("Sentence Transformers "),ie=r("a"),Ts=l("docs"),Ps=l("."),Is=h(),le=r("li"),Hs=l("Integration with Hub "),ce=r("a"),Ls=l("announcement"),js=l("."),this.h()},l(e){const i=Hr('[data-svelte="svelte-1phssyn"]',document.head);v=a(i,"META",{name:!0,content:!0}),i.forEach(s),Ve=m(e),Be=a(e,"HR",{}),Re=m(e),_=a(e,"H2",{class:!0});var ut=n(_);j=a(ut,"A",{id:!0,class:!0,href:!0});var Fs=n(j);$e=a(Fs,"SPAN",{});var Vs=n($e);T(F.$$.fragment,Vs),Vs.forEach(s),Fs.forEach(s),It=m(ut),Ee=a(ut,"SPAN",{});var Bs=n(Ee);Ht=c(Bs,"title: Sentence Transformers"),Bs.forEach(s),ut.forEach(s),Je=m(e),w=a(e,"H1",{class:!0});var gt=n(w);q=a(gt,"A",{id:!0,class:!0,href:!0});var Rs=n(q);ke=a(Rs,"SPAN",{});var Js=n(ke);T(V.$$.fragment,Js),Js.forEach(s),Rs.forEach(s),Lt=m(gt),xe=a(gt,"SPAN",{});var Ks=n(xe);jt=c(Ks,"Using Sentence Transformers at Hugging Face"),Ks.forEach(s),gt.forEach(s),Ke=m(e),B=a(e,"P",{});var qs=n(B);Se=a(qs,"CODE",{});var zs=n(Se);qt=c(zs,"sentence-transformers"),zs.forEach(s),Mt=c(qs," is a library that provides easy methods to compute embeddings (dense vector representations) for sentences, paragraphs and images. Texts are embedded in a vector space such that similar text is close, which enables applications such as semantic search, clustering, and retrieval."),qs.forEach(s),ze=m(e),b=a(e,"H2",{class:!0});var vt=n(b);M=a(vt,"A",{id:!0,class:!0,href:!0});var Qs=n(M);Ae=a(Qs,"SPAN",{});var Ws=n(Ae);T(R.$$.fragment,Ws),Ws.forEach(s),Qs.forEach(s),Nt=m(vt),Te=a(vt,"SPAN",{});var Xs=n(Te);Ut=c(Xs,"Exploring sentence-transformers in the Hub"),Xs.forEach(s),vt.forEach(s),Qe=m(e),d=a(e,"P",{});var u=n(d);Ct=c(u,"You can find over 500 hundred "),Pe=a(u,"CODE",{});var Zs=n(Pe);Dt=c(Zs,"sentence-transformer"),Zs.forEach(s),Ot=c(u," models by filtering at the left of the "),J=a(u,"A",{href:!0,rel:!0});var er=n(J);Gt=c(er,"models page"),er.forEach(s),Yt=c(u,". Most of these models support different tasks, such as doing "),K=a(u,"A",{href:!0,rel:!0});var tr=n(K);Ie=a(tr,"CODE",{});var sr=n(Ie);Ft=c(sr,"feature-extraction"),sr.forEach(s),tr.forEach(s),Vt=c(u," to generate the embedding, and "),z=a(u,"A",{href:!0,rel:!0});var rr=n(z);He=a(rr,"CODE",{});var ar=n(He);Bt=c(ar,"sentence-similarity"),ar.forEach(s),rr.forEach(s),Rt=c(u," as a way to determine how similar is a given sentence to other. You can also find an overview of the official pre-trained models in "),Q=a(u,"A",{href:!0,rel:!0});var nr=n(Q);Jt=c(nr,"the official docs"),nr.forEach(s),Kt=c(u,"."),u.forEach(s),We=m(e),fe=a(e,"P",{});var or=n(fe);zt=c(or,"All models on the Hub come up with features:"),or.forEach(s),Xe=m(e),p=a(e,"OL",{});var Y=n(p);Le=a(Y,"LI",{});var ir=n(Le);Qt=c(ir,"An automatically generated model card with a description, example code snippets, architecture overview, and more."),ir.forEach(s),Wt=m(Y),je=a(Y,"LI",{});var lr=n(je);Xt=c(lr,"Metadata tags that help for discoverability and contain information such as license."),lr.forEach(s),Zt=m(Y),qe=a(Y,"LI",{});var cr=n(qe);es=c(cr,"An interactive widget you can use to play out with the model directly in the browser."),cr.forEach(s),ts=m(Y),Me=a(Y,"LI",{});var fr=n(Me);ss=c(fr,"An Inference API that allows to make inference requests."),fr.forEach(s),Y.forEach(s),Ze=m(e),y=a(e,"DIV",{class:!0});var _t=n(y);he=a(_t,"IMG",{class:!0,src:!0}),rs=m(_t),me=a(_t,"IMG",{class:!0,src:!0}),_t.forEach(s),et=m(e),$=a(e,"H2",{class:!0});var wt=n($);N=a(wt,"A",{id:!0,class:!0,href:!0});var hr=n(N);Ne=a(hr,"SPAN",{});var mr=n(Ne);T(W.$$.fragment,mr),mr.forEach(s),hr.forEach(s),as=m(wt),Ue=a(wt,"SPAN",{});var dr=n(Ue);ns=c(dr,"Using existing models"),dr.forEach(s),wt.forEach(s),tt=m(e),de=a(e,"P",{});var pr=n(de);os=c(pr,"The pre-trained models on the Hub can be loaded with a single line of code"),pr.forEach(s),st=m(e),T(X.$$.fragment,e),rt=m(e),pe=a(e,"P",{});var ur=n(pe);is=c(ur,"Here is an example that encodes sentences and then computes the distance between them for doing semantic search."),ur.forEach(s),at=m(e),T(Z.$$.fragment,e),nt=m(e),U=a(e,"P",{});var bt=n(U);ls=c(bt,"If you want to see how to load a specific model, you can click "),Ce=a(bt,"CODE",{});var gr=n(Ce);cs=c(gr,"Use in sentence-transformers"),gr.forEach(s),fs=c(bt," and you will be given a working snippet that you can load it!"),bt.forEach(s),ot=m(e),E=a(e,"DIV",{class:!0});var yt=n(E);ue=a(yt,"IMG",{class:!0,src:!0}),hs=m(yt),ge=a(yt,"IMG",{class:!0,src:!0}),yt.forEach(s),it=m(e),k=a(e,"DIV",{class:!0});var $t=n(k);ve=a($t,"IMG",{class:!0,src:!0}),ms=m($t),_e=a($t,"IMG",{class:!0,src:!0}),$t.forEach(s),lt=m(e),x=a(e,"H2",{class:!0});var Et=n(x);C=a(Et,"A",{id:!0,class:!0,href:!0});var vr=n(C);De=a(vr,"SPAN",{});var _r=n(De);T(ee.$$.fragment,_r),_r.forEach(s),vr.forEach(s),ds=m(Et),Oe=a(Et,"SPAN",{});var wr=n(Oe);ps=c(wr,"Sharing your models"),wr.forEach(s),Et.forEach(s),ct=m(e),D=a(e,"P",{});var kt=n(D);us=c(kt,"You can share your Sentence Transformers by using the "),Ge=a(kt,"CODE",{});var br=n(Ge);gs=c(br,"save_to_hub"),br.forEach(s),vs=c(kt," method from a trained model."),kt.forEach(s),ft=m(e),T(te.$$.fragment,e),ht=m(e),O=a(e,"P",{});var xt=n(O);_s=c(xt,"This command creates a repository with an automatically generated model card, an inference widget, example code snippets, and more! "),se=a(xt,"A",{href:!0,rel:!0});var yr=n(se);ws=c(yr,"Here"),yr.forEach(s),bs=c(xt," is an example."),xt.forEach(s),mt=m(e),S=a(e,"H2",{class:!0});var St=n(S);G=a(St,"A",{id:!0,class:!0,href:!0});var $r=n(G);Ye=a($r,"SPAN",{});var Er=n(Ye);T(re.$$.fragment,Er),Er.forEach(s),$r.forEach(s),ys=m(St),Fe=a(St,"SPAN",{});var kr=n(Fe);$s=c(kr,"Additional resources"),kr.forEach(s),St.forEach(s),dt=m(e),g=a(e,"UL",{});var we=n(g);ae=a(we,"LI",{});var At=n(ae);Es=c(At,"Sentence Transformers "),ne=a(At,"A",{href:!0,rel:!0});var xr=n(ne);ks=c(xr,"library"),xr.forEach(s),xs=c(At,"."),At.forEach(s),Ss=m(we),oe=a(we,"LI",{});var Tt=n(oe);As=c(Tt,"Sentence Transformers "),ie=a(Tt,"A",{href:!0,rel:!0});var Sr=n(ie);Ts=c(Sr,"docs"),Sr.forEach(s),Ps=c(Tt,"."),Tt.forEach(s),Is=m(we),le=a(we,"LI",{});var Pt=n(le);Hs=c(Pt,"Integration with Hub "),ce=a(Pt,"A",{href:!0,rel:!0});var Ar=n(ce);Ls=c(Ar,"announcement"),Ar.forEach(s),js=c(Pt,"."),Pt.forEach(s),we.forEach(s),this.h()},h(){o(v,"name","hf:doc:metadata"),o(v,"content",JSON.stringify(Mr)),o(j,"id","title:-sentence-transformers"),o(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(j,"href","#title:-sentence-transformers"),o(_,"class","relative group"),o(q,"id","using-sentence-transformers-at-hugging-face"),o(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(q,"href","#using-sentence-transformers-at-hugging-face"),o(w,"class","relative group"),o(M,"id","exploring-sentencetransformers-in-the-hub"),o(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(M,"href","#exploring-sentencetransformers-in-the-hub"),o(b,"class","relative group"),o(J,"href","https://huggingface.co/models?library=sentence-transformers&sort=downloads"),o(J,"rel","nofollow"),o(K,"href","https://huggingface.co/models?library=sentence-transformers&pipeline_tag=feature-extraction&sort=downloads"),o(K,"rel","nofollow"),o(z,"href","https://huggingface.co/models?library=sentence-transformers&pipeline_tag=sentence-similarity&sort=downloads"),o(z,"rel","nofollow"),o(Q,"href","https://www.sbert.net/docs/pretrained_models.html"),o(Q,"rel","nofollow"),o(he,"class","block dark:hidden"),be(he.src,Us="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_widget.png")||o(he,"src",Us),o(me,"class","hidden dark:block"),be(me.src,Cs="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_widget-dark.png")||o(me,"src",Cs),o(y,"class","flex justify-center"),o(N,"id","using-existing-models"),o(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(N,"href","#using-existing-models"),o($,"class","relative group"),o(ue,"class","block dark:hidden"),be(ue.src,Ds="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet1.png")||o(ue,"src",Ds),o(ge,"class","hidden dark:block"),be(ge.src,Os="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet1-dark.png")||o(ge,"src",Os),o(E,"class","flex justify-center"),o(ve,"class","block dark:hidden"),be(ve.src,Gs="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet2.png")||o(ve,"src",Gs),o(_e,"class","hidden dark:block"),be(_e.src,Ys="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet2-dark.png")||o(_e,"src",Ys),o(k,"class","flex justify-center"),o(C,"id","sharing-your-models"),o(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(C,"href","#sharing-your-models"),o(x,"class","relative group"),o(se,"href","https://huggingface.co/osanseviero/my_new_model"),o(se,"rel","nofollow"),o(G,"id","additional-resources"),o(G,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(G,"href","#additional-resources"),o(S,"class","relative group"),o(ne,"href","https://github.com/UKPLab/sentence-transformers"),o(ne,"rel","nofollow"),o(ie,"href","https://www.sbert.net/"),o(ie,"rel","nofollow"),o(ce,"href","https://huggingface.co/blog/sentence-transformers-in-the-hub"),o(ce,"rel","nofollow")},m(e,i){t(document.head,v),f(e,Ve,i),f(e,Be,i),f(e,Re,i),f(e,_,i),t(_,j),t(j,$e),P(F,$e,null),t(_,It),t(_,Ee),t(Ee,Ht),f(e,Je,i),f(e,w,i),t(w,q),t(q,ke),P(V,ke,null),t(w,Lt),t(w,xe),t(xe,jt),f(e,Ke,i),f(e,B,i),t(B,Se),t(Se,qt),t(B,Mt),f(e,ze,i),f(e,b,i),t(b,M),t(M,Ae),P(R,Ae,null),t(b,Nt),t(b,Te),t(Te,Ut),f(e,Qe,i),f(e,d,i),t(d,Ct),t(d,Pe),t(Pe,Dt),t(d,Ot),t(d,J),t(J,Gt),t(d,Yt),t(d,K),t(K,Ie),t(Ie,Ft),t(d,Vt),t(d,z),t(z,He),t(He,Bt),t(d,Rt),t(d,Q),t(Q,Jt),t(d,Kt),f(e,We,i),f(e,fe,i),t(fe,zt),f(e,Xe,i),f(e,p,i),t(p,Le),t(Le,Qt),t(p,Wt),t(p,je),t(je,Xt),t(p,Zt),t(p,qe),t(qe,es),t(p,ts),t(p,Me),t(Me,ss),f(e,Ze,i),f(e,y,i),t(y,he),t(y,rs),t(y,me),f(e,et,i),f(e,$,i),t($,N),t(N,Ne),P(W,Ne,null),t($,as),t($,Ue),t(Ue,ns),f(e,tt,i),f(e,de,i),t(de,os),f(e,st,i),P(X,e,i),f(e,rt,i),f(e,pe,i),t(pe,is),f(e,at,i),P(Z,e,i),f(e,nt,i),f(e,U,i),t(U,ls),t(U,Ce),t(Ce,cs),t(U,fs),f(e,ot,i),f(e,E,i),t(E,ue),t(E,hs),t(E,ge),f(e,it,i),f(e,k,i),t(k,ve),t(k,ms),t(k,_e),f(e,lt,i),f(e,x,i),t(x,C),t(C,De),P(ee,De,null),t(x,ds),t(x,Oe),t(Oe,ps),f(e,ct,i),f(e,D,i),t(D,us),t(D,Ge),t(Ge,gs),t(D,vs),f(e,ft,i),P(te,e,i),f(e,ht,i),f(e,O,i),t(O,_s),t(O,se),t(se,ws),t(O,bs),f(e,mt,i),f(e,S,i),t(S,G),t(G,Ye),P(re,Ye,null),t(S,ys),t(S,Fe),t(Fe,$s),f(e,dt,i),f(e,g,i),t(g,ae),t(ae,Es),t(ae,ne),t(ne,ks),t(ae,xs),t(g,Ss),t(g,oe),t(oe,As),t(oe,ie),t(ie,Ts),t(oe,Ps),t(g,Is),t(g,le),t(le,Hs),t(le,ce),t(ce,Ls),t(le,js),pt=!0},p:Lr,i(e){pt||(I(F.$$.fragment,e),I(V.$$.fragment,e),I(R.$$.fragment,e),I(W.$$.fragment,e),I(X.$$.fragment,e),I(Z.$$.fragment,e),I(ee.$$.fragment,e),I(te.$$.fragment,e),I(re.$$.fragment,e),pt=!0)},o(e){H(F.$$.fragment,e),H(V.$$.fragment,e),H(R.$$.fragment,e),H(W.$$.fragment,e),H(X.$$.fragment,e),H(Z.$$.fragment,e),H(ee.$$.fragment,e),H(te.$$.fragment,e),H(re.$$.fragment,e),pt=!1},d(e){s(v),e&&s(Ve),e&&s(Be),e&&s(Re),e&&s(_),L(F),e&&s(Je),e&&s(w),L(V),e&&s(Ke),e&&s(B),e&&s(ze),e&&s(b),L(R),e&&s(Qe),e&&s(d),e&&s(We),e&&s(fe),e&&s(Xe),e&&s(p),e&&s(Ze),e&&s(y),e&&s(et),e&&s($),L(W),e&&s(tt),e&&s(de),e&&s(st),L(X,e),e&&s(rt),e&&s(pe),e&&s(at),L(Z,e),e&&s(nt),e&&s(U),e&&s(ot),e&&s(E),e&&s(it),e&&s(k),e&&s(lt),e&&s(x),L(ee),e&&s(ct),e&&s(D),e&&s(ft),L(te,e),e&&s(ht),e&&s(O),e&&s(mt),e&&s(S),L(re),e&&s(dt),e&&s(g)}}}const Mr={local:"using-sentence-transformers-at-hugging-face",sections:[{local:"exploring-sentencetransformers-in-the-hub",title:"Exploring sentence-transformers in the Hub"},{local:"using-existing-models",title:"Using existing models"},{local:"sharing-your-models",title:"Sharing your models"},{local:"additional-resources",title:"Additional resources"}],title:"Using Sentence Transformers at Hugging Face"};function Nr(Ns){return jr(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Or extends Tr{constructor(v){super();Pr(this,v,Nr,qr,Ir,{})}}export{Or as default,Mr as metadata};
