import{S as Y,i as Z,s as ee,e as i,k as g,w as G,t as b,N as te,c as l,d as t,m as w,a as p,x as J,h as _,b as y,G as s,g as r,y as K,L as ae,q as Q,o as V,B as X,v as se}from"../chunks/vendor-hf-doc-builder.js";import{I as oe}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as ne}from"../chunks/CodeBlock-hf-doc-builder.js";function ie(R){let o,$,n,u,v,h,A,k,L,j,m,T,E,f,W,H,d,P,c,F,q,I,N,S;return h=new oe({}),d=new ne({props:{code:`{ "add": "user/model_id" }
# or
{ "add": "datasets/user/dataset_id" }
# or
{ "update": "spaces/organization/space_id" }
# or
{ "remove": "user/model_id" }`,highlighted:`{ <span class="hljs-string">&quot;add&quot;</span>: <span class="hljs-string">&quot;user/model_id&quot;</span> }
<span class="hljs-comment"># or</span>
{ <span class="hljs-string">&quot;add&quot;</span>: <span class="hljs-string">&quot;datasets/user/dataset_id&quot;</span> }
<span class="hljs-comment"># or</span>
{ <span class="hljs-string">&quot;update&quot;</span>: <span class="hljs-string">&quot;spaces/organization/space_id&quot;</span> }
<span class="hljs-comment"># or</span>
{ <span class="hljs-string">&quot;remove&quot;</span>: <span class="hljs-string">&quot;user/model_id&quot;</span> }`}}),{c(){o=i("meta"),$=g(),n=i("h1"),u=i("a"),v=i("span"),G(h.$$.fragment),A=g(),k=i("span"),L=b("Webhook"),j=g(),m=i("p"),T=b("If you ever need to programmatically get notified about all the changes/additions to model/dataset/Space repositories on the Hugging Face Hub, you can subscribe to the Hugging Face Hub webhook."),E=g(),f=i("p"),W=b("When you\u2019re subscribed \u2013 meaning you sent us a URL on your side that you want us to ping \u2013 we will call it over HTTP with the following payload:"),H=g(),G(d.$$.fragment),P=g(),c=i("p"),F=b("\u2709\uFE0F Contact us at "),q=i("code"),I=b("website at huggingface.co"),N=b(" if you would like to subscribe to the webhook."),this.h()},l(e){const a=te('[data-svelte="svelte-1phssyn"]',document.head);o=l(a,"META",{name:!0,content:!0}),a.forEach(t),$=w(e),n=l(e,"H1",{class:!0});var x=p(n);u=l(x,"A",{id:!0,class:!0,href:!0});var U=p(u);v=l(U,"SPAN",{});var z=p(v);J(h.$$.fragment,z),z.forEach(t),U.forEach(t),A=w(x),k=l(x,"SPAN",{});var B=p(k);L=_(B,"Webhook"),B.forEach(t),x.forEach(t),j=w(e),m=l(e,"P",{});var M=p(m);T=_(M,"If you ever need to programmatically get notified about all the changes/additions to model/dataset/Space repositories on the Hugging Face Hub, you can subscribe to the Hugging Face Hub webhook."),M.forEach(t),E=w(e),f=l(e,"P",{});var O=p(f);W=_(O,"When you\u2019re subscribed \u2013 meaning you sent us a URL on your side that you want us to ping \u2013 we will call it over HTTP with the following payload:"),O.forEach(t),H=w(e),J(d.$$.fragment,e),P=w(e),c=l(e,"P",{});var C=p(c);F=_(C,"\u2709\uFE0F Contact us at "),q=l(C,"CODE",{});var D=p(q);I=_(D,"website at huggingface.co"),D.forEach(t),N=_(C," if you would like to subscribe to the webhook."),C.forEach(t),this.h()},h(){y(o,"name","hf:doc:metadata"),y(o,"content",JSON.stringify(le)),y(u,"id","webhook"),y(u,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),y(u,"href","#webhook"),y(n,"class","relative group")},m(e,a){s(document.head,o),r(e,$,a),r(e,n,a),s(n,u),s(u,v),K(h,v,null),s(n,A),s(n,k),s(k,L),r(e,j,a),r(e,m,a),s(m,T),r(e,E,a),r(e,f,a),s(f,W),r(e,H,a),K(d,e,a),r(e,P,a),r(e,c,a),s(c,F),s(c,q),s(q,I),s(c,N),S=!0},p:ae,i(e){S||(Q(h.$$.fragment,e),Q(d.$$.fragment,e),S=!0)},o(e){V(h.$$.fragment,e),V(d.$$.fragment,e),S=!1},d(e){t(o),e&&t($),e&&t(n),X(h),e&&t(j),e&&t(m),e&&t(E),e&&t(f),e&&t(H),X(d,e),e&&t(P),e&&t(c)}}}const le={local:"webhook",title:"Webhook"};function re(R){return se(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class he extends Y{constructor(o){super();Z(this,o,re,ie,ee,{})}}export{he as default,le as metadata};
