import{S as uh,i as vh,s as Th,e as r,k as n,w as dh,t as l,N as _h,c as a,d as e,m as s,a as o,x as nh,h as d,b as h,G as t,g as X,y as sh,L as ph,q as hh,o as ih,B as ch,v as Eh}from"../chunks/vendor-hf-doc-builder.js";import{I as fh}from"../chunks/IconCopyLink-hf-doc-builder.js";function gh(Md){let j,wr,K,Q,Bt,ot,Fr,Wt,Mr,Ar,Z,Or,qt,zr,Br,Pr,tt,Wr,lt,qr,Gr,Sr,et,Gt,u,Jt,Jr,Vr,Vt,Ur,Xr,Ut,jr,Kr,yt,Yr,Qr,Xt,Zr,ta,jt,ea,ra,c,v,Kt,dt,aa,oa,Yt,la,da,Qt,na,sa,wt,ha,ia,Zt,ca,fa,te,ua,va,T,ee,nt,Ta,_a,re,pa,Ea,ae,ga,ma,At,ba,Da,oe,ya,wa,le,Aa,Pa,_,de,st,Sa,ka,ne,La,Ra,se,Ha,Ca,Pt,Na,Ia,he,$a,xa,ie,Fa,Ma,p,ce,ht,Oa,za,fe,Ba,Wa,ue,qa,Ga,St,Ja,Va,ve,Ua,Xa,Te,ja,Ka,E,_e,it,Ya,Qa,pe,Za,to,Ee,eo,ro,kt,ao,oo,ge,lo,no,me,so,ho,g,be,ct,io,co,De,fo,uo,ye,vo,To,Lt,_o,po,we,Eo,go,Ae,mo,bo,m,Pe,ft,Do,yo,Se,wo,Ao,ke,Po,So,Rt,ko,Lo,Le,Ro,Ho,Re,Co,No,b,He,ut,Io,$o,Ce,xo,Fo,Ne,Mo,Oo,Ht,zo,Bo,Ie,Wo,qo,$e,Go,Jo,D,xe,vt,Vo,Uo,Fe,Xo,jo,Me,Ko,Yo,Ct,Qo,Zo,Oe,tl,el,ze,rl,al,y,Be,Tt,ol,ll,We,dl,nl,qe,sl,hl,Nt,il,cl,Ge,fl,ul,Je,vl,Tl,w,Ve,_t,_l,pl,Ue,El,gl,Xe,ml,bl,It,Dl,yl,je,wl,Al,Ke,Pl,Sl,A,Ye,pt,kl,Ll,Qe,Rl,Hl,Ze,Cl,Nl,$t,Il,$l,tr,xl,Fl,er,Ml,Ol,P,rr,Et,zl,Bl,ar,Wl,ql,or,Gl,Jl,xt,Vl,Ul,lr,Xl,jl,dr,Kl,Yl,S,nr,gt,Ql,Zl,sr,td,ed,hr,rd,ad,Ft,od,ld,ir,dd,nd,cr,sd,hd,k,fr,mt,id,cd,ur,fd,ud,vr,vd,Td,Mt,_d,pd,Tr,Ed,gd,_r,md,bd,L,pr,bt,Dd,yd,Er,wd,Ad,gr,Pd,Sd,Ot,kd,Ld,mr,Rd,Hd,br,Cd,kr,Y,rt,Dr,Dt,Nd,yr,Id,Lr,at,$d,zt,xd,Fd,Rr;return ot=new fh({}),Dt=new fh({}),{c(){j=r("meta"),wr=n(),K=r("h1"),Q=r("a"),Bt=r("span"),dh(ot.$$.fragment),Fr=n(),Wt=r("span"),Mr=l("Libraries"),Ar=n(),Z=r("p"),Or=l("The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),qt=r("code"),zr=l("huggingface_hub"),Br=l(" Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),Pr=n(),tt=r("p"),Wr=l("The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),lt=r("a"),qr=l("here"),Gr=l("!"),Sr=n(),et=r("table"),Gt=r("thead"),u=r("tr"),Jt=r("th"),Jr=l("Library"),Vr=n(),Vt=r("th"),Ur=l("Description"),Xr=n(),Ut=r("th"),jr=l("Inference API"),Kr=n(),yt=r("th"),Yr=l("Widgets"),Qr=n(),Xt=r("th"),Zr=l("Download from Hub"),ta=n(),jt=r("th"),ea=l("Push to Hub"),ra=n(),c=r("tbody"),v=r("tr"),Kt=r("td"),dt=r("a"),aa=l("\u{1F917} Transformers"),oa=n(),Yt=r("td"),la=l("State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),da=n(),Qt=r("td"),na=l("\u2705"),sa=n(),wt=r("td"),ha=l("\u2705"),ia=n(),Zt=r("td"),ca=l("\u2705"),fa=n(),te=r("td"),ua=l("\u2705"),va=n(),T=r("tr"),ee=r("td"),nt=r("a"),Ta=l("Adapter Transformers"),_a=n(),re=r("td"),pa=l("Extends \u{1F917}Transformers with Adapters."),Ea=n(),ae=r("td"),ga=l("\u274C"),ma=n(),At=r("td"),ba=l("\u274C"),Da=n(),oe=r("td"),ya=l("\u2705"),wa=n(),le=r("td"),Aa=l("\u2705"),Pa=n(),_=r("tr"),de=r("td"),st=r("a"),Sa=l("AllenNLP"),ka=n(),ne=r("td"),La=l("An open-source NLP research library, built on PyTorch."),Ra=n(),se=r("td"),Ha=l("\u2705"),Ca=n(),Pt=r("td"),Na=l("\u2705"),Ia=n(),he=r("td"),$a=l("\u2705"),xa=n(),ie=r("td"),Fa=l("\u274C"),Ma=n(),p=r("tr"),ce=r("td"),ht=r("a"),Oa=l("Asteroid"),za=n(),fe=r("td"),Ba=l("Pytorch-based audio source separation toolkit"),Wa=n(),ue=r("td"),qa=l("\u2705"),Ga=n(),St=r("td"),Ja=l("\u2705"),Va=n(),ve=r("td"),Ua=l("\u2705"),Xa=n(),Te=r("td"),ja=l("\u274C"),Ka=n(),E=r("tr"),_e=r("td"),it=r("a"),Ya=l("docTR"),Qa=n(),pe=r("td"),Za=l("Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),to=n(),Ee=r("td"),eo=l("\u2705"),ro=n(),kt=r("td"),ao=l("\u2705"),oo=n(),ge=r("td"),lo=l("\u2705"),no=n(),me=r("td"),so=l("\u274C"),ho=n(),g=r("tr"),be=r("td"),ct=r("a"),io=l("ESPnet"),co=n(),De=r("td"),fo=l("End-to-end speech processing toolkit (e.g. TTS)"),uo=n(),ye=r("td"),vo=l("\u2705"),To=n(),Lt=r("td"),_o=l("\u2705"),po=n(),we=r("td"),Eo=l("\u2705"),go=n(),Ae=r("td"),mo=l("\u274C"),bo=n(),m=r("tr"),Pe=r("td"),ft=r("a"),Do=l("Flair"),yo=n(),Se=r("td"),wo=l("Very simple framework for state-of-the-art NLP."),Ao=n(),ke=r("td"),Po=l("\u2705"),So=n(),Rt=r("td"),ko=l("\u2705"),Lo=n(),Le=r("td"),Ro=l("\u2705"),Ho=n(),Re=r("td"),Co=l("\u274C"),No=n(),b=r("tr"),He=r("td"),ut=r("a"),Io=l("NeMo"),$o=n(),Ce=r("td"),xo=l("Conversational AI toolkit built for researchers"),Fo=n(),Ne=r("td"),Mo=l("\u2705"),Oo=n(),Ht=r("td"),zo=l("\u2705"),Bo=n(),Ie=r("td"),Wo=l("\u2705"),qo=n(),$e=r("td"),Go=l("\u274C"),Jo=n(),D=r("tr"),xe=r("td"),vt=r("a"),Vo=l("Pyannote"),Uo=n(),Fe=r("td"),Xo=l("Neural building blocks for speaker diarization."),jo=n(),Me=r("td"),Ko=l("\u274C"),Yo=n(),Ct=r("td"),Qo=l("\u274C"),Zo=n(),Oe=r("td"),tl=l("\u2705"),el=n(),ze=r("td"),rl=l("\u274C"),al=n(),y=r("tr"),Be=r("td"),Tt=r("a"),ol=l("PyCTCDecode"),ll=n(),We=r("td"),dl=l("Language model supported CTC decoding for speech recognition"),nl=n(),qe=r("td"),sl=l("\u274C"),hl=n(),Nt=r("td"),il=l("\u274C"),cl=n(),Ge=r("td"),fl=l("\u2705"),ul=n(),Je=r("td"),vl=l("\u274C"),Tl=n(),w=r("tr"),Ve=r("td"),_t=r("a"),_l=l("Sentence Transformers"),pl=n(),Ue=r("td"),El=l("Compute dense vector representations for sentences, paragraphs, and images."),gl=n(),Xe=r("td"),ml=l("\u2705"),bl=n(),It=r("td"),Dl=l("\u2705"),yl=n(),je=r("td"),wl=l("\u2705"),Al=n(),Ke=r("td"),Pl=l("\u2705"),Sl=n(),A=r("tr"),Ye=r("td"),pt=r("a"),kl=l("spaCy"),Ll=n(),Qe=r("td"),Rl=l("Advanced Natural Language Processing in Python and Cython."),Hl=n(),Ze=r("td"),Cl=l("\u2705"),Nl=n(),$t=r("td"),Il=l("\u2705"),$l=n(),tr=r("td"),xl=l("\u2705"),Fl=n(),er=r("td"),Ml=l("\u2705"),Ol=n(),P=r("tr"),rr=r("td"),Et=r("a"),zl=l("Speechbrain"),Bl=n(),ar=r("td"),Wl=l("A PyTorch Powered Speech Toolkit."),ql=n(),or=r("td"),Gl=l("\u2705"),Jl=n(),xt=r("td"),Vl=l("\u2705"),Ul=n(),lr=r("td"),Xl=l("\u2705"),jl=n(),dr=r("td"),Kl=l("\u274C"),Yl=n(),S=r("tr"),nr=r("td"),gt=r("a"),Ql=l("TensorFlowTTS"),Zl=n(),sr=r("td"),td=l("Real-time state-of-the-art speech synthesis architectures."),ed=n(),hr=r("td"),rd=l("\u274C"),ad=n(),Ft=r("td"),od=l("\u274C"),ld=n(),ir=r("td"),dd=l("\u2705"),nd=n(),cr=r("td"),sd=l("\u274C"),hd=n(),k=r("tr"),fr=r("td"),mt=r("a"),id=l("Timm"),cd=n(),ur=r("td"),fd=l("Collection of image models, scripts, pretrained weights, etc."),ud=n(),vr=r("td"),vd=l("\u274C"),Td=n(),Mt=r("td"),_d=l("\u274C"),pd=n(),Tr=r("td"),Ed=l("\u2705"),gd=n(),_r=r("td"),md=l("\u274C"),bd=n(),L=r("tr"),pr=r("td"),bt=r("a"),Dd=l("Stable-Baselines3"),yd=n(),Er=r("td"),wd=l("Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Ad=n(),gr=r("td"),Pd=l("\u274C"),Sd=n(),Ot=r("td"),kd=l("\u2705"),Ld=n(),mr=r("td"),Rd=l("\u2705"),Hd=n(),br=r("td"),Cd=l("\u2705"),kr=n(),Y=r("h3"),rt=r("a"),Dr=r("span"),dh(Dt.$$.fragment),Nd=n(),yr=r("span"),Id=l("How can I add a new library to the Inference API?"),Lr=n(),at=r("p"),$d=l("If you\u2019re interested in adding your library, please reach out to us! Read about it in "),zt=r("a"),xd=l("Adding a Library Guide"),Fd=l("."),this.h()},l(i){const R=_h('[data-svelte="svelte-1phssyn"]',document.head);j=a(R,"META",{name:!0,content:!0}),R.forEach(e),wr=s(i),K=a(i,"H1",{class:!0});var Hr=o(K);Q=a(Hr,"A",{id:!0,class:!0,href:!0});var Od=o(Q);Bt=a(Od,"SPAN",{});var zd=o(Bt);nh(ot.$$.fragment,zd),zd.forEach(e),Od.forEach(e),Fr=s(Hr),Wt=a(Hr,"SPAN",{});var Bd=o(Wt);Mr=d(Bd,"Libraries"),Bd.forEach(e),Hr.forEach(e),Ar=s(i),Z=a(i,"P",{});var Cr=o(Z);Or=d(Cr,"The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),qt=a(Cr,"CODE",{});var Wd=o(qt);zr=d(Wd,"huggingface_hub"),Wd.forEach(e),Br=d(Cr," Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),Cr.forEach(e),Pr=s(i),tt=a(i,"P",{});var Nr=o(tt);Wr=d(Nr,"The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),lt=a(Nr,"A",{href:!0,rel:!0});var qd=o(lt);qr=d(qd,"here"),qd.forEach(e),Gr=d(Nr,"!"),Nr.forEach(e),Sr=s(i),et=a(i,"TABLE",{});var Ir=o(et);Gt=a(Ir,"THEAD",{});var Gd=o(Gt);u=a(Gd,"TR",{});var H=o(u);Jt=a(H,"TH",{});var Jd=o(Jt);Jr=d(Jd,"Library"),Jd.forEach(e),Vr=s(H),Vt=a(H,"TH",{});var Vd=o(Vt);Ur=d(Vd,"Description"),Vd.forEach(e),Xr=s(H),Ut=a(H,"TH",{});var Ud=o(Ut);jr=d(Ud,"Inference API"),Ud.forEach(e),Kr=s(H),yt=a(H,"TH",{align:!0});var Xd=o(yt);Yr=d(Xd,"Widgets"),Xd.forEach(e),Qr=s(H),Xt=a(H,"TH",{});var jd=o(Xt);Zr=d(jd,"Download from Hub"),jd.forEach(e),ta=s(H),jt=a(H,"TH",{});var Kd=o(jt);ea=d(Kd,"Push to Hub"),Kd.forEach(e),H.forEach(e),Gd.forEach(e),ra=s(Ir),c=a(Ir,"TBODY",{});var f=o(c);v=a(f,"TR",{});var C=o(v);Kt=a(C,"TD",{});var Yd=o(Kt);dt=a(Yd,"A",{href:!0,rel:!0});var Qd=o(dt);aa=d(Qd,"\u{1F917} Transformers"),Qd.forEach(e),Yd.forEach(e),oa=s(C),Yt=a(C,"TD",{});var Zd=o(Yt);la=d(Zd,"State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),Zd.forEach(e),da=s(C),Qt=a(C,"TD",{});var tn=o(Qt);na=d(tn,"\u2705"),tn.forEach(e),sa=s(C),wt=a(C,"TD",{align:!0});var en=o(wt);ha=d(en,"\u2705"),en.forEach(e),ia=s(C),Zt=a(C,"TD",{});var rn=o(Zt);ca=d(rn,"\u2705"),rn.forEach(e),fa=s(C),te=a(C,"TD",{});var an=o(te);ua=d(an,"\u2705"),an.forEach(e),C.forEach(e),va=s(f),T=a(f,"TR",{});var N=o(T);ee=a(N,"TD",{});var on=o(ee);nt=a(on,"A",{href:!0,rel:!0});var ln=o(nt);Ta=d(ln,"Adapter Transformers"),ln.forEach(e),on.forEach(e),_a=s(N),re=a(N,"TD",{});var dn=o(re);pa=d(dn,"Extends \u{1F917}Transformers with Adapters."),dn.forEach(e),Ea=s(N),ae=a(N,"TD",{});var nn=o(ae);ga=d(nn,"\u274C"),nn.forEach(e),ma=s(N),At=a(N,"TD",{align:!0});var sn=o(At);ba=d(sn,"\u274C"),sn.forEach(e),Da=s(N),oe=a(N,"TD",{});var hn=o(oe);ya=d(hn,"\u2705"),hn.forEach(e),wa=s(N),le=a(N,"TD",{});var cn=o(le);Aa=d(cn,"\u2705"),cn.forEach(e),N.forEach(e),Pa=s(f),_=a(f,"TR",{});var I=o(_);de=a(I,"TD",{});var fn=o(de);st=a(fn,"A",{href:!0,rel:!0});var un=o(st);Sa=d(un,"AllenNLP"),un.forEach(e),fn.forEach(e),ka=s(I),ne=a(I,"TD",{});var vn=o(ne);La=d(vn,"An open-source NLP research library, built on PyTorch."),vn.forEach(e),Ra=s(I),se=a(I,"TD",{});var Tn=o(se);Ha=d(Tn,"\u2705"),Tn.forEach(e),Ca=s(I),Pt=a(I,"TD",{align:!0});var _n=o(Pt);Na=d(_n,"\u2705"),_n.forEach(e),Ia=s(I),he=a(I,"TD",{});var pn=o(he);$a=d(pn,"\u2705"),pn.forEach(e),xa=s(I),ie=a(I,"TD",{});var En=o(ie);Fa=d(En,"\u274C"),En.forEach(e),I.forEach(e),Ma=s(f),p=a(f,"TR",{});var $=o(p);ce=a($,"TD",{});var gn=o(ce);ht=a(gn,"A",{href:!0,rel:!0});var mn=o(ht);Oa=d(mn,"Asteroid"),mn.forEach(e),gn.forEach(e),za=s($),fe=a($,"TD",{});var bn=o(fe);Ba=d(bn,"Pytorch-based audio source separation toolkit"),bn.forEach(e),Wa=s($),ue=a($,"TD",{});var Dn=o(ue);qa=d(Dn,"\u2705"),Dn.forEach(e),Ga=s($),St=a($,"TD",{align:!0});var yn=o(St);Ja=d(yn,"\u2705"),yn.forEach(e),Va=s($),ve=a($,"TD",{});var wn=o(ve);Ua=d(wn,"\u2705"),wn.forEach(e),Xa=s($),Te=a($,"TD",{});var An=o(Te);ja=d(An,"\u274C"),An.forEach(e),$.forEach(e),Ka=s(f),E=a(f,"TR",{});var x=o(E);_e=a(x,"TD",{});var Pn=o(_e);it=a(Pn,"A",{href:!0,rel:!0});var Sn=o(it);Ya=d(Sn,"docTR"),Sn.forEach(e),Pn.forEach(e),Qa=s(x),pe=a(x,"TD",{});var kn=o(pe);Za=d(kn,"Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),kn.forEach(e),to=s(x),Ee=a(x,"TD",{});var Ln=o(Ee);eo=d(Ln,"\u2705"),Ln.forEach(e),ro=s(x),kt=a(x,"TD",{align:!0});var Rn=o(kt);ao=d(Rn,"\u2705"),Rn.forEach(e),oo=s(x),ge=a(x,"TD",{});var Hn=o(ge);lo=d(Hn,"\u2705"),Hn.forEach(e),no=s(x),me=a(x,"TD",{});var Cn=o(me);so=d(Cn,"\u274C"),Cn.forEach(e),x.forEach(e),ho=s(f),g=a(f,"TR",{});var F=o(g);be=a(F,"TD",{});var Nn=o(be);ct=a(Nn,"A",{href:!0,rel:!0});var In=o(ct);io=d(In,"ESPnet"),In.forEach(e),Nn.forEach(e),co=s(F),De=a(F,"TD",{});var $n=o(De);fo=d($n,"End-to-end speech processing toolkit (e.g. TTS)"),$n.forEach(e),uo=s(F),ye=a(F,"TD",{});var xn=o(ye);vo=d(xn,"\u2705"),xn.forEach(e),To=s(F),Lt=a(F,"TD",{align:!0});var Fn=o(Lt);_o=d(Fn,"\u2705"),Fn.forEach(e),po=s(F),we=a(F,"TD",{});var Mn=o(we);Eo=d(Mn,"\u2705"),Mn.forEach(e),go=s(F),Ae=a(F,"TD",{});var On=o(Ae);mo=d(On,"\u274C"),On.forEach(e),F.forEach(e),bo=s(f),m=a(f,"TR",{});var M=o(m);Pe=a(M,"TD",{});var zn=o(Pe);ft=a(zn,"A",{href:!0,rel:!0});var Bn=o(ft);Do=d(Bn,"Flair"),Bn.forEach(e),zn.forEach(e),yo=s(M),Se=a(M,"TD",{});var Wn=o(Se);wo=d(Wn,"Very simple framework for state-of-the-art NLP."),Wn.forEach(e),Ao=s(M),ke=a(M,"TD",{});var qn=o(ke);Po=d(qn,"\u2705"),qn.forEach(e),So=s(M),Rt=a(M,"TD",{align:!0});var Gn=o(Rt);ko=d(Gn,"\u2705"),Gn.forEach(e),Lo=s(M),Le=a(M,"TD",{});var Jn=o(Le);Ro=d(Jn,"\u2705"),Jn.forEach(e),Ho=s(M),Re=a(M,"TD",{});var Vn=o(Re);Co=d(Vn,"\u274C"),Vn.forEach(e),M.forEach(e),No=s(f),b=a(f,"TR",{});var O=o(b);He=a(O,"TD",{});var Un=o(He);ut=a(Un,"A",{href:!0,rel:!0});var Xn=o(ut);Io=d(Xn,"NeMo"),Xn.forEach(e),Un.forEach(e),$o=s(O),Ce=a(O,"TD",{});var jn=o(Ce);xo=d(jn,"Conversational AI toolkit built for researchers"),jn.forEach(e),Fo=s(O),Ne=a(O,"TD",{});var Kn=o(Ne);Mo=d(Kn,"\u2705"),Kn.forEach(e),Oo=s(O),Ht=a(O,"TD",{align:!0});var Yn=o(Ht);zo=d(Yn,"\u2705"),Yn.forEach(e),Bo=s(O),Ie=a(O,"TD",{});var Qn=o(Ie);Wo=d(Qn,"\u2705"),Qn.forEach(e),qo=s(O),$e=a(O,"TD",{});var Zn=o($e);Go=d(Zn,"\u274C"),Zn.forEach(e),O.forEach(e),Jo=s(f),D=a(f,"TR",{});var z=o(D);xe=a(z,"TD",{});var ts=o(xe);vt=a(ts,"A",{href:!0,rel:!0});var es=o(vt);Vo=d(es,"Pyannote"),es.forEach(e),ts.forEach(e),Uo=s(z),Fe=a(z,"TD",{});var rs=o(Fe);Xo=d(rs,"Neural building blocks for speaker diarization."),rs.forEach(e),jo=s(z),Me=a(z,"TD",{});var as=o(Me);Ko=d(as,"\u274C"),as.forEach(e),Yo=s(z),Ct=a(z,"TD",{align:!0});var os=o(Ct);Qo=d(os,"\u274C"),os.forEach(e),Zo=s(z),Oe=a(z,"TD",{});var ls=o(Oe);tl=d(ls,"\u2705"),ls.forEach(e),el=s(z),ze=a(z,"TD",{});var ds=o(ze);rl=d(ds,"\u274C"),ds.forEach(e),z.forEach(e),al=s(f),y=a(f,"TR",{});var B=o(y);Be=a(B,"TD",{});var ns=o(Be);Tt=a(ns,"A",{href:!0,rel:!0});var ss=o(Tt);ol=d(ss,"PyCTCDecode"),ss.forEach(e),ns.forEach(e),ll=s(B),We=a(B,"TD",{});var hs=o(We);dl=d(hs,"Language model supported CTC decoding for speech recognition"),hs.forEach(e),nl=s(B),qe=a(B,"TD",{});var is=o(qe);sl=d(is,"\u274C"),is.forEach(e),hl=s(B),Nt=a(B,"TD",{align:!0});var cs=o(Nt);il=d(cs,"\u274C"),cs.forEach(e),cl=s(B),Ge=a(B,"TD",{});var fs=o(Ge);fl=d(fs,"\u2705"),fs.forEach(e),ul=s(B),Je=a(B,"TD",{});var us=o(Je);vl=d(us,"\u274C"),us.forEach(e),B.forEach(e),Tl=s(f),w=a(f,"TR",{});var W=o(w);Ve=a(W,"TD",{});var vs=o(Ve);_t=a(vs,"A",{href:!0,rel:!0});var Ts=o(_t);_l=d(Ts,"Sentence Transformers"),Ts.forEach(e),vs.forEach(e),pl=s(W),Ue=a(W,"TD",{});var _s=o(Ue);El=d(_s,"Compute dense vector representations for sentences, paragraphs, and images."),_s.forEach(e),gl=s(W),Xe=a(W,"TD",{});var ps=o(Xe);ml=d(ps,"\u2705"),ps.forEach(e),bl=s(W),It=a(W,"TD",{align:!0});var Es=o(It);Dl=d(Es,"\u2705"),Es.forEach(e),yl=s(W),je=a(W,"TD",{});var gs=o(je);wl=d(gs,"\u2705"),gs.forEach(e),Al=s(W),Ke=a(W,"TD",{});var ms=o(Ke);Pl=d(ms,"\u2705"),ms.forEach(e),W.forEach(e),Sl=s(f),A=a(f,"TR",{});var q=o(A);Ye=a(q,"TD",{});var bs=o(Ye);pt=a(bs,"A",{href:!0,rel:!0});var Ds=o(pt);kl=d(Ds,"spaCy"),Ds.forEach(e),bs.forEach(e),Ll=s(q),Qe=a(q,"TD",{});var ys=o(Qe);Rl=d(ys,"Advanced Natural Language Processing in Python and Cython."),ys.forEach(e),Hl=s(q),Ze=a(q,"TD",{});var ws=o(Ze);Cl=d(ws,"\u2705"),ws.forEach(e),Nl=s(q),$t=a(q,"TD",{align:!0});var As=o($t);Il=d(As,"\u2705"),As.forEach(e),$l=s(q),tr=a(q,"TD",{});var Ps=o(tr);xl=d(Ps,"\u2705"),Ps.forEach(e),Fl=s(q),er=a(q,"TD",{});var Ss=o(er);Ml=d(Ss,"\u2705"),Ss.forEach(e),q.forEach(e),Ol=s(f),P=a(f,"TR",{});var G=o(P);rr=a(G,"TD",{});var ks=o(rr);Et=a(ks,"A",{href:!0,rel:!0});var Ls=o(Et);zl=d(Ls,"Speechbrain"),Ls.forEach(e),ks.forEach(e),Bl=s(G),ar=a(G,"TD",{});var Rs=o(ar);Wl=d(Rs,"A PyTorch Powered Speech Toolkit."),Rs.forEach(e),ql=s(G),or=a(G,"TD",{});var Hs=o(or);Gl=d(Hs,"\u2705"),Hs.forEach(e),Jl=s(G),xt=a(G,"TD",{align:!0});var Cs=o(xt);Vl=d(Cs,"\u2705"),Cs.forEach(e),Ul=s(G),lr=a(G,"TD",{});var Ns=o(lr);Xl=d(Ns,"\u2705"),Ns.forEach(e),jl=s(G),dr=a(G,"TD",{});var Is=o(dr);Kl=d(Is,"\u274C"),Is.forEach(e),G.forEach(e),Yl=s(f),S=a(f,"TR",{});var J=o(S);nr=a(J,"TD",{});var $s=o(nr);gt=a($s,"A",{href:!0,rel:!0});var xs=o(gt);Ql=d(xs,"TensorFlowTTS"),xs.forEach(e),$s.forEach(e),Zl=s(J),sr=a(J,"TD",{});var Fs=o(sr);td=d(Fs,"Real-time state-of-the-art speech synthesis architectures."),Fs.forEach(e),ed=s(J),hr=a(J,"TD",{});var Ms=o(hr);rd=d(Ms,"\u274C"),Ms.forEach(e),ad=s(J),Ft=a(J,"TD",{align:!0});var Os=o(Ft);od=d(Os,"\u274C"),Os.forEach(e),ld=s(J),ir=a(J,"TD",{});var zs=o(ir);dd=d(zs,"\u2705"),zs.forEach(e),nd=s(J),cr=a(J,"TD",{});var Bs=o(cr);sd=d(Bs,"\u274C"),Bs.forEach(e),J.forEach(e),hd=s(f),k=a(f,"TR",{});var V=o(k);fr=a(V,"TD",{});var Ws=o(fr);mt=a(Ws,"A",{href:!0,rel:!0});var qs=o(mt);id=d(qs,"Timm"),qs.forEach(e),Ws.forEach(e),cd=s(V),ur=a(V,"TD",{});var Gs=o(ur);fd=d(Gs,"Collection of image models, scripts, pretrained weights, etc."),Gs.forEach(e),ud=s(V),vr=a(V,"TD",{});var Js=o(vr);vd=d(Js,"\u274C"),Js.forEach(e),Td=s(V),Mt=a(V,"TD",{align:!0});var Vs=o(Mt);_d=d(Vs,"\u274C"),Vs.forEach(e),pd=s(V),Tr=a(V,"TD",{});var Us=o(Tr);Ed=d(Us,"\u2705"),Us.forEach(e),gd=s(V),_r=a(V,"TD",{});var Xs=o(_r);md=d(Xs,"\u274C"),Xs.forEach(e),V.forEach(e),bd=s(f),L=a(f,"TR",{});var U=o(L);pr=a(U,"TD",{});var js=o(pr);bt=a(js,"A",{href:!0,rel:!0});var Ks=o(bt);Dd=d(Ks,"Stable-Baselines3"),Ks.forEach(e),js.forEach(e),yd=s(U),Er=a(U,"TD",{});var Ys=o(Er);wd=d(Ys,"Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Ys.forEach(e),Ad=s(U),gr=a(U,"TD",{});var Qs=o(gr);Pd=d(Qs,"\u274C"),Qs.forEach(e),Sd=s(U),Ot=a(U,"TD",{align:!0});var Zs=o(Ot);kd=d(Zs,"\u2705"),Zs.forEach(e),Ld=s(U),mr=a(U,"TD",{});var th=o(mr);Rd=d(th,"\u2705"),th.forEach(e),Hd=s(U),br=a(U,"TD",{});var eh=o(br);Cd=d(eh,"\u2705"),eh.forEach(e),U.forEach(e),f.forEach(e),Ir.forEach(e),kr=s(i),Y=a(i,"H3",{class:!0});var $r=o(Y);rt=a($r,"A",{id:!0,class:!0,href:!0});var rh=o(rt);Dr=a(rh,"SPAN",{});var ah=o(Dr);nh(Dt.$$.fragment,ah),ah.forEach(e),rh.forEach(e),Nd=s($r),yr=a($r,"SPAN",{});var oh=o(yr);Id=d(oh,"How can I add a new library to the Inference API?"),oh.forEach(e),$r.forEach(e),Lr=s(i),at=a(i,"P",{});var xr=o(at);$d=d(xr,"If you\u2019re interested in adding your library, please reach out to us! Read about it in "),zt=a(xr,"A",{href:!0});var lh=o(zt);xd=d(lh,"Adding a Library Guide"),lh.forEach(e),Fd=d(xr,"."),xr.forEach(e),this.h()},h(){h(j,"name","hf:doc:metadata"),h(j,"content",JSON.stringify(mh)),h(Q,"id","libraries"),h(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(Q,"href","#libraries"),h(K,"class","relative group"),h(lt,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Libraries.ts"),h(lt,"rel","nofollow"),h(yt,"align","right"),h(dt,"href","https://github.com/huggingface/transformers"),h(dt,"rel","nofollow"),h(wt,"align","right"),h(nt,"href","https://github.com/Adapter-Hub/adapter-transformers"),h(nt,"rel","nofollow"),h(At,"align","right"),h(st,"href","https://github.com/allenai/allennlp"),h(st,"rel","nofollow"),h(Pt,"align","right"),h(ht,"href","https://github.com/asteroid-team/asteroid"),h(ht,"rel","nofollow"),h(St,"align","right"),h(it,"href","https://github.com/mindee/doctr"),h(it,"rel","nofollow"),h(kt,"align","right"),h(ct,"href","https://github.com/espnet/espnet"),h(ct,"rel","nofollow"),h(Lt,"align","right"),h(ft,"href","https://github.com/flairNLP/flair"),h(ft,"rel","nofollow"),h(Rt,"align","right"),h(ut,"href","https://github.com/NVIDIA/NeMo"),h(ut,"rel","nofollow"),h(Ht,"align","right"),h(vt,"href","https://github.com/pyannote/pyannote-audio"),h(vt,"rel","nofollow"),h(Ct,"align","right"),h(Tt,"href","https://github.com/kensho-technologies/pyctcdecode"),h(Tt,"rel","nofollow"),h(Nt,"align","right"),h(_t,"href","https://github.com/UKPLab/sentence-transformers"),h(_t,"rel","nofollow"),h(It,"align","right"),h(pt,"href","https://github.com/explosion/spaCy"),h(pt,"rel","nofollow"),h($t,"align","right"),h(Et,"href","https://speechbrain.github.io/"),h(Et,"rel","nofollow"),h(xt,"align","right"),h(gt,"href","https://github.com/TensorSpeech/TensorFlowTTS"),h(gt,"rel","nofollow"),h(Ft,"align","right"),h(mt,"href","https://github.com/rwightman/pytorch-image-models"),h(mt,"rel","nofollow"),h(Mt,"align","right"),h(bt,"href","https://github.com/DLR-RM/stable-baselines3"),h(bt,"rel","nofollow"),h(Ot,"align","right"),h(rt,"id","how-can-i-add-a-new-library-to-the-inference-api"),h(rt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(rt,"href","#how-can-i-add-a-new-library-to-the-inference-api"),h(Y,"class","relative group"),h(zt,"href","./models-adding-libraries")},m(i,R){t(document.head,j),X(i,wr,R),X(i,K,R),t(K,Q),t(Q,Bt),sh(ot,Bt,null),t(K,Fr),t(K,Wt),t(Wt,Mr),X(i,Ar,R),X(i,Z,R),t(Z,Or),t(Z,qt),t(qt,zr),t(Z,Br),X(i,Pr,R),X(i,tt,R),t(tt,Wr),t(tt,lt),t(lt,qr),t(tt,Gr),X(i,Sr,R),X(i,et,R),t(et,Gt),t(Gt,u),t(u,Jt),t(Jt,Jr),t(u,Vr),t(u,Vt),t(Vt,Ur),t(u,Xr),t(u,Ut),t(Ut,jr),t(u,Kr),t(u,yt),t(yt,Yr),t(u,Qr),t(u,Xt),t(Xt,Zr),t(u,ta),t(u,jt),t(jt,ea),t(et,ra),t(et,c),t(c,v),t(v,Kt),t(Kt,dt),t(dt,aa),t(v,oa),t(v,Yt),t(Yt,la),t(v,da),t(v,Qt),t(Qt,na),t(v,sa),t(v,wt),t(wt,ha),t(v,ia),t(v,Zt),t(Zt,ca),t(v,fa),t(v,te),t(te,ua),t(c,va),t(c,T),t(T,ee),t(ee,nt),t(nt,Ta),t(T,_a),t(T,re),t(re,pa),t(T,Ea),t(T,ae),t(ae,ga),t(T,ma),t(T,At),t(At,ba),t(T,Da),t(T,oe),t(oe,ya),t(T,wa),t(T,le),t(le,Aa),t(c,Pa),t(c,_),t(_,de),t(de,st),t(st,Sa),t(_,ka),t(_,ne),t(ne,La),t(_,Ra),t(_,se),t(se,Ha),t(_,Ca),t(_,Pt),t(Pt,Na),t(_,Ia),t(_,he),t(he,$a),t(_,xa),t(_,ie),t(ie,Fa),t(c,Ma),t(c,p),t(p,ce),t(ce,ht),t(ht,Oa),t(p,za),t(p,fe),t(fe,Ba),t(p,Wa),t(p,ue),t(ue,qa),t(p,Ga),t(p,St),t(St,Ja),t(p,Va),t(p,ve),t(ve,Ua),t(p,Xa),t(p,Te),t(Te,ja),t(c,Ka),t(c,E),t(E,_e),t(_e,it),t(it,Ya),t(E,Qa),t(E,pe),t(pe,Za),t(E,to),t(E,Ee),t(Ee,eo),t(E,ro),t(E,kt),t(kt,ao),t(E,oo),t(E,ge),t(ge,lo),t(E,no),t(E,me),t(me,so),t(c,ho),t(c,g),t(g,be),t(be,ct),t(ct,io),t(g,co),t(g,De),t(De,fo),t(g,uo),t(g,ye),t(ye,vo),t(g,To),t(g,Lt),t(Lt,_o),t(g,po),t(g,we),t(we,Eo),t(g,go),t(g,Ae),t(Ae,mo),t(c,bo),t(c,m),t(m,Pe),t(Pe,ft),t(ft,Do),t(m,yo),t(m,Se),t(Se,wo),t(m,Ao),t(m,ke),t(ke,Po),t(m,So),t(m,Rt),t(Rt,ko),t(m,Lo),t(m,Le),t(Le,Ro),t(m,Ho),t(m,Re),t(Re,Co),t(c,No),t(c,b),t(b,He),t(He,ut),t(ut,Io),t(b,$o),t(b,Ce),t(Ce,xo),t(b,Fo),t(b,Ne),t(Ne,Mo),t(b,Oo),t(b,Ht),t(Ht,zo),t(b,Bo),t(b,Ie),t(Ie,Wo),t(b,qo),t(b,$e),t($e,Go),t(c,Jo),t(c,D),t(D,xe),t(xe,vt),t(vt,Vo),t(D,Uo),t(D,Fe),t(Fe,Xo),t(D,jo),t(D,Me),t(Me,Ko),t(D,Yo),t(D,Ct),t(Ct,Qo),t(D,Zo),t(D,Oe),t(Oe,tl),t(D,el),t(D,ze),t(ze,rl),t(c,al),t(c,y),t(y,Be),t(Be,Tt),t(Tt,ol),t(y,ll),t(y,We),t(We,dl),t(y,nl),t(y,qe),t(qe,sl),t(y,hl),t(y,Nt),t(Nt,il),t(y,cl),t(y,Ge),t(Ge,fl),t(y,ul),t(y,Je),t(Je,vl),t(c,Tl),t(c,w),t(w,Ve),t(Ve,_t),t(_t,_l),t(w,pl),t(w,Ue),t(Ue,El),t(w,gl),t(w,Xe),t(Xe,ml),t(w,bl),t(w,It),t(It,Dl),t(w,yl),t(w,je),t(je,wl),t(w,Al),t(w,Ke),t(Ke,Pl),t(c,Sl),t(c,A),t(A,Ye),t(Ye,pt),t(pt,kl),t(A,Ll),t(A,Qe),t(Qe,Rl),t(A,Hl),t(A,Ze),t(Ze,Cl),t(A,Nl),t(A,$t),t($t,Il),t(A,$l),t(A,tr),t(tr,xl),t(A,Fl),t(A,er),t(er,Ml),t(c,Ol),t(c,P),t(P,rr),t(rr,Et),t(Et,zl),t(P,Bl),t(P,ar),t(ar,Wl),t(P,ql),t(P,or),t(or,Gl),t(P,Jl),t(P,xt),t(xt,Vl),t(P,Ul),t(P,lr),t(lr,Xl),t(P,jl),t(P,dr),t(dr,Kl),t(c,Yl),t(c,S),t(S,nr),t(nr,gt),t(gt,Ql),t(S,Zl),t(S,sr),t(sr,td),t(S,ed),t(S,hr),t(hr,rd),t(S,ad),t(S,Ft),t(Ft,od),t(S,ld),t(S,ir),t(ir,dd),t(S,nd),t(S,cr),t(cr,sd),t(c,hd),t(c,k),t(k,fr),t(fr,mt),t(mt,id),t(k,cd),t(k,ur),t(ur,fd),t(k,ud),t(k,vr),t(vr,vd),t(k,Td),t(k,Mt),t(Mt,_d),t(k,pd),t(k,Tr),t(Tr,Ed),t(k,gd),t(k,_r),t(_r,md),t(c,bd),t(c,L),t(L,pr),t(pr,bt),t(bt,Dd),t(L,yd),t(L,Er),t(Er,wd),t(L,Ad),t(L,gr),t(gr,Pd),t(L,Sd),t(L,Ot),t(Ot,kd),t(L,Ld),t(L,mr),t(mr,Rd),t(L,Hd),t(L,br),t(br,Cd),X(i,kr,R),X(i,Y,R),t(Y,rt),t(rt,Dr),sh(Dt,Dr,null),t(Y,Nd),t(Y,yr),t(yr,Id),X(i,Lr,R),X(i,at,R),t(at,$d),t(at,zt),t(zt,xd),t(at,Fd),Rr=!0},p:ph,i(i){Rr||(hh(ot.$$.fragment,i),hh(Dt.$$.fragment,i),Rr=!0)},o(i){ih(ot.$$.fragment,i),ih(Dt.$$.fragment,i),Rr=!1},d(i){e(j),i&&e(wr),i&&e(K),ch(ot),i&&e(Ar),i&&e(Z),i&&e(Pr),i&&e(tt),i&&e(Sr),i&&e(et),i&&e(kr),i&&e(Y),ch(Dt),i&&e(Lr),i&&e(at)}}}const mh={local:"libraries",sections:[{local:"how-can-i-add-a-new-library-to-the-inference-api",title:"How can I add a new library to the Inference API?"}],title:"Libraries"};function bh(Md){return Eh(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class wh extends uh{constructor(j){super();vh(this,j,bh,gh,Th,{})}}export{wh as default,mh as metadata};
