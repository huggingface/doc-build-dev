import{S as Js,i as Ks,s as Xs,e as a,k as c,w as m,t as h,N as Zs,c as l,d as t,m as d,a as r,x as g,h as f,b as n,P as z,G as o,g as s,y as v,L as en,q as w,o as y,B as _,v as tn}from"../chunks/vendor-hf-doc-builder.js";import{I as k}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Qs}from"../chunks/CodeBlock-hf-doc-builder.js";function on(Qr){let S,_o,H,B,At,de,Ua,It,Ca,bo,T,j,Pt,ue,Da,St,Ra,Eo,De,za,$o,pe,ko,Re,Ba,Ao,ze,Be,Jr,Io,je,ja,Po,qe,Ve,Kr,So,x,q,Ht,me,qa,Tt,Va,Ho,V,Wa,ge,xt,Qa,Ja,To,ve,xo,L,W,Lt,we,Ka,Nt,Xa,Lo,Q,Za,ye,el,tl,No,b,ol,_e,al,ll,be,rl,il,Ee,sl,nl,Oo,We,hl,Mo,N,J,Ot,$e,fl,Mt,cl,Go,K,dl,ke,ul,pl,Yo,Qe,Gt,ml,Fo,Je,Ke,Xr,Uo,Ae,Yt,gl,Co,Xe,Ze,Zr,Do,O,Ft,Ie,vl,Ut,wl,yl,_l,Ct,Dt,bl,Ro,et,El,zo,tt,ot,ei,Bo,at,$l,jo,lt,rt,ti,qo,Pe,Rt,kl,Vo,it,Al,Wo,u,zt,Il,Pl,M,Sl,Bt,Hl,Tl,jt,xl,Ll,Nl,qt,Ol,Ml,Vt,Gl,Yl,Wt,Fl,Ul,Qt,Cl,Dl,Jt,Rl,Qo,X,zl,st,Bl,jl,Jo,Se,Kt,ql,Ko,E,Vl,Xt,Wl,Ql,Z,Zt,Jl,Kl,Xl,eo,Zl,er,Xo,nt,ht,oi,Zo,A,tr,He,or,ar,Te,to,lr,rr,ea,G,ee,oo,xe,ir,ao,sr,ta,I,nr,ft,hr,fr,lo,cr,dr,oa,Y,te,ro,Le,ur,Ne,pr,io,mr,gr,aa,P,vr,so,wr,yr,Oe,_r,br,la,F,oe,no,Me,Er,ho,$r,ra,U,ae,fo,Ge,kr,co,Ar,ia,ct,Ir,sa,dt,ut,ai,na,C,le,uo,Ye,Pr,po,Sr,ha,re,Hr,pt,Tr,xr,fa,mt,Lr,ca,gt,vt,li,da,ie,Nr,wt,Or,Mr,ua,D,se,mo,Fe,Gr,go,Yr,pa,yt,Fr,ma,R,ne,vo,Ue,Ur,wo,Cr,ga,$,Dr,_t,Rr,zr,Ce,Br,jr,yo,qr,Vr,va;return de=new k({}),ue=new k({}),pe=new Qs({props:{code:`git lfs install
git clone <MODEL URL>`,highlighted:`git lfs install
git <span class="hljs-built_in">clone</span> &lt;MODEL URL&gt;`}}),me=new k({}),ve=new Qs({props:{code:`from huggingface_hub import hf_hub_url, cached_download
import joblib

REPO_ID = "YOUR_REPO_ID"
FILENAME = "sklearn_model.joblib"

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_url, cached_download
<span class="hljs-keyword">import</span> joblib

REPO_ID = <span class="hljs-string">&quot;YOUR_REPO_ID&quot;</span>
FILENAME = <span class="hljs-string">&quot;sklearn_model.joblib&quot;</span>

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`}}),we=new k({}),$e=new k({}),xe=new k({}),Le=new k({}),Me=new k({}),Ge=new k({}),Ye=new k({}),Fe=new k({}),Ue=new k({}),{c(){S=a("meta"),_o=c(),H=a("h1"),B=a("a"),At=a("span"),m(de.$$.fragment),Ua=c(),It=a("span"),Ca=h("Interacting with models on the hub"),bo=c(),T=a("h2"),j=a("a"),Pt=a("span"),m(ue.$$.fragment),Da=c(),St=a("span"),Ra=h("Accessing models for local use"),Eo=c(),De=a("p"),za=h("Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),$o=c(),m(pe.$$.fragment),ko=c(),Re=a("p"),Ba=h("For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),Ao=c(),ze=a("p"),Be=a("img"),Io=c(),je=a("p"),ja=h("If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),Po=c(),qe=a("p"),Ve=a("img"),So=c(),x=a("h3"),q=a("a"),Ht=a("span"),m(me.$$.fragment),qa=c(),Tt=a("span"),Va=h("Can I access models programmatically?"),Ho=c(),V=a("p"),Wa=h("You can use the "),ge=a("a"),xt=a("code"),Qa=h("huggingface_hub"),Ja=h(" library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),To=c(),m(ve.$$.fragment),xo=c(),L=a("h2"),W=a("a"),Lt=a("span"),m(we.$$.fragment),Ka=c(),Nt=a("span"),Xa=h("Uploading models"),Lo=c(),Q=a("p"),Za=h("The first step is to create an account at "),ye=a("a"),el=h("Hugging Face"),tl=h(". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),No=c(),b=a("p"),ol=h("You can link repositories with an individual, such as "),_e=a("a"),al=h("osanseviero/fashion_brands_patterns"),ll=h(", or with an organization, such as "),be=a("a"),rl=h("facebook/bart-large-xsum"),il=h(". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),Ee=a("a"),sl=h("here"),nl=h("."),Oo=c(),We=a("p"),hl=h("There are several ways to upload models to the Hub, described below."),Mo=c(),N=a("h3"),J=a("a"),Ot=a("span"),m($e.$$.fragment),fl=c(),Mt=a("span"),cl=h("Using the web interface"),Go=c(),K=a("p"),dl=h("To create a brand new model repository, visit "),ke=a("a"),ul=h("huggingface.co/new"),pl=h(". Then follow these steps:"),Yo=c(),Qe=a("ol"),Gt=a("li"),ml=h("In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),Fo=c(),Je=a("p"),Ke=a("img"),Uo=c(),Ae=a("ol"),Yt=a("li"),gl=h("From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),Co=c(),Xe=a("p"),Ze=a("img"),Do=c(),O=a("ol"),Ft=a("li"),Ie=a("p"),vl=h("Afterwards, click "),Ut=a("strong"),wl=h("Commit changes"),yl=h(" to upload your model to the Hub!"),_l=c(),Ct=a("li"),Dt=a("p"),bl=h("Inspect files and history"),Ro=c(),et=a("p"),El=h("You can check your repository with all the recently added files!"),zo=c(),tt=a("p"),ot=a("img"),Bo=c(),at=a("p"),$l=h("The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),jo=c(),lt=a("p"),rt=a("img"),qo=c(),Pe=a("ol"),Rt=a("li"),kl=h("Add metadata"),Vo=c(),it=a("p"),Al=h("You can add metadata to your model card. You can specify:"),Wo=c(),u=a("ul"),zt=a("li"),Il=h("the type of task this model is for, enabling widgets and the Inference API."),Pl=c(),M=a("li"),Sl=h("the used library ("),Bt=a("code"),Hl=h("transformers"),Tl=h(", "),jt=a("code"),xl=h("spaCy"),Ll=h(", etc.)"),Nl=c(),qt=a("li"),Ol=h("the language"),Ml=c(),Vt=a("li"),Gl=h("the dataset"),Yl=c(),Wt=a("li"),Fl=h("metrics"),Ul=c(),Qt=a("li"),Cl=h("license"),Dl=c(),Jt=a("li"),Rl=h("a lot more!"),Qo=c(),X=a("p"),zl=h("Read more about model tags "),st=a("a"),Bl=h("here"),jl=h("."),Jo=c(),Se=a("ol"),Kt=a("li"),ql=h("Add TensorBoard traces"),Ko=c(),E=a("p"),Vl=h("Any repository that contains TensorBoard traces (filenames that contain "),Xt=a("code"),Wl=h("tfevents"),Ql=h(") is categorized with the "),Z=a("a"),Zt=a("code"),Jl=h("TensorBoard"),Kl=h(" tag"),Xl=h(". As a convention, we suggest that you save traces under the "),eo=a("code"),Zl=h("runs/"),er=h(" subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),Xo=c(),nt=a("p"),ht=a("img"),Zo=c(),A=a("p"),tr=h("Models trained with \u{1F917} Transformers will generate "),He=a("a"),or=h("TensorBoard traces"),ar=h(" by default if "),Te=a("a"),to=a("code"),lr=h("tensorboard"),rr=h(" is installed."),ea=c(),G=a("h3"),ee=a("a"),oo=a("span"),m(xe.$$.fragment),ir=c(),ao=a("span"),sr=h("Using Git"),ta=c(),I=a("p"),nr=h("Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),ft=a("a"),hr=h("Getting Started with Repositories"),fr=h(" to learn about using the "),lo=a("code"),cr=h("git"),dr=h(" CLI to commit and push your models."),oa=c(),Y=a("h3"),te=a("a"),ro=a("span"),m(Le.$$.fragment),ur=c(),Ne=a("span"),pr=h("Using the "),io=a("code"),mr=h("huggingface_hub"),gr=h(" client library"),aa=c(),P=a("p"),vr=h("The rich feature set in the "),so=a("code"),wr=h("huggingface_hub"),yr=h(" library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),Oe=a("a"),_r=h("the client library\u2019s documentation"),br=h(" to learn more."),la=c(),F=a("h2"),oe=a("a"),no=a("span"),m(Me.$$.fragment),Er=c(),ho=a("span"),$r=h("FAQ"),ra=c(),U=a("h3"),ae=a("a"),fo=a("span"),m(Ge.$$.fragment),kr=c(),co=a("span"),Ar=h("How can I see what dataset was used to train the model?"),ia=c(),ct=a("p"),Ir=h("It\u2019s up to the person who uploaded the model to include the training information! You may find the information about the datasets that the model was trained on in the model card. If the datasets used for the model are on the Hub, the uploader may have included them in the model card\u2019s metadata. In that case, the datasets would be linked with a handy card on the right side of the model page:"),sa=c(),dt=a("p"),ut=a("img"),na=c(),C=a("h3"),le=a("a"),uo=a("span"),m(Ye.$$.fragment),Pr=c(),po=a("span"),Sr=h("How can I see an example of the model in action?"),ha=c(),re=a("p"),Hr=h("Models can have inference widgets that let you try out the model in the browser! Inference widgets are easy to configure, and there are many different options at your disposal. Visit the "),pt=a("a"),Tr=h("Widgets documentation"),xr=h(" to learn more."),fa=c(),mt=a("p"),Lr=h("The Hugging Face Hub is also home to Spaces, which are interactive demos used to showcase models. If a model has any Spaces associated with it, you\u2019ll find them linked on the model page like so:"),ca=c(),gt=a("p"),vt=a("img"),da=c(),ie=a("p"),Nr=h("Spaces are a great way to show off a model you\u2019ve made or explore new ways to use existing models! Visit the "),wt=a("a"),Or=h("Spaces documentation"),Mr=h(" to learn how to make your own."),ua=c(),D=a("h3"),se=a("a"),mo=a("span"),m(Fe.$$.fragment),Gr=c(),go=a("span"),Yr=h("How do I upload an update / new version of the model?"),pa=c(),yt=a("p"),Fr=h("Releasing an update to a model that you\u2019ve already published can be done by pushing a new commit to your model\u2019s repo. To do this, go through the same process that you followed to upload your initial model. Your previous model versions will remain in the repository\u2019s commit history."),ma=c(),R=a("h3"),ne=a("a"),vo=a("span"),m(Ue.$$.fragment),Ur=c(),wo=a("span"),Cr=h("What if I have a different checkpoint of the model trained on a different dataset?"),ga=c(),$=a("p"),Dr=h("By convention, each model repo should contain a single checkpoint trained on a particular dataset. You should upload any new checkpoints trained on different datasets to the Hub in a new model repo. You can link the models together by using a "),_t=a("a"),Rr=h("tag in your model card\u2019s metadata"),zr=h(" or by linking to them in the model cards. The "),Ce=a("a"),Br=h("akiyamasho/AnimeBackgroundGAN-Shinkai"),jr=h(" model, for example, references other checkpoints in the model card under "),yo=a("em"),qr=h("\u201COther pre-trained model versions\u201D"),Vr=h("."),this.h()},l(e){const i=Zs('[data-svelte="svelte-1phssyn"]',document.head);S=l(i,"META",{name:!0,content:!0}),i.forEach(t),_o=d(e),H=l(e,"H1",{class:!0});var wa=r(H);B=l(wa,"A",{id:!0,class:!0,href:!0});var ri=r(B);At=l(ri,"SPAN",{});var ii=r(At);g(de.$$.fragment,ii),ii.forEach(t),ri.forEach(t),Ua=d(wa),It=l(wa,"SPAN",{});var si=r(It);Ca=f(si,"Interacting with models on the hub"),si.forEach(t),wa.forEach(t),bo=d(e),T=l(e,"H2",{class:!0});var ya=r(T);j=l(ya,"A",{id:!0,class:!0,href:!0});var ni=r(j);Pt=l(ni,"SPAN",{});var hi=r(Pt);g(ue.$$.fragment,hi),hi.forEach(t),ni.forEach(t),Da=d(ya),St=l(ya,"SPAN",{});var fi=r(St);Ra=f(fi,"Accessing models for local use"),fi.forEach(t),ya.forEach(t),Eo=d(e),De=l(e,"P",{});var ci=r(De);za=f(ci,"Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),ci.forEach(t),$o=d(e),g(pe.$$.fragment,e),ko=d(e),Re=l(e,"P",{});var di=r(Re);Ba=f(di,"For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),di.forEach(t),Ao=d(e),ze=l(e,"P",{});var ui=r(ze);Be=l(ui,"IMG",{src:!0,alt:!0}),ui.forEach(t),Io=d(e),je=l(e,"P",{});var pi=r(je);ja=f(pi,"If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),pi.forEach(t),Po=d(e),qe=l(e,"P",{});var mi=r(qe);Ve=l(mi,"IMG",{src:!0,alt:!0}),mi.forEach(t),So=d(e),x=l(e,"H3",{class:!0});var _a=r(x);q=l(_a,"A",{id:!0,class:!0,href:!0});var gi=r(q);Ht=l(gi,"SPAN",{});var vi=r(Ht);g(me.$$.fragment,vi),vi.forEach(t),gi.forEach(t),qa=d(_a),Tt=l(_a,"SPAN",{});var wi=r(Tt);Va=f(wi,"Can I access models programmatically?"),wi.forEach(t),_a.forEach(t),Ho=d(e),V=l(e,"P",{});var ba=r(V);Wa=f(ba,"You can use the "),ge=l(ba,"A",{href:!0,rel:!0});var yi=r(ge);xt=l(yi,"CODE",{});var _i=r(xt);Qa=f(_i,"huggingface_hub"),_i.forEach(t),yi.forEach(t),Ja=f(ba," library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),ba.forEach(t),To=d(e),g(ve.$$.fragment,e),xo=d(e),L=l(e,"H2",{class:!0});var Ea=r(L);W=l(Ea,"A",{id:!0,class:!0,href:!0});var bi=r(W);Lt=l(bi,"SPAN",{});var Ei=r(Lt);g(we.$$.fragment,Ei),Ei.forEach(t),bi.forEach(t),Ka=d(Ea),Nt=l(Ea,"SPAN",{});var $i=r(Nt);Xa=f($i,"Uploading models"),$i.forEach(t),Ea.forEach(t),Lo=d(e),Q=l(e,"P",{});var $a=r(Q);Za=f($a,"The first step is to create an account at "),ye=l($a,"A",{href:!0,rel:!0});var ki=r(ye);el=f(ki,"Hugging Face"),ki.forEach(t),tl=f($a,". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),$a.forEach(t),No=d(e),b=l(e,"P",{});var he=r(b);ol=f(he,"You can link repositories with an individual, such as "),_e=l(he,"A",{href:!0,rel:!0});var Ai=r(_e);al=f(Ai,"osanseviero/fashion_brands_patterns"),Ai.forEach(t),ll=f(he,", or with an organization, such as "),be=l(he,"A",{href:!0,rel:!0});var Ii=r(be);rl=f(Ii,"facebook/bart-large-xsum"),Ii.forEach(t),il=f(he,". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),Ee=l(he,"A",{href:!0,rel:!0});var Pi=r(Ee);sl=f(Pi,"here"),Pi.forEach(t),nl=f(he,"."),he.forEach(t),Oo=d(e),We=l(e,"P",{});var Si=r(We);hl=f(Si,"There are several ways to upload models to the Hub, described below."),Si.forEach(t),Mo=d(e),N=l(e,"H3",{class:!0});var ka=r(N);J=l(ka,"A",{id:!0,class:!0,href:!0});var Hi=r(J);Ot=l(Hi,"SPAN",{});var Ti=r(Ot);g($e.$$.fragment,Ti),Ti.forEach(t),Hi.forEach(t),fl=d(ka),Mt=l(ka,"SPAN",{});var xi=r(Mt);cl=f(xi,"Using the web interface"),xi.forEach(t),ka.forEach(t),Go=d(e),K=l(e,"P",{});var Aa=r(K);dl=f(Aa,"To create a brand new model repository, visit "),ke=l(Aa,"A",{href:!0,rel:!0});var Li=r(ke);ul=f(Li,"huggingface.co/new"),Li.forEach(t),pl=f(Aa,". Then follow these steps:"),Aa.forEach(t),Yo=d(e),Qe=l(e,"OL",{});var Ni=r(Qe);Gt=l(Ni,"LI",{});var Oi=r(Gt);ml=f(Oi,"In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),Oi.forEach(t),Ni.forEach(t),Fo=d(e),Je=l(e,"P",{});var Mi=r(Je);Ke=l(Mi,"IMG",{src:!0,alt:!0}),Mi.forEach(t),Uo=d(e),Ae=l(e,"OL",{start:!0});var Gi=r(Ae);Yt=l(Gi,"LI",{});var Yi=r(Yt);gl=f(Yi,"From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),Yi.forEach(t),Gi.forEach(t),Co=d(e),Xe=l(e,"P",{});var Fi=r(Xe);Ze=l(Fi,"IMG",{src:!0,alt:!0}),Fi.forEach(t),Do=d(e),O=l(e,"OL",{start:!0});var Ia=r(O);Ft=l(Ia,"LI",{});var Ui=r(Ft);Ie=l(Ui,"P",{});var Pa=r(Ie);vl=f(Pa,"Afterwards, click "),Ut=l(Pa,"STRONG",{});var Ci=r(Ut);wl=f(Ci,"Commit changes"),Ci.forEach(t),yl=f(Pa," to upload your model to the Hub!"),Pa.forEach(t),Ui.forEach(t),_l=d(Ia),Ct=l(Ia,"LI",{});var Di=r(Ct);Dt=l(Di,"P",{});var Ri=r(Dt);bl=f(Ri,"Inspect files and history"),Ri.forEach(t),Di.forEach(t),Ia.forEach(t),Ro=d(e),et=l(e,"P",{});var zi=r(et);El=f(zi,"You can check your repository with all the recently added files!"),zi.forEach(t),zo=d(e),tt=l(e,"P",{});var Bi=r(tt);ot=l(Bi,"IMG",{src:!0,alt:!0}),Bi.forEach(t),Bo=d(e),at=l(e,"P",{});var ji=r(at);$l=f(ji,"The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),ji.forEach(t),jo=d(e),lt=l(e,"P",{});var qi=r(lt);rt=l(qi,"IMG",{src:!0,alt:!0}),qi.forEach(t),qo=d(e),Pe=l(e,"OL",{start:!0});var Vi=r(Pe);Rt=l(Vi,"LI",{});var Wi=r(Rt);kl=f(Wi,"Add metadata"),Wi.forEach(t),Vi.forEach(t),Vo=d(e),it=l(e,"P",{});var Qi=r(it);Al=f(Qi,"You can add metadata to your model card. You can specify:"),Qi.forEach(t),Wo=d(e),u=l(e,"UL",{});var p=r(u);zt=l(p,"LI",{});var Ji=r(zt);Il=f(Ji,"the type of task this model is for, enabling widgets and the Inference API."),Ji.forEach(t),Pl=d(p),M=l(p,"LI",{});var bt=r(M);Sl=f(bt,"the used library ("),Bt=l(bt,"CODE",{});var Ki=r(Bt);Hl=f(Ki,"transformers"),Ki.forEach(t),Tl=f(bt,", "),jt=l(bt,"CODE",{});var Xi=r(jt);xl=f(Xi,"spaCy"),Xi.forEach(t),Ll=f(bt,", etc.)"),bt.forEach(t),Nl=d(p),qt=l(p,"LI",{});var Zi=r(qt);Ol=f(Zi,"the language"),Zi.forEach(t),Ml=d(p),Vt=l(p,"LI",{});var es=r(Vt);Gl=f(es,"the dataset"),es.forEach(t),Yl=d(p),Wt=l(p,"LI",{});var ts=r(Wt);Fl=f(ts,"metrics"),ts.forEach(t),Ul=d(p),Qt=l(p,"LI",{});var os=r(Qt);Cl=f(os,"license"),os.forEach(t),Dl=d(p),Jt=l(p,"LI",{});var as=r(Jt);Rl=f(as,"a lot more!"),as.forEach(t),p.forEach(t),Qo=d(e),X=l(e,"P",{});var Sa=r(X);zl=f(Sa,"Read more about model tags "),st=l(Sa,"A",{href:!0});var ls=r(st);Bl=f(ls,"here"),ls.forEach(t),jl=f(Sa,"."),Sa.forEach(t),Jo=d(e),Se=l(e,"OL",{start:!0});var rs=r(Se);Kt=l(rs,"LI",{});var is=r(Kt);ql=f(is,"Add TensorBoard traces"),is.forEach(t),rs.forEach(t),Ko=d(e),E=l(e,"P",{});var fe=r(E);Vl=f(fe,"Any repository that contains TensorBoard traces (filenames that contain "),Xt=l(fe,"CODE",{});var ss=r(Xt);Wl=f(ss,"tfevents"),ss.forEach(t),Ql=f(fe,") is categorized with the "),Z=l(fe,"A",{href:!0,rel:!0});var Wr=r(Z);Zt=l(Wr,"CODE",{});var ns=r(Zt);Jl=f(ns,"TensorBoard"),ns.forEach(t),Kl=f(Wr," tag"),Wr.forEach(t),Xl=f(fe,". As a convention, we suggest that you save traces under the "),eo=l(fe,"CODE",{});var hs=r(eo);Zl=f(hs,"runs/"),hs.forEach(t),er=f(fe," subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),fe.forEach(t),Xo=d(e),nt=l(e,"P",{});var fs=r(nt);ht=l(fs,"IMG",{src:!0,alt:!0}),fs.forEach(t),Zo=d(e),A=l(e,"P",{});var Et=r(A);tr=f(Et,"Models trained with \u{1F917} Transformers will generate "),He=l(Et,"A",{href:!0,rel:!0});var cs=r(He);or=f(cs,"TensorBoard traces"),cs.forEach(t),ar=f(Et," by default if "),Te=l(Et,"A",{href:!0,rel:!0});var ds=r(Te);to=l(ds,"CODE",{});var us=r(to);lr=f(us,"tensorboard"),us.forEach(t),ds.forEach(t),rr=f(Et," is installed."),Et.forEach(t),ea=d(e),G=l(e,"H3",{class:!0});var Ha=r(G);ee=l(Ha,"A",{id:!0,class:!0,href:!0});var ps=r(ee);oo=l(ps,"SPAN",{});var ms=r(oo);g(xe.$$.fragment,ms),ms.forEach(t),ps.forEach(t),ir=d(Ha),ao=l(Ha,"SPAN",{});var gs=r(ao);sr=f(gs,"Using Git"),gs.forEach(t),Ha.forEach(t),ta=d(e),I=l(e,"P",{});var $t=r(I);nr=f($t,"Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),ft=l($t,"A",{href:!0});var vs=r(ft);hr=f(vs,"Getting Started with Repositories"),vs.forEach(t),fr=f($t," to learn about using the "),lo=l($t,"CODE",{});var ws=r(lo);cr=f(ws,"git"),ws.forEach(t),dr=f($t," CLI to commit and push your models."),$t.forEach(t),oa=d(e),Y=l(e,"H3",{class:!0});var Ta=r(Y);te=l(Ta,"A",{id:!0,class:!0,href:!0});var ys=r(te);ro=l(ys,"SPAN",{});var _s=r(ro);g(Le.$$.fragment,_s),_s.forEach(t),ys.forEach(t),ur=d(Ta),Ne=l(Ta,"SPAN",{});var xa=r(Ne);pr=f(xa,"Using the "),io=l(xa,"CODE",{});var bs=r(io);mr=f(bs,"huggingface_hub"),bs.forEach(t),gr=f(xa," client library"),xa.forEach(t),Ta.forEach(t),aa=d(e),P=l(e,"P",{});var kt=r(P);vr=f(kt,"The rich feature set in the "),so=l(kt,"CODE",{});var Es=r(so);wr=f(Es,"huggingface_hub"),Es.forEach(t),yr=f(kt," library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),Oe=l(kt,"A",{href:!0,rel:!0});var $s=r(Oe);_r=f($s,"the client library\u2019s documentation"),$s.forEach(t),br=f(kt," to learn more."),kt.forEach(t),la=d(e),F=l(e,"H2",{class:!0});var La=r(F);oe=l(La,"A",{id:!0,class:!0,href:!0});var ks=r(oe);no=l(ks,"SPAN",{});var As=r(no);g(Me.$$.fragment,As),As.forEach(t),ks.forEach(t),Er=d(La),ho=l(La,"SPAN",{});var Is=r(ho);$r=f(Is,"FAQ"),Is.forEach(t),La.forEach(t),ra=d(e),U=l(e,"H3",{class:!0});var Na=r(U);ae=l(Na,"A",{id:!0,class:!0,href:!0});var Ps=r(ae);fo=l(Ps,"SPAN",{});var Ss=r(fo);g(Ge.$$.fragment,Ss),Ss.forEach(t),Ps.forEach(t),kr=d(Na),co=l(Na,"SPAN",{});var Hs=r(co);Ar=f(Hs,"How can I see what dataset was used to train the model?"),Hs.forEach(t),Na.forEach(t),ia=d(e),ct=l(e,"P",{});var Ts=r(ct);Ir=f(Ts,"It\u2019s up to the person who uploaded the model to include the training information! You may find the information about the datasets that the model was trained on in the model card. If the datasets used for the model are on the Hub, the uploader may have included them in the model card\u2019s metadata. In that case, the datasets would be linked with a handy card on the right side of the model page:"),Ts.forEach(t),sa=d(e),dt=l(e,"P",{});var xs=r(dt);ut=l(xs,"IMG",{src:!0,alt:!0}),xs.forEach(t),na=d(e),C=l(e,"H3",{class:!0});var Oa=r(C);le=l(Oa,"A",{id:!0,class:!0,href:!0});var Ls=r(le);uo=l(Ls,"SPAN",{});var Ns=r(uo);g(Ye.$$.fragment,Ns),Ns.forEach(t),Ls.forEach(t),Pr=d(Oa),po=l(Oa,"SPAN",{});var Os=r(po);Sr=f(Os,"How can I see an example of the model in action?"),Os.forEach(t),Oa.forEach(t),ha=d(e),re=l(e,"P",{});var Ma=r(re);Hr=f(Ma,"Models can have inference widgets that let you try out the model in the browser! Inference widgets are easy to configure, and there are many different options at your disposal. Visit the "),pt=l(Ma,"A",{href:!0});var Ms=r(pt);Tr=f(Ms,"Widgets documentation"),Ms.forEach(t),xr=f(Ma," to learn more."),Ma.forEach(t),fa=d(e),mt=l(e,"P",{});var Gs=r(mt);Lr=f(Gs,"The Hugging Face Hub is also home to Spaces, which are interactive demos used to showcase models. If a model has any Spaces associated with it, you\u2019ll find them linked on the model page like so:"),Gs.forEach(t),ca=d(e),gt=l(e,"P",{});var Ys=r(gt);vt=l(Ys,"IMG",{src:!0,alt:!0}),Ys.forEach(t),da=d(e),ie=l(e,"P",{});var Ga=r(ie);Nr=f(Ga,"Spaces are a great way to show off a model you\u2019ve made or explore new ways to use existing models! Visit the "),wt=l(Ga,"A",{href:!0});var Fs=r(wt);Or=f(Fs,"Spaces documentation"),Fs.forEach(t),Mr=f(Ga," to learn how to make your own."),Ga.forEach(t),ua=d(e),D=l(e,"H3",{class:!0});var Ya=r(D);se=l(Ya,"A",{id:!0,class:!0,href:!0});var Us=r(se);mo=l(Us,"SPAN",{});var Cs=r(mo);g(Fe.$$.fragment,Cs),Cs.forEach(t),Us.forEach(t),Gr=d(Ya),go=l(Ya,"SPAN",{});var Ds=r(go);Yr=f(Ds,"How do I upload an update / new version of the model?"),Ds.forEach(t),Ya.forEach(t),pa=d(e),yt=l(e,"P",{});var Rs=r(yt);Fr=f(Rs,"Releasing an update to a model that you\u2019ve already published can be done by pushing a new commit to your model\u2019s repo. To do this, go through the same process that you followed to upload your initial model. Your previous model versions will remain in the repository\u2019s commit history."),Rs.forEach(t),ma=d(e),R=l(e,"H3",{class:!0});var Fa=r(R);ne=l(Fa,"A",{id:!0,class:!0,href:!0});var zs=r(ne);vo=l(zs,"SPAN",{});var Bs=r(vo);g(Ue.$$.fragment,Bs),Bs.forEach(t),zs.forEach(t),Ur=d(Fa),wo=l(Fa,"SPAN",{});var js=r(wo);Cr=f(js,"What if I have a different checkpoint of the model trained on a different dataset?"),js.forEach(t),Fa.forEach(t),ga=d(e),$=l(e,"P",{});var ce=r($);Dr=f(ce,"By convention, each model repo should contain a single checkpoint trained on a particular dataset. You should upload any new checkpoints trained on different datasets to the Hub in a new model repo. You can link the models together by using a "),_t=l(ce,"A",{href:!0});var qs=r(_t);Rr=f(qs,"tag in your model card\u2019s metadata"),qs.forEach(t),zr=f(ce," or by linking to them in the model cards. The "),Ce=l(ce,"A",{href:!0,rel:!0});var Vs=r(Ce);Br=f(Vs,"akiyamasho/AnimeBackgroundGAN-Shinkai"),Vs.forEach(t),jr=f(ce," model, for example, references other checkpoints in the model card under "),yo=l(ce,"EM",{});var Ws=r(yo);qr=f(Ws,"\u201COther pre-trained model versions\u201D"),Ws.forEach(t),Vr=f(ce,"."),ce.forEach(t),this.h()},h(){n(S,"name","hf:doc:metadata"),n(S,"content",JSON.stringify(an)),n(B,"id","interacting-with-models-on-the-hub"),n(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(B,"href","#interacting-with-models-on-the-hub"),n(H,"class","relative group"),n(j,"id","accessing-models-for-local-use"),n(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(j,"href","#accessing-models-for-local-use"),n(T,"class","relative group"),z(Be.src,Jr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage.png")||n(Be,"src",Jr),n(Be,"alt","Models can be used locally through the 'Use in Transformer' button"),z(Ve.src,Kr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-modal.png")||n(Ve,"src",Kr),n(Ve,"alt","Snippets for using a model with the \u{1F917} transformers library"),n(q,"id","can-i-access-models-programmatically"),n(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(q,"href","#can-i-access-models-programmatically"),n(x,"class","relative group"),n(ge,"href","https://github.com/huggingface/huggingface_hub"),n(ge,"rel","nofollow"),n(W,"id","uploading-models"),n(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(W,"href","#uploading-models"),n(L,"class","relative group"),n(ye,"href","https://huggingface.co/login"),n(ye,"rel","nofollow"),n(_e,"href","https://huggingface.co/osanseviero/fashion_brands_patterns"),n(_e,"rel","nofollow"),n(be,"href","https://huggingface.co/facebook/bart-large-xsum"),n(be,"rel","nofollow"),n(Ee,"href","https://huggingface.co/organizations/new"),n(Ee,"rel","nofollow"),n(J,"id","using-the-web-interface"),n(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(J,"href","#using-the-web-interface"),n(N,"class","relative group"),n(ke,"href","http://huggingface.co/new"),n(ke,"rel","nofollow"),z(Ke.src,Xr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file.png")||n(Ke,"src",Xr),n(Ke,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file.png"),n(Ae,"start","2"),z(Ze.src,Zr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file.png")||n(Ze,"src",Zr),n(Ze,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file.png"),n(O,"start","3"),z(ot.src,ei="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png")||n(ot,"src",ei),n(ot,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png"),z(rt.src,ti="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif")||n(rt,"src",ti),n(rt,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif"),n(Pe,"start","5"),n(st,"href","/docs/hub/model-repos#model-card-metadata"),n(Se,"start","6"),n(Z,"href","https://huggingface.co/models?filter=tensorboard"),n(Z,"rel","nofollow"),z(ht.src,oi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/tensorboard.png")||n(ht,"src",oi),n(ht,"alt","Training metrics tab on a model's page, with TensorBoard"),n(He,"href","https://huggingface.co/transformers/main_classes/callback.html?highlight=tensorboard#transformers.integrations.TensorBoardCallback"),n(He,"rel","nofollow"),n(Te,"href","https://pypi.org/project/tensorboard/"),n(Te,"rel","nofollow"),n(ee,"id","using-git"),n(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ee,"href","#using-git"),n(G,"class","relative group"),n(ft,"href","repositories-getting-started.md"),n(te,"id","using-the-huggingfacehub-client-library"),n(te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(te,"href","#using-the-huggingfacehub-client-library"),n(Y,"class","relative group"),n(Oe,"href","https://huggingface.co/docs/huggingface_hub/index"),n(Oe,"rel","nofollow"),n(oe,"id","faq"),n(oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(oe,"href","#faq"),n(F,"class","relative group"),n(ae,"id","how-can-i-see-what-dataset-was-used-to-train-the-model"),n(ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ae,"href","#how-can-i-see-what-dataset-was-used-to-train-the-model"),n(U,"class","relative group"),z(ut.src,ai="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-linked-datasets.png")||n(ut,"src",ai),n(ut,"alt","Linked datasets for a model"),n(le,"id","how-can-i-see-an-example-of-the-model-in-action"),n(le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(le,"href","#how-can-i-see-an-example-of-the-model-in-action"),n(C,"class","relative group"),n(pt,"href","models-widgets.md"),z(vt.src,li="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-linked-spaces.png")||n(vt,"src",li),n(vt,"alt","Linked spaces for a model"),n(wt,"href","./spaces-main"),n(se,"id","how-do-i-upload-an-update-new-version-of-the-model"),n(se,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(se,"href","#how-do-i-upload-an-update-new-version-of-the-model"),n(D,"class","relative group"),n(ne,"id","what-if-i-have-a-different-checkpoint-of-the-model-trained-on-a-different-dataset"),n(ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ne,"href","#what-if-i-have-a-different-checkpoint-of-the-model-trained-on-a-different-dataset"),n(R,"class","relative group"),n(_t,"href","./modelcard"),n(Ce,"href","https://huggingface.co/akiyamasho/AnimeBackgroundGAN-Shinkai#other-pre-trained-model-versions"),n(Ce,"rel","nofollow")},m(e,i){o(document.head,S),s(e,_o,i),s(e,H,i),o(H,B),o(B,At),v(de,At,null),o(H,Ua),o(H,It),o(It,Ca),s(e,bo,i),s(e,T,i),o(T,j),o(j,Pt),v(ue,Pt,null),o(T,Da),o(T,St),o(St,Ra),s(e,Eo,i),s(e,De,i),o(De,za),s(e,$o,i),v(pe,e,i),s(e,ko,i),s(e,Re,i),o(Re,Ba),s(e,Ao,i),s(e,ze,i),o(ze,Be),s(e,Io,i),s(e,je,i),o(je,ja),s(e,Po,i),s(e,qe,i),o(qe,Ve),s(e,So,i),s(e,x,i),o(x,q),o(q,Ht),v(me,Ht,null),o(x,qa),o(x,Tt),o(Tt,Va),s(e,Ho,i),s(e,V,i),o(V,Wa),o(V,ge),o(ge,xt),o(xt,Qa),o(V,Ja),s(e,To,i),v(ve,e,i),s(e,xo,i),s(e,L,i),o(L,W),o(W,Lt),v(we,Lt,null),o(L,Ka),o(L,Nt),o(Nt,Xa),s(e,Lo,i),s(e,Q,i),o(Q,Za),o(Q,ye),o(ye,el),o(Q,tl),s(e,No,i),s(e,b,i),o(b,ol),o(b,_e),o(_e,al),o(b,ll),o(b,be),o(be,rl),o(b,il),o(b,Ee),o(Ee,sl),o(b,nl),s(e,Oo,i),s(e,We,i),o(We,hl),s(e,Mo,i),s(e,N,i),o(N,J),o(J,Ot),v($e,Ot,null),o(N,fl),o(N,Mt),o(Mt,cl),s(e,Go,i),s(e,K,i),o(K,dl),o(K,ke),o(ke,ul),o(K,pl),s(e,Yo,i),s(e,Qe,i),o(Qe,Gt),o(Gt,ml),s(e,Fo,i),s(e,Je,i),o(Je,Ke),s(e,Uo,i),s(e,Ae,i),o(Ae,Yt),o(Yt,gl),s(e,Co,i),s(e,Xe,i),o(Xe,Ze),s(e,Do,i),s(e,O,i),o(O,Ft),o(Ft,Ie),o(Ie,vl),o(Ie,Ut),o(Ut,wl),o(Ie,yl),o(O,_l),o(O,Ct),o(Ct,Dt),o(Dt,bl),s(e,Ro,i),s(e,et,i),o(et,El),s(e,zo,i),s(e,tt,i),o(tt,ot),s(e,Bo,i),s(e,at,i),o(at,$l),s(e,jo,i),s(e,lt,i),o(lt,rt),s(e,qo,i),s(e,Pe,i),o(Pe,Rt),o(Rt,kl),s(e,Vo,i),s(e,it,i),o(it,Al),s(e,Wo,i),s(e,u,i),o(u,zt),o(zt,Il),o(u,Pl),o(u,M),o(M,Sl),o(M,Bt),o(Bt,Hl),o(M,Tl),o(M,jt),o(jt,xl),o(M,Ll),o(u,Nl),o(u,qt),o(qt,Ol),o(u,Ml),o(u,Vt),o(Vt,Gl),o(u,Yl),o(u,Wt),o(Wt,Fl),o(u,Ul),o(u,Qt),o(Qt,Cl),o(u,Dl),o(u,Jt),o(Jt,Rl),s(e,Qo,i),s(e,X,i),o(X,zl),o(X,st),o(st,Bl),o(X,jl),s(e,Jo,i),s(e,Se,i),o(Se,Kt),o(Kt,ql),s(e,Ko,i),s(e,E,i),o(E,Vl),o(E,Xt),o(Xt,Wl),o(E,Ql),o(E,Z),o(Z,Zt),o(Zt,Jl),o(Z,Kl),o(E,Xl),o(E,eo),o(eo,Zl),o(E,er),s(e,Xo,i),s(e,nt,i),o(nt,ht),s(e,Zo,i),s(e,A,i),o(A,tr),o(A,He),o(He,or),o(A,ar),o(A,Te),o(Te,to),o(to,lr),o(A,rr),s(e,ea,i),s(e,G,i),o(G,ee),o(ee,oo),v(xe,oo,null),o(G,ir),o(G,ao),o(ao,sr),s(e,ta,i),s(e,I,i),o(I,nr),o(I,ft),o(ft,hr),o(I,fr),o(I,lo),o(lo,cr),o(I,dr),s(e,oa,i),s(e,Y,i),o(Y,te),o(te,ro),v(Le,ro,null),o(Y,ur),o(Y,Ne),o(Ne,pr),o(Ne,io),o(io,mr),o(Ne,gr),s(e,aa,i),s(e,P,i),o(P,vr),o(P,so),o(so,wr),o(P,yr),o(P,Oe),o(Oe,_r),o(P,br),s(e,la,i),s(e,F,i),o(F,oe),o(oe,no),v(Me,no,null),o(F,Er),o(F,ho),o(ho,$r),s(e,ra,i),s(e,U,i),o(U,ae),o(ae,fo),v(Ge,fo,null),o(U,kr),o(U,co),o(co,Ar),s(e,ia,i),s(e,ct,i),o(ct,Ir),s(e,sa,i),s(e,dt,i),o(dt,ut),s(e,na,i),s(e,C,i),o(C,le),o(le,uo),v(Ye,uo,null),o(C,Pr),o(C,po),o(po,Sr),s(e,ha,i),s(e,re,i),o(re,Hr),o(re,pt),o(pt,Tr),o(re,xr),s(e,fa,i),s(e,mt,i),o(mt,Lr),s(e,ca,i),s(e,gt,i),o(gt,vt),s(e,da,i),s(e,ie,i),o(ie,Nr),o(ie,wt),o(wt,Or),o(ie,Mr),s(e,ua,i),s(e,D,i),o(D,se),o(se,mo),v(Fe,mo,null),o(D,Gr),o(D,go),o(go,Yr),s(e,pa,i),s(e,yt,i),o(yt,Fr),s(e,ma,i),s(e,R,i),o(R,ne),o(ne,vo),v(Ue,vo,null),o(R,Ur),o(R,wo),o(wo,Cr),s(e,ga,i),s(e,$,i),o($,Dr),o($,_t),o(_t,Rr),o($,zr),o($,Ce),o(Ce,Br),o($,jr),o($,yo),o(yo,qr),o($,Vr),va=!0},p:en,i(e){va||(w(de.$$.fragment,e),w(ue.$$.fragment,e),w(pe.$$.fragment,e),w(me.$$.fragment,e),w(ve.$$.fragment,e),w(we.$$.fragment,e),w($e.$$.fragment,e),w(xe.$$.fragment,e),w(Le.$$.fragment,e),w(Me.$$.fragment,e),w(Ge.$$.fragment,e),w(Ye.$$.fragment,e),w(Fe.$$.fragment,e),w(Ue.$$.fragment,e),va=!0)},o(e){y(de.$$.fragment,e),y(ue.$$.fragment,e),y(pe.$$.fragment,e),y(me.$$.fragment,e),y(ve.$$.fragment,e),y(we.$$.fragment,e),y($e.$$.fragment,e),y(xe.$$.fragment,e),y(Le.$$.fragment,e),y(Me.$$.fragment,e),y(Ge.$$.fragment,e),y(Ye.$$.fragment,e),y(Fe.$$.fragment,e),y(Ue.$$.fragment,e),va=!1},d(e){t(S),e&&t(_o),e&&t(H),_(de),e&&t(bo),e&&t(T),_(ue),e&&t(Eo),e&&t(De),e&&t($o),_(pe,e),e&&t(ko),e&&t(Re),e&&t(Ao),e&&t(ze),e&&t(Io),e&&t(je),e&&t(Po),e&&t(qe),e&&t(So),e&&t(x),_(me),e&&t(Ho),e&&t(V),e&&t(To),_(ve,e),e&&t(xo),e&&t(L),_(we),e&&t(Lo),e&&t(Q),e&&t(No),e&&t(b),e&&t(Oo),e&&t(We),e&&t(Mo),e&&t(N),_($e),e&&t(Go),e&&t(K),e&&t(Yo),e&&t(Qe),e&&t(Fo),e&&t(Je),e&&t(Uo),e&&t(Ae),e&&t(Co),e&&t(Xe),e&&t(Do),e&&t(O),e&&t(Ro),e&&t(et),e&&t(zo),e&&t(tt),e&&t(Bo),e&&t(at),e&&t(jo),e&&t(lt),e&&t(qo),e&&t(Pe),e&&t(Vo),e&&t(it),e&&t(Wo),e&&t(u),e&&t(Qo),e&&t(X),e&&t(Jo),e&&t(Se),e&&t(Ko),e&&t(E),e&&t(Xo),e&&t(nt),e&&t(Zo),e&&t(A),e&&t(ea),e&&t(G),_(xe),e&&t(ta),e&&t(I),e&&t(oa),e&&t(Y),_(Le),e&&t(aa),e&&t(P),e&&t(la),e&&t(F),_(Me),e&&t(ra),e&&t(U),_(Ge),e&&t(ia),e&&t(ct),e&&t(sa),e&&t(dt),e&&t(na),e&&t(C),_(Ye),e&&t(ha),e&&t(re),e&&t(fa),e&&t(mt),e&&t(ca),e&&t(gt),e&&t(da),e&&t(ie),e&&t(ua),e&&t(D),_(Fe),e&&t(pa),e&&t(yt),e&&t(ma),e&&t(R),_(Ue),e&&t(ga),e&&t($)}}}const an={local:"interacting-with-models-on-the-hub",sections:[{local:"accessing-models-for-local-use",sections:[{local:"can-i-access-models-programmatically",title:"Can I access models programmatically?"}],title:"Accessing models for local use"},{local:"uploading-models",sections:[{local:"using-the-web-interface",title:"Using the web interface"},{local:"using-git",title:"Using Git"},{local:"using-the-huggingfacehub-client-library",title:"Using the `huggingface_hub` client library"}],title:"Uploading models"},{local:"faq",sections:[{local:"how-can-i-see-what-dataset-was-used-to-train-the-model",title:"How can I see what dataset was used to train the model?"},{local:"how-can-i-see-an-example-of-the-model-in-action",title:"How can I see an example of the model in action?"},{local:"how-do-i-upload-an-update-new-version-of-the-model",title:"How do I upload an update / new version of the model?"},{local:"what-if-i-have-a-different-checkpoint-of-the-model-trained-on-a-different-dataset",title:"What if I have a different checkpoint of the model trained on a different dataset?"}],title:"FAQ"}],title:"Interacting with models on the hub"};function ln(Qr){return tn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class hn extends Js{constructor(S){super();Ks(this,S,ln,on,Xs,{})}}export{hn as default,an as metadata};
