import{S as Gn,i as Un,s as Jn,e as l,k as f,w as b,t as r,N as Kn,c as s,d as a,m as h,a as o,x,h as n,b as i,P as Qn,G as e,g as p,y as $,L as Vn,q as k,o as j,B as A,v as Xn}from"../chunks/vendor-hf-doc-builder.js";import{I as ft}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as ht}from"../chunks/CodeBlock-hf-doc-builder.js";function Zn(ar){let O,ma,D,W,dt,ae,wl,mt,vl,ua,S,M,ut,le,_l,gt,El,ga,Ke,yl,wa,Qe,bl,va,v,R,se,xl,$l,oe,kl,jl,Al,re,ne,Cl,Pl,ie,Il,Ol,z,ce,Dl,Sl,pe,ql,Hl,Tl,F,fe,Ll,Nl,he,Wl,Ml,_a,Y,Rl,de,zl,Fl,Ea,q,B,wt,me,Yl,vt,Bl,ya,u,Gl,_t,Ul,Jl,Et,Kl,Ql,yt,Vl,Xl,bt,Zl,es,xt,ts,as,ba,g,ls,$t,ss,os,Ve,rs,ns,kt,is,cs,jt,ps,fs,xa,w,hs,At,ds,ms,Ct,us,gs,Pt,ws,vs,ue,_s,Es,$a,C,ys,It,bs,xs,Xe,$s,ks,ka,H,G,Ot,ge,js,Dt,As,ja,Ze,Cs,Aa,we,Ca,_,Ps,St,Is,Os,qt,Ds,Ss,Ht,qs,Hs,Pa,et,tt,lr,Ia,ve,Oa,E,Ts,_e,Ls,Ns,Tt,Ws,Ms,Lt,Rs,zs,Da,at,Fs,Sa,Ee,qa,lt,Ys,Ha,ye,Ta,U,Bs,be,Gs,Us,La,T,J,Nt,xe,Js,Wt,Ks,Na,K,Qs,$e,Vs,Xs,Wa,st,Zs,Ma,d,ke,Mt,eo,to,je,Rt,ao,lo,Ae,zt,so,oo,Ce,Ft,ro,no,Pe,Yt,io,co,Ie,Bt,po,fo,Oe,Gt,ho,mo,De,Ut,uo,go,Se,Jt,wo,vo,qe,Kt,_o,Eo,He,Qt,yo,bo,Te,Vt,xo,$o,Le,Xt,ko,jo,Ne,Zt,Ao,Co,We,ea,Po,Io,Me,ta,Oo,Do,L,aa,So,qo,la,Ho,To,Re,sa,Lo,No,ze,oa,Wo,Mo,Fe,ra,Ro,zo,Ye,na,Fo,Yo,ot,ia,Bo,Ra,N,Q,ca,Be,Go,pa,Uo,za,V,Jo,Ge,Ko,Qo,Fa,rt,Vo,Ya,Ue,Ba,nt,Xo,Ga,Je,Ua,X,Zo,it,er,tr,Ja;return ae=new ft({}),le=new ft({}),me=new ft({}),ge=new ft({}),we=new ht({props:{code:`widget:
- text: "Jens Peter Hansen kommer fra Danmark"`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Jens Peter Hansen kommer fra Danmark&quot;</span>`}}),ve=new ht({props:{code:`widget:
- text: "Is this review positive or negative? Review: Best cast iron skillet you will ever buy."
  example_title: "Sentiment analysis"
- text: "Barack Obama nominated Hilary Clinton as his secretary of state on Monday. He chose her because she had ..."
  example_title: "Coreference resolution"
- text: "On a shelf, there are five books: a gray book, a red book, a purple book, a blue book, and a black book ..."
  example_title: "Logic puzzles"
- text: "The two men running to become New York City's next mayor will face off in their first debate Wednesday night ..."
  example_title: "Reading comprehension"`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Is this review positive or negative? Review: Best cast iron skillet you will ever buy.&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Sentiment analysis&quot;</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Barack Obama nominated Hilary Clinton as his secretary of state on Monday. He chose her because she had ...&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Coreference resolution&quot;</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;On a shelf, there are five books: a gray book, a red book, a purple book, a blue book, and a black book ...&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Logic puzzles&quot;</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;The two men running to become New York City&#x27;s next mayor will face off in their first debate Wednesday night ...&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Reading comprehension&quot;</span>`}}),Ee=new ht({props:{code:`widget:
- src: https://example.org/somewhere/speech_samples/sample1.flac
  example_title: Speech sample 1
- src: https://example.org/somewhere/speech_samples/sample2.flac
  example_title: Speech sample 2`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">src:</span> <span class="hljs-string">https://example.org/somewhere/speech_samples/sample1.flac</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">Speech</span> <span class="hljs-string">sample</span> <span class="hljs-number">1</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">src:</span> <span class="hljs-string">https://example.org/somewhere/speech_samples/sample2.flac</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">Speech</span> <span class="hljs-string">sample</span> <span class="hljs-number">2</span>`}}),ye=new ht({props:{code:`widget:
- src: https://huggingface.co/username/model_repo/resolve/main/sample1.flac
  example_title: Custom Speech Sample 1`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">src:</span> <span class="hljs-string">https://huggingface.co/username/model_repo/resolve/main/sample1.flac</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">Custom</span> <span class="hljs-string">Speech</span> <span class="hljs-string">Sample</span> <span class="hljs-number">1</span>`}}),xe=new ft({}),Be=new ft({}),Ue=new ht({props:{code:`inference:
  parameters:
    aggregation_strategy: "none"`,highlighted:`<span class="hljs-attr">inference:</span>
  <span class="hljs-attr">parameters:</span>
    <span class="hljs-attr">aggregation_strategy:</span> <span class="hljs-string">&quot;none&quot;</span>`}}),Je=new ht({props:{code:`inference:
  parameters:
    temperature: 0.7`,highlighted:`<span class="hljs-attr">inference:</span>
  <span class="hljs-attr">parameters:</span>
    <span class="hljs-attr">temperature:</span> <span class="hljs-number">0.7</span>`}}),{c(){O=l("meta"),ma=f(),D=l("h1"),W=l("a"),dt=l("span"),b(ae.$$.fragment),wl=f(),mt=l("span"),vl=r("Widgets"),ua=f(),S=l("h2"),M=l("a"),ut=l("span"),b(le.$$.fragment),_l=f(),gt=l("span"),El=r("What's a widget?"),ga=f(),Ke=l("p"),yl=r("Many model repos have a widget that allows anyone to run inferences directly in the browser!"),wa=f(),Qe=l("p"),bl=r("Here are some examples:"),va=f(),v=l("ul"),R=l("li"),se=l("a"),xl=r("Named Entity Recognition"),$l=r(" using "),oe=l("a"),kl=r("spaCy"),jl=r("."),Al=f(),re=l("li"),ne=l("a"),Cl=r("Image Classification"),Pl=r(" using "),ie=l("a"),Il=r("\u{1F917} Transformers"),Ol=f(),z=l("li"),ce=l("a"),Dl=r("Text to Speech"),Sl=r(" using "),pe=l("a"),ql=r("ESPnet"),Hl=r("."),Tl=f(),F=l("li"),fe=l("a"),Ll=r("Sentence Similarity"),Nl=r(" using "),he=l("a"),Wl=r("Sentence Transformers"),Ml=r("."),_a=f(),Y=l("p"),Rl=r("You can try out all the widgets "),de=l("a"),zl=r("here"),Fl=r("."),Ea=f(),q=l("h2"),B=l("a"),wt=l("span"),b(me.$$.fragment),Yl=f(),vt=l("span"),Bl=r("Creating a Widget"),ya=f(),u=l("p"),Gl=r("A widget is automatically created for your model when you upload it to the Hub. To determine which pipeline and widget to display ("),_t=l("code"),Ul=r("text-classification"),Jl=r(", "),Et=l("code"),Kl=r("token-classification"),Ql=r(", "),yt=l("code"),Vl=r("translation"),Xl=r(", etc.), we analyze information in the repo, such as the metadata provided in the model card and configuration files. This information is mapped to a single "),bt=l("code"),Zl=r("pipeline_tag"),es=r(". We choose to expose "),xt=l("strong"),ts=r("only one"),as=r(" widget per model for simplicity."),ba=f(),g=l("p"),ls=r("For most use cases, we determine the model type from the tags. For example, if there is "),$t=l("code"),ss=r("tag: text-classification"),os=r(" in the "),Ve=l("a"),rs=r("model card metadata"),ns=r(", the inferred "),kt=l("code"),is=r("pipeline_tag"),cs=r(" will be "),jt=l("code"),ps=r("text-classification"),fs=r("."),xa=f(),w=l("p"),hs=r("However, for \u{1F917}  Transformers, the model type is determined automatically from "),At=l("code"),ds=r("config.json"),ms=r(". The architecture can determine the type: for example, "),Ct=l("code"),us=r("AutoModelForTokenClassification"),gs=r(" corresponds to "),Pt=l("code"),ws=r("token-classification"),vs=r(". If you\u2019re interested in this, you can see pseudo-code in "),ue=l("a"),_s=r("this gist"),Es=r("."),$a=f(),C=l("p"),ys=r("You can always manually override your pipeline type with "),It=l("code"),bs=r("pipeline_tag: xxx"),xs=r(" in your "),Xe=l("a"),$s=r("model card metadata"),ks=r("."),ka=f(),H=l("h3"),G=l("a"),Ot=l("span"),b(ge.$$.fragment),js=f(),Dt=l("span"),As=r("How can I control my model's widget example input?"),ja=f(),Ze=l("p"),Cs=r("You can specify the widget input in the model card metadata section:"),Aa=f(),b(we.$$.fragment),Ca=f(),_=l("p"),Ps=r("You can provide more than one example input. In the examples dropdown menu of the widget, they will appear as "),St=l("code"),Is=r("Example 1"),Os=r(", "),qt=l("code"),Ds=r("Example 2"),Ss=r(", etc. Optionally, you can supply "),Ht=l("code"),qs=r("example_title"),Hs=r(" as well."),Pa=f(),et=l("p"),tt=l("img"),Ia=f(),b(ve.$$.fragment),Oa=f(),E=l("p"),Ts=r("Moreover, you can specify non-text example inputs in the model card metadata. Refer "),_e=l("a"),Ls=r("here"),Ns=r(" for a complete list of sample input formats for all widget types. For vision & audio widget types, provide example inputs with "),Tt=l("code"),Ws=r("src"),Ms=r(" rather than "),Lt=l("code"),Rs=r("text"),zs=r("."),Da=f(),at=l("p"),Fs=r("For example, allow users to choose from two sample audio files for automatic speech recognition tasks by:"),Sa=f(),b(Ee.$$.fragment),qa=f(),lt=l("p"),Ys=r(`Note that you can also include example files in your model repository and use
them as:`),Ha=f(),b(ye.$$.fragment),Ta=f(),U=l("p"),Bs=r("We provide example inputs for some languages and most widget types in "),be=l("a"),Gs=r("the DefaultWidget.ts file"),Us=r(". If some examples are missing, we welcome PRs from the community to add them!"),La=f(),T=l("h2"),J=l("a"),Nt=l("span"),b(xe.$$.fragment),Js=f(),Wt=l("span"),Ks=r("What are all the possible task/widget types?"),Na=f(),K=l("p"),Qs=r("You can find all the supported tasks "),$e=l("a"),Vs=r("here"),Xs=r("."),Wa=f(),st=l("p"),Zs=r("Here are some links to examples:"),Ma=f(),d=l("ul"),ke=l("li"),Mt=l("code"),eo=r("text-classification"),to=r(", for instance "),je=l("a"),Rt=l("code"),ao=r("roberta-large-mnli"),lo=f(),Ae=l("li"),zt=l("code"),so=r("token-classification"),oo=r(", for instance "),Ce=l("a"),Ft=l("code"),ro=r("dbmdz/bert-large-cased-finetuned-conll03-english"),no=f(),Pe=l("li"),Yt=l("code"),io=r("question-answering"),co=r(", for instance "),Ie=l("a"),Bt=l("code"),po=r("distilbert-base-uncased-distilled-squad"),fo=f(),Oe=l("li"),Gt=l("code"),ho=r("translation"),mo=r(", for instance "),De=l("a"),Ut=l("code"),uo=r("t5-base"),go=f(),Se=l("li"),Jt=l("code"),wo=r("summarization"),vo=r(", for instance "),qe=l("a"),Kt=l("code"),_o=r("facebook/bart-large-cnn"),Eo=f(),He=l("li"),Qt=l("code"),yo=r("conversational"),bo=r(", for instance "),Te=l("a"),Vt=l("code"),xo=r("facebook/blenderbot-400M-distill"),$o=f(),Le=l("li"),Xt=l("code"),ko=r("text-generation"),jo=r(", for instance "),Ne=l("a"),Zt=l("code"),Ao=r("gpt2"),Co=f(),We=l("li"),ea=l("code"),Po=r("fill-mask"),Io=r(", for instance "),Me=l("a"),ta=l("code"),Oo=r("distilroberta-base"),Do=f(),L=l("li"),aa=l("code"),So=r("zero-shot-classification"),qo=r(" (implemented on top of a nli "),la=l("code"),Ho=r("text-classification"),To=r(" model), for instance "),Re=l("a"),sa=l("code"),Lo=r("facebook/bart-large-mnli"),No=f(),ze=l("li"),oa=l("code"),Wo=r("table-question-answering"),Mo=r(", for instance "),Fe=l("a"),ra=l("code"),Ro=r("google/tapas-base-finetuned-wtq"),zo=f(),Ye=l("li"),na=l("code"),Fo=r("sentence-similarity"),Yo=r(", for instance "),ot=l("a"),ia=l("code"),Bo=r("osanseviero/full-sentence-distillroberta2"),Ra=f(),N=l("h2"),Q=l("a"),ca=l("span"),b(Be.$$.fragment),Go=f(),pa=l("span"),Uo=r("How can I control my model's widget Inference API parameters?"),za=f(),V=l("p"),Jo=r("Generally, the Inference API for a model uses the default pipeline settings associated with each task. But if you\u2019d like to change the pipeline\u2019s default settings and specify additional inference parameters, you can configure the parameters directly through the model card metadata. Refer "),Ge=l("a"),Ko=r("here"),Qo=r(" for some of the most commonly used parameters associated with each task."),Fa=f(),rt=l("p"),Vo=r("For example, if you want to specify an aggregation strategy for a NER task in the widget:"),Ya=f(),b(Ue.$$.fragment),Ba=f(),nt=l("p"),Xo=r("Or if you\u2019d like to change the temperature for a summarization task in the widget:"),Ga=f(),b(Je.$$.fragment),Ua=f(),X=l("p"),Zo=r("The Inference API allows you to send HTTP requests to models in the Hugging Face Hub, and it\u2019s 2x to 10x faster than the widgets! \u26A1\u26A1 Learn more about it by reading the "),it=l("a"),er=r("Inference API documentation"),tr=r("."),this.h()},l(t){const c=Kn('[data-svelte="svelte-1phssyn"]',document.head);O=s(c,"META",{name:!0,content:!0}),c.forEach(a),ma=h(t),D=s(t,"H1",{class:!0});var Ka=o(D);W=s(Ka,"A",{id:!0,class:!0,href:!0});var sr=o(W);dt=s(sr,"SPAN",{});var or=o(dt);x(ae.$$.fragment,or),or.forEach(a),sr.forEach(a),wl=h(Ka),mt=s(Ka,"SPAN",{});var rr=o(mt);vl=n(rr,"Widgets"),rr.forEach(a),Ka.forEach(a),ua=h(t),S=s(t,"H2",{class:!0});var Qa=o(S);M=s(Qa,"A",{id:!0,class:!0,href:!0});var nr=o(M);ut=s(nr,"SPAN",{});var ir=o(ut);x(le.$$.fragment,ir),ir.forEach(a),nr.forEach(a),_l=h(Qa),gt=s(Qa,"SPAN",{});var cr=o(gt);El=n(cr,"What's a widget?"),cr.forEach(a),Qa.forEach(a),ga=h(t),Ke=s(t,"P",{});var pr=o(Ke);yl=n(pr,"Many model repos have a widget that allows anyone to run inferences directly in the browser!"),pr.forEach(a),wa=h(t),Qe=s(t,"P",{});var fr=o(Qe);bl=n(fr,"Here are some examples:"),fr.forEach(a),va=h(t),v=s(t,"UL",{});var Z=o(v);R=s(Z,"LI",{});var fa=o(R);se=s(fa,"A",{href:!0,rel:!0});var hr=o(se);xl=n(hr,"Named Entity Recognition"),hr.forEach(a),$l=n(fa," using "),oe=s(fa,"A",{href:!0,rel:!0});var dr=o(oe);kl=n(dr,"spaCy"),dr.forEach(a),jl=n(fa,"."),fa.forEach(a),Al=h(Z),re=s(Z,"LI",{});var Va=o(re);ne=s(Va,"A",{href:!0,rel:!0});var mr=o(ne);Cl=n(mr,"Image Classification"),mr.forEach(a),Pl=n(Va," using "),ie=s(Va,"A",{href:!0,rel:!0});var ur=o(ie);Il=n(ur,"\u{1F917} Transformers"),ur.forEach(a),Va.forEach(a),Ol=h(Z),z=s(Z,"LI",{});var ha=o(z);ce=s(ha,"A",{href:!0,rel:!0});var gr=o(ce);Dl=n(gr,"Text to Speech"),gr.forEach(a),Sl=n(ha," using "),pe=s(ha,"A",{href:!0,rel:!0});var wr=o(pe);ql=n(wr,"ESPnet"),wr.forEach(a),Hl=n(ha,"."),ha.forEach(a),Tl=h(Z),F=s(Z,"LI",{});var da=o(F);fe=s(da,"A",{href:!0,rel:!0});var vr=o(fe);Ll=n(vr,"Sentence Similarity"),vr.forEach(a),Nl=n(da," using "),he=s(da,"A",{href:!0,rel:!0});var _r=o(he);Wl=n(_r,"Sentence Transformers"),_r.forEach(a),Ml=n(da,"."),da.forEach(a),Z.forEach(a),_a=h(t),Y=s(t,"P",{});var Xa=o(Y);Rl=n(Xa,"You can try out all the widgets "),de=s(Xa,"A",{href:!0,rel:!0});var Er=o(de);zl=n(Er,"here"),Er.forEach(a),Fl=n(Xa,"."),Xa.forEach(a),Ea=h(t),q=s(t,"H2",{class:!0});var Za=o(q);B=s(Za,"A",{id:!0,class:!0,href:!0});var yr=o(B);wt=s(yr,"SPAN",{});var br=o(wt);x(me.$$.fragment,br),br.forEach(a),yr.forEach(a),Yl=h(Za),vt=s(Za,"SPAN",{});var xr=o(vt);Bl=n(xr,"Creating a Widget"),xr.forEach(a),Za.forEach(a),ya=h(t),u=s(t,"P",{});var y=o(u);Gl=n(y,"A widget is automatically created for your model when you upload it to the Hub. To determine which pipeline and widget to display ("),_t=s(y,"CODE",{});var $r=o(_t);Ul=n($r,"text-classification"),$r.forEach(a),Jl=n(y,", "),Et=s(y,"CODE",{});var kr=o(Et);Kl=n(kr,"token-classification"),kr.forEach(a),Ql=n(y,", "),yt=s(y,"CODE",{});var jr=o(yt);Vl=n(jr,"translation"),jr.forEach(a),Xl=n(y,", etc.), we analyze information in the repo, such as the metadata provided in the model card and configuration files. This information is mapped to a single "),bt=s(y,"CODE",{});var Ar=o(bt);Zl=n(Ar,"pipeline_tag"),Ar.forEach(a),es=n(y,". We choose to expose "),xt=s(y,"STRONG",{});var Cr=o(xt);ts=n(Cr,"only one"),Cr.forEach(a),as=n(y," widget per model for simplicity."),y.forEach(a),ba=h(t),g=s(t,"P",{});var P=o(g);ls=n(P,"For most use cases, we determine the model type from the tags. For example, if there is "),$t=s(P,"CODE",{});var Pr=o($t);ss=n(Pr,"tag: text-classification"),Pr.forEach(a),os=n(P," in the "),Ve=s(P,"A",{href:!0});var Ir=o(Ve);rs=n(Ir,"model card metadata"),Ir.forEach(a),ns=n(P,", the inferred "),kt=s(P,"CODE",{});var Or=o(kt);is=n(Or,"pipeline_tag"),Or.forEach(a),cs=n(P," will be "),jt=s(P,"CODE",{});var Dr=o(jt);ps=n(Dr,"text-classification"),Dr.forEach(a),fs=n(P,"."),P.forEach(a),xa=h(t),w=s(t,"P",{});var I=o(w);hs=n(I,"However, for \u{1F917}  Transformers, the model type is determined automatically from "),At=s(I,"CODE",{});var Sr=o(At);ds=n(Sr,"config.json"),Sr.forEach(a),ms=n(I,". The architecture can determine the type: for example, "),Ct=s(I,"CODE",{});var qr=o(Ct);us=n(qr,"AutoModelForTokenClassification"),qr.forEach(a),gs=n(I," corresponds to "),Pt=s(I,"CODE",{});var Hr=o(Pt);ws=n(Hr,"token-classification"),Hr.forEach(a),vs=n(I,". If you\u2019re interested in this, you can see pseudo-code in "),ue=s(I,"A",{href:!0,rel:!0});var Tr=o(ue);_s=n(Tr,"this gist"),Tr.forEach(a),Es=n(I,"."),I.forEach(a),$a=h(t),C=s(t,"P",{});var ct=o(C);ys=n(ct,"You can always manually override your pipeline type with "),It=s(ct,"CODE",{});var Lr=o(It);bs=n(Lr,"pipeline_tag: xxx"),Lr.forEach(a),xs=n(ct," in your "),Xe=s(ct,"A",{href:!0});var Nr=o(Xe);$s=n(Nr,"model card metadata"),Nr.forEach(a),ks=n(ct,"."),ct.forEach(a),ka=h(t),H=s(t,"H3",{class:!0});var el=o(H);G=s(el,"A",{id:!0,class:!0,href:!0});var Wr=o(G);Ot=s(Wr,"SPAN",{});var Mr=o(Ot);x(ge.$$.fragment,Mr),Mr.forEach(a),Wr.forEach(a),js=h(el),Dt=s(el,"SPAN",{});var Rr=o(Dt);As=n(Rr,"How can I control my model's widget example input?"),Rr.forEach(a),el.forEach(a),ja=h(t),Ze=s(t,"P",{});var zr=o(Ze);Cs=n(zr,"You can specify the widget input in the model card metadata section:"),zr.forEach(a),Aa=h(t),x(we.$$.fragment,t),Ca=h(t),_=s(t,"P",{});var ee=o(_);Ps=n(ee,"You can provide more than one example input. In the examples dropdown menu of the widget, they will appear as "),St=s(ee,"CODE",{});var Fr=o(St);Is=n(Fr,"Example 1"),Fr.forEach(a),Os=n(ee,", "),qt=s(ee,"CODE",{});var Yr=o(qt);Ds=n(Yr,"Example 2"),Yr.forEach(a),Ss=n(ee,", etc. Optionally, you can supply "),Ht=s(ee,"CODE",{});var Br=o(Ht);qs=n(Br,"example_title"),Br.forEach(a),Hs=n(ee," as well."),ee.forEach(a),Pa=h(t),et=s(t,"P",{});var Gr=o(et);tt=s(Gr,"IMG",{src:!0,alt:!0}),Gr.forEach(a),Ia=h(t),x(ve.$$.fragment,t),Oa=h(t),E=s(t,"P",{});var te=o(E);Ts=n(te,"Moreover, you can specify non-text example inputs in the model card metadata. Refer "),_e=s(te,"A",{href:!0,rel:!0});var Ur=o(_e);Ls=n(Ur,"here"),Ur.forEach(a),Ns=n(te," for a complete list of sample input formats for all widget types. For vision & audio widget types, provide example inputs with "),Tt=s(te,"CODE",{});var Jr=o(Tt);Ws=n(Jr,"src"),Jr.forEach(a),Ms=n(te," rather than "),Lt=s(te,"CODE",{});var Kr=o(Lt);Rs=n(Kr,"text"),Kr.forEach(a),zs=n(te,"."),te.forEach(a),Da=h(t),at=s(t,"P",{});var Qr=o(at);Fs=n(Qr,"For example, allow users to choose from two sample audio files for automatic speech recognition tasks by:"),Qr.forEach(a),Sa=h(t),x(Ee.$$.fragment,t),qa=h(t),lt=s(t,"P",{});var Vr=o(lt);Ys=n(Vr,`Note that you can also include example files in your model repository and use
them as:`),Vr.forEach(a),Ha=h(t),x(ye.$$.fragment,t),Ta=h(t),U=s(t,"P",{});var tl=o(U);Bs=n(tl,"We provide example inputs for some languages and most widget types in "),be=s(tl,"A",{href:!0,rel:!0});var Xr=o(be);Gs=n(Xr,"the DefaultWidget.ts file"),Xr.forEach(a),Us=n(tl,". If some examples are missing, we welcome PRs from the community to add them!"),tl.forEach(a),La=h(t),T=s(t,"H2",{class:!0});var al=o(T);J=s(al,"A",{id:!0,class:!0,href:!0});var Zr=o(J);Nt=s(Zr,"SPAN",{});var en=o(Nt);x(xe.$$.fragment,en),en.forEach(a),Zr.forEach(a),Js=h(al),Wt=s(al,"SPAN",{});var tn=o(Wt);Ks=n(tn,"What are all the possible task/widget types?"),tn.forEach(a),al.forEach(a),Na=h(t),K=s(t,"P",{});var ll=o(K);Qs=n(ll,"You can find all the supported tasks "),$e=s(ll,"A",{href:!0,rel:!0});var an=o($e);Vs=n(an,"here"),an.forEach(a),Xs=n(ll,"."),ll.forEach(a),Wa=h(t),st=s(t,"P",{});var ln=o(st);Zs=n(ln,"Here are some links to examples:"),ln.forEach(a),Ma=h(t),d=s(t,"UL",{});var m=o(d);ke=s(m,"LI",{});var sl=o(ke);Mt=s(sl,"CODE",{});var sn=o(Mt);eo=n(sn,"text-classification"),sn.forEach(a),to=n(sl,", for instance "),je=s(sl,"A",{href:!0,rel:!0});var on=o(je);Rt=s(on,"CODE",{});var rn=o(Rt);ao=n(rn,"roberta-large-mnli"),rn.forEach(a),on.forEach(a),sl.forEach(a),lo=h(m),Ae=s(m,"LI",{});var ol=o(Ae);zt=s(ol,"CODE",{});var nn=o(zt);so=n(nn,"token-classification"),nn.forEach(a),oo=n(ol,", for instance "),Ce=s(ol,"A",{href:!0,rel:!0});var cn=o(Ce);Ft=s(cn,"CODE",{});var pn=o(Ft);ro=n(pn,"dbmdz/bert-large-cased-finetuned-conll03-english"),pn.forEach(a),cn.forEach(a),ol.forEach(a),no=h(m),Pe=s(m,"LI",{});var rl=o(Pe);Yt=s(rl,"CODE",{});var fn=o(Yt);io=n(fn,"question-answering"),fn.forEach(a),co=n(rl,", for instance "),Ie=s(rl,"A",{href:!0,rel:!0});var hn=o(Ie);Bt=s(hn,"CODE",{});var dn=o(Bt);po=n(dn,"distilbert-base-uncased-distilled-squad"),dn.forEach(a),hn.forEach(a),rl.forEach(a),fo=h(m),Oe=s(m,"LI",{});var nl=o(Oe);Gt=s(nl,"CODE",{});var mn=o(Gt);ho=n(mn,"translation"),mn.forEach(a),mo=n(nl,", for instance "),De=s(nl,"A",{href:!0,rel:!0});var un=o(De);Ut=s(un,"CODE",{});var gn=o(Ut);uo=n(gn,"t5-base"),gn.forEach(a),un.forEach(a),nl.forEach(a),go=h(m),Se=s(m,"LI",{});var il=o(Se);Jt=s(il,"CODE",{});var wn=o(Jt);wo=n(wn,"summarization"),wn.forEach(a),vo=n(il,", for instance "),qe=s(il,"A",{href:!0,rel:!0});var vn=o(qe);Kt=s(vn,"CODE",{});var _n=o(Kt);_o=n(_n,"facebook/bart-large-cnn"),_n.forEach(a),vn.forEach(a),il.forEach(a),Eo=h(m),He=s(m,"LI",{});var cl=o(He);Qt=s(cl,"CODE",{});var En=o(Qt);yo=n(En,"conversational"),En.forEach(a),bo=n(cl,", for instance "),Te=s(cl,"A",{href:!0,rel:!0});var yn=o(Te);Vt=s(yn,"CODE",{});var bn=o(Vt);xo=n(bn,"facebook/blenderbot-400M-distill"),bn.forEach(a),yn.forEach(a),cl.forEach(a),$o=h(m),Le=s(m,"LI",{});var pl=o(Le);Xt=s(pl,"CODE",{});var xn=o(Xt);ko=n(xn,"text-generation"),xn.forEach(a),jo=n(pl,", for instance "),Ne=s(pl,"A",{href:!0,rel:!0});var $n=o(Ne);Zt=s($n,"CODE",{});var kn=o(Zt);Ao=n(kn,"gpt2"),kn.forEach(a),$n.forEach(a),pl.forEach(a),Co=h(m),We=s(m,"LI",{});var fl=o(We);ea=s(fl,"CODE",{});var jn=o(ea);Po=n(jn,"fill-mask"),jn.forEach(a),Io=n(fl,", for instance "),Me=s(fl,"A",{href:!0,rel:!0});var An=o(Me);ta=s(An,"CODE",{});var Cn=o(ta);Oo=n(Cn,"distilroberta-base"),Cn.forEach(a),An.forEach(a),fl.forEach(a),Do=h(m),L=s(m,"LI",{});var pt=o(L);aa=s(pt,"CODE",{});var Pn=o(aa);So=n(Pn,"zero-shot-classification"),Pn.forEach(a),qo=n(pt," (implemented on top of a nli "),la=s(pt,"CODE",{});var In=o(la);Ho=n(In,"text-classification"),In.forEach(a),To=n(pt," model), for instance "),Re=s(pt,"A",{href:!0,rel:!0});var On=o(Re);sa=s(On,"CODE",{});var Dn=o(sa);Lo=n(Dn,"facebook/bart-large-mnli"),Dn.forEach(a),On.forEach(a),pt.forEach(a),No=h(m),ze=s(m,"LI",{});var hl=o(ze);oa=s(hl,"CODE",{});var Sn=o(oa);Wo=n(Sn,"table-question-answering"),Sn.forEach(a),Mo=n(hl,", for instance "),Fe=s(hl,"A",{href:!0,rel:!0});var qn=o(Fe);ra=s(qn,"CODE",{});var Hn=o(ra);Ro=n(Hn,"google/tapas-base-finetuned-wtq"),Hn.forEach(a),qn.forEach(a),hl.forEach(a),zo=h(m),Ye=s(m,"LI",{});var dl=o(Ye);na=s(dl,"CODE",{});var Tn=o(na);Fo=n(Tn,"sentence-similarity"),Tn.forEach(a),Yo=n(dl,", for instance "),ot=s(dl,"A",{href:!0});var Ln=o(ot);ia=s(Ln,"CODE",{});var Nn=o(ia);Bo=n(Nn,"osanseviero/full-sentence-distillroberta2"),Nn.forEach(a),Ln.forEach(a),dl.forEach(a),m.forEach(a),Ra=h(t),N=s(t,"H2",{class:!0});var ml=o(N);Q=s(ml,"A",{id:!0,class:!0,href:!0});var Wn=o(Q);ca=s(Wn,"SPAN",{});var Mn=o(ca);x(Be.$$.fragment,Mn),Mn.forEach(a),Wn.forEach(a),Go=h(ml),pa=s(ml,"SPAN",{});var Rn=o(pa);Uo=n(Rn,"How can I control my model's widget Inference API parameters?"),Rn.forEach(a),ml.forEach(a),za=h(t),V=s(t,"P",{});var ul=o(V);Jo=n(ul,"Generally, the Inference API for a model uses the default pipeline settings associated with each task. But if you\u2019d like to change the pipeline\u2019s default settings and specify additional inference parameters, you can configure the parameters directly through the model card metadata. Refer "),Ge=s(ul,"A",{href:!0,rel:!0});var zn=o(Ge);Ko=n(zn,"here"),zn.forEach(a),Qo=n(ul," for some of the most commonly used parameters associated with each task."),ul.forEach(a),Fa=h(t),rt=s(t,"P",{});var Fn=o(rt);Vo=n(Fn,"For example, if you want to specify an aggregation strategy for a NER task in the widget:"),Fn.forEach(a),Ya=h(t),x(Ue.$$.fragment,t),Ba=h(t),nt=s(t,"P",{});var Yn=o(nt);Xo=n(Yn,"Or if you\u2019d like to change the temperature for a summarization task in the widget:"),Yn.forEach(a),Ga=h(t),x(Je.$$.fragment,t),Ua=h(t),X=s(t,"P",{});var gl=o(X);Zo=n(gl,"The Inference API allows you to send HTTP requests to models in the Hugging Face Hub, and it\u2019s 2x to 10x faster than the widgets! \u26A1\u26A1 Learn more about it by reading the "),it=s(gl,"A",{href:!0});var Bn=o(it);er=n(Bn,"Inference API documentation"),Bn.forEach(a),tr=n(gl,"."),gl.forEach(a),this.h()},h(){i(O,"name","hf:doc:metadata"),i(O,"content",JSON.stringify(ei)),i(W,"id","widgets"),i(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(W,"href","#widgets"),i(D,"class","relative group"),i(M,"id","whats-a-widget"),i(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(M,"href","#whats-a-widget"),i(S,"class","relative group"),i(se,"href","https://huggingface.co/spacy/en_core_web_sm?text=My+name+is+Sarah+and+I+live+in+London"),i(se,"rel","nofollow"),i(oe,"href","https://spacy.io/"),i(oe,"rel","nofollow"),i(ne,"href","https://huggingface.co/google/vit-base-patch16-224"),i(ne,"rel","nofollow"),i(ie,"href","https://github.com/huggingface/transformers"),i(ie,"rel","nofollow"),i(ce,"href","https://huggingface.co/julien-c/ljspeech_tts_train_tacotron2_raw_phn_tacotron_g2p_en_no_space_train"),i(ce,"rel","nofollow"),i(pe,"href","https://github.com/espnet/espnet"),i(pe,"rel","nofollow"),i(fe,"href","https://huggingface.co/osanseviero/full-sentence-distillroberta3"),i(fe,"rel","nofollow"),i(he,"href","https://github.com/UKPLab/sentence-transformers"),i(he,"rel","nofollow"),i(de,"href","https://huggingface-widgets.netlify.app/"),i(de,"rel","nofollow"),i(B,"id","creating-a-widget"),i(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(B,"href","#creating-a-widget"),i(q,"class","relative group"),i(Ve,"href","./models-cards"),i(ue,"href","https://gist.github.com/julien-c/857ba86a6c6a895ecd90e7f7cab48046"),i(ue,"rel","nofollow"),i(Xe,"href","./models-cards"),i(G,"id","how-can-i-control-my-models-widget-example-input"),i(G,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(G,"href","#how-can-i-control-my-models-widget-example-input"),i(H,"class","relative group"),Qn(tt.src,lr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/widget_input_examples.gif")||i(tt,"src",lr),i(tt,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/widget_input_examples.gif"),i(_e,"href","https://github.com/huggingface/hub-docs/blob/main/docs/hub/input-examples.md"),i(_e,"rel","nofollow"),i(be,"href","https://github.com/huggingface/hub-docs/blob/master/js/src/lib/interfaces/DefaultWidget.ts"),i(be,"rel","nofollow"),i(J,"id","what-are-all-the-possible-taskwidget-types"),i(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(J,"href","#what-are-all-the-possible-taskwidget-types"),i(T,"class","relative group"),i($e,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Types.ts"),i($e,"rel","nofollow"),i(je,"href","https://huggingface.co/roberta-large-mnli"),i(je,"rel","nofollow"),i(Ce,"href","https://huggingface.co/dbmdz/bert-large-cased-finetuned-conll03-english"),i(Ce,"rel","nofollow"),i(Ie,"href","https://huggingface.co/distilbert-base-uncased-distilled-squad"),i(Ie,"rel","nofollow"),i(De,"href","https://huggingface.co/t5-base"),i(De,"rel","nofollow"),i(qe,"href","https://huggingface.co/facebook/bart-large-cnn"),i(qe,"rel","nofollow"),i(Te,"href","https://huggingface.co/facebook/blenderbot-400M-distill"),i(Te,"rel","nofollow"),i(Ne,"href","https://huggingface.co/gpt2"),i(Ne,"rel","nofollow"),i(Me,"href","https://huggingface.co/distilroberta-base"),i(Me,"rel","nofollow"),i(Re,"href","https://huggingface.co/facebook/bart-large-mnli"),i(Re,"rel","nofollow"),i(Fe,"href","https://huggingface.co/google/tapas-base-finetuned-wtq"),i(Fe,"rel","nofollow"),i(ot,"href","/osanseviero/full-sentence-distillroberta2"),i(Q,"id","how-can-i-control-my-models-widget-inference-api-parameters"),i(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Q,"href","#how-can-i-control-my-models-widget-inference-api-parameters"),i(N,"class","relative group"),i(Ge,"href","https://api-inference.huggingface.co/docs/python/html/detailed_parameters.html#"),i(Ge,"rel","nofollow"),i(it,"href","./models-inference")},m(t,c){e(document.head,O),p(t,ma,c),p(t,D,c),e(D,W),e(W,dt),$(ae,dt,null),e(D,wl),e(D,mt),e(mt,vl),p(t,ua,c),p(t,S,c),e(S,M),e(M,ut),$(le,ut,null),e(S,_l),e(S,gt),e(gt,El),p(t,ga,c),p(t,Ke,c),e(Ke,yl),p(t,wa,c),p(t,Qe,c),e(Qe,bl),p(t,va,c),p(t,v,c),e(v,R),e(R,se),e(se,xl),e(R,$l),e(R,oe),e(oe,kl),e(R,jl),e(v,Al),e(v,re),e(re,ne),e(ne,Cl),e(re,Pl),e(re,ie),e(ie,Il),e(v,Ol),e(v,z),e(z,ce),e(ce,Dl),e(z,Sl),e(z,pe),e(pe,ql),e(z,Hl),e(v,Tl),e(v,F),e(F,fe),e(fe,Ll),e(F,Nl),e(F,he),e(he,Wl),e(F,Ml),p(t,_a,c),p(t,Y,c),e(Y,Rl),e(Y,de),e(de,zl),e(Y,Fl),p(t,Ea,c),p(t,q,c),e(q,B),e(B,wt),$(me,wt,null),e(q,Yl),e(q,vt),e(vt,Bl),p(t,ya,c),p(t,u,c),e(u,Gl),e(u,_t),e(_t,Ul),e(u,Jl),e(u,Et),e(Et,Kl),e(u,Ql),e(u,yt),e(yt,Vl),e(u,Xl),e(u,bt),e(bt,Zl),e(u,es),e(u,xt),e(xt,ts),e(u,as),p(t,ba,c),p(t,g,c),e(g,ls),e(g,$t),e($t,ss),e(g,os),e(g,Ve),e(Ve,rs),e(g,ns),e(g,kt),e(kt,is),e(g,cs),e(g,jt),e(jt,ps),e(g,fs),p(t,xa,c),p(t,w,c),e(w,hs),e(w,At),e(At,ds),e(w,ms),e(w,Ct),e(Ct,us),e(w,gs),e(w,Pt),e(Pt,ws),e(w,vs),e(w,ue),e(ue,_s),e(w,Es),p(t,$a,c),p(t,C,c),e(C,ys),e(C,It),e(It,bs),e(C,xs),e(C,Xe),e(Xe,$s),e(C,ks),p(t,ka,c),p(t,H,c),e(H,G),e(G,Ot),$(ge,Ot,null),e(H,js),e(H,Dt),e(Dt,As),p(t,ja,c),p(t,Ze,c),e(Ze,Cs),p(t,Aa,c),$(we,t,c),p(t,Ca,c),p(t,_,c),e(_,Ps),e(_,St),e(St,Is),e(_,Os),e(_,qt),e(qt,Ds),e(_,Ss),e(_,Ht),e(Ht,qs),e(_,Hs),p(t,Pa,c),p(t,et,c),e(et,tt),p(t,Ia,c),$(ve,t,c),p(t,Oa,c),p(t,E,c),e(E,Ts),e(E,_e),e(_e,Ls),e(E,Ns),e(E,Tt),e(Tt,Ws),e(E,Ms),e(E,Lt),e(Lt,Rs),e(E,zs),p(t,Da,c),p(t,at,c),e(at,Fs),p(t,Sa,c),$(Ee,t,c),p(t,qa,c),p(t,lt,c),e(lt,Ys),p(t,Ha,c),$(ye,t,c),p(t,Ta,c),p(t,U,c),e(U,Bs),e(U,be),e(be,Gs),e(U,Us),p(t,La,c),p(t,T,c),e(T,J),e(J,Nt),$(xe,Nt,null),e(T,Js),e(T,Wt),e(Wt,Ks),p(t,Na,c),p(t,K,c),e(K,Qs),e(K,$e),e($e,Vs),e(K,Xs),p(t,Wa,c),p(t,st,c),e(st,Zs),p(t,Ma,c),p(t,d,c),e(d,ke),e(ke,Mt),e(Mt,eo),e(ke,to),e(ke,je),e(je,Rt),e(Rt,ao),e(d,lo),e(d,Ae),e(Ae,zt),e(zt,so),e(Ae,oo),e(Ae,Ce),e(Ce,Ft),e(Ft,ro),e(d,no),e(d,Pe),e(Pe,Yt),e(Yt,io),e(Pe,co),e(Pe,Ie),e(Ie,Bt),e(Bt,po),e(d,fo),e(d,Oe),e(Oe,Gt),e(Gt,ho),e(Oe,mo),e(Oe,De),e(De,Ut),e(Ut,uo),e(d,go),e(d,Se),e(Se,Jt),e(Jt,wo),e(Se,vo),e(Se,qe),e(qe,Kt),e(Kt,_o),e(d,Eo),e(d,He),e(He,Qt),e(Qt,yo),e(He,bo),e(He,Te),e(Te,Vt),e(Vt,xo),e(d,$o),e(d,Le),e(Le,Xt),e(Xt,ko),e(Le,jo),e(Le,Ne),e(Ne,Zt),e(Zt,Ao),e(d,Co),e(d,We),e(We,ea),e(ea,Po),e(We,Io),e(We,Me),e(Me,ta),e(ta,Oo),e(d,Do),e(d,L),e(L,aa),e(aa,So),e(L,qo),e(L,la),e(la,Ho),e(L,To),e(L,Re),e(Re,sa),e(sa,Lo),e(d,No),e(d,ze),e(ze,oa),e(oa,Wo),e(ze,Mo),e(ze,Fe),e(Fe,ra),e(ra,Ro),e(d,zo),e(d,Ye),e(Ye,na),e(na,Fo),e(Ye,Yo),e(Ye,ot),e(ot,ia),e(ia,Bo),p(t,Ra,c),p(t,N,c),e(N,Q),e(Q,ca),$(Be,ca,null),e(N,Go),e(N,pa),e(pa,Uo),p(t,za,c),p(t,V,c),e(V,Jo),e(V,Ge),e(Ge,Ko),e(V,Qo),p(t,Fa,c),p(t,rt,c),e(rt,Vo),p(t,Ya,c),$(Ue,t,c),p(t,Ba,c),p(t,nt,c),e(nt,Xo),p(t,Ga,c),$(Je,t,c),p(t,Ua,c),p(t,X,c),e(X,Zo),e(X,it),e(it,er),e(X,tr),Ja=!0},p:Vn,i(t){Ja||(k(ae.$$.fragment,t),k(le.$$.fragment,t),k(me.$$.fragment,t),k(ge.$$.fragment,t),k(we.$$.fragment,t),k(ve.$$.fragment,t),k(Ee.$$.fragment,t),k(ye.$$.fragment,t),k(xe.$$.fragment,t),k(Be.$$.fragment,t),k(Ue.$$.fragment,t),k(Je.$$.fragment,t),Ja=!0)},o(t){j(ae.$$.fragment,t),j(le.$$.fragment,t),j(me.$$.fragment,t),j(ge.$$.fragment,t),j(we.$$.fragment,t),j(ve.$$.fragment,t),j(Ee.$$.fragment,t),j(ye.$$.fragment,t),j(xe.$$.fragment,t),j(Be.$$.fragment,t),j(Ue.$$.fragment,t),j(Je.$$.fragment,t),Ja=!1},d(t){a(O),t&&a(ma),t&&a(D),A(ae),t&&a(ua),t&&a(S),A(le),t&&a(ga),t&&a(Ke),t&&a(wa),t&&a(Qe),t&&a(va),t&&a(v),t&&a(_a),t&&a(Y),t&&a(Ea),t&&a(q),A(me),t&&a(ya),t&&a(u),t&&a(ba),t&&a(g),t&&a(xa),t&&a(w),t&&a($a),t&&a(C),t&&a(ka),t&&a(H),A(ge),t&&a(ja),t&&a(Ze),t&&a(Aa),A(we,t),t&&a(Ca),t&&a(_),t&&a(Pa),t&&a(et),t&&a(Ia),A(ve,t),t&&a(Oa),t&&a(E),t&&a(Da),t&&a(at),t&&a(Sa),A(Ee,t),t&&a(qa),t&&a(lt),t&&a(Ha),A(ye,t),t&&a(Ta),t&&a(U),t&&a(La),t&&a(T),A(xe),t&&a(Na),t&&a(K),t&&a(Wa),t&&a(st),t&&a(Ma),t&&a(d),t&&a(Ra),t&&a(N),A(Be),t&&a(za),t&&a(V),t&&a(Fa),t&&a(rt),t&&a(Ya),A(Ue,t),t&&a(Ba),t&&a(nt),t&&a(Ga),A(Je,t),t&&a(Ua),t&&a(X)}}}const ei={local:"widgets",sections:[{local:"whats-a-widget",title:"What's a widget?"},{local:"creating-a-widget",sections:[{local:"how-can-i-control-my-models-widget-example-input",title:"How can I control my model's widget example input?"}],title:"Creating a Widget"},{local:"what-are-all-the-possible-taskwidget-types",title:"What are all the possible task/widget types?"},{local:"how-can-i-control-my-models-widget-inference-api-parameters",title:"How can I control my model's widget Inference API parameters?"}],title:"Widgets"};function ti(ar){return Xn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class oi extends Gn{constructor(O){super();Un(this,O,ti,Zn,Jn,{})}}export{oi as default,ei as metadata};
