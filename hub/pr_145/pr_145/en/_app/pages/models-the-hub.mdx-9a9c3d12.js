import{S as fi,i as ci,s as ui,e as r,k as n,w as ha,t as l,N as vi,c as a,d as e,m as s,a as o,x as ia,h as d,b as h,P as pi,F as t,g as v,y as fa,L as _i,q as ca,o as ua,B as va,v as Ei}from"../chunks/vendor-e46c3074.js";import{I as pa}from"../chunks/IconCopyLink-380c1989.js";function Ti(Rn){let K,jr,Z,rt,te,ct,_a,ee,Ea,qr,Q,at,re,ut,Ta,ae,ga,zr,N,ma,ot,oe,ba,wa,Da,vt,le,ya,Aa,Ct,Pa,Ha,Vr,It,ka,Gr,R,Nn,Jr,tt,lt,de,pt,Sa,ne,$a,Xr,dt,La,se,Ra,Na,Ur,nt,Ca,_t,Ia,Ma,Kr,st,he,p,ie,xa,Fa,fe,Oa,Wa,ce,Ya,Ba,Mt,ja,qa,ue,za,Va,ve,Ga,Ja,f,_,pe,Et,Xa,Ua,_e,Ka,Za,Ee,Qa,to,xt,eo,ro,Te,ao,oo,ge,lo,no,E,me,Tt,so,ho,be,io,fo,we,co,uo,Ft,vo,po,De,_o,Eo,ye,To,go,T,Ae,gt,mo,bo,Pe,wo,Do,He,yo,Ao,Ot,Po,Ho,ke,ko,So,Se,$o,Lo,g,$e,mt,Ro,No,Le,Co,Io,Re,Mo,xo,Wt,Fo,Oo,Ne,Wo,Yo,Ce,Bo,jo,m,Ie,bt,qo,zo,Me,Vo,Go,xe,Jo,Xo,Yt,Uo,Ko,Fe,Zo,Qo,Oe,tl,el,b,We,wt,rl,al,Ye,ol,ll,Be,dl,nl,Bt,sl,hl,je,il,fl,qe,cl,ul,w,ze,Dt,vl,pl,Ve,_l,El,Ge,Tl,gl,jt,ml,bl,Je,wl,Dl,Xe,yl,Al,D,Ue,yt,Pl,Hl,Ke,kl,Sl,Ze,$l,Ll,qt,Rl,Nl,Qe,Cl,Il,tr,Ml,xl,y,er,At,Fl,Ol,rr,Wl,Yl,ar,Bl,jl,zt,ql,zl,or,Vl,Gl,lr,Jl,Xl,A,dr,Pt,Ul,Kl,nr,Zl,Ql,sr,td,ed,Vt,rd,ad,hr,od,ld,ir,dd,nd,P,fr,Ht,sd,hd,cr,id,fd,ur,cd,ud,Gt,vd,pd,vr,_d,Ed,pr,Td,gd,H,_r,kt,md,bd,Er,wd,Dd,Tr,yd,Ad,Jt,Pd,Hd,gr,kd,Sd,mr,$d,Ld,k,br,St,Rd,Nd,wr,Cd,Id,Dr,Md,xd,Xt,Fd,Od,yr,Wd,Yd,Ar,Bd,jd,S,Pr,$t,qd,zd,Hr,Vd,Gd,kr,Jd,Xd,Ut,Ud,Kd,Sr,Zd,Qd,$r,tn,en,$,Lr,Lt,rn,an,Rr,on,ln,Nr,dn,nn,Kt,sn,hn,Cr,fn,cn,Ir,un,vn,L,Mr,Rt,pn,_n,xr,En,Tn,Fr,gn,mn,Zt,bn,wn,Or,Dn,yn,Wr,An,Zr,et,ht,Yr,Nt,Pn,Br,Hn,Qr,it,kn,Qt,Sn,$n,ta;return ct=new pa({}),ut=new pa({}),pt=new pa({}),Nt=new pa({}),{c(){K=r("meta"),jr=n(),Z=r("h1"),rt=r("a"),te=r("span"),ha(ct.$$.fragment),_a=n(),ee=r("span"),Ea=l("The Model Hub"),qr=n(),Q=r("h2"),at=r("a"),re=r("span"),ha(ut.$$.fragment),Ta=n(),ae=r("span"),ga=l("What is the Model Hub?"),zr=n(),N=r("p"),ma=l("The Model Hub is where the members of the Hugging Face community can host all of their model checkpoints for simple storage, discovery, and sharing. Download pre-trained models with the "),ot=r("a"),oe=r("code"),ba=l("huggingface_hub"),wa=l(" client library"),Da=l(" or with \u{1F917}  "),vt=r("a"),le=r("code"),ya=l("Transformers"),Aa=l(" for fine-tuning and other usages. You can even leverage the "),Ct=r("a"),Pa=l("Inference API"),Ha=l(" to use models in production."),Vr=n(),It=r("p"),ka=l("You can refer to the following video for a guide on navigating the Model Hub:"),Gr=n(),R=r("iframe"),Jr=n(),tt=r("h2"),lt=r("a"),de=r("span"),ha(pt.$$.fragment),Sa=n(),ne=r("span"),$a=l("Libraries"),Xr=n(),dt=r("p"),La=l("Integrating the "),se=r("code"),Ra=l("huggingface_hub"),Na=l(" library into your projects allows users to interact with the Hub directly from your library. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),Ur=n(),nt=r("p"),Ca=l("The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),_t=r("a"),Ia=l("here"),Ma=l("!"),Kr=n(),st=r("table"),he=r("thead"),p=r("tr"),ie=r("th"),xa=l("Library"),Fa=n(),fe=r("th"),Oa=l("Description"),Wa=n(),ce=r("th"),Ya=l("Inference API"),Ba=n(),Mt=r("th"),ja=l("Widgets"),qa=n(),ue=r("th"),za=l("Download from Hub"),Va=n(),ve=r("th"),Ga=l("Push to Hub"),Ja=n(),f=r("tbody"),_=r("tr"),pe=r("td"),Et=r("a"),Xa=l("\u{1F917} Transformers"),Ua=n(),_e=r("td"),Ka=l("State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),Za=n(),Ee=r("td"),Qa=l("\u2705"),to=n(),xt=r("td"),eo=l("\u2705"),ro=n(),Te=r("td"),ao=l("\u2705"),oo=n(),ge=r("td"),lo=l("\u2705"),no=n(),E=r("tr"),me=r("td"),Tt=r("a"),so=l("Adapter Transformers"),ho=n(),be=r("td"),io=l("Extends \u{1F917}Transformers with Adapters."),fo=n(),we=r("td"),co=l("\u274C"),uo=n(),Ft=r("td"),vo=l("\u274C"),po=n(),De=r("td"),_o=l("\u2705"),Eo=n(),ye=r("td"),To=l("\u2705"),go=n(),T=r("tr"),Ae=r("td"),gt=r("a"),mo=l("AllenNLP"),bo=n(),Pe=r("td"),wo=l("An open-source NLP research library, built on PyTorch."),Do=n(),He=r("td"),yo=l("\u2705"),Ao=n(),Ot=r("td"),Po=l("\u2705"),Ho=n(),ke=r("td"),ko=l("\u2705"),So=n(),Se=r("td"),$o=l("\u274C"),Lo=n(),g=r("tr"),$e=r("td"),mt=r("a"),Ro=l("Asteroid"),No=n(),Le=r("td"),Co=l("Pytorch-based audio source separation toolkit"),Io=n(),Re=r("td"),Mo=l("\u2705"),xo=n(),Wt=r("td"),Fo=l("\u2705"),Oo=n(),Ne=r("td"),Wo=l("\u2705"),Yo=n(),Ce=r("td"),Bo=l("\u274C"),jo=n(),m=r("tr"),Ie=r("td"),bt=r("a"),qo=l("docTR"),zo=n(),Me=r("td"),Vo=l("Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),Go=n(),xe=r("td"),Jo=l("\u2705"),Xo=n(),Yt=r("td"),Uo=l("\u2705"),Ko=n(),Fe=r("td"),Zo=l("\u2705"),Qo=n(),Oe=r("td"),tl=l("\u274C"),el=n(),b=r("tr"),We=r("td"),wt=r("a"),rl=l("ESPnet"),al=n(),Ye=r("td"),ol=l("End-to-end speech processing toolkit (e.g. TTS)"),ll=n(),Be=r("td"),dl=l("\u2705"),nl=n(),Bt=r("td"),sl=l("\u2705"),hl=n(),je=r("td"),il=l("\u2705"),fl=n(),qe=r("td"),cl=l("\u274C"),ul=n(),w=r("tr"),ze=r("td"),Dt=r("a"),vl=l("Flair"),pl=n(),Ve=r("td"),_l=l("Very simple framework for state-of-the-art NLP."),El=n(),Ge=r("td"),Tl=l("\u2705"),gl=n(),jt=r("td"),ml=l("\u2705"),bl=n(),Je=r("td"),wl=l("\u2705"),Dl=n(),Xe=r("td"),yl=l("\u274C"),Al=n(),D=r("tr"),Ue=r("td"),yt=r("a"),Pl=l("NeMo"),Hl=n(),Ke=r("td"),kl=l("Conversational AI toolkit built for researchers"),Sl=n(),Ze=r("td"),$l=l("\u2705"),Ll=n(),qt=r("td"),Rl=l("\u2705"),Nl=n(),Qe=r("td"),Cl=l("\u2705"),Il=n(),tr=r("td"),Ml=l("\u274C"),xl=n(),y=r("tr"),er=r("td"),At=r("a"),Fl=l("Pyannote"),Ol=n(),rr=r("td"),Wl=l("Neural building blocks for speaker diarization."),Yl=n(),ar=r("td"),Bl=l("\u274C"),jl=n(),zt=r("td"),ql=l("\u274C"),zl=n(),or=r("td"),Vl=l("\u2705"),Gl=n(),lr=r("td"),Jl=l("\u274C"),Xl=n(),A=r("tr"),dr=r("td"),Pt=r("a"),Ul=l("PyCTCDecode"),Kl=n(),nr=r("td"),Zl=l("Language model supported CTC decoding for speech recognition"),Ql=n(),sr=r("td"),td=l("\u274C"),ed=n(),Vt=r("td"),rd=l("\u274C"),ad=n(),hr=r("td"),od=l("\u2705"),ld=n(),ir=r("td"),dd=l("\u274C"),nd=n(),P=r("tr"),fr=r("td"),Ht=r("a"),sd=l("Sentence Transformers"),hd=n(),cr=r("td"),id=l("Compute dense vector representations for sentences, paragraphs, and images."),fd=n(),ur=r("td"),cd=l("\u2705"),ud=n(),Gt=r("td"),vd=l("\u2705"),pd=n(),vr=r("td"),_d=l("\u2705"),Ed=n(),pr=r("td"),Td=l("\u2705"),gd=n(),H=r("tr"),_r=r("td"),kt=r("a"),md=l("spaCy"),bd=n(),Er=r("td"),wd=l("Advanced Natural Language Processing in Python and Cython."),Dd=n(),Tr=r("td"),yd=l("\u2705"),Ad=n(),Jt=r("td"),Pd=l("\u2705"),Hd=n(),gr=r("td"),kd=l("\u2705"),Sd=n(),mr=r("td"),$d=l("\u2705"),Ld=n(),k=r("tr"),br=r("td"),St=r("a"),Rd=l("Speechbrain"),Nd=n(),wr=r("td"),Cd=l("A PyTorch Powered Speech Toolkit."),Id=n(),Dr=r("td"),Md=l("\u2705"),xd=n(),Xt=r("td"),Fd=l("\u2705"),Od=n(),yr=r("td"),Wd=l("\u2705"),Yd=n(),Ar=r("td"),Bd=l("\u274C"),jd=n(),S=r("tr"),Pr=r("td"),$t=r("a"),qd=l("TensorFlowTTS"),zd=n(),Hr=r("td"),Vd=l("Real-time state-of-the-art speech synthesis architectures."),Gd=n(),kr=r("td"),Jd=l("\u274C"),Xd=n(),Ut=r("td"),Ud=l("\u274C"),Kd=n(),Sr=r("td"),Zd=l("\u2705"),Qd=n(),$r=r("td"),tn=l("\u274C"),en=n(),$=r("tr"),Lr=r("td"),Lt=r("a"),rn=l("Timm"),an=n(),Rr=r("td"),on=l("Collection of image models, scripts, pretrained weights, etc."),ln=n(),Nr=r("td"),dn=l("\u274C"),nn=n(),Kt=r("td"),sn=l("\u274C"),hn=n(),Cr=r("td"),fn=l("\u2705"),cn=n(),Ir=r("td"),un=l("\u274C"),vn=n(),L=r("tr"),Mr=r("td"),Rt=r("a"),pn=l("Stable-Baselines3"),_n=n(),xr=r("td"),En=l("Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Tn=n(),Fr=r("td"),gn=l("\u274C"),mn=n(),Zt=r("td"),bn=l("\u274C"),wn=n(),Or=r("td"),Dn=l("\u2705"),yn=n(),Wr=r("td"),An=l("\u2705"),Zr=n(),et=r("h3"),ht=r("a"),Yr=r("span"),ha(Nt.$$.fragment),Pn=n(),Br=r("span"),Hn=l("How can I add a new library to the Inference API?"),Qr=n(),it=r("p"),kn=l("Read about it in "),Qt=r("a"),Sn=l("Adding a Library Guide"),$n=l("."),this.h()},l(i){const u=vi('[data-svelte="svelte-1phssyn"]',document.head);K=a(u,"META",{name:!0,content:!0}),u.forEach(e),jr=s(i),Z=a(i,"H1",{class:!0});var ea=o(Z);rt=a(ea,"A",{id:!0,class:!0,href:!0});var Cn=o(rt);te=a(Cn,"SPAN",{});var In=o(te);ia(ct.$$.fragment,In),In.forEach(e),Cn.forEach(e),_a=s(ea),ee=a(ea,"SPAN",{});var Mn=o(ee);Ea=d(Mn,"The Model Hub"),Mn.forEach(e),ea.forEach(e),qr=s(i),Q=a(i,"H2",{class:!0});var ra=o(Q);at=a(ra,"A",{id:!0,class:!0,href:!0});var xn=o(at);re=a(xn,"SPAN",{});var Fn=o(re);ia(ut.$$.fragment,Fn),Fn.forEach(e),xn.forEach(e),Ta=s(ra),ae=a(ra,"SPAN",{});var On=o(ae);ga=d(On,"What is the Model Hub?"),On.forEach(e),ra.forEach(e),zr=s(i),N=a(i,"P",{});var ft=o(N);ma=d(ft,"The Model Hub is where the members of the Hugging Face community can host all of their model checkpoints for simple storage, discovery, and sharing. Download pre-trained models with the "),ot=a(ft,"A",{href:!0,rel:!0});var Ln=o(ot);oe=a(Ln,"CODE",{});var Wn=o(oe);ba=d(Wn,"huggingface_hub"),Wn.forEach(e),wa=d(Ln," client library"),Ln.forEach(e),Da=d(ft," or with \u{1F917}  "),vt=a(ft,"A",{href:!0,rel:!0});var Yn=o(vt);le=a(Yn,"CODE",{});var Bn=o(le);ya=d(Bn,"Transformers"),Bn.forEach(e),Yn.forEach(e),Aa=d(ft," for fine-tuning and other usages. You can even leverage the "),Ct=a(ft,"A",{href:!0});var jn=o(Ct);Pa=d(jn,"Inference API"),jn.forEach(e),Ha=d(ft," to use models in production."),ft.forEach(e),Vr=s(i),It=a(i,"P",{});var qn=o(It);ka=d(qn,"You can refer to the following video for a guide on navigating the Model Hub:"),qn.forEach(e),Gr=s(i),R=a(i,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),o(R).forEach(e),Jr=s(i),tt=a(i,"H2",{class:!0});var aa=o(tt);lt=a(aa,"A",{id:!0,class:!0,href:!0});var zn=o(lt);de=a(zn,"SPAN",{});var Vn=o(de);ia(pt.$$.fragment,Vn),Vn.forEach(e),zn.forEach(e),Sa=s(aa),ne=a(aa,"SPAN",{});var Gn=o(ne);$a=d(Gn,"Libraries"),Gn.forEach(e),aa.forEach(e),Xr=s(i),dt=a(i,"P",{});var oa=o(dt);La=d(oa,"Integrating the "),se=a(oa,"CODE",{});var Jn=o(se);Ra=d(Jn,"huggingface_hub"),Jn.forEach(e),Na=d(oa," library into your projects allows users to interact with the Hub directly from your library. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),oa.forEach(e),Ur=s(i),nt=a(i,"P",{});var la=o(nt);Ca=d(la,"The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),_t=a(la,"A",{href:!0,rel:!0});var Xn=o(_t);Ia=d(Xn,"here"),Xn.forEach(e),Ma=d(la,"!"),la.forEach(e),Kr=s(i),st=a(i,"TABLE",{});var da=o(st);he=a(da,"THEAD",{});var Un=o(he);p=a(Un,"TR",{});var C=o(p);ie=a(C,"TH",{});var Kn=o(ie);xa=d(Kn,"Library"),Kn.forEach(e),Fa=s(C),fe=a(C,"TH",{});var Zn=o(fe);Oa=d(Zn,"Description"),Zn.forEach(e),Wa=s(C),ce=a(C,"TH",{});var Qn=o(ce);Ya=d(Qn,"Inference API"),Qn.forEach(e),Ba=s(C),Mt=a(C,"TH",{align:!0});var ts=o(Mt);ja=d(ts,"Widgets"),ts.forEach(e),qa=s(C),ue=a(C,"TH",{});var es=o(ue);za=d(es,"Download from Hub"),es.forEach(e),Va=s(C),ve=a(C,"TH",{});var rs=o(ve);Ga=d(rs,"Push to Hub"),rs.forEach(e),C.forEach(e),Un.forEach(e),Ja=s(da),f=a(da,"TBODY",{});var c=o(f);_=a(c,"TR",{});var I=o(_);pe=a(I,"TD",{});var as=o(pe);Et=a(as,"A",{href:!0,rel:!0});var os=o(Et);Xa=d(os,"\u{1F917} Transformers"),os.forEach(e),as.forEach(e),Ua=s(I),_e=a(I,"TD",{});var ls=o(_e);Ka=d(ls,"State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),ls.forEach(e),Za=s(I),Ee=a(I,"TD",{});var ds=o(Ee);Qa=d(ds,"\u2705"),ds.forEach(e),to=s(I),xt=a(I,"TD",{align:!0});var ns=o(xt);eo=d(ns,"\u2705"),ns.forEach(e),ro=s(I),Te=a(I,"TD",{});var ss=o(Te);ao=d(ss,"\u2705"),ss.forEach(e),oo=s(I),ge=a(I,"TD",{});var hs=o(ge);lo=d(hs,"\u2705"),hs.forEach(e),I.forEach(e),no=s(c),E=a(c,"TR",{});var M=o(E);me=a(M,"TD",{});var is=o(me);Tt=a(is,"A",{href:!0,rel:!0});var fs=o(Tt);so=d(fs,"Adapter Transformers"),fs.forEach(e),is.forEach(e),ho=s(M),be=a(M,"TD",{});var cs=o(be);io=d(cs,"Extends \u{1F917}Transformers with Adapters."),cs.forEach(e),fo=s(M),we=a(M,"TD",{});var us=o(we);co=d(us,"\u274C"),us.forEach(e),uo=s(M),Ft=a(M,"TD",{align:!0});var vs=o(Ft);vo=d(vs,"\u274C"),vs.forEach(e),po=s(M),De=a(M,"TD",{});var ps=o(De);_o=d(ps,"\u2705"),ps.forEach(e),Eo=s(M),ye=a(M,"TD",{});var _s=o(ye);To=d(_s,"\u2705"),_s.forEach(e),M.forEach(e),go=s(c),T=a(c,"TR",{});var x=o(T);Ae=a(x,"TD",{});var Es=o(Ae);gt=a(Es,"A",{href:!0,rel:!0});var Ts=o(gt);mo=d(Ts,"AllenNLP"),Ts.forEach(e),Es.forEach(e),bo=s(x),Pe=a(x,"TD",{});var gs=o(Pe);wo=d(gs,"An open-source NLP research library, built on PyTorch."),gs.forEach(e),Do=s(x),He=a(x,"TD",{});var ms=o(He);yo=d(ms,"\u2705"),ms.forEach(e),Ao=s(x),Ot=a(x,"TD",{align:!0});var bs=o(Ot);Po=d(bs,"\u2705"),bs.forEach(e),Ho=s(x),ke=a(x,"TD",{});var ws=o(ke);ko=d(ws,"\u2705"),ws.forEach(e),So=s(x),Se=a(x,"TD",{});var Ds=o(Se);$o=d(Ds,"\u274C"),Ds.forEach(e),x.forEach(e),Lo=s(c),g=a(c,"TR",{});var F=o(g);$e=a(F,"TD",{});var ys=o($e);mt=a(ys,"A",{href:!0,rel:!0});var As=o(mt);Ro=d(As,"Asteroid"),As.forEach(e),ys.forEach(e),No=s(F),Le=a(F,"TD",{});var Ps=o(Le);Co=d(Ps,"Pytorch-based audio source separation toolkit"),Ps.forEach(e),Io=s(F),Re=a(F,"TD",{});var Hs=o(Re);Mo=d(Hs,"\u2705"),Hs.forEach(e),xo=s(F),Wt=a(F,"TD",{align:!0});var ks=o(Wt);Fo=d(ks,"\u2705"),ks.forEach(e),Oo=s(F),Ne=a(F,"TD",{});var Ss=o(Ne);Wo=d(Ss,"\u2705"),Ss.forEach(e),Yo=s(F),Ce=a(F,"TD",{});var $s=o(Ce);Bo=d($s,"\u274C"),$s.forEach(e),F.forEach(e),jo=s(c),m=a(c,"TR",{});var O=o(m);Ie=a(O,"TD",{});var Ls=o(Ie);bt=a(Ls,"A",{href:!0,rel:!0});var Rs=o(bt);qo=d(Rs,"docTR"),Rs.forEach(e),Ls.forEach(e),zo=s(O),Me=a(O,"TD",{});var Ns=o(Me);Vo=d(Ns,"Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),Ns.forEach(e),Go=s(O),xe=a(O,"TD",{});var Cs=o(xe);Jo=d(Cs,"\u2705"),Cs.forEach(e),Xo=s(O),Yt=a(O,"TD",{align:!0});var Is=o(Yt);Uo=d(Is,"\u2705"),Is.forEach(e),Ko=s(O),Fe=a(O,"TD",{});var Ms=o(Fe);Zo=d(Ms,"\u2705"),Ms.forEach(e),Qo=s(O),Oe=a(O,"TD",{});var xs=o(Oe);tl=d(xs,"\u274C"),xs.forEach(e),O.forEach(e),el=s(c),b=a(c,"TR",{});var W=o(b);We=a(W,"TD",{});var Fs=o(We);wt=a(Fs,"A",{href:!0,rel:!0});var Os=o(wt);rl=d(Os,"ESPnet"),Os.forEach(e),Fs.forEach(e),al=s(W),Ye=a(W,"TD",{});var Ws=o(Ye);ol=d(Ws,"End-to-end speech processing toolkit (e.g. TTS)"),Ws.forEach(e),ll=s(W),Be=a(W,"TD",{});var Ys=o(Be);dl=d(Ys,"\u2705"),Ys.forEach(e),nl=s(W),Bt=a(W,"TD",{align:!0});var Bs=o(Bt);sl=d(Bs,"\u2705"),Bs.forEach(e),hl=s(W),je=a(W,"TD",{});var js=o(je);il=d(js,"\u2705"),js.forEach(e),fl=s(W),qe=a(W,"TD",{});var qs=o(qe);cl=d(qs,"\u274C"),qs.forEach(e),W.forEach(e),ul=s(c),w=a(c,"TR",{});var Y=o(w);ze=a(Y,"TD",{});var zs=o(ze);Dt=a(zs,"A",{href:!0,rel:!0});var Vs=o(Dt);vl=d(Vs,"Flair"),Vs.forEach(e),zs.forEach(e),pl=s(Y),Ve=a(Y,"TD",{});var Gs=o(Ve);_l=d(Gs,"Very simple framework for state-of-the-art NLP."),Gs.forEach(e),El=s(Y),Ge=a(Y,"TD",{});var Js=o(Ge);Tl=d(Js,"\u2705"),Js.forEach(e),gl=s(Y),jt=a(Y,"TD",{align:!0});var Xs=o(jt);ml=d(Xs,"\u2705"),Xs.forEach(e),bl=s(Y),Je=a(Y,"TD",{});var Us=o(Je);wl=d(Us,"\u2705"),Us.forEach(e),Dl=s(Y),Xe=a(Y,"TD",{});var Ks=o(Xe);yl=d(Ks,"\u274C"),Ks.forEach(e),Y.forEach(e),Al=s(c),D=a(c,"TR",{});var B=o(D);Ue=a(B,"TD",{});var Zs=o(Ue);yt=a(Zs,"A",{href:!0,rel:!0});var Qs=o(yt);Pl=d(Qs,"NeMo"),Qs.forEach(e),Zs.forEach(e),Hl=s(B),Ke=a(B,"TD",{});var th=o(Ke);kl=d(th,"Conversational AI toolkit built for researchers"),th.forEach(e),Sl=s(B),Ze=a(B,"TD",{});var eh=o(Ze);$l=d(eh,"\u2705"),eh.forEach(e),Ll=s(B),qt=a(B,"TD",{align:!0});var rh=o(qt);Rl=d(rh,"\u2705"),rh.forEach(e),Nl=s(B),Qe=a(B,"TD",{});var ah=o(Qe);Cl=d(ah,"\u2705"),ah.forEach(e),Il=s(B),tr=a(B,"TD",{});var oh=o(tr);Ml=d(oh,"\u274C"),oh.forEach(e),B.forEach(e),xl=s(c),y=a(c,"TR",{});var j=o(y);er=a(j,"TD",{});var lh=o(er);At=a(lh,"A",{href:!0,rel:!0});var dh=o(At);Fl=d(dh,"Pyannote"),dh.forEach(e),lh.forEach(e),Ol=s(j),rr=a(j,"TD",{});var nh=o(rr);Wl=d(nh,"Neural building blocks for speaker diarization."),nh.forEach(e),Yl=s(j),ar=a(j,"TD",{});var sh=o(ar);Bl=d(sh,"\u274C"),sh.forEach(e),jl=s(j),zt=a(j,"TD",{align:!0});var hh=o(zt);ql=d(hh,"\u274C"),hh.forEach(e),zl=s(j),or=a(j,"TD",{});var ih=o(or);Vl=d(ih,"\u2705"),ih.forEach(e),Gl=s(j),lr=a(j,"TD",{});var fh=o(lr);Jl=d(fh,"\u274C"),fh.forEach(e),j.forEach(e),Xl=s(c),A=a(c,"TR",{});var q=o(A);dr=a(q,"TD",{});var ch=o(dr);Pt=a(ch,"A",{href:!0,rel:!0});var uh=o(Pt);Ul=d(uh,"PyCTCDecode"),uh.forEach(e),ch.forEach(e),Kl=s(q),nr=a(q,"TD",{});var vh=o(nr);Zl=d(vh,"Language model supported CTC decoding for speech recognition"),vh.forEach(e),Ql=s(q),sr=a(q,"TD",{});var ph=o(sr);td=d(ph,"\u274C"),ph.forEach(e),ed=s(q),Vt=a(q,"TD",{align:!0});var _h=o(Vt);rd=d(_h,"\u274C"),_h.forEach(e),ad=s(q),hr=a(q,"TD",{});var Eh=o(hr);od=d(Eh,"\u2705"),Eh.forEach(e),ld=s(q),ir=a(q,"TD",{});var Th=o(ir);dd=d(Th,"\u274C"),Th.forEach(e),q.forEach(e),nd=s(c),P=a(c,"TR",{});var z=o(P);fr=a(z,"TD",{});var gh=o(fr);Ht=a(gh,"A",{href:!0,rel:!0});var mh=o(Ht);sd=d(mh,"Sentence Transformers"),mh.forEach(e),gh.forEach(e),hd=s(z),cr=a(z,"TD",{});var bh=o(cr);id=d(bh,"Compute dense vector representations for sentences, paragraphs, and images."),bh.forEach(e),fd=s(z),ur=a(z,"TD",{});var wh=o(ur);cd=d(wh,"\u2705"),wh.forEach(e),ud=s(z),Gt=a(z,"TD",{align:!0});var Dh=o(Gt);vd=d(Dh,"\u2705"),Dh.forEach(e),pd=s(z),vr=a(z,"TD",{});var yh=o(vr);_d=d(yh,"\u2705"),yh.forEach(e),Ed=s(z),pr=a(z,"TD",{});var Ah=o(pr);Td=d(Ah,"\u2705"),Ah.forEach(e),z.forEach(e),gd=s(c),H=a(c,"TR",{});var V=o(H);_r=a(V,"TD",{});var Ph=o(_r);kt=a(Ph,"A",{href:!0,rel:!0});var Hh=o(kt);md=d(Hh,"spaCy"),Hh.forEach(e),Ph.forEach(e),bd=s(V),Er=a(V,"TD",{});var kh=o(Er);wd=d(kh,"Advanced Natural Language Processing in Python and Cython."),kh.forEach(e),Dd=s(V),Tr=a(V,"TD",{});var Sh=o(Tr);yd=d(Sh,"\u2705"),Sh.forEach(e),Ad=s(V),Jt=a(V,"TD",{align:!0});var $h=o(Jt);Pd=d($h,"\u2705"),$h.forEach(e),Hd=s(V),gr=a(V,"TD",{});var Lh=o(gr);kd=d(Lh,"\u2705"),Lh.forEach(e),Sd=s(V),mr=a(V,"TD",{});var Rh=o(mr);$d=d(Rh,"\u2705"),Rh.forEach(e),V.forEach(e),Ld=s(c),k=a(c,"TR",{});var G=o(k);br=a(G,"TD",{});var Nh=o(br);St=a(Nh,"A",{href:!0,rel:!0});var Ch=o(St);Rd=d(Ch,"Speechbrain"),Ch.forEach(e),Nh.forEach(e),Nd=s(G),wr=a(G,"TD",{});var Ih=o(wr);Cd=d(Ih,"A PyTorch Powered Speech Toolkit."),Ih.forEach(e),Id=s(G),Dr=a(G,"TD",{});var Mh=o(Dr);Md=d(Mh,"\u2705"),Mh.forEach(e),xd=s(G),Xt=a(G,"TD",{align:!0});var xh=o(Xt);Fd=d(xh,"\u2705"),xh.forEach(e),Od=s(G),yr=a(G,"TD",{});var Fh=o(yr);Wd=d(Fh,"\u2705"),Fh.forEach(e),Yd=s(G),Ar=a(G,"TD",{});var Oh=o(Ar);Bd=d(Oh,"\u274C"),Oh.forEach(e),G.forEach(e),jd=s(c),S=a(c,"TR",{});var J=o(S);Pr=a(J,"TD",{});var Wh=o(Pr);$t=a(Wh,"A",{href:!0,rel:!0});var Yh=o($t);qd=d(Yh,"TensorFlowTTS"),Yh.forEach(e),Wh.forEach(e),zd=s(J),Hr=a(J,"TD",{});var Bh=o(Hr);Vd=d(Bh,"Real-time state-of-the-art speech synthesis architectures."),Bh.forEach(e),Gd=s(J),kr=a(J,"TD",{});var jh=o(kr);Jd=d(jh,"\u274C"),jh.forEach(e),Xd=s(J),Ut=a(J,"TD",{align:!0});var qh=o(Ut);Ud=d(qh,"\u274C"),qh.forEach(e),Kd=s(J),Sr=a(J,"TD",{});var zh=o(Sr);Zd=d(zh,"\u2705"),zh.forEach(e),Qd=s(J),$r=a(J,"TD",{});var Vh=o($r);tn=d(Vh,"\u274C"),Vh.forEach(e),J.forEach(e),en=s(c),$=a(c,"TR",{});var X=o($);Lr=a(X,"TD",{});var Gh=o(Lr);Lt=a(Gh,"A",{href:!0,rel:!0});var Jh=o(Lt);rn=d(Jh,"Timm"),Jh.forEach(e),Gh.forEach(e),an=s(X),Rr=a(X,"TD",{});var Xh=o(Rr);on=d(Xh,"Collection of image models, scripts, pretrained weights, etc."),Xh.forEach(e),ln=s(X),Nr=a(X,"TD",{});var Uh=o(Nr);dn=d(Uh,"\u274C"),Uh.forEach(e),nn=s(X),Kt=a(X,"TD",{align:!0});var Kh=o(Kt);sn=d(Kh,"\u274C"),Kh.forEach(e),hn=s(X),Cr=a(X,"TD",{});var Zh=o(Cr);fn=d(Zh,"\u2705"),Zh.forEach(e),cn=s(X),Ir=a(X,"TD",{});var Qh=o(Ir);un=d(Qh,"\u274C"),Qh.forEach(e),X.forEach(e),vn=s(c),L=a(c,"TR",{});var U=o(L);Mr=a(U,"TD",{});var ti=o(Mr);Rt=a(ti,"A",{href:!0,rel:!0});var ei=o(Rt);pn=d(ei,"Stable-Baselines3"),ei.forEach(e),ti.forEach(e),_n=s(U),xr=a(U,"TD",{});var ri=o(xr);En=d(ri,"Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),ri.forEach(e),Tn=s(U),Fr=a(U,"TD",{});var ai=o(Fr);gn=d(ai,"\u274C"),ai.forEach(e),mn=s(U),Zt=a(U,"TD",{align:!0});var oi=o(Zt);bn=d(oi,"\u274C"),oi.forEach(e),wn=s(U),Or=a(U,"TD",{});var li=o(Or);Dn=d(li,"\u2705"),li.forEach(e),yn=s(U),Wr=a(U,"TD",{});var di=o(Wr);An=d(di,"\u2705"),di.forEach(e),U.forEach(e),c.forEach(e),da.forEach(e),Zr=s(i),et=a(i,"H3",{class:!0});var na=o(et);ht=a(na,"A",{id:!0,class:!0,href:!0});var ni=o(ht);Yr=a(ni,"SPAN",{});var si=o(Yr);ia(Nt.$$.fragment,si),si.forEach(e),ni.forEach(e),Pn=s(na),Br=a(na,"SPAN",{});var hi=o(Br);Hn=d(hi,"How can I add a new library to the Inference API?"),hi.forEach(e),na.forEach(e),Qr=s(i),it=a(i,"P",{});var sa=o(it);kn=d(sa,"Read about it in "),Qt=a(sa,"A",{href:!0});var ii=o(Qt);Sn=d(ii,"Adding a Library Guide"),ii.forEach(e),$n=d(sa,"."),sa.forEach(e),this.h()},h(){h(K,"name","hf:doc:metadata"),h(K,"content",JSON.stringify(gi)),h(rt,"id","the-model-hub"),h(rt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(rt,"href","#the-model-hub"),h(Z,"class","relative group"),h(at,"id","what-is-the-model-hub"),h(at,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(at,"href","#what-is-the-model-hub"),h(Q,"class","relative group"),h(ot,"href","https://huggingface.co/docs/huggingface_hub/index"),h(ot,"rel","nofollow"),h(vt,"href","https://huggingface.co/docs/transformers/index"),h(vt,"rel","nofollow"),h(Ct,"href","./models-inference"),h(R,"width","560"),h(R,"height","315"),pi(R.src,Nn="https://www.youtube-nocookie.com/embed/XvSGPZFEjDY")||h(R,"src",Nn),h(R,"title","Model Hub Video"),h(R,"frameborder","0"),h(R,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),R.allowFullscreen=!0,h(lt,"id","libraries"),h(lt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(lt,"href","#libraries"),h(tt,"class","relative group"),h(_t,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Libraries.ts"),h(_t,"rel","nofollow"),h(Mt,"align","right"),h(Et,"href","https://github.com/huggingface/transformers"),h(Et,"rel","nofollow"),h(xt,"align","right"),h(Tt,"href","https://github.com/Adapter-Hub/adapter-transformers"),h(Tt,"rel","nofollow"),h(Ft,"align","right"),h(gt,"href","https://github.com/allenai/allennlp"),h(gt,"rel","nofollow"),h(Ot,"align","right"),h(mt,"href","https://github.com/asteroid-team/asteroid"),h(mt,"rel","nofollow"),h(Wt,"align","right"),h(bt,"href","https://github.com/mindee/doctr"),h(bt,"rel","nofollow"),h(Yt,"align","right"),h(wt,"href","https://github.com/espnet/espnet"),h(wt,"rel","nofollow"),h(Bt,"align","right"),h(Dt,"href","https://github.com/flairNLP/flair"),h(Dt,"rel","nofollow"),h(jt,"align","right"),h(yt,"href","https://github.com/NVIDIA/NeMo"),h(yt,"rel","nofollow"),h(qt,"align","right"),h(At,"href","https://github.com/pyannote/pyannote-audio"),h(At,"rel","nofollow"),h(zt,"align","right"),h(Pt,"href","https://github.com/kensho-technologies/pyctcdecode"),h(Pt,"rel","nofollow"),h(Vt,"align","right"),h(Ht,"href","https://github.com/UKPLab/sentence-transformers"),h(Ht,"rel","nofollow"),h(Gt,"align","right"),h(kt,"href","https://github.com/explosion/spaCy"),h(kt,"rel","nofollow"),h(Jt,"align","right"),h(St,"href","https://speechbrain.github.io/"),h(St,"rel","nofollow"),h(Xt,"align","right"),h($t,"href","https://github.com/TensorSpeech/TensorFlowTTS"),h($t,"rel","nofollow"),h(Ut,"align","right"),h(Lt,"href","https://github.com/rwightman/pytorch-image-models"),h(Lt,"rel","nofollow"),h(Kt,"align","right"),h(Rt,"href","https://github.com/DLR-RM/stable-baselines3"),h(Rt,"rel","nofollow"),h(Zt,"align","right"),h(ht,"id","how-can-i-add-a-new-library-to-the-inference-api"),h(ht,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(ht,"href","#how-can-i-add-a-new-library-to-the-inference-api"),h(et,"class","relative group"),h(Qt,"href","/docs/hub/adding-a-library")},m(i,u){t(document.head,K),v(i,jr,u),v(i,Z,u),t(Z,rt),t(rt,te),fa(ct,te,null),t(Z,_a),t(Z,ee),t(ee,Ea),v(i,qr,u),v(i,Q,u),t(Q,at),t(at,re),fa(ut,re,null),t(Q,Ta),t(Q,ae),t(ae,ga),v(i,zr,u),v(i,N,u),t(N,ma),t(N,ot),t(ot,oe),t(oe,ba),t(ot,wa),t(N,Da),t(N,vt),t(vt,le),t(le,ya),t(N,Aa),t(N,Ct),t(Ct,Pa),t(N,Ha),v(i,Vr,u),v(i,It,u),t(It,ka),v(i,Gr,u),v(i,R,u),v(i,Jr,u),v(i,tt,u),t(tt,lt),t(lt,de),fa(pt,de,null),t(tt,Sa),t(tt,ne),t(ne,$a),v(i,Xr,u),v(i,dt,u),t(dt,La),t(dt,se),t(se,Ra),t(dt,Na),v(i,Ur,u),v(i,nt,u),t(nt,Ca),t(nt,_t),t(_t,Ia),t(nt,Ma),v(i,Kr,u),v(i,st,u),t(st,he),t(he,p),t(p,ie),t(ie,xa),t(p,Fa),t(p,fe),t(fe,Oa),t(p,Wa),t(p,ce),t(ce,Ya),t(p,Ba),t(p,Mt),t(Mt,ja),t(p,qa),t(p,ue),t(ue,za),t(p,Va),t(p,ve),t(ve,Ga),t(st,Ja),t(st,f),t(f,_),t(_,pe),t(pe,Et),t(Et,Xa),t(_,Ua),t(_,_e),t(_e,Ka),t(_,Za),t(_,Ee),t(Ee,Qa),t(_,to),t(_,xt),t(xt,eo),t(_,ro),t(_,Te),t(Te,ao),t(_,oo),t(_,ge),t(ge,lo),t(f,no),t(f,E),t(E,me),t(me,Tt),t(Tt,so),t(E,ho),t(E,be),t(be,io),t(E,fo),t(E,we),t(we,co),t(E,uo),t(E,Ft),t(Ft,vo),t(E,po),t(E,De),t(De,_o),t(E,Eo),t(E,ye),t(ye,To),t(f,go),t(f,T),t(T,Ae),t(Ae,gt),t(gt,mo),t(T,bo),t(T,Pe),t(Pe,wo),t(T,Do),t(T,He),t(He,yo),t(T,Ao),t(T,Ot),t(Ot,Po),t(T,Ho),t(T,ke),t(ke,ko),t(T,So),t(T,Se),t(Se,$o),t(f,Lo),t(f,g),t(g,$e),t($e,mt),t(mt,Ro),t(g,No),t(g,Le),t(Le,Co),t(g,Io),t(g,Re),t(Re,Mo),t(g,xo),t(g,Wt),t(Wt,Fo),t(g,Oo),t(g,Ne),t(Ne,Wo),t(g,Yo),t(g,Ce),t(Ce,Bo),t(f,jo),t(f,m),t(m,Ie),t(Ie,bt),t(bt,qo),t(m,zo),t(m,Me),t(Me,Vo),t(m,Go),t(m,xe),t(xe,Jo),t(m,Xo),t(m,Yt),t(Yt,Uo),t(m,Ko),t(m,Fe),t(Fe,Zo),t(m,Qo),t(m,Oe),t(Oe,tl),t(f,el),t(f,b),t(b,We),t(We,wt),t(wt,rl),t(b,al),t(b,Ye),t(Ye,ol),t(b,ll),t(b,Be),t(Be,dl),t(b,nl),t(b,Bt),t(Bt,sl),t(b,hl),t(b,je),t(je,il),t(b,fl),t(b,qe),t(qe,cl),t(f,ul),t(f,w),t(w,ze),t(ze,Dt),t(Dt,vl),t(w,pl),t(w,Ve),t(Ve,_l),t(w,El),t(w,Ge),t(Ge,Tl),t(w,gl),t(w,jt),t(jt,ml),t(w,bl),t(w,Je),t(Je,wl),t(w,Dl),t(w,Xe),t(Xe,yl),t(f,Al),t(f,D),t(D,Ue),t(Ue,yt),t(yt,Pl),t(D,Hl),t(D,Ke),t(Ke,kl),t(D,Sl),t(D,Ze),t(Ze,$l),t(D,Ll),t(D,qt),t(qt,Rl),t(D,Nl),t(D,Qe),t(Qe,Cl),t(D,Il),t(D,tr),t(tr,Ml),t(f,xl),t(f,y),t(y,er),t(er,At),t(At,Fl),t(y,Ol),t(y,rr),t(rr,Wl),t(y,Yl),t(y,ar),t(ar,Bl),t(y,jl),t(y,zt),t(zt,ql),t(y,zl),t(y,or),t(or,Vl),t(y,Gl),t(y,lr),t(lr,Jl),t(f,Xl),t(f,A),t(A,dr),t(dr,Pt),t(Pt,Ul),t(A,Kl),t(A,nr),t(nr,Zl),t(A,Ql),t(A,sr),t(sr,td),t(A,ed),t(A,Vt),t(Vt,rd),t(A,ad),t(A,hr),t(hr,od),t(A,ld),t(A,ir),t(ir,dd),t(f,nd),t(f,P),t(P,fr),t(fr,Ht),t(Ht,sd),t(P,hd),t(P,cr),t(cr,id),t(P,fd),t(P,ur),t(ur,cd),t(P,ud),t(P,Gt),t(Gt,vd),t(P,pd),t(P,vr),t(vr,_d),t(P,Ed),t(P,pr),t(pr,Td),t(f,gd),t(f,H),t(H,_r),t(_r,kt),t(kt,md),t(H,bd),t(H,Er),t(Er,wd),t(H,Dd),t(H,Tr),t(Tr,yd),t(H,Ad),t(H,Jt),t(Jt,Pd),t(H,Hd),t(H,gr),t(gr,kd),t(H,Sd),t(H,mr),t(mr,$d),t(f,Ld),t(f,k),t(k,br),t(br,St),t(St,Rd),t(k,Nd),t(k,wr),t(wr,Cd),t(k,Id),t(k,Dr),t(Dr,Md),t(k,xd),t(k,Xt),t(Xt,Fd),t(k,Od),t(k,yr),t(yr,Wd),t(k,Yd),t(k,Ar),t(Ar,Bd),t(f,jd),t(f,S),t(S,Pr),t(Pr,$t),t($t,qd),t(S,zd),t(S,Hr),t(Hr,Vd),t(S,Gd),t(S,kr),t(kr,Jd),t(S,Xd),t(S,Ut),t(Ut,Ud),t(S,Kd),t(S,Sr),t(Sr,Zd),t(S,Qd),t(S,$r),t($r,tn),t(f,en),t(f,$),t($,Lr),t(Lr,Lt),t(Lt,rn),t($,an),t($,Rr),t(Rr,on),t($,ln),t($,Nr),t(Nr,dn),t($,nn),t($,Kt),t(Kt,sn),t($,hn),t($,Cr),t(Cr,fn),t($,cn),t($,Ir),t(Ir,un),t(f,vn),t(f,L),t(L,Mr),t(Mr,Rt),t(Rt,pn),t(L,_n),t(L,xr),t(xr,En),t(L,Tn),t(L,Fr),t(Fr,gn),t(L,mn),t(L,Zt),t(Zt,bn),t(L,wn),t(L,Or),t(Or,Dn),t(L,yn),t(L,Wr),t(Wr,An),v(i,Zr,u),v(i,et,u),t(et,ht),t(ht,Yr),fa(Nt,Yr,null),t(et,Pn),t(et,Br),t(Br,Hn),v(i,Qr,u),v(i,it,u),t(it,kn),t(it,Qt),t(Qt,Sn),t(it,$n),ta=!0},p:_i,i(i){ta||(ca(ct.$$.fragment,i),ca(ut.$$.fragment,i),ca(pt.$$.fragment,i),ca(Nt.$$.fragment,i),ta=!0)},o(i){ua(ct.$$.fragment,i),ua(ut.$$.fragment,i),ua(pt.$$.fragment,i),ua(Nt.$$.fragment,i),ta=!1},d(i){e(K),i&&e(jr),i&&e(Z),va(ct),i&&e(qr),i&&e(Q),va(ut),i&&e(zr),i&&e(N),i&&e(Vr),i&&e(It),i&&e(Gr),i&&e(R),i&&e(Jr),i&&e(tt),va(pt),i&&e(Xr),i&&e(dt),i&&e(Ur),i&&e(nt),i&&e(Kr),i&&e(st),i&&e(Zr),i&&e(et),va(Nt),i&&e(Qr),i&&e(it)}}}const gi={local:"the-model-hub",sections:[{local:"what-is-the-model-hub",title:"What is the Model Hub?"},{local:"libraries",sections:[{local:"how-can-i-add-a-new-library-to-the-inference-api",title:"How can I add a new library to the Inference API?"}],title:"Libraries"}],title:"The Model Hub"};function mi(Rn){return Ei(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Di extends fi{constructor(K){super();ci(this,K,mi,Ti,ui,{})}}export{Di as default,gi as metadata};
