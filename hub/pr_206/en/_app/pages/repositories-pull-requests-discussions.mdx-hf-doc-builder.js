import{S as ia,i as aa,s as la,e as r,k as u,w as p,t as h,N as oa,c as i,d as t,m as c,a as o,x as d,h as f,b as a,P as b,G as s,g as n,y as m,L as na,q as g,o as v,B as _,v as ua}from"../chunks/vendor-hf-doc-builder.js";import{I as $}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Et}from"../chunks/CodeBlock-hf-doc-builder.js";function ca(Fr){let w,Pt,k,C,Ye,se,Ls,Be,Hs,qt,W,js,Ue,Rs,Ms,At,Pe,Os,It,y,re,Cs,Je,Ws,Vs,Fs,ze,Ts,Ys,Ke,Bs,Nt,E,V,Qe,ie,Us,Xe,Js,St,P,qe,Tr,zs,Ae,Yr,xt,q,F,Ze,ae,Ks,et,Qs,Gt,A,Ie,Br,Xs,Ne,Ur,Dt,I,T,tt,le,Zs,st,er,Lt,Se,tr,Ht,N,xe,Jr,sr,Ge,zr,jt,S,Y,rt,oe,rr,it,ir,Rt,De,ar,Mt,x,Le,Kr,lr,He,Qr,Ot,G,je,Xr,or,Re,Zr,Ct,Me,nr,Wt,D,Oe,ei,ur,Ce,ti,Vt,L,B,at,ne,cr,lt,hr,Ft,We,fr,Tt,ue,Yt,H,U,ot,ce,pr,nt,dr,Bt,Ve,mr,Ut,j,J,ut,he,gr,ct,vr,Jt,z,_r,fe,br,$r,zt,R,K,ht,pe,yr,ft,wr,Kt,M,Q,pt,de,kr,dt,Er,Qt,X,Pr,mt,qr,Ar,Xt,me,ge,Ir,Nr,Zt,Z,Sr,gt,xr,Gr,es,O,ee,vt,ve,Dr,_t,Lr,ts,te,Hr,bt,jr,Rr,ss,Fe,$t,Mr,rs,_e,is,be,yt,Or,as,$e,ls,ye,wt,Cr,os,we,ns,ke,kt,Wr,us,Ee,cs;return se=new $({}),ie=new $({}),ae=new $({}),le=new $({}),oe=new $({}),ne=new $({}),ue=new Et({props:{code:`git fetch origin refs/pr/42:pr/42
git checkout pr/42
# Do your changes
git add .
git commit -m "Add your change"
git push origin pr/42:refs/pr/42`,highlighted:`git fetch origin refs/pr/42:<span class="hljs-built_in">pr</span>/42
git checkout <span class="hljs-built_in">pr</span>/42
<span class="hljs-comment"># Do your changes</span>
git add .
git commit -m <span class="hljs-string">&quot;Add your change&quot;</span>
git push origin <span class="hljs-built_in">pr</span>/42:refs/pr/42`}}),ce=new $({}),he=new $({}),pe=new $({}),de=new $({}),ve=new $({}),_e=new Et({props:{code:`[remote "origin"]
	fetch = +refs/pr/*:refs/remotes/origin/pr/*`,highlighted:`[remote <span class="hljs-string">&quot;origin&quot;</span>]
	fetch = +refs/pr/*:refs/remotes/origin/pr/*`}}),$e=new Et({props:{code:"git fetch",highlighted:"git fetch"}}),we=new Et({props:{code:"git checkout pr/:num",highlighted:'git checkout <span class="hljs-built_in">pr</span>/:num'}}),Ee=new Et({props:{code:"git push origin pr/42:refs/pr/42",highlighted:'git push origin <span class="hljs-built_in">pr</span>/42:refs/pr/42'}}),{c(){w=r("meta"),Pt=u(),k=r("h1"),C=r("a"),Ye=r("span"),p(se.$$.fragment),Ls=u(),Be=r("span"),Hs=h("Pull requests and Discussions"),qt=u(),W=r("p"),js=h("We just enabled "),Ue=r("strong"),Rs=h("community contributions to repos"),Ms=h(", a feature called \u2018Hub Pull requests and Discussions\u2019. Pull requests and discussions work the same for all the repo types."),At=u(),Pe=r("p"),Os=h("At a high level, the aim is to build a simpler version of other git hosts\u2019 (like GitHub\u2019s) PRs and Issues:"),It=u(),y=r("ul"),re=r("li"),Cs=h("no forks are involved: contributors push to a special "),Je=r("code"),Ws=h("ref"),Vs=h(" branch directly on the source repo."),Fs=u(),ze=r("li"),Ts=h("there\u2019s no hard distinction between discussions and PRs: they are essentially the same so they are displayed in the same lists."),Ys=u(),Ke=r("li"),Bs=h("they are streamlined for ML (i.e. models/datasets/spaces repos), not arbitrary repos."),Nt=u(),E=r("h2"),V=r("a"),Qe=r("span"),p(ie.$$.fragment),Us=u(),Xe=r("span"),Js=h("List"),St=u(),P=r("div"),qe=r("img"),zs=u(),Ae=r("img"),xt=u(),q=r("h2"),F=r("a"),Ze=r("span"),p(ae.$$.fragment),Ks=u(),et=r("span"),Qs=h("View"),Gt=u(),A=r("div"),Ie=r("img"),Xs=u(),Ne=r("img"),Dt=u(),I=r("h2"),T=r("a"),tt=r("span"),p(le.$$.fragment),Zs=u(),st=r("span"),er=h("Editing a Discussion / Pull request title"),Lt=u(),Se=r("p"),tr=h("If you opened a PR or discussion, are the author of the repository, or have write access to it, you can edit the discussion title by clicking on the pencil button."),Ht=u(),N=r("div"),xe=r("img"),sr=u(),Ge=r("img"),jt=u(),S=r("h2"),Y=r("a"),rt=r("span"),p(oe.$$.fragment),rr=u(),it=r("span"),ir=h("Comment edition and moderation"),Rt=u(),De=r("p"),ar=h("If you wrote a comment or have write access to the repository, you can edit the content of the comment from the contextual menu in the top-right corner of the comment box."),Mt=u(),x=r("div"),Le=r("img"),lr=u(),He=r("img"),Ot=u(),G=r("div"),je=r("img"),or=u(),Re=r("img"),Ct=u(),Me=r("p"),nr=h("You can also hide a comment. Hiding a comment is irreversible, and nobody will be able to see its content nor edit it anymore."),Wt=u(),D=r("div"),Oe=r("img"),ur=u(),Ce=r("img"),Vt=u(),L=r("h2"),B=r("a"),at=r("span"),p(ne.$$.fragment),cr=u(),lt=r("span"),hr=h("How do I manage Pull requests locally?"),Ft=u(),We=r("p"),fr=h("Let\u2019s assume your PR number is 42."),Tt=u(),p(ue.$$.fragment),Yt=u(),H=r("h3"),U=r("a"),ot=r("span"),p(ce.$$.fragment),pr=u(),nt=r("span"),dr=h("Draft mode"),Bt=u(),Ve=r("p"),mr=h("Draft mode is the default status when opening a new Pull request from scratch, before making any file change (i.e. in \u201CAdvanced mode\u201D). With this status, other contributors know that your Pull request is under work and it cannot be merged. When your branch is ready, just hit the \u201CPublish\u201D button to change the status of the Pull request to \u201COpen\u201D. Note that once published you cannot go back to draft mode."),Ut=u(),j=r("h2"),J=r("a"),ut=r("span"),p(he.$$.fragment),gr=u(),ct=r("span"),vr=h("Programmatic access"),Jt=u(),z=r("p"),_r=h("Coming soon in "),fe=r("a"),br=h("https://github.com/huggingface/huggingface_hub"),$r=h(" \u{1F525}\u{1F525}"),zt=u(),R=r("h1"),K=r("a"),ht=r("span"),p(pe.$$.fragment),yr=u(),ft=r("span"),wr=h("Pull requests advanced usage"),Kt=u(),M=r("h2"),Q=r("a"),pt=r("span"),p(de.$$.fragment),kr=u(),dt=r("span"),Er=h("Where in the git repo are changes stored?"),Qt=u(),X=r("p"),Pr=h("Our Pull requests do not use forks and branches, but instead custom \u201Cbranches\u201D called "),mt=r("code"),qr=h("refs"),Ar=h(" that are stored directly on the source repo."),Xt=u(),me=r("p"),ge=r("a"),Ir=h("Git References"),Nr=h(" are the internal machinery of git which already stores tags and branches."),Zt=u(),Z=r("p"),Sr=h("The advantage of using custom refs (like "),gt=r("code"),xr=h("refs/pr/42"),Gr=h(" for instance) instead of branches is that they\u2019re not fetched (by default) by people (including the repo \u201Cowner\u201D) cloning the repo, but they can still be fetched on demand."),es=u(),O=r("h2"),ee=r("a"),vt=r("span"),p(ve.$$.fragment),Dr=u(),_t=r("span"),Lr=h("Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"),ts=u(),te=r("p"),Hr=h("You can tweak your local "),bt=r("strong"),jr=h("refspec"),Rr=h(" to fetch all Pull requests:"),ss=u(),Fe=r("ol"),$t=r("li"),Mr=h("Add this refspec to your .git/config:"),rs=u(),p(_e.$$.fragment),is=u(),be=r("ol"),yt=r("li"),Or=h("Fetch"),as=u(),p($e.$$.fragment),ls=u(),ye=r("ol"),wt=r("li"),Cr=h("create a local branch tracking the ref"),os=u(),p(we.$$.fragment),ns=u(),ke=r("ol"),kt=r("li"),Wr=h("IF you make local changes, to push to the PR ref:"),us=u(),p(Ee.$$.fragment),this.h()},l(e){const l=oa('[data-svelte="svelte-1phssyn"]',document.head);w=i(l,"META",{name:!0,content:!0}),l.forEach(t),Pt=c(e),k=i(e,"H1",{class:!0});var hs=o(k);C=i(hs,"A",{id:!0,class:!0,href:!0});var si=o(C);Ye=i(si,"SPAN",{});var ri=o(Ye);d(se.$$.fragment,ri),ri.forEach(t),si.forEach(t),Ls=c(hs),Be=i(hs,"SPAN",{});var ii=o(Be);Hs=f(ii,"Pull requests and Discussions"),ii.forEach(t),hs.forEach(t),qt=c(e),W=i(e,"P",{});var fs=o(W);js=f(fs,"We just enabled "),Ue=i(fs,"STRONG",{});var ai=o(Ue);Rs=f(ai,"community contributions to repos"),ai.forEach(t),Ms=f(fs,", a feature called \u2018Hub Pull requests and Discussions\u2019. Pull requests and discussions work the same for all the repo types."),fs.forEach(t),At=c(e),Pe=i(e,"P",{});var li=o(Pe);Os=f(li,"At a high level, the aim is to build a simpler version of other git hosts\u2019 (like GitHub\u2019s) PRs and Issues:"),li.forEach(t),It=c(e),y=i(e,"UL",{});var Te=o(y);re=i(Te,"LI",{});var ps=o(re);Cs=f(ps,"no forks are involved: contributors push to a special "),Je=i(ps,"CODE",{});var oi=o(Je);Ws=f(oi,"ref"),oi.forEach(t),Vs=f(ps," branch directly on the source repo."),ps.forEach(t),Fs=c(Te),ze=i(Te,"LI",{});var ni=o(ze);Ts=f(ni,"there\u2019s no hard distinction between discussions and PRs: they are essentially the same so they are displayed in the same lists."),ni.forEach(t),Ys=c(Te),Ke=i(Te,"LI",{});var ui=o(Ke);Bs=f(ui,"they are streamlined for ML (i.e. models/datasets/spaces repos), not arbitrary repos."),ui.forEach(t),Te.forEach(t),Nt=c(e),E=i(e,"H2",{class:!0});var ds=o(E);V=i(ds,"A",{id:!0,class:!0,href:!0});var ci=o(V);Qe=i(ci,"SPAN",{});var hi=o(Qe);d(ie.$$.fragment,hi),hi.forEach(t),ci.forEach(t),Us=c(ds),Xe=i(ds,"SPAN",{});var fi=o(Xe);Js=f(fi,"List"),fi.forEach(t),ds.forEach(t),St=c(e),P=i(e,"DIV",{class:!0});var ms=o(P);qe=i(ms,"IMG",{class:!0,src:!0}),zs=c(ms),Ae=i(ms,"IMG",{class:!0,src:!0}),ms.forEach(t),xt=c(e),q=i(e,"H2",{class:!0});var gs=o(q);F=i(gs,"A",{id:!0,class:!0,href:!0});var pi=o(F);Ze=i(pi,"SPAN",{});var di=o(Ze);d(ae.$$.fragment,di),di.forEach(t),pi.forEach(t),Ks=c(gs),et=i(gs,"SPAN",{});var mi=o(et);Qs=f(mi,"View"),mi.forEach(t),gs.forEach(t),Gt=c(e),A=i(e,"DIV",{class:!0});var vs=o(A);Ie=i(vs,"IMG",{class:!0,src:!0}),Xs=c(vs),Ne=i(vs,"IMG",{class:!0,src:!0}),vs.forEach(t),Dt=c(e),I=i(e,"H2",{class:!0});var _s=o(I);T=i(_s,"A",{id:!0,class:!0,href:!0});var gi=o(T);tt=i(gi,"SPAN",{});var vi=o(tt);d(le.$$.fragment,vi),vi.forEach(t),gi.forEach(t),Zs=c(_s),st=i(_s,"SPAN",{});var _i=o(st);er=f(_i,"Editing a Discussion / Pull request title"),_i.forEach(t),_s.forEach(t),Lt=c(e),Se=i(e,"P",{});var bi=o(Se);tr=f(bi,"If you opened a PR or discussion, are the author of the repository, or have write access to it, you can edit the discussion title by clicking on the pencil button."),bi.forEach(t),Ht=c(e),N=i(e,"DIV",{class:!0});var bs=o(N);xe=i(bs,"IMG",{class:!0,src:!0}),sr=c(bs),Ge=i(bs,"IMG",{class:!0,src:!0}),bs.forEach(t),jt=c(e),S=i(e,"H2",{class:!0});var $s=o(S);Y=i($s,"A",{id:!0,class:!0,href:!0});var $i=o(Y);rt=i($i,"SPAN",{});var yi=o(rt);d(oe.$$.fragment,yi),yi.forEach(t),$i.forEach(t),rr=c($s),it=i($s,"SPAN",{});var wi=o(it);ir=f(wi,"Comment edition and moderation"),wi.forEach(t),$s.forEach(t),Rt=c(e),De=i(e,"P",{});var ki=o(De);ar=f(ki,"If you wrote a comment or have write access to the repository, you can edit the content of the comment from the contextual menu in the top-right corner of the comment box."),ki.forEach(t),Mt=c(e),x=i(e,"DIV",{class:!0});var ys=o(x);Le=i(ys,"IMG",{class:!0,src:!0}),lr=c(ys),He=i(ys,"IMG",{class:!0,src:!0}),ys.forEach(t),Ot=c(e),G=i(e,"DIV",{class:!0});var ws=o(G);je=i(ws,"IMG",{class:!0,src:!0}),or=c(ws),Re=i(ws,"IMG",{class:!0,src:!0}),ws.forEach(t),Ct=c(e),Me=i(e,"P",{});var Ei=o(Me);nr=f(Ei,"You can also hide a comment. Hiding a comment is irreversible, and nobody will be able to see its content nor edit it anymore."),Ei.forEach(t),Wt=c(e),D=i(e,"DIV",{class:!0});var ks=o(D);Oe=i(ks,"IMG",{class:!0,src:!0}),ur=c(ks),Ce=i(ks,"IMG",{class:!0,src:!0}),ks.forEach(t),Vt=c(e),L=i(e,"H2",{class:!0});var Es=o(L);B=i(Es,"A",{id:!0,class:!0,href:!0});var Pi=o(B);at=i(Pi,"SPAN",{});var qi=o(at);d(ne.$$.fragment,qi),qi.forEach(t),Pi.forEach(t),cr=c(Es),lt=i(Es,"SPAN",{});var Ai=o(lt);hr=f(Ai,"How do I manage Pull requests locally?"),Ai.forEach(t),Es.forEach(t),Ft=c(e),We=i(e,"P",{});var Ii=o(We);fr=f(Ii,"Let\u2019s assume your PR number is 42."),Ii.forEach(t),Tt=c(e),d(ue.$$.fragment,e),Yt=c(e),H=i(e,"H3",{class:!0});var Ps=o(H);U=i(Ps,"A",{id:!0,class:!0,href:!0});var Ni=o(U);ot=i(Ni,"SPAN",{});var Si=o(ot);d(ce.$$.fragment,Si),Si.forEach(t),Ni.forEach(t),pr=c(Ps),nt=i(Ps,"SPAN",{});var xi=o(nt);dr=f(xi,"Draft mode"),xi.forEach(t),Ps.forEach(t),Bt=c(e),Ve=i(e,"P",{});var Gi=o(Ve);mr=f(Gi,"Draft mode is the default status when opening a new Pull request from scratch, before making any file change (i.e. in \u201CAdvanced mode\u201D). With this status, other contributors know that your Pull request is under work and it cannot be merged. When your branch is ready, just hit the \u201CPublish\u201D button to change the status of the Pull request to \u201COpen\u201D. Note that once published you cannot go back to draft mode."),Gi.forEach(t),Ut=c(e),j=i(e,"H2",{class:!0});var qs=o(j);J=i(qs,"A",{id:!0,class:!0,href:!0});var Di=o(J);ut=i(Di,"SPAN",{});var Li=o(ut);d(he.$$.fragment,Li),Li.forEach(t),Di.forEach(t),gr=c(qs),ct=i(qs,"SPAN",{});var Hi=o(ct);vr=f(Hi,"Programmatic access"),Hi.forEach(t),qs.forEach(t),Jt=c(e),z=i(e,"P",{});var As=o(z);_r=f(As,"Coming soon in "),fe=i(As,"A",{href:!0,rel:!0});var ji=o(fe);br=f(ji,"https://github.com/huggingface/huggingface_hub"),ji.forEach(t),$r=f(As," \u{1F525}\u{1F525}"),As.forEach(t),zt=c(e),R=i(e,"H1",{class:!0});var Is=o(R);K=i(Is,"A",{id:!0,class:!0,href:!0});var Ri=o(K);ht=i(Ri,"SPAN",{});var Mi=o(ht);d(pe.$$.fragment,Mi),Mi.forEach(t),Ri.forEach(t),yr=c(Is),ft=i(Is,"SPAN",{});var Oi=o(ft);wr=f(Oi,"Pull requests advanced usage"),Oi.forEach(t),Is.forEach(t),Kt=c(e),M=i(e,"H2",{class:!0});var Ns=o(M);Q=i(Ns,"A",{id:!0,class:!0,href:!0});var Ci=o(Q);pt=i(Ci,"SPAN",{});var Wi=o(pt);d(de.$$.fragment,Wi),Wi.forEach(t),Ci.forEach(t),kr=c(Ns),dt=i(Ns,"SPAN",{});var Vi=o(dt);Er=f(Vi,"Where in the git repo are changes stored?"),Vi.forEach(t),Ns.forEach(t),Qt=c(e),X=i(e,"P",{});var Ss=o(X);Pr=f(Ss,"Our Pull requests do not use forks and branches, but instead custom \u201Cbranches\u201D called "),mt=i(Ss,"CODE",{});var Fi=o(mt);qr=f(Fi,"refs"),Fi.forEach(t),Ar=f(Ss," that are stored directly on the source repo."),Ss.forEach(t),Xt=c(e),me=i(e,"P",{});var Vr=o(me);ge=i(Vr,"A",{href:!0,rel:!0});var Ti=o(ge);Ir=f(Ti,"Git References"),Ti.forEach(t),Nr=f(Vr," are the internal machinery of git which already stores tags and branches."),Vr.forEach(t),Zt=c(e),Z=i(e,"P",{});var xs=o(Z);Sr=f(xs,"The advantage of using custom refs (like "),gt=i(xs,"CODE",{});var Yi=o(gt);xr=f(Yi,"refs/pr/42"),Yi.forEach(t),Gr=f(xs," for instance) instead of branches is that they\u2019re not fetched (by default) by people (including the repo \u201Cowner\u201D) cloning the repo, but they can still be fetched on demand."),xs.forEach(t),es=c(e),O=i(e,"H2",{class:!0});var Gs=o(O);ee=i(Gs,"A",{id:!0,class:!0,href:!0});var Bi=o(ee);vt=i(Bi,"SPAN",{});var Ui=o(vt);d(ve.$$.fragment,Ui),Ui.forEach(t),Bi.forEach(t),Dr=c(Gs),_t=i(Gs,"SPAN",{});var Ji=o(_t);Lr=f(Ji,"Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"),Ji.forEach(t),Gs.forEach(t),ts=c(e),te=i(e,"P",{});var Ds=o(te);Hr=f(Ds,"You can tweak your local "),bt=i(Ds,"STRONG",{});var zi=o(bt);jr=f(zi,"refspec"),zi.forEach(t),Rr=f(Ds," to fetch all Pull requests:"),Ds.forEach(t),ss=c(e),Fe=i(e,"OL",{});var Ki=o(Fe);$t=i(Ki,"LI",{});var Qi=o($t);Mr=f(Qi,"Add this refspec to your .git/config:"),Qi.forEach(t),Ki.forEach(t),rs=c(e),d(_e.$$.fragment,e),is=c(e),be=i(e,"OL",{start:!0});var Xi=o(be);yt=i(Xi,"LI",{});var Zi=o(yt);Or=f(Zi,"Fetch"),Zi.forEach(t),Xi.forEach(t),as=c(e),d($e.$$.fragment,e),ls=c(e),ye=i(e,"OL",{start:!0});var ea=o(ye);wt=i(ea,"LI",{});var ta=o(wt);Cr=f(ta,"create a local branch tracking the ref"),ta.forEach(t),ea.forEach(t),os=c(e),d(we.$$.fragment,e),ns=c(e),ke=i(e,"OL",{start:!0});var sa=o(ke);kt=i(sa,"LI",{});var ra=o(kt);Wr=f(ra,"IF you make local changes, to push to the PR ref:"),ra.forEach(t),sa.forEach(t),us=c(e),d(Ee.$$.fragment,e),this.h()},h(){a(w,"name","hf:doc:metadata"),a(w,"content",JSON.stringify(ha)),a(C,"id","pull-requests-and-discussions"),a(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(C,"href","#pull-requests-and-discussions"),a(k,"class","relative group"),a(V,"id","list"),a(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(V,"href","#list"),a(E,"class","relative group"),a(qe,"class","block dark:hidden"),b(qe.src,Tr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-list.png")||a(qe,"src",Tr),a(Ae,"class","hidden dark:block"),b(Ae.src,Yr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-list-dark.png")||a(Ae,"src",Yr),a(P,"class","flex justify-center"),a(F,"id","view"),a(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(F,"href","#view"),a(q,"class","relative group"),a(Ie,"class","block dark:hidden"),b(Ie.src,Br="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-view.png")||a(Ie,"src",Br),a(Ne,"class","hidden dark:block"),b(Ne.src,Ur="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-view-dark.png")||a(Ne,"src",Ur),a(A,"class","flex justify-center"),a(T,"id","editing-a-discussion-pull-request-title"),a(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(T,"href","#editing-a-discussion-pull-request-title"),a(I,"class","relative group"),a(xe,"class","block dark:hidden"),b(xe.src,Jr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-edit-title.PNG")||a(xe,"src",Jr),a(Ge,"class","hidden dark:block"),b(Ge.src,zr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-edit-title-dark.PNG")||a(Ge,"src",zr),a(N,"class","flex justify-center"),a(Y,"id","comment-edition-and-moderation"),a(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(Y,"href","#comment-edition-and-moderation"),a(S,"class","relative group"),a(Le,"class","block dark:hidden"),b(Le.src,Kr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu.png")||a(Le,"src",Kr),a(He,"class","hidden dark:block"),b(He.src,Qr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-dark.png")||a(He,"src",Qr),a(x,"class","flex justify-center"),a(je,"class","block dark:hidden"),b(je.src,Xr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-edit.png")||a(je,"src",Xr),a(Re,"class","hidden dark:block"),b(Re.src,Zr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-edit-dark.png")||a(Re,"src",Zr),a(G,"class","flex justify-center"),a(Oe,"class","block dark:hidden"),b(Oe.src,ei="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-hidden.png")||a(Oe,"src",ei),a(Ce,"class","hidden dark:block"),b(Ce.src,ti="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-hidden-dark.png")||a(Ce,"src",ti),a(D,"class","flex justify-center"),a(B,"id","how-do-i-manage-pull-requests-locally"),a(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(B,"href","#how-do-i-manage-pull-requests-locally"),a(L,"class","relative group"),a(U,"id","draft-mode"),a(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(U,"href","#draft-mode"),a(H,"class","relative group"),a(J,"id","programmatic-access"),a(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(J,"href","#programmatic-access"),a(j,"class","relative group"),a(fe,"href","https://github.com/huggingface/huggingface_hub"),a(fe,"rel","nofollow"),a(K,"id","pull-requests-advanced-usage"),a(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(K,"href","#pull-requests-advanced-usage"),a(R,"class","relative group"),a(Q,"id","where-in-the-git-repo-are-changes-stored"),a(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(Q,"href","#where-in-the-git-repo-are-changes-stored"),a(M,"class","relative group"),a(ge,"href","https://git-scm.com/book/en/v2/Git-Internals-Git-References"),a(ge,"rel","nofollow"),a(ee,"id","fetching-all-pull-requests-for-git-magicians"),a(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(ee,"href","#fetching-all-pull-requests-for-git-magicians"),a(O,"class","relative group"),a(be,"start","2"),a(ye,"start","3"),a(ke,"start","4")},m(e,l){s(document.head,w),n(e,Pt,l),n(e,k,l),s(k,C),s(C,Ye),m(se,Ye,null),s(k,Ls),s(k,Be),s(Be,Hs),n(e,qt,l),n(e,W,l),s(W,js),s(W,Ue),s(Ue,Rs),s(W,Ms),n(e,At,l),n(e,Pe,l),s(Pe,Os),n(e,It,l),n(e,y,l),s(y,re),s(re,Cs),s(re,Je),s(Je,Ws),s(re,Vs),s(y,Fs),s(y,ze),s(ze,Ts),s(y,Ys),s(y,Ke),s(Ke,Bs),n(e,Nt,l),n(e,E,l),s(E,V),s(V,Qe),m(ie,Qe,null),s(E,Us),s(E,Xe),s(Xe,Js),n(e,St,l),n(e,P,l),s(P,qe),s(P,zs),s(P,Ae),n(e,xt,l),n(e,q,l),s(q,F),s(F,Ze),m(ae,Ze,null),s(q,Ks),s(q,et),s(et,Qs),n(e,Gt,l),n(e,A,l),s(A,Ie),s(A,Xs),s(A,Ne),n(e,Dt,l),n(e,I,l),s(I,T),s(T,tt),m(le,tt,null),s(I,Zs),s(I,st),s(st,er),n(e,Lt,l),n(e,Se,l),s(Se,tr),n(e,Ht,l),n(e,N,l),s(N,xe),s(N,sr),s(N,Ge),n(e,jt,l),n(e,S,l),s(S,Y),s(Y,rt),m(oe,rt,null),s(S,rr),s(S,it),s(it,ir),n(e,Rt,l),n(e,De,l),s(De,ar),n(e,Mt,l),n(e,x,l),s(x,Le),s(x,lr),s(x,He),n(e,Ot,l),n(e,G,l),s(G,je),s(G,or),s(G,Re),n(e,Ct,l),n(e,Me,l),s(Me,nr),n(e,Wt,l),n(e,D,l),s(D,Oe),s(D,ur),s(D,Ce),n(e,Vt,l),n(e,L,l),s(L,B),s(B,at),m(ne,at,null),s(L,cr),s(L,lt),s(lt,hr),n(e,Ft,l),n(e,We,l),s(We,fr),n(e,Tt,l),m(ue,e,l),n(e,Yt,l),n(e,H,l),s(H,U),s(U,ot),m(ce,ot,null),s(H,pr),s(H,nt),s(nt,dr),n(e,Bt,l),n(e,Ve,l),s(Ve,mr),n(e,Ut,l),n(e,j,l),s(j,J),s(J,ut),m(he,ut,null),s(j,gr),s(j,ct),s(ct,vr),n(e,Jt,l),n(e,z,l),s(z,_r),s(z,fe),s(fe,br),s(z,$r),n(e,zt,l),n(e,R,l),s(R,K),s(K,ht),m(pe,ht,null),s(R,yr),s(R,ft),s(ft,wr),n(e,Kt,l),n(e,M,l),s(M,Q),s(Q,pt),m(de,pt,null),s(M,kr),s(M,dt),s(dt,Er),n(e,Qt,l),n(e,X,l),s(X,Pr),s(X,mt),s(mt,qr),s(X,Ar),n(e,Xt,l),n(e,me,l),s(me,ge),s(ge,Ir),s(me,Nr),n(e,Zt,l),n(e,Z,l),s(Z,Sr),s(Z,gt),s(gt,xr),s(Z,Gr),n(e,es,l),n(e,O,l),s(O,ee),s(ee,vt),m(ve,vt,null),s(O,Dr),s(O,_t),s(_t,Lr),n(e,ts,l),n(e,te,l),s(te,Hr),s(te,bt),s(bt,jr),s(te,Rr),n(e,ss,l),n(e,Fe,l),s(Fe,$t),s($t,Mr),n(e,rs,l),m(_e,e,l),n(e,is,l),n(e,be,l),s(be,yt),s(yt,Or),n(e,as,l),m($e,e,l),n(e,ls,l),n(e,ye,l),s(ye,wt),s(wt,Cr),n(e,os,l),m(we,e,l),n(e,ns,l),n(e,ke,l),s(ke,kt),s(kt,Wr),n(e,us,l),m(Ee,e,l),cs=!0},p:na,i(e){cs||(g(se.$$.fragment,e),g(ie.$$.fragment,e),g(ae.$$.fragment,e),g(le.$$.fragment,e),g(oe.$$.fragment,e),g(ne.$$.fragment,e),g(ue.$$.fragment,e),g(ce.$$.fragment,e),g(he.$$.fragment,e),g(pe.$$.fragment,e),g(de.$$.fragment,e),g(ve.$$.fragment,e),g(_e.$$.fragment,e),g($e.$$.fragment,e),g(we.$$.fragment,e),g(Ee.$$.fragment,e),cs=!0)},o(e){v(se.$$.fragment,e),v(ie.$$.fragment,e),v(ae.$$.fragment,e),v(le.$$.fragment,e),v(oe.$$.fragment,e),v(ne.$$.fragment,e),v(ue.$$.fragment,e),v(ce.$$.fragment,e),v(he.$$.fragment,e),v(pe.$$.fragment,e),v(de.$$.fragment,e),v(ve.$$.fragment,e),v(_e.$$.fragment,e),v($e.$$.fragment,e),v(we.$$.fragment,e),v(Ee.$$.fragment,e),cs=!1},d(e){t(w),e&&t(Pt),e&&t(k),_(se),e&&t(qt),e&&t(W),e&&t(At),e&&t(Pe),e&&t(It),e&&t(y),e&&t(Nt),e&&t(E),_(ie),e&&t(St),e&&t(P),e&&t(xt),e&&t(q),_(ae),e&&t(Gt),e&&t(A),e&&t(Dt),e&&t(I),_(le),e&&t(Lt),e&&t(Se),e&&t(Ht),e&&t(N),e&&t(jt),e&&t(S),_(oe),e&&t(Rt),e&&t(De),e&&t(Mt),e&&t(x),e&&t(Ot),e&&t(G),e&&t(Ct),e&&t(Me),e&&t(Wt),e&&t(D),e&&t(Vt),e&&t(L),_(ne),e&&t(Ft),e&&t(We),e&&t(Tt),_(ue,e),e&&t(Yt),e&&t(H),_(ce),e&&t(Bt),e&&t(Ve),e&&t(Ut),e&&t(j),_(he),e&&t(Jt),e&&t(z),e&&t(zt),e&&t(R),_(pe),e&&t(Kt),e&&t(M),_(de),e&&t(Qt),e&&t(X),e&&t(Xt),e&&t(me),e&&t(Zt),e&&t(Z),e&&t(es),e&&t(O),_(ve),e&&t(ts),e&&t(te),e&&t(ss),e&&t(Fe),e&&t(rs),_(_e,e),e&&t(is),e&&t(be),e&&t(as),_($e,e),e&&t(ls),e&&t(ye),e&&t(os),_(we,e),e&&t(ns),e&&t(ke),e&&t(us),_(Ee,e)}}}const ha={local:"pull-requests-advanced-usage",sections:[{local:"where-in-the-git-repo-are-changes-stored",title:"Where in the git repo are changes stored?"},{local:"fetching-all-pull-requests-for-git-magicians",title:"Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"}],title:"Pull requests advanced usage"};function fa(Fr){return ua(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ga extends ia{constructor(w){super();aa(this,w,fa,ca,la,{})}}export{ga as default,ha as metadata};
