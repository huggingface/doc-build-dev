import{S as ur,i as pr,s as gr,e as r,k as d,w as M,t as l,N as vr,c as a,d as s,m,a as n,x as N,h as c,b as o,P as ve,G as t,g as f,y as U,L as _r,q as C,o as D,B as O,v as wr}from"../chunks/vendor-hf-doc-builder.js";import{I as Ce}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as ks}from"../chunks/CodeBlock-hf-doc-builder.js";function br(xs){let v,De,_,S,_e,G,yt,we,$t,Oe,Y,be,Et,kt,Ge,w,A,ye,F,xt,$e,St,Ye,h,At,Ee,It,Tt,V,Lt,Pt,B,ke,Ht,jt,J,xe,qt,Mt,K,Nt,Ut,Fe,ie,Ct,Ve,u,Se,Dt,Ot,Ae,Gt,Yt,Ie,Ft,Vt,Te,Bt,Be,b,le,Ss,Jt,ce,As,Je,y,I,Le,R,Kt,Pe,Rt,Ke,fe,zt,Re,z,ze,de,Qt,Qe,Q,We,T,Wt,He,Xt,Zt,Xe,$,me,Is,es,he,Ts,Ze,E,ue,Ls,ts,pe,Ps,et,k,L,je,W,ss,qe,rs,tt,P,as,Me,ns,os,st,X,rt,H,is,Z,ls,cs,at,x,j,Ne,ee,fs,Ue,ds,nt,g,te,ms,se,hs,us,ps,re,gs,ae,vs,_s,ws,ne,bs,oe,ys,$s,ot;return G=new Ce({}),F=new Ce({}),R=new Ce({}),z=new ks({props:{code:`from sentence_transformers import SentenceTransformer
model = SentenceTransformer('model_name')`,highlighted:`<span class="hljs-keyword">from</span> sentence_transformers <span class="hljs-keyword">import</span> SentenceTransformer
model = SentenceTransformer(<span class="hljs-string">&#x27;model_name&#x27;</span>)`}}),Q=new ks({props:{code:`from sentence_transformers import SentenceTransformer, util
model = SentenceTransformer('multi-qa-MiniLM-L6-cos-v1')

query_embedding = model.encode('How big is London')
passage_embedding = model.encode(['London has 9,787,426 inhabitants at the 2011 census',
                                  'London is known for its finacial district'])

print("Similarity:", util.dot_score(query_embedding, passage_embedding))`,highlighted:`<span class="hljs-keyword">from</span> sentence_transformers <span class="hljs-keyword">import</span> SentenceTransformer, util
model = SentenceTransformer(<span class="hljs-string">&#x27;multi-qa-MiniLM-L6-cos-v1&#x27;</span>)

query_embedding = model.encode(<span class="hljs-string">&#x27;How big is London&#x27;</span>)
passage_embedding = model.encode([<span class="hljs-string">&#x27;London has 9,787,426 inhabitants at the 2011 census&#x27;</span>,
                                  <span class="hljs-string">&#x27;London is known for its finacial district&#x27;</span>])

<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Similarity:&quot;</span>, util.dot_score(query_embedding, passage_embedding))`}}),W=new Ce({}),X=new ks({props:{code:`from sentence_transformers import SentenceTransformer

# Load or train a model
model.save_to_hub("my_new_model")`,highlighted:`<span class="hljs-keyword">from</span> sentence_transformers <span class="hljs-keyword">import</span> SentenceTransformer

<span class="hljs-comment"># Load or train a model</span>
model.save_to_hub(<span class="hljs-string">&quot;my_new_model&quot;</span>)`}}),ee=new Ce({}),{c(){v=r("meta"),De=d(),_=r("h1"),S=r("a"),_e=r("span"),M(G.$$.fragment),yt=d(),we=r("span"),$t=l("Using Sentence Transformers at Hugging Face"),Oe=d(),Y=r("p"),be=r("code"),Et=l("sentence-transformers"),kt=l(" is a library that provides easy methods to compute embeddings (dense vector representations) for sentences, paragraphs and images. Texts are embedded in a vector space such that similar text is close, which enables applications such as semantic search, clustering, and retrieval."),Ge=d(),w=r("h2"),A=r("a"),ye=r("span"),M(F.$$.fragment),xt=d(),$e=r("span"),St=l("Exploring sentence-transformers in the Hub"),Ye=d(),h=r("p"),At=l("You can find over 500 hundred "),Ee=r("code"),It=l("sentence-transformer"),Tt=l(" models by filtering at the left of the "),V=r("a"),Lt=l("models page"),Pt=l(". Most of these models support different tasks, such as doing "),B=r("a"),ke=r("code"),Ht=l("feature-extraction"),jt=l(" to generate the embedding, and "),J=r("a"),xe=r("code"),qt=l("sentence-similarity"),Mt=l(" as a way to determine how similar is a given sentence to other. You can also find an overview of the official pre-trained models in "),K=r("a"),Nt=l("the official docs"),Ut=l("."),Fe=d(),ie=r("p"),Ct=l("All models on the Hub come up with features:"),Ve=d(),u=r("ol"),Se=r("li"),Dt=l("An automatically generated model card with a description, example code snippets, architecture overview, and more."),Ot=d(),Ae=r("li"),Gt=l("Metadata tags that help for discoverability and contain information such as license."),Yt=d(),Ie=r("li"),Ft=l("An interactive widget you can use to play out with the model directly in the browser."),Vt=d(),Te=r("li"),Bt=l("An Inference API that allows to make inference requests."),Be=d(),b=r("div"),le=r("img"),Jt=d(),ce=r("img"),Je=d(),y=r("h2"),I=r("a"),Le=r("span"),M(R.$$.fragment),Kt=d(),Pe=r("span"),Rt=l("Using existing models"),Ke=d(),fe=r("p"),zt=l("The pre-trained models on the Hub can be loaded with a single line of code"),Re=d(),M(z.$$.fragment),ze=d(),de=r("p"),Qt=l("Here is an example that encodes sentences and then computes the distance between them for doing semantic search."),Qe=d(),M(Q.$$.fragment),We=d(),T=r("p"),Wt=l("If you want to see how to load a specific model, you can click "),He=r("code"),Xt=l("Use in sentence-transformers"),Zt=l(" and you will be given a working snippet that you can load it!"),Xe=d(),$=r("div"),me=r("img"),es=d(),he=r("img"),Ze=d(),E=r("div"),ue=r("img"),ts=d(),pe=r("img"),et=d(),k=r("h2"),L=r("a"),je=r("span"),M(W.$$.fragment),ss=d(),qe=r("span"),rs=l("Sharing your models"),tt=d(),P=r("p"),as=l("You can share your Sentence Transformers by using the "),Me=r("code"),ns=l("save_to_hub"),os=l(" method from a trained model."),st=d(),M(X.$$.fragment),rt=d(),H=r("p"),is=l("This command creates a repository with an automatically generated model card, an inference widget, example code snippets, and more! "),Z=r("a"),ls=l("Here"),cs=l(" is an example."),at=d(),x=r("h2"),j=r("a"),Ne=r("span"),M(ee.$$.fragment),fs=d(),Ue=r("span"),ds=l("Additional resources"),nt=d(),g=r("ul"),te=r("li"),ms=l("Sentence Transformers "),se=r("a"),hs=l("library"),us=l("."),ps=d(),re=r("li"),gs=l("Sentence Transformers "),ae=r("a"),vs=l("docs"),_s=l("."),ws=d(),ne=r("li"),bs=l("Integration with Hub "),oe=r("a"),ys=l("announcement"),$s=l("."),this.h()},l(e){const i=vr('[data-svelte="svelte-1phssyn"]',document.head);v=a(i,"META",{name:!0,content:!0}),i.forEach(s),De=m(e),_=a(e,"H1",{class:!0});var it=n(_);S=a(it,"A",{id:!0,class:!0,href:!0});var Hs=n(S);_e=a(Hs,"SPAN",{});var js=n(_e);N(G.$$.fragment,js),js.forEach(s),Hs.forEach(s),yt=m(it),we=a(it,"SPAN",{});var qs=n(we);$t=c(qs,"Using Sentence Transformers at Hugging Face"),qs.forEach(s),it.forEach(s),Oe=m(e),Y=a(e,"P",{});var Es=n(Y);be=a(Es,"CODE",{});var Ms=n(be);Et=c(Ms,"sentence-transformers"),Ms.forEach(s),kt=c(Es," is a library that provides easy methods to compute embeddings (dense vector representations) for sentences, paragraphs and images. Texts are embedded in a vector space such that similar text is close, which enables applications such as semantic search, clustering, and retrieval."),Es.forEach(s),Ge=m(e),w=a(e,"H2",{class:!0});var lt=n(w);A=a(lt,"A",{id:!0,class:!0,href:!0});var Ns=n(A);ye=a(Ns,"SPAN",{});var Us=n(ye);N(F.$$.fragment,Us),Us.forEach(s),Ns.forEach(s),xt=m(lt),$e=a(lt,"SPAN",{});var Cs=n($e);St=c(Cs,"Exploring sentence-transformers in the Hub"),Cs.forEach(s),lt.forEach(s),Ye=m(e),h=a(e,"P",{});var p=n(h);At=c(p,"You can find over 500 hundred "),Ee=a(p,"CODE",{});var Ds=n(Ee);It=c(Ds,"sentence-transformer"),Ds.forEach(s),Tt=c(p," models by filtering at the left of the "),V=a(p,"A",{href:!0,rel:!0});var Os=n(V);Lt=c(Os,"models page"),Os.forEach(s),Pt=c(p,". Most of these models support different tasks, such as doing "),B=a(p,"A",{href:!0,rel:!0});var Gs=n(B);ke=a(Gs,"CODE",{});var Ys=n(ke);Ht=c(Ys,"feature-extraction"),Ys.forEach(s),Gs.forEach(s),jt=c(p," to generate the embedding, and "),J=a(p,"A",{href:!0,rel:!0});var Fs=n(J);xe=a(Fs,"CODE",{});var Vs=n(xe);qt=c(Vs,"sentence-similarity"),Vs.forEach(s),Fs.forEach(s),Mt=c(p," as a way to determine how similar is a given sentence to other. You can also find an overview of the official pre-trained models in "),K=a(p,"A",{href:!0,rel:!0});var Bs=n(K);Nt=c(Bs,"the official docs"),Bs.forEach(s),Ut=c(p,"."),p.forEach(s),Fe=m(e),ie=a(e,"P",{});var Js=n(ie);Ct=c(Js,"All models on the Hub come up with features:"),Js.forEach(s),Ve=m(e),u=a(e,"OL",{});var q=n(u);Se=a(q,"LI",{});var Ks=n(Se);Dt=c(Ks,"An automatically generated model card with a description, example code snippets, architecture overview, and more."),Ks.forEach(s),Ot=m(q),Ae=a(q,"LI",{});var Rs=n(Ae);Gt=c(Rs,"Metadata tags that help for discoverability and contain information such as license."),Rs.forEach(s),Yt=m(q),Ie=a(q,"LI",{});var zs=n(Ie);Ft=c(zs,"An interactive widget you can use to play out with the model directly in the browser."),zs.forEach(s),Vt=m(q),Te=a(q,"LI",{});var Qs=n(Te);Bt=c(Qs,"An Inference API that allows to make inference requests."),Qs.forEach(s),q.forEach(s),Be=m(e),b=a(e,"DIV",{class:!0});var ct=n(b);le=a(ct,"IMG",{class:!0,src:!0}),Jt=m(ct),ce=a(ct,"IMG",{class:!0,src:!0}),ct.forEach(s),Je=m(e),y=a(e,"H2",{class:!0});var ft=n(y);I=a(ft,"A",{id:!0,class:!0,href:!0});var Ws=n(I);Le=a(Ws,"SPAN",{});var Xs=n(Le);N(R.$$.fragment,Xs),Xs.forEach(s),Ws.forEach(s),Kt=m(ft),Pe=a(ft,"SPAN",{});var Zs=n(Pe);Rt=c(Zs,"Using existing models"),Zs.forEach(s),ft.forEach(s),Ke=m(e),fe=a(e,"P",{});var er=n(fe);zt=c(er,"The pre-trained models on the Hub can be loaded with a single line of code"),er.forEach(s),Re=m(e),N(z.$$.fragment,e),ze=m(e),de=a(e,"P",{});var tr=n(de);Qt=c(tr,"Here is an example that encodes sentences and then computes the distance between them for doing semantic search."),tr.forEach(s),Qe=m(e),N(Q.$$.fragment,e),We=m(e),T=a(e,"P",{});var dt=n(T);Wt=c(dt,"If you want to see how to load a specific model, you can click "),He=a(dt,"CODE",{});var sr=n(He);Xt=c(sr,"Use in sentence-transformers"),sr.forEach(s),Zt=c(dt," and you will be given a working snippet that you can load it!"),dt.forEach(s),Xe=m(e),$=a(e,"DIV",{class:!0});var mt=n($);me=a(mt,"IMG",{class:!0,src:!0}),es=m(mt),he=a(mt,"IMG",{class:!0,src:!0}),mt.forEach(s),Ze=m(e),E=a(e,"DIV",{class:!0});var ht=n(E);ue=a(ht,"IMG",{class:!0,src:!0}),ts=m(ht),pe=a(ht,"IMG",{class:!0,src:!0}),ht.forEach(s),et=m(e),k=a(e,"H2",{class:!0});var ut=n(k);L=a(ut,"A",{id:!0,class:!0,href:!0});var rr=n(L);je=a(rr,"SPAN",{});var ar=n(je);N(W.$$.fragment,ar),ar.forEach(s),rr.forEach(s),ss=m(ut),qe=a(ut,"SPAN",{});var nr=n(qe);rs=c(nr,"Sharing your models"),nr.forEach(s),ut.forEach(s),tt=m(e),P=a(e,"P",{});var pt=n(P);as=c(pt,"You can share your Sentence Transformers by using the "),Me=a(pt,"CODE",{});var or=n(Me);ns=c(or,"save_to_hub"),or.forEach(s),os=c(pt," method from a trained model."),pt.forEach(s),st=m(e),N(X.$$.fragment,e),rt=m(e),H=a(e,"P",{});var gt=n(H);is=c(gt,"This command creates a repository with an automatically generated model card, an inference widget, example code snippets, and more! "),Z=a(gt,"A",{href:!0,rel:!0});var ir=n(Z);ls=c(ir,"Here"),ir.forEach(s),cs=c(gt," is an example."),gt.forEach(s),at=m(e),x=a(e,"H2",{class:!0});var vt=n(x);j=a(vt,"A",{id:!0,class:!0,href:!0});var lr=n(j);Ne=a(lr,"SPAN",{});var cr=n(Ne);N(ee.$$.fragment,cr),cr.forEach(s),lr.forEach(s),fs=m(vt),Ue=a(vt,"SPAN",{});var fr=n(Ue);ds=c(fr,"Additional resources"),fr.forEach(s),vt.forEach(s),nt=m(e),g=a(e,"UL",{});var ge=n(g);te=a(ge,"LI",{});var _t=n(te);ms=c(_t,"Sentence Transformers "),se=a(_t,"A",{href:!0,rel:!0});var dr=n(se);hs=c(dr,"library"),dr.forEach(s),us=c(_t,"."),_t.forEach(s),ps=m(ge),re=a(ge,"LI",{});var wt=n(re);gs=c(wt,"Sentence Transformers "),ae=a(wt,"A",{href:!0,rel:!0});var mr=n(ae);vs=c(mr,"docs"),mr.forEach(s),_s=c(wt,"."),wt.forEach(s),ws=m(ge),ne=a(ge,"LI",{});var bt=n(ne);bs=c(bt,"Integration with Hub "),oe=a(bt,"A",{href:!0,rel:!0});var hr=n(oe);ys=c(hr,"announcement"),hr.forEach(s),$s=c(bt,"."),bt.forEach(s),ge.forEach(s),this.h()},h(){o(v,"name","hf:doc:metadata"),o(v,"content",JSON.stringify(yr)),o(S,"id","using-sentence-transformers-at-hugging-face"),o(S,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(S,"href","#using-sentence-transformers-at-hugging-face"),o(_,"class","relative group"),o(A,"id","exploring-sentencetransformers-in-the-hub"),o(A,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(A,"href","#exploring-sentencetransformers-in-the-hub"),o(w,"class","relative group"),o(V,"href","https://huggingface.co/models?library=sentence-transformers&sort=downloads"),o(V,"rel","nofollow"),o(B,"href","https://huggingface.co/models?library=sentence-transformers&pipeline_tag=feature-extraction&sort=downloads"),o(B,"rel","nofollow"),o(J,"href","https://huggingface.co/models?library=sentence-transformers&pipeline_tag=sentence-similarity&sort=downloads"),o(J,"rel","nofollow"),o(K,"href","https://www.sbert.net/docs/pretrained_models.html"),o(K,"rel","nofollow"),o(le,"class","block dark:hidden"),ve(le.src,Ss="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_widget.png")||o(le,"src",Ss),o(ce,"class","hidden dark:block"),ve(ce.src,As="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_widget-dark.png")||o(ce,"src",As),o(b,"class","flex justify-center"),o(I,"id","using-existing-models"),o(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(I,"href","#using-existing-models"),o(y,"class","relative group"),o(me,"class","block dark:hidden"),ve(me.src,Is="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet1.png")||o(me,"src",Is),o(he,"class","hidden dark:block"),ve(he.src,Ts="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet1-dark.png")||o(he,"src",Ts),o($,"class","flex justify-center"),o(ue,"class","block dark:hidden"),ve(ue.src,Ls="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet2.png")||o(ue,"src",Ls),o(pe,"class","hidden dark:block"),ve(pe.src,Ps="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet2-dark.png")||o(pe,"src",Ps),o(E,"class","flex justify-center"),o(L,"id","sharing-your-models"),o(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(L,"href","#sharing-your-models"),o(k,"class","relative group"),o(Z,"href","https://huggingface.co/osanseviero/my_new_model"),o(Z,"rel","nofollow"),o(j,"id","additional-resources"),o(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(j,"href","#additional-resources"),o(x,"class","relative group"),o(se,"href","https://github.com/UKPLab/sentence-transformers"),o(se,"rel","nofollow"),o(ae,"href","https://www.sbert.net/"),o(ae,"rel","nofollow"),o(oe,"href","https://huggingface.co/blog/sentence-transformers-in-the-hub"),o(oe,"rel","nofollow")},m(e,i){t(document.head,v),f(e,De,i),f(e,_,i),t(_,S),t(S,_e),U(G,_e,null),t(_,yt),t(_,we),t(we,$t),f(e,Oe,i),f(e,Y,i),t(Y,be),t(be,Et),t(Y,kt),f(e,Ge,i),f(e,w,i),t(w,A),t(A,ye),U(F,ye,null),t(w,xt),t(w,$e),t($e,St),f(e,Ye,i),f(e,h,i),t(h,At),t(h,Ee),t(Ee,It),t(h,Tt),t(h,V),t(V,Lt),t(h,Pt),t(h,B),t(B,ke),t(ke,Ht),t(h,jt),t(h,J),t(J,xe),t(xe,qt),t(h,Mt),t(h,K),t(K,Nt),t(h,Ut),f(e,Fe,i),f(e,ie,i),t(ie,Ct),f(e,Ve,i),f(e,u,i),t(u,Se),t(Se,Dt),t(u,Ot),t(u,Ae),t(Ae,Gt),t(u,Yt),t(u,Ie),t(Ie,Ft),t(u,Vt),t(u,Te),t(Te,Bt),f(e,Be,i),f(e,b,i),t(b,le),t(b,Jt),t(b,ce),f(e,Je,i),f(e,y,i),t(y,I),t(I,Le),U(R,Le,null),t(y,Kt),t(y,Pe),t(Pe,Rt),f(e,Ke,i),f(e,fe,i),t(fe,zt),f(e,Re,i),U(z,e,i),f(e,ze,i),f(e,de,i),t(de,Qt),f(e,Qe,i),U(Q,e,i),f(e,We,i),f(e,T,i),t(T,Wt),t(T,He),t(He,Xt),t(T,Zt),f(e,Xe,i),f(e,$,i),t($,me),t($,es),t($,he),f(e,Ze,i),f(e,E,i),t(E,ue),t(E,ts),t(E,pe),f(e,et,i),f(e,k,i),t(k,L),t(L,je),U(W,je,null),t(k,ss),t(k,qe),t(qe,rs),f(e,tt,i),f(e,P,i),t(P,as),t(P,Me),t(Me,ns),t(P,os),f(e,st,i),U(X,e,i),f(e,rt,i),f(e,H,i),t(H,is),t(H,Z),t(Z,ls),t(H,cs),f(e,at,i),f(e,x,i),t(x,j),t(j,Ne),U(ee,Ne,null),t(x,fs),t(x,Ue),t(Ue,ds),f(e,nt,i),f(e,g,i),t(g,te),t(te,ms),t(te,se),t(se,hs),t(te,us),t(g,ps),t(g,re),t(re,gs),t(re,ae),t(ae,vs),t(re,_s),t(g,ws),t(g,ne),t(ne,bs),t(ne,oe),t(oe,ys),t(ne,$s),ot=!0},p:_r,i(e){ot||(C(G.$$.fragment,e),C(F.$$.fragment,e),C(R.$$.fragment,e),C(z.$$.fragment,e),C(Q.$$.fragment,e),C(W.$$.fragment,e),C(X.$$.fragment,e),C(ee.$$.fragment,e),ot=!0)},o(e){D(G.$$.fragment,e),D(F.$$.fragment,e),D(R.$$.fragment,e),D(z.$$.fragment,e),D(Q.$$.fragment,e),D(W.$$.fragment,e),D(X.$$.fragment,e),D(ee.$$.fragment,e),ot=!1},d(e){s(v),e&&s(De),e&&s(_),O(G),e&&s(Oe),e&&s(Y),e&&s(Ge),e&&s(w),O(F),e&&s(Ye),e&&s(h),e&&s(Fe),e&&s(ie),e&&s(Ve),e&&s(u),e&&s(Be),e&&s(b),e&&s(Je),e&&s(y),O(R),e&&s(Ke),e&&s(fe),e&&s(Re),O(z,e),e&&s(ze),e&&s(de),e&&s(Qe),O(Q,e),e&&s(We),e&&s(T),e&&s(Xe),e&&s($),e&&s(Ze),e&&s(E),e&&s(et),e&&s(k),O(W),e&&s(tt),e&&s(P),e&&s(st),O(X,e),e&&s(rt),e&&s(H),e&&s(at),e&&s(x),O(ee),e&&s(nt),e&&s(g)}}}const yr={local:"using-sentence-transformers-at-hugging-face",sections:[{local:"exploring-sentencetransformers-in-the-hub",title:"Exploring sentence-transformers in the Hub"},{local:"using-existing-models",title:"Using existing models"},{local:"sharing-your-models",title:"Sharing your models"},{local:"additional-resources",title:"Additional resources"}],title:"Using Sentence Transformers at Hugging Face"};function $r(xs){return wr(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Sr extends ur{constructor(v){super();pr(this,v,$r,br,gr,{})}}export{Sr as default,yr as metadata};
