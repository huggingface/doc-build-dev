import{S as ba,i as va,s as wa,e as a,k as f,w as X,t as i,N as ga,c as r,d as o,m as u,a as n,x as Z,h as s,b as c,G as t,g as h,y as ee,L as _a,q as te,o as oe,B as ae,v as Ea}from"../chunks/vendor-hf-doc-builder.js";import{I as Ne}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as ya}from"../chunks/CodeBlock-hf-doc-builder.js";function $a(jo){let b,qe,v,k,he,M,bt,ce,vt,Le,w,C,fe,B,wt,ue,gt,He,m,_t,G,Et,$t,me,kt,Ct,pe,Pt,Tt,Me,g,P,de,D,At,ye,St,Be,re,jt,Ge,p,be,Ot,Ut,ve,xt,It,we,Nt,qt,_,Lt,F,Ht,Mt,W,Bt,Gt,De,E,T,ge,R,Dt,_e,Ft,Fe,ie,Wt,We,K,Re,$,A,Ee,Y,Rt,$e,Kt,Ke,S,Yt,ke,Qt,Jt,Ye,ne,zt,Qe,d,Vt,Ce,Xt,Zt,Pe,eo,to,Q,oo,ao,Je,j,ro,Te,io,no,ze,O,so,Ae,lo,ho,Ve,U,co,Se,fo,uo,Xe,x,mo,je,po,yo,Ze,I,J,bo,Oe,vo,wo,go,Ue,_o,et,z,tt,y,Eo,xe,$o,ko,Ie,Co,Po,ot,N,To,V,Ao,So,at;return M=new Ne({}),B=new Ne({}),D=new Ne({}),R=new Ne({}),K=new ya({props:{code:`---
co2_eq_emissions:
  emissions: number (in grams of CO2)
  source: "source of the information, either directly from AutoTrain, code carbon or from a scientific article documenting the model"
  training_type: "pre-training or fine-tuning"
  geographical_location: "as granular as possible, for instance Quebec, Canada or Brooklyn, NY, USA. To check your compute's electricity grid, you can check out https://app.electricitymap.org."
  hardware_used: "how much compute and what kind, e.g. 8 v100 GPUs"
---`,highlighted:`<span class="hljs-meta">---</span>
<span class="hljs-attr">co2_eq_emissions:</span>
  <span class="hljs-attr">emissions:</span> <span class="hljs-string">number</span> <span class="hljs-string">(in</span> <span class="hljs-string">grams</span> <span class="hljs-string">of</span> <span class="hljs-string">CO2)</span>
  <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;source of the information, either directly from AutoTrain, code carbon or from a scientific article documenting the model&quot;</span>
  <span class="hljs-attr">training_type:</span> <span class="hljs-string">&quot;pre-training or fine-tuning&quot;</span>
  <span class="hljs-attr">geographical_location:</span> <span class="hljs-string">&quot;as granular as possible, for instance Quebec, Canada or Brooklyn, NY, USA. To check your compute&#x27;s electricity grid, you can check out https://app.electricitymap.org.&quot;</span>
  <span class="hljs-attr">hardware_used:</span> <span class="hljs-string">&quot;how much compute and what kind, e.g. 8 v100 GPUs&quot;</span>
<span class="hljs-meta">---</span>`}}),Y=new Ne({}),z=new ya({props:{code:`co2_eq_emissions: 
  emissions: 1.2345`,highlighted:`<span class="hljs-attr">co2_eq_emissions:</span> 
  <span class="hljs-attr">emissions:</span> <span class="hljs-number">1.2345</span>`}}),{c(){b=a("meta"),qe=f(),v=a("h1"),k=a("a"),he=a("span"),X(M.$$.fragment),bt=f(),ce=a("span"),vt=i("Displaying carbon emissions for your model"),Le=f(),w=a("h2"),C=a("a"),fe=a("span"),X(B.$$.fragment),wt=f(),ue=a("span"),gt=i("Why is it beneficial to calculate the carbon emissions of my model?"),He=f(),m=a("p"),_t=i("Training ML models is often energy-intensive and can produce a substantial carbon footprint, as described by "),G=a("a"),Et=i("Strubell et al."),$t=i(". It\u2019s therefore important to "),me=a("em"),kt=i("track"),Ct=i(" and "),pe=a("em"),Pt=i("report"),Tt=i(" the emissions of models to get a better idea of the environmental impacts of our field."),Me=f(),g=a("h2"),P=a("a"),de=a("span"),X(D.$$.fragment),At=f(),ye=a("span"),St=i("What information should I include about the carbon footprint of my model?"),Be=f(),re=a("p"),jt=i("If you can, you should include information about:"),Ge=f(),p=a("ul"),be=a("li"),Ot=i("where the model was trained (in terms of location)"),Ut=f(),ve=a("li"),xt=i("the hardware used \u2014 e.g. GPU, TPU, or CPU, and how many"),It=f(),we=a("li"),Nt=i("training type: pre-training or fine-tuning"),qt=f(),_=a("li"),Lt=i("the estimated carbon footprint of the model, calculated in real-time with the "),F=a("a"),Ht=i("Code Carbon"),Mt=i(" package or after training using the "),W=a("a"),Bt=i("ML CO2 Calculator"),Gt=i("."),De=f(),E=a("h2"),T=a("a"),ge=a("span"),X(R.$$.fragment),Dt=f(),_e=a("span"),Ft=i("Carbon footprint metadata"),Fe=f(),ie=a("p"),Wt=i("You can add the carbon footprint data to the model card metadata (in the README.md file). The structure of the metadata should be:"),We=f(),X(K.$$.fragment),Re=f(),$=a("h2"),A=a("a"),Ee=a("span"),X(Y.$$.fragment),Rt=f(),$e=a("span"),Kt=i("How is the carbon footprint of my model calculated? \u{1F30E}"),Ke=f(),S=a("p"),Yt=i("Considering the computing hardware, location, usage, and training time, you can estimate how much CO"),ke=a("sub"),Qt=i("2"),Jt=i(" the model produced."),Ye=f(),ne=a("p"),zt=i("The math is pretty simple! \u2795"),Qe=f(),d=a("p"),Vt=i("First, you take the "),Ce=a("em"),Xt=i("carbon intensity"),Zt=i(" of the electric grid used for the training \u2014 this is how much CO"),Pe=a("sub"),eo=i("2"),to=i(" is produced by KwH of electricity used. The carbon intensity depends on the location of the hardware and the "),Q=a("a"),oo=i("energy mix"),ao=i(" used at that location \u2014 whether it\u2019s renewable energy like solar \u{1F31E}, wind \u{1F32C}\uFE0F and hydro \u{1F4A7}, or non-renewable energy like coal \u26AB and natural gas \u{1F4A8}. The more renewable energy gets used for training, the less carbon-intensive it is!"),Je=f(),j=a("p"),ro=i("Then, you take the power consumption of the GPU during training using the "),Te=a("code"),io=i("pynvml"),no=i(" library."),ze=f(),O=a("p"),so=i("Finally, you multiply the power consumption and carbon intensity by the training time of the model, and you have an estimate of the CO"),Ae=a("sub"),lo=i("2"),ho=i(" emission."),Ve=f(),U=a("p"),co=i("Keep in mind that this isn\u2019t an exact number because other factors come into play \u2014 like the energy used for data center heating and cooling \u2014 which will increase carbon emissions. But this will give you a good idea of the scale of CO"),Se=a("sub"),fo=i("2"),uo=i(" emissions that your model is producing!"),Xe=f(),x=a("p"),mo=i("To add "),je=a("strong"),po=i("Carbon Emissions"),yo=i(" metadata to your models:"),Ze=f(),I=a("ol"),J=a("li"),bo=i("If you are using "),Oe=a("strong"),vo=i("AutoTrain"),wo=i(", this is tracked for you \u{1F525}"),go=f(),Ue=a("li"),_o=i("Otherwise, use a tracker like  Code Carbon in your training code, then specify"),et=f(),X(z.$$.fragment),tt=f(),y=a("p"),Eo=i("in your model card metadata, where "),xe=a("code"),$o=i("1.2345"),ko=i(" is the emissions value in "),Ie=a("strong"),Co=i("grams"),Po=i("."),ot=f(),N=a("p"),To=i("To learn more about the carbon footprint of Transformers, check out the "),V=a("a"),Ao=i("video"),So=i(", part of the Hugging Face Course!"),this.h()},l(e){const l=ga('[data-svelte="svelte-1phssyn"]',document.head);b=r(l,"META",{name:!0,content:!0}),l.forEach(o),qe=u(e),v=r(e,"H1",{class:!0});var rt=n(v);k=r(rt,"A",{id:!0,class:!0,href:!0});var Oo=n(k);he=r(Oo,"SPAN",{});var Uo=n(he);Z(M.$$.fragment,Uo),Uo.forEach(o),Oo.forEach(o),bt=u(rt),ce=r(rt,"SPAN",{});var xo=n(ce);vt=s(xo,"Displaying carbon emissions for your model"),xo.forEach(o),rt.forEach(o),Le=u(e),w=r(e,"H2",{class:!0});var it=n(w);C=r(it,"A",{id:!0,class:!0,href:!0});var Io=n(C);fe=r(Io,"SPAN",{});var No=n(fe);Z(B.$$.fragment,No),No.forEach(o),Io.forEach(o),wt=u(it),ue=r(it,"SPAN",{});var qo=n(ue);gt=s(qo,"Why is it beneficial to calculate the carbon emissions of my model?"),qo.forEach(o),it.forEach(o),He=u(e),m=r(e,"P",{});var q=n(m);_t=s(q,"Training ML models is often energy-intensive and can produce a substantial carbon footprint, as described by "),G=r(q,"A",{href:!0,rel:!0});var Lo=n(G);Et=s(Lo,"Strubell et al."),Lo.forEach(o),$t=s(q,". It\u2019s therefore important to "),me=r(q,"EM",{});var Ho=n(me);kt=s(Ho,"track"),Ho.forEach(o),Ct=s(q," and "),pe=r(q,"EM",{});var Mo=n(pe);Pt=s(Mo,"report"),Mo.forEach(o),Tt=s(q," the emissions of models to get a better idea of the environmental impacts of our field."),q.forEach(o),Me=u(e),g=r(e,"H2",{class:!0});var nt=n(g);P=r(nt,"A",{id:!0,class:!0,href:!0});var Bo=n(P);de=r(Bo,"SPAN",{});var Go=n(de);Z(D.$$.fragment,Go),Go.forEach(o),Bo.forEach(o),At=u(nt),ye=r(nt,"SPAN",{});var Do=n(ye);St=s(Do,"What information should I include about the carbon footprint of my model?"),Do.forEach(o),nt.forEach(o),Be=u(e),re=r(e,"P",{});var Fo=n(re);jt=s(Fo,"If you can, you should include information about:"),Fo.forEach(o),Ge=u(e),p=r(e,"UL",{});var L=n(p);be=r(L,"LI",{});var Wo=n(be);Ot=s(Wo,"where the model was trained (in terms of location)"),Wo.forEach(o),Ut=u(L),ve=r(L,"LI",{});var Ro=n(ve);xt=s(Ro,"the hardware used \u2014 e.g. GPU, TPU, or CPU, and how many"),Ro.forEach(o),It=u(L),we=r(L,"LI",{});var Ko=n(we);Nt=s(Ko,"training type: pre-training or fine-tuning"),Ko.forEach(o),qt=u(L),_=r(L,"LI",{});var se=n(_);Lt=s(se,"the estimated carbon footprint of the model, calculated in real-time with the "),F=r(se,"A",{href:!0,rel:!0});var Yo=n(F);Ht=s(Yo,"Code Carbon"),Yo.forEach(o),Mt=s(se," package or after training using the "),W=r(se,"A",{href:!0,rel:!0});var Qo=n(W);Bt=s(Qo,"ML CO2 Calculator"),Qo.forEach(o),Gt=s(se,"."),se.forEach(o),L.forEach(o),De=u(e),E=r(e,"H2",{class:!0});var st=n(E);T=r(st,"A",{id:!0,class:!0,href:!0});var Jo=n(T);ge=r(Jo,"SPAN",{});var zo=n(ge);Z(R.$$.fragment,zo),zo.forEach(o),Jo.forEach(o),Dt=u(st),_e=r(st,"SPAN",{});var Vo=n(_e);Ft=s(Vo,"Carbon footprint metadata"),Vo.forEach(o),st.forEach(o),Fe=u(e),ie=r(e,"P",{});var Xo=n(ie);Wt=s(Xo,"You can add the carbon footprint data to the model card metadata (in the README.md file). The structure of the metadata should be:"),Xo.forEach(o),We=u(e),Z(K.$$.fragment,e),Re=u(e),$=r(e,"H2",{class:!0});var lt=n($);A=r(lt,"A",{id:!0,class:!0,href:!0});var Zo=n(A);Ee=r(Zo,"SPAN",{});var ea=n(Ee);Z(Y.$$.fragment,ea),ea.forEach(o),Zo.forEach(o),Rt=u(lt),$e=r(lt,"SPAN",{});var ta=n($e);Kt=s(ta,"How is the carbon footprint of my model calculated? \u{1F30E}"),ta.forEach(o),lt.forEach(o),Ke=u(e),S=r(e,"P",{});var ht=n(S);Yt=s(ht,"Considering the computing hardware, location, usage, and training time, you can estimate how much CO"),ke=r(ht,"SUB",{});var oa=n(ke);Qt=s(oa,"2"),oa.forEach(o),Jt=s(ht," the model produced."),ht.forEach(o),Ye=u(e),ne=r(e,"P",{});var aa=n(ne);zt=s(aa,"The math is pretty simple! \u2795"),aa.forEach(o),Qe=u(e),d=r(e,"P",{});var H=n(d);Vt=s(H,"First, you take the "),Ce=r(H,"EM",{});var ra=n(Ce);Xt=s(ra,"carbon intensity"),ra.forEach(o),Zt=s(H," of the electric grid used for the training \u2014 this is how much CO"),Pe=r(H,"SUB",{});var ia=n(Pe);eo=s(ia,"2"),ia.forEach(o),to=s(H," is produced by KwH of electricity used. The carbon intensity depends on the location of the hardware and the "),Q=r(H,"A",{href:!0,rel:!0});var na=n(Q);oo=s(na,"energy mix"),na.forEach(o),ao=s(H," used at that location \u2014 whether it\u2019s renewable energy like solar \u{1F31E}, wind \u{1F32C}\uFE0F and hydro \u{1F4A7}, or non-renewable energy like coal \u26AB and natural gas \u{1F4A8}. The more renewable energy gets used for training, the less carbon-intensive it is!"),H.forEach(o),Je=u(e),j=r(e,"P",{});var ct=n(j);ro=s(ct,"Then, you take the power consumption of the GPU during training using the "),Te=r(ct,"CODE",{});var sa=n(Te);io=s(sa,"pynvml"),sa.forEach(o),no=s(ct," library."),ct.forEach(o),ze=u(e),O=r(e,"P",{});var ft=n(O);so=s(ft,"Finally, you multiply the power consumption and carbon intensity by the training time of the model, and you have an estimate of the CO"),Ae=r(ft,"SUB",{});var la=n(Ae);lo=s(la,"2"),la.forEach(o),ho=s(ft," emission."),ft.forEach(o),Ve=u(e),U=r(e,"P",{});var ut=n(U);co=s(ut,"Keep in mind that this isn\u2019t an exact number because other factors come into play \u2014 like the energy used for data center heating and cooling \u2014 which will increase carbon emissions. But this will give you a good idea of the scale of CO"),Se=r(ut,"SUB",{});var ha=n(Se);fo=s(ha,"2"),ha.forEach(o),uo=s(ut," emissions that your model is producing!"),ut.forEach(o),Xe=u(e),x=r(e,"P",{});var mt=n(x);mo=s(mt,"To add "),je=r(mt,"STRONG",{});var ca=n(je);po=s(ca,"Carbon Emissions"),ca.forEach(o),yo=s(mt," metadata to your models:"),mt.forEach(o),Ze=u(e),I=r(e,"OL",{});var pt=n(I);J=r(pt,"LI",{});var dt=n(J);bo=s(dt,"If you are using "),Oe=r(dt,"STRONG",{});var fa=n(Oe);vo=s(fa,"AutoTrain"),fa.forEach(o),wo=s(dt,", this is tracked for you \u{1F525}"),dt.forEach(o),go=u(pt),Ue=r(pt,"LI",{});var ua=n(Ue);_o=s(ua,"Otherwise, use a tracker like  Code Carbon in your training code, then specify"),ua.forEach(o),pt.forEach(o),et=u(e),Z(z.$$.fragment,e),tt=u(e),y=r(e,"P",{});var le=n(y);Eo=s(le,"in your model card metadata, where "),xe=r(le,"CODE",{});var ma=n(xe);$o=s(ma,"1.2345"),ma.forEach(o),ko=s(le," is the emissions value in "),Ie=r(le,"STRONG",{});var pa=n(Ie);Co=s(pa,"grams"),pa.forEach(o),Po=s(le,"."),le.forEach(o),ot=u(e),N=r(e,"P",{});var yt=n(N);To=s(yt,"To learn more about the carbon footprint of Transformers, check out the "),V=r(yt,"A",{href:!0,rel:!0});var da=n(V);Ao=s(da,"video"),da.forEach(o),So=s(yt,", part of the Hugging Face Course!"),yt.forEach(o),this.h()},h(){c(b,"name","hf:doc:metadata"),c(b,"content",JSON.stringify(ka)),c(k,"id","displaying-carbon-emissions-for-your-model"),c(k,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(k,"href","#displaying-carbon-emissions-for-your-model"),c(v,"class","relative group"),c(C,"id","why-is-it-beneficial-to-calculate-the-carbon-emissions-of-my-model"),c(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(C,"href","#why-is-it-beneficial-to-calculate-the-carbon-emissions-of-my-model"),c(w,"class","relative group"),c(G,"href","https://arxiv.org/abs/1906.02243"),c(G,"rel","nofollow"),c(P,"id","what-information-should-i-include-about-the-carbon-footprint-of-my-model"),c(P,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(P,"href","#what-information-should-i-include-about-the-carbon-footprint-of-my-model"),c(g,"class","relative group"),c(F,"href","https://github.com/mlco2/codecarbon"),c(F,"rel","nofollow"),c(W,"href","https://mlco2.github.io/impact/"),c(W,"rel","nofollow"),c(T,"id","carbon-footprint-metadata"),c(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(T,"href","#carbon-footprint-metadata"),c(E,"class","relative group"),c(A,"id","how-is-the-carbon-footprint-of-my-model-calculated"),c(A,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(A,"href","#how-is-the-carbon-footprint-of-my-model-calculated"),c($,"class","relative group"),c(Q,"href","https://electricitymap.org/"),c(Q,"rel","nofollow"),c(V,"href","https://www.youtube.com/watch?v=ftWlj4FBHTg"),c(V,"rel","nofollow")},m(e,l){t(document.head,b),h(e,qe,l),h(e,v,l),t(v,k),t(k,he),ee(M,he,null),t(v,bt),t(v,ce),t(ce,vt),h(e,Le,l),h(e,w,l),t(w,C),t(C,fe),ee(B,fe,null),t(w,wt),t(w,ue),t(ue,gt),h(e,He,l),h(e,m,l),t(m,_t),t(m,G),t(G,Et),t(m,$t),t(m,me),t(me,kt),t(m,Ct),t(m,pe),t(pe,Pt),t(m,Tt),h(e,Me,l),h(e,g,l),t(g,P),t(P,de),ee(D,de,null),t(g,At),t(g,ye),t(ye,St),h(e,Be,l),h(e,re,l),t(re,jt),h(e,Ge,l),h(e,p,l),t(p,be),t(be,Ot),t(p,Ut),t(p,ve),t(ve,xt),t(p,It),t(p,we),t(we,Nt),t(p,qt),t(p,_),t(_,Lt),t(_,F),t(F,Ht),t(_,Mt),t(_,W),t(W,Bt),t(_,Gt),h(e,De,l),h(e,E,l),t(E,T),t(T,ge),ee(R,ge,null),t(E,Dt),t(E,_e),t(_e,Ft),h(e,Fe,l),h(e,ie,l),t(ie,Wt),h(e,We,l),ee(K,e,l),h(e,Re,l),h(e,$,l),t($,A),t(A,Ee),ee(Y,Ee,null),t($,Rt),t($,$e),t($e,Kt),h(e,Ke,l),h(e,S,l),t(S,Yt),t(S,ke),t(ke,Qt),t(S,Jt),h(e,Ye,l),h(e,ne,l),t(ne,zt),h(e,Qe,l),h(e,d,l),t(d,Vt),t(d,Ce),t(Ce,Xt),t(d,Zt),t(d,Pe),t(Pe,eo),t(d,to),t(d,Q),t(Q,oo),t(d,ao),h(e,Je,l),h(e,j,l),t(j,ro),t(j,Te),t(Te,io),t(j,no),h(e,ze,l),h(e,O,l),t(O,so),t(O,Ae),t(Ae,lo),t(O,ho),h(e,Ve,l),h(e,U,l),t(U,co),t(U,Se),t(Se,fo),t(U,uo),h(e,Xe,l),h(e,x,l),t(x,mo),t(x,je),t(je,po),t(x,yo),h(e,Ze,l),h(e,I,l),t(I,J),t(J,bo),t(J,Oe),t(Oe,vo),t(J,wo),t(I,go),t(I,Ue),t(Ue,_o),h(e,et,l),ee(z,e,l),h(e,tt,l),h(e,y,l),t(y,Eo),t(y,xe),t(xe,$o),t(y,ko),t(y,Ie),t(Ie,Co),t(y,Po),h(e,ot,l),h(e,N,l),t(N,To),t(N,V),t(V,Ao),t(N,So),at=!0},p:_a,i(e){at||(te(M.$$.fragment,e),te(B.$$.fragment,e),te(D.$$.fragment,e),te(R.$$.fragment,e),te(K.$$.fragment,e),te(Y.$$.fragment,e),te(z.$$.fragment,e),at=!0)},o(e){oe(M.$$.fragment,e),oe(B.$$.fragment,e),oe(D.$$.fragment,e),oe(R.$$.fragment,e),oe(K.$$.fragment,e),oe(Y.$$.fragment,e),oe(z.$$.fragment,e),at=!1},d(e){o(b),e&&o(qe),e&&o(v),ae(M),e&&o(Le),e&&o(w),ae(B),e&&o(He),e&&o(m),e&&o(Me),e&&o(g),ae(D),e&&o(Be),e&&o(re),e&&o(Ge),e&&o(p),e&&o(De),e&&o(E),ae(R),e&&o(Fe),e&&o(ie),e&&o(We),ae(K,e),e&&o(Re),e&&o($),ae(Y),e&&o(Ke),e&&o(S),e&&o(Ye),e&&o(ne),e&&o(Qe),e&&o(d),e&&o(Je),e&&o(j),e&&o(ze),e&&o(O),e&&o(Ve),e&&o(U),e&&o(Xe),e&&o(x),e&&o(Ze),e&&o(I),e&&o(et),ae(z,e),e&&o(tt),e&&o(y),e&&o(ot),e&&o(N)}}}const ka={local:"displaying-carbon-emissions-for-your-model",sections:[{local:"why-is-it-beneficial-to-calculate-the-carbon-emissions-of-my-model",title:"Why is it beneficial to calculate the carbon emissions of my model?"},{local:"what-information-should-i-include-about-the-carbon-footprint-of-my-model",title:"What information should I include about the carbon footprint of my model?"},{local:"carbon-footprint-metadata",title:"Carbon footprint metadata"},{local:"how-is-the-carbon-footprint-of-my-model-calculated",title:"How is the carbon footprint of my model calculated? \u{1F30E}"}],title:"Displaying carbon emissions for your model"};function Ca(jo){return Ea(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Sa extends ba{constructor(b){super();va(this,b,Ca,$a,wa,{})}}export{Sa as default,ka as metadata};
