import{S as re,i as le,s as pe,e as o,k,w as ee,t as r,N as ie,c as l,d as a,m as x,a as i,x as te,h as p,b as _,G as t,g as y,y as ae,L as ce,q as se,o as ne,B as oe,v as he}from"../chunks/vendor-hf-doc-builder.js";import{I as fe}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as me}from"../chunks/CodeBlock-hf-doc-builder.js";function de(U){let c,A,h,f,w,u,R,S,L,b,s,N,j,G,O,E,T,Y,$,q,B,D,g,P,m,I,v,H,J,C;return u=new fe({}),g=new me({props:{code:`---
title: Demo Space
emoji: \u{1F917}
colorFrom: yellow
colorTo: orange
sdk: gradio
app_file: app.py
pinned: false
---`,highlighted:`<span class="hljs-meta">---</span>
<span class="hljs-attr">title:</span> <span class="hljs-string">Demo</span> <span class="hljs-string">Space</span>
<span class="hljs-attr">emoji:</span> <span class="hljs-string">\u{1F917}</span>
<span class="hljs-attr">colorFrom:</span> <span class="hljs-string">yellow</span>
<span class="hljs-attr">colorTo:</span> <span class="hljs-string">orange</span>
<span class="hljs-attr">sdk:</span> <span class="hljs-string">gradio</span>
<span class="hljs-attr">app_file:</span> <span class="hljs-string">app.py</span>
<span class="hljs-attr">pinned:</span> <span class="hljs-literal">false</span>
<span class="hljs-meta">---</span>`}}),{c(){c=o("meta"),A=k(),h=o("h1"),f=o("a"),w=o("span"),ee(u.$$.fragment),R=k(),S=o("span"),L=r("Spaces Settings"),b=k(),s=o("p"),N=r("You can configure your Space\u2019s appearance and other settings inside the "),j=o("code"),G=r("YAML"),O=r(" block at the top of the "),E=o("strong"),T=r("README.md"),Y=r(" file at the root of the repository. For example, if you want to create a Space with Gradio named "),$=o("code"),q=r("Demo Space"),B=r(" with a yellow to orange gradient thumbnail:"),D=k(),ee(g.$$.fragment),P=k(),m=o("p"),I=r("For additional settings, refer to the "),v=o("a"),H=r("Reference"),J=r(" section."),this.h()},l(e){const n=ie('[data-svelte="svelte-1phssyn"]',document.head);c=l(n,"META",{name:!0,content:!0}),n.forEach(a),A=x(e),h=l(e,"H1",{class:!0});var F=i(h);f=l(F,"A",{id:!0,class:!0,href:!0});var z=i(f);w=l(z,"SPAN",{});var K=i(w);te(u.$$.fragment,K),K.forEach(a),z.forEach(a),R=x(F),S=l(F,"SPAN",{});var Q=i(S);L=p(Q,"Spaces Settings"),Q.forEach(a),F.forEach(a),b=x(e),s=l(e,"P",{});var d=i(s);N=p(d,"You can configure your Space\u2019s appearance and other settings inside the "),j=l(d,"CODE",{});var V=i(j);G=p(V,"YAML"),V.forEach(a),O=p(d," block at the top of the "),E=l(d,"STRONG",{});var W=i(E);T=p(W,"README.md"),W.forEach(a),Y=p(d," file at the root of the repository. For example, if you want to create a Space with Gradio named "),$=l(d,"CODE",{});var X=i($);q=p(X,"Demo Space"),X.forEach(a),B=p(d," with a yellow to orange gradient thumbnail:"),d.forEach(a),D=x(e),te(g.$$.fragment,e),P=x(e),m=l(e,"P",{});var M=i(m);I=p(M,"For additional settings, refer to the "),v=l(M,"A",{href:!0});var Z=i(v);H=p(Z,"Reference"),Z.forEach(a),J=p(M," section."),M.forEach(a),this.h()},h(){_(c,"name","hf:doc:metadata"),_(c,"content",JSON.stringify(ue)),_(f,"id","spaces-settings"),_(f,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(f,"href","#spaces-settings"),_(h,"class","relative group"),_(v,"href","./spaces-config-reference")},m(e,n){t(document.head,c),y(e,A,n),y(e,h,n),t(h,f),t(f,w),ae(u,w,null),t(h,R),t(h,S),t(S,L),y(e,b,n),y(e,s,n),t(s,N),t(s,j),t(j,G),t(s,O),t(s,E),t(E,T),t(s,Y),t(s,$),t($,q),t(s,B),y(e,D,n),ae(g,e,n),y(e,P,n),y(e,m,n),t(m,I),t(m,v),t(v,H),t(m,J),C=!0},p:ce,i(e){C||(se(u.$$.fragment,e),se(g.$$.fragment,e),C=!0)},o(e){ne(u.$$.fragment,e),ne(g.$$.fragment,e),C=!1},d(e){a(c),e&&a(A),e&&a(h),oe(u),e&&a(b),e&&a(s),e&&a(D),oe(g,e),e&&a(P),e&&a(m)}}}const ue={local:"spaces-settings",title:"Spaces Settings"};function ge(U){return he(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class we extends re{constructor(c){super();le(this,c,ge,de,pe,{})}}export{we as default,ue as metadata};
