import{S as mn,i as gn,s as vn,e as i,k as f,w as m,t as l,N as yn,c as a,d as o,m as u,a as r,x as g,h as s,b as n,P as d,G as t,g as h,y as v,L as wn,q as y,o as w,B as _,v as _n}from"../chunks/vendor-hf-doc-builder.js";import{I as C}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Io}from"../chunks/CodeBlock-hf-doc-builder.js";function bn(wl){let N,So,H,ee,_t,$e,Ji,bt,Ki,Co,je,Qi,xo,M,te,Et,Pe,Zi,kt,ea,Go,ze,ta,To,$,oa,$t,ia,aa,Ae,ra,la,Ie,sa,na,No,oe,ca,ie,Pt,ha,fa,ua,Ho,Se,Mo,Ve,At,da,Oo,E,_l,Do,O,ae,It,Ce,pa,St,ma,qo,re,ga,Ct,va,ya,Lo,Be,xe,wa,Ge,_a,ba,Fo,D,We,bl,Ea,Xe,El,Ro,k,xt,Gt,ka,$a,Tt,Nt,Pa,Aa,Ht,Mt,Ia,Sa,Ot,q,Ca,Dt,xa,Ga,Je,qt,Ta,Na,Yo,Ke,Ha,Uo,L,Qe,kl,Ma,Ze,$l,jo,x,Oa,Lt,Da,qa,et,Ft,La,Fa,zo,F,le,Rt,Te,Ra,Yt,Ya,Vo,G,Ua,Ut,ja,za,jt,Va,Ba,Bo,R,tt,Pl,Wa,ot,Al,Wo,Y,se,zt,Ne,Xa,Vt,Ja,Xo,P,Ka,Bt,Qa,Za,Wt,er,tr,it,or,ir,Jo,U,at,Il,ar,rt,Sl,Ko,j,ne,Xt,He,rr,Jt,lr,Qo,ce,sr,Kt,nr,cr,Zo,z,lt,Cl,hr,st,xl,ei,A,fr,Qt,ur,dr,nt,pr,mr,Zt,gr,vr,ti,V,he,eo,Me,yr,to,wr,oi,B,fe,oo,Oe,_r,io,br,ii,ue,Er,ao,kr,$r,ai,De,ri,W,de,ro,qe,Pr,lo,Ar,li,ct,Ir,si,pe,Sr,so,Cr,xr,ni,Le,ci,me,Gr,no,Tr,Nr,hi,Fe,fi,I,Hr,co,Mr,Or,ho,Dr,qr,fo,Lr,Fr,ui,X,ge,uo,Re,Rr,po,Yr,di,b,Ur,mo,jr,zr,go,Vr,Br,vo,Wr,Xr,yo,Jr,Kr,pi,Ye,mi,ve,Qr,wo,Zr,el,gi,J,ht,Gl,tl,ft,Tl,vi,K,ye,_o,Ue,ol,bo,il,yi,p,al,Eo,rl,ll,ko,sl,nl,$o,cl,hl,Po,fl,ul,Ao,dl,pl,wi,Q,ut,Nl,ml,dt,Hl,_i,pt,gl,bi,Z,mt,Ml,vl,gt,Ol,Ei;return $e=new C({}),Pe=new C({}),Se=new Io({props:{code:`python -m pip install huggingface_hub
huggingface-cli login`,highlighted:`python -m pip install huggingface_hub
huggingface-cli login`}}),Ce=new C({}),Te=new C({}),Ne=new C({}),He=new C({}),Me=new C({}),Oe=new C({}),De=new Io({props:{code:`git clone https://huggingface.co/<your-username>/<your-model-name>
cd <your-model-id>`,highlighted:`git <span class="hljs-built_in">clone</span> https://huggingface.co/&lt;your-username&gt;/&lt;your-model-name&gt;
<span class="hljs-built_in">cd</span> &lt;your-model-id&gt;`}}),qe=new C({}),Le=new Io({props:{code:"git lfs install",highlighted:"git lfs install"}}),Fe=new Io({props:{code:"huggingface-cli lfs-enable-largefiles",highlighted:"huggingface-cli lfs-enable-largefiles"}}),Re=new C({}),Ye=new Io({props:{code:`# Create any files you like! Then...
git add .
git commit -m "First model version"  # You can choose any descriptive message
git push`,highlighted:`<span class="hljs-comment"># Create any files you like! Then...</span>
git add .
git commit -m <span class="hljs-string">&quot;First model version&quot;</span>  <span class="hljs-comment"># You can choose any descriptive message</span>
git push`}}),Ue=new C({}),{c(){N=i("meta"),So=f(),H=i("h1"),ee=i("a"),_t=i("span"),m($e.$$.fragment),Ji=f(),bt=i("span"),Ki=l("Getting Started with Repositories"),Co=f(),je=i("p"),Qi=l("This beginner-friendly guide will help you get the basic skills you need to create and manage your repository on the Hub. Each section builds on the previous one, so feel free to choose where to start!"),xo=f(),M=i("h2"),te=i("a"),Et=i("span"),m(Pe.$$.fragment),Zi=f(),kt=i("span"),ea=l("Requirements"),Go=f(),ze=i("p"),ta=l("This document shows how to handle repositories through the web interface as well as through the terminal. There are no requirements if working with the UI. If you want to work with the terminal, please follow these installation instructions."),To=f(),$=i("p"),oa=l("If you do not have "),$t=i("code"),ia=l("git"),aa=l(" available as a CLI command yet, you will need to "),Ae=i("a"),ra=l("install Git"),la=l(" for your platform. You will also need to "),Ie=i("a"),sa=l("install Git LFS"),na=l(", which will be used to handle large files such as images and model weights."),No=f(),oe=i("p"),ca=l("To be able to push your code to the Hub, you\u2019ll need to authenticate somehow. The easiest way to do this is by installing the "),ie=i("a"),Pt=i("code"),ha=l("huggingface_hub"),fa=l(" CLI"),ua=l(" and running the login command:"),Ho=f(),m(Se.$$.fragment),Mo=f(),Ve=i("p"),At=i("strong"),da=l("The content in the Getting Started section of this document is also available as a video!"),Oo=f(),E=i("iframe"),Do=f(),O=i("h2"),ae=i("a"),It=i("span"),m(Ce.$$.fragment),pa=f(),St=i("span"),ma=l("Creating a repository"),qo=f(),re=i("p"),ga=l("Using the Hub\u2019s web interface you can easily create repositories, add files (even large ones!), explore models, visualize diffs, and much more. There are three kinds of repositories on the Hub, and in this guide you\u2019ll be creating a "),Ct=i("strong"),va=l("model repository"),ya=l(" for demonstration purposes. For information on creating and managing models, datasets, and Spaces, refer to their respective documentation."),Lo=f(),Be=i("ol"),xe=i("li"),wa=l("To create a new repository, visit "),Ge=i("a"),_a=l("huggingface.co/new"),ba=l(":"),Fo=f(),D=i("div"),We=i("img"),Ea=f(),Xe=i("img"),Ro=f(),k=i("ol"),xt=i("li"),Gt=i("p"),ka=l("Specify the owner of the repository: this can be either you or any of the organizations you\u2019re affiliated with."),$a=f(),Tt=i("li"),Nt=i("p"),Pa=l("Enter your model\u2019s name. This will also be the name of the repository."),Aa=f(),Ht=i("li"),Mt=i("p"),Ia=l("Specify whether you want your model to be public or private."),Sa=f(),Ot=i("li"),q=i("p"),Ca=l("Specify the license. You can leave the "),Dt=i("em"),xa=l("License"),Ga=l(" field blank for now. To learn about licenses, visit the "),Je=i("a"),qt=i("strong"),Ta=l("Licenses"),Na=l(" documentation."),Yo=f(),Ke=i("p"),Ha=l("After creating your model repository, you should see a page like this:"),Uo=f(),L=i("div"),Qe=i("img"),Ma=f(),Ze=i("img"),jo=f(),x=i("p"),Oa=l("Note that the Hub prompts you to create a "),Lt=i("em"),Da=l("Model Card"),qa=l(", which you can learn about in the "),et=i("a"),Ft=i("strong"),La=l("Model Cards documentation"),Fa=l(". Including a Model Card in your model repo is best practice, but since we\u2019re only making a test repo at the moment we can skip this."),zo=f(),F=i("h2"),le=i("a"),Rt=i("span"),m(Te.$$.fragment),Ra=f(),Yt=i("span"),Ya=l("Adding files to a repository (Web UI)"),Vo=f(),G=i("p"),Ua=l("To add files to your repository via the web UI, start by selecting the "),Ut=i("strong"),ja=l("Files"),za=l(" tab, navigating to the desired directory, and then clicking "),jt=i("strong"),Va=l("Add file"),Ba=l(". You\u2019ll be given the option to create a new file or upload a file directly from your computer."),Bo=f(),R=i("div"),tt=i("img"),Wa=f(),ot=i("img"),Wo=f(),Y=i("h3"),se=i("a"),zt=i("span"),m(Ne.$$.fragment),Xa=f(),Vt=i("span"),Ja=l("Creating a new file"),Xo=f(),P=i("p"),Ka=l("Choosing to create a new file will take you to the following editor screen, where you can choose a name for your file, add content, and save your file with a message that summarizes your changes. Instead of directly committing the new file to your repo\u2019s "),Bt=i("code"),Qa=l("main"),Za=l(" branch, you can select "),Wt=i("code"),er=l("Open as a pull request"),tr=l(" to create a "),it=i("a"),or=l("Pull Request"),ir=l("."),Jo=f(),U=i("div"),at=i("img"),ar=f(),rt=i("img"),Ko=f(),j=i("h3"),ne=i("a"),Xt=i("span"),m(He.$$.fragment),rr=f(),Jt=i("span"),lr=l("Uploading a file"),Qo=f(),ce=i("p"),sr=l("If you choose "),Kt=i("em"),nr=l("Upload file"),cr=l(" you\u2019ll be able to choose a local file to upload, along with a message summarizing your changes to the repo."),Zo=f(),z=i("div"),lt=i("img"),hr=f(),st=i("img"),ei=f(),A=i("p"),fr=l("As with creating new files, you can select "),Qt=i("code"),ur=l("Open as a pull request"),dr=l(" to create a "),nt=i("a"),pr=l("Pull Request"),mr=l(" instead of adding your changes directly to the "),Zt=i("code"),gr=l("main"),vr=l(" branch of your repo."),ti=f(),V=i("h2"),he=i("a"),eo=i("span"),m(Me.$$.fragment),yr=f(),to=i("span"),wr=l("Adding files to a repository (terminal)"),oi=f(),B=i("h3"),fe=i("a"),oo=i("span"),m(Oe.$$.fragment),_r=f(),io=i("span"),br=l("Cloning repositories"),ii=f(),ue=i("p"),Er=l("Downloading repositories to your local machine is called "),ao=i("em"),kr=l("cloning"),$r=l(". You can use the following commands to load your repo and navigate to it:"),ai=f(),m(De.$$.fragment),ri=f(),W=i("h3"),de=i("a"),ro=i("span"),m(qe.$$.fragment),Pr=f(),lo=i("span"),Ar=l("Set up"),li=f(),ct=i("p"),Ir=l("Now\u2019s the time, you can add any files you want to the repository! \u{1F525}"),si=f(),pe=i("p"),Sr=l("Do you have files larger than 10MB? Those files should be tracked with "),so=i("code"),Cr=l("git-lfs"),xr=l(", which you can initialize with:"),ni=f(),m(Le.$$.fragment),ci=f(),me=i("p"),Gr=l("Note that if your files are larger than "),no=i("strong"),Tr=l("5GB"),Nr=l(" you\u2019ll also need to run:"),hi=f(),m(Fe.$$.fragment),fi=f(),I=i("p"),Hr=l("When you use Hugging Face to create a repository, Hugging Face automatically provides a list of common file extensions for common Machine Learning large files in the "),co=i("code"),Mr=l(".gitattributes"),Or=l(" file, which "),ho=i("code"),Dr=l("git-lfs"),qr=l(" uses to efficiently track changes to your large files. However, you might need to add new extensions if your file types are not already handled. You can do so with "),fo=i("code"),Lr=l('git lfs track "*.your_extension"'),Fr=l("."),ui=f(),X=i("h3"),ge=i("a"),uo=i("span"),m(Re.$$.fragment),Rr=f(),po=i("span"),Yr=l("Pushing files"),di=f(),b=i("p"),Ur=l("You can use Git to save new files and any changes to already existing files as a bundle of changes called a "),mo=i("em"),jr=l("commit"),zr=l(", which can be thought of as a \u201Crevision\u201D to your project. To create a commit, you have to "),go=i("code"),Vr=l("add"),Br=l(" the files to let Git know that we\u2019re planning on saving the changes and then "),vo=i("code"),Wr=l("commit"),Xr=l(" those changes. In order to sync the new commit with the Hugging Face Hub, you then "),yo=i("code"),Jr=l("push"),Kr=l(" the commit to the Hub."),pi=f(),m(Ye.$$.fragment),mi=f(),ve=i("p"),Qr=l("And you\u2019re done! You can check your repository on Hugging Face with all the recently added files. For example, in the screenshot below the user added a number of files. Note that some files in this example have a size of "),wo=i("code"),Zr=l("1.04 GB"),el=l(", so the repo uses Git LFS to track it."),gi=f(),J=i("div"),ht=i("img"),tl=f(),ft=i("img"),vi=f(),K=i("h2"),ye=i("a"),_o=i("span"),m(Ue.$$.fragment),ol=f(),bo=i("span"),il=l("Viewing a repo's history"),yi=f(),p=i("p"),al=l("Every time you go through the "),Eo=i("code"),rl=l("add"),ll=l("-"),ko=i("code"),sl=l("commit"),nl=l("-"),$o=i("code"),cl=l("push"),hl=l(" cycle, the repo will keep track of every change you\u2019ve made to your files. The UI allows you to explore the model files and commits and to see the difference (also known as "),Po=i("em"),fl=l("diff"),ul=l(") introduced by each commit. To see the history, you can click on the "),Ao=i("strong"),dl=l("History: X commits"),pl=l(" link."),wi=f(),Q=i("div"),ut=i("img"),ml=f(),dt=i("img"),_i=f(),pt=i("p"),gl=l("You can click on an individual commit to see what changes that commit introduced:"),bi=f(),Z=i("div"),mt=i("img"),vl=f(),gt=i("img"),this.h()},l(e){const c=yn('[data-svelte="svelte-1phssyn"]',document.head);N=a(c,"META",{name:!0,content:!0}),c.forEach(o),So=u(e),H=a(e,"H1",{class:!0});var ki=r(H);ee=a(ki,"A",{id:!0,class:!0,href:!0});var Dl=r(ee);_t=a(Dl,"SPAN",{});var ql=r(_t);g($e.$$.fragment,ql),ql.forEach(o),Dl.forEach(o),Ji=u(ki),bt=a(ki,"SPAN",{});var Ll=r(bt);Ki=s(Ll,"Getting Started with Repositories"),Ll.forEach(o),ki.forEach(o),Co=u(e),je=a(e,"P",{});var Fl=r(je);Qi=s(Fl,"This beginner-friendly guide will help you get the basic skills you need to create and manage your repository on the Hub. Each section builds on the previous one, so feel free to choose where to start!"),Fl.forEach(o),xo=u(e),M=a(e,"H2",{class:!0});var $i=r(M);te=a($i,"A",{id:!0,class:!0,href:!0});var Rl=r(te);Et=a(Rl,"SPAN",{});var Yl=r(Et);g(Pe.$$.fragment,Yl),Yl.forEach(o),Rl.forEach(o),Zi=u($i),kt=a($i,"SPAN",{});var Ul=r(kt);ea=s(Ul,"Requirements"),Ul.forEach(o),$i.forEach(o),Go=u(e),ze=a(e,"P",{});var jl=r(ze);ta=s(jl,"This document shows how to handle repositories through the web interface as well as through the terminal. There are no requirements if working with the UI. If you want to work with the terminal, please follow these installation instructions."),jl.forEach(o),To=u(e),$=a(e,"P",{});var we=r($);oa=s(we,"If you do not have "),$t=a(we,"CODE",{});var zl=r($t);ia=s(zl,"git"),zl.forEach(o),aa=s(we," available as a CLI command yet, you will need to "),Ae=a(we,"A",{href:!0,rel:!0});var Vl=r(Ae);ra=s(Vl,"install Git"),Vl.forEach(o),la=s(we," for your platform. You will also need to "),Ie=a(we,"A",{href:!0,rel:!0});var Bl=r(Ie);sa=s(Bl,"install Git LFS"),Bl.forEach(o),na=s(we,", which will be used to handle large files such as images and model weights."),we.forEach(o),No=u(e),oe=a(e,"P",{});var Pi=r(oe);ca=s(Pi,"To be able to push your code to the Hub, you\u2019ll need to authenticate somehow. The easiest way to do this is by installing the "),ie=a(Pi,"A",{href:!0,rel:!0});var yl=r(ie);Pt=a(yl,"CODE",{});var Wl=r(Pt);ha=s(Wl,"huggingface_hub"),Wl.forEach(o),fa=s(yl," CLI"),yl.forEach(o),ua=s(Pi," and running the login command:"),Pi.forEach(o),Ho=u(e),g(Se.$$.fragment,e),Mo=u(e),Ve=a(e,"P",{});var Xl=r(Ve);At=a(Xl,"STRONG",{});var Jl=r(At);da=s(Jl,"The content in the Getting Started section of this document is also available as a video!"),Jl.forEach(o),Xl.forEach(o),Oo=u(e),E=a(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),r(E).forEach(o),Do=u(e),O=a(e,"H2",{class:!0});var Ai=r(O);ae=a(Ai,"A",{id:!0,class:!0,href:!0});var Kl=r(ae);It=a(Kl,"SPAN",{});var Ql=r(It);g(Ce.$$.fragment,Ql),Ql.forEach(o),Kl.forEach(o),pa=u(Ai),St=a(Ai,"SPAN",{});var Zl=r(St);ma=s(Zl,"Creating a repository"),Zl.forEach(o),Ai.forEach(o),qo=u(e),re=a(e,"P",{});var Ii=r(re);ga=s(Ii,"Using the Hub\u2019s web interface you can easily create repositories, add files (even large ones!), explore models, visualize diffs, and much more. There are three kinds of repositories on the Hub, and in this guide you\u2019ll be creating a "),Ct=a(Ii,"STRONG",{});var es=r(Ct);va=s(es,"model repository"),es.forEach(o),ya=s(Ii," for demonstration purposes. For information on creating and managing models, datasets, and Spaces, refer to their respective documentation."),Ii.forEach(o),Lo=u(e),Be=a(e,"OL",{});var ts=r(Be);xe=a(ts,"LI",{});var Si=r(xe);wa=s(Si,"To create a new repository, visit "),Ge=a(Si,"A",{href:!0,rel:!0});var os=r(Ge);_a=s(os,"huggingface.co/new"),os.forEach(o),ba=s(Si,":"),Si.forEach(o),ts.forEach(o),Fo=u(e),D=a(e,"DIV",{class:!0});var Ci=r(D);We=a(Ci,"IMG",{class:!0,src:!0}),Ea=u(Ci),Xe=a(Ci,"IMG",{class:!0,src:!0}),Ci.forEach(o),Ro=u(e),k=a(e,"OL",{start:!0});var _e=r(k);xt=a(_e,"LI",{});var is=r(xt);Gt=a(is,"P",{});var as=r(Gt);ka=s(as,"Specify the owner of the repository: this can be either you or any of the organizations you\u2019re affiliated with."),as.forEach(o),is.forEach(o),$a=u(_e),Tt=a(_e,"LI",{});var rs=r(Tt);Nt=a(rs,"P",{});var ls=r(Nt);Pa=s(ls,"Enter your model\u2019s name. This will also be the name of the repository."),ls.forEach(o),rs.forEach(o),Aa=u(_e),Ht=a(_e,"LI",{});var ss=r(Ht);Mt=a(ss,"P",{});var ns=r(Mt);Ia=s(ns,"Specify whether you want your model to be public or private."),ns.forEach(o),ss.forEach(o),Sa=u(_e),Ot=a(_e,"LI",{});var cs=r(Ot);q=a(cs,"P",{});var vt=r(q);Ca=s(vt,"Specify the license. You can leave the "),Dt=a(vt,"EM",{});var hs=r(Dt);xa=s(hs,"License"),hs.forEach(o),Ga=s(vt," field blank for now. To learn about licenses, visit the "),Je=a(vt,"A",{href:!0});var fs=r(Je);qt=a(fs,"STRONG",{});var us=r(qt);Ta=s(us,"Licenses"),us.forEach(o),fs.forEach(o),Na=s(vt," documentation."),vt.forEach(o),cs.forEach(o),_e.forEach(o),Yo=u(e),Ke=a(e,"P",{});var ds=r(Ke);Ha=s(ds,"After creating your model repository, you should see a page like this:"),ds.forEach(o),Uo=u(e),L=a(e,"DIV",{class:!0});var xi=r(L);Qe=a(xi,"IMG",{class:!0,src:!0}),Ma=u(xi),Ze=a(xi,"IMG",{class:!0,src:!0}),xi.forEach(o),jo=u(e),x=a(e,"P",{});var yt=r(x);Oa=s(yt,"Note that the Hub prompts you to create a "),Lt=a(yt,"EM",{});var ps=r(Lt);Da=s(ps,"Model Card"),ps.forEach(o),qa=s(yt,", which you can learn about in the "),et=a(yt,"A",{href:!0});var ms=r(et);Ft=a(ms,"STRONG",{});var gs=r(Ft);La=s(gs,"Model Cards documentation"),gs.forEach(o),ms.forEach(o),Fa=s(yt,". Including a Model Card in your model repo is best practice, but since we\u2019re only making a test repo at the moment we can skip this."),yt.forEach(o),zo=u(e),F=a(e,"H2",{class:!0});var Gi=r(F);le=a(Gi,"A",{id:!0,class:!0,href:!0});var vs=r(le);Rt=a(vs,"SPAN",{});var ys=r(Rt);g(Te.$$.fragment,ys),ys.forEach(o),vs.forEach(o),Ra=u(Gi),Yt=a(Gi,"SPAN",{});var ws=r(Yt);Ya=s(ws,"Adding files to a repository (Web UI)"),ws.forEach(o),Gi.forEach(o),Vo=u(e),G=a(e,"P",{});var wt=r(G);Ua=s(wt,"To add files to your repository via the web UI, start by selecting the "),Ut=a(wt,"STRONG",{});var _s=r(Ut);ja=s(_s,"Files"),_s.forEach(o),za=s(wt," tab, navigating to the desired directory, and then clicking "),jt=a(wt,"STRONG",{});var bs=r(jt);Va=s(bs,"Add file"),bs.forEach(o),Ba=s(wt,". You\u2019ll be given the option to create a new file or upload a file directly from your computer."),wt.forEach(o),Bo=u(e),R=a(e,"DIV",{class:!0});var Ti=r(R);tt=a(Ti,"IMG",{class:!0,src:!0}),Wa=u(Ti),ot=a(Ti,"IMG",{class:!0,src:!0}),Ti.forEach(o),Wo=u(e),Y=a(e,"H3",{class:!0});var Ni=r(Y);se=a(Ni,"A",{id:!0,class:!0,href:!0});var Es=r(se);zt=a(Es,"SPAN",{});var ks=r(zt);g(Ne.$$.fragment,ks),ks.forEach(o),Es.forEach(o),Xa=u(Ni),Vt=a(Ni,"SPAN",{});var $s=r(Vt);Ja=s($s,"Creating a new file"),$s.forEach(o),Ni.forEach(o),Xo=u(e),P=a(e,"P",{});var be=r(P);Ka=s(be,"Choosing to create a new file will take you to the following editor screen, where you can choose a name for your file, add content, and save your file with a message that summarizes your changes. Instead of directly committing the new file to your repo\u2019s "),Bt=a(be,"CODE",{});var Ps=r(Bt);Qa=s(Ps,"main"),Ps.forEach(o),Za=s(be," branch, you can select "),Wt=a(be,"CODE",{});var As=r(Wt);er=s(As,"Open as a pull request"),As.forEach(o),tr=s(be," to create a "),it=a(be,"A",{href:!0});var Is=r(it);or=s(Is,"Pull Request"),Is.forEach(o),ir=s(be,"."),be.forEach(o),Jo=u(e),U=a(e,"DIV",{class:!0});var Hi=r(U);at=a(Hi,"IMG",{class:!0,src:!0}),ar=u(Hi),rt=a(Hi,"IMG",{class:!0,src:!0}),Hi.forEach(o),Ko=u(e),j=a(e,"H3",{class:!0});var Mi=r(j);ne=a(Mi,"A",{id:!0,class:!0,href:!0});var Ss=r(ne);Xt=a(Ss,"SPAN",{});var Cs=r(Xt);g(He.$$.fragment,Cs),Cs.forEach(o),Ss.forEach(o),rr=u(Mi),Jt=a(Mi,"SPAN",{});var xs=r(Jt);lr=s(xs,"Uploading a file"),xs.forEach(o),Mi.forEach(o),Qo=u(e),ce=a(e,"P",{});var Oi=r(ce);sr=s(Oi,"If you choose "),Kt=a(Oi,"EM",{});var Gs=r(Kt);nr=s(Gs,"Upload file"),Gs.forEach(o),cr=s(Oi," you\u2019ll be able to choose a local file to upload, along with a message summarizing your changes to the repo."),Oi.forEach(o),Zo=u(e),z=a(e,"DIV",{class:!0});var Di=r(z);lt=a(Di,"IMG",{class:!0,src:!0}),hr=u(Di),st=a(Di,"IMG",{class:!0,src:!0}),Di.forEach(o),ei=u(e),A=a(e,"P",{});var Ee=r(A);fr=s(Ee,"As with creating new files, you can select "),Qt=a(Ee,"CODE",{});var Ts=r(Qt);ur=s(Ts,"Open as a pull request"),Ts.forEach(o),dr=s(Ee," to create a "),nt=a(Ee,"A",{href:!0});var Ns=r(nt);pr=s(Ns,"Pull Request"),Ns.forEach(o),mr=s(Ee," instead of adding your changes directly to the "),Zt=a(Ee,"CODE",{});var Hs=r(Zt);gr=s(Hs,"main"),Hs.forEach(o),vr=s(Ee," branch of your repo."),Ee.forEach(o),ti=u(e),V=a(e,"H2",{class:!0});var qi=r(V);he=a(qi,"A",{id:!0,class:!0,href:!0});var Ms=r(he);eo=a(Ms,"SPAN",{});var Os=r(eo);g(Me.$$.fragment,Os),Os.forEach(o),Ms.forEach(o),yr=u(qi),to=a(qi,"SPAN",{});var Ds=r(to);wr=s(Ds,"Adding files to a repository (terminal)"),Ds.forEach(o),qi.forEach(o),oi=u(e),B=a(e,"H3",{class:!0});var Li=r(B);fe=a(Li,"A",{id:!0,class:!0,href:!0});var qs=r(fe);oo=a(qs,"SPAN",{});var Ls=r(oo);g(Oe.$$.fragment,Ls),Ls.forEach(o),qs.forEach(o),_r=u(Li),io=a(Li,"SPAN",{});var Fs=r(io);br=s(Fs,"Cloning repositories"),Fs.forEach(o),Li.forEach(o),ii=u(e),ue=a(e,"P",{});var Fi=r(ue);Er=s(Fi,"Downloading repositories to your local machine is called "),ao=a(Fi,"EM",{});var Rs=r(ao);kr=s(Rs,"cloning"),Rs.forEach(o),$r=s(Fi,". You can use the following commands to load your repo and navigate to it:"),Fi.forEach(o),ai=u(e),g(De.$$.fragment,e),ri=u(e),W=a(e,"H3",{class:!0});var Ri=r(W);de=a(Ri,"A",{id:!0,class:!0,href:!0});var Ys=r(de);ro=a(Ys,"SPAN",{});var Us=r(ro);g(qe.$$.fragment,Us),Us.forEach(o),Ys.forEach(o),Pr=u(Ri),lo=a(Ri,"SPAN",{});var js=r(lo);Ar=s(js,"Set up"),js.forEach(o),Ri.forEach(o),li=u(e),ct=a(e,"P",{});var zs=r(ct);Ir=s(zs,"Now\u2019s the time, you can add any files you want to the repository! \u{1F525}"),zs.forEach(o),si=u(e),pe=a(e,"P",{});var Yi=r(pe);Sr=s(Yi,"Do you have files larger than 10MB? Those files should be tracked with "),so=a(Yi,"CODE",{});var Vs=r(so);Cr=s(Vs,"git-lfs"),Vs.forEach(o),xr=s(Yi,", which you can initialize with:"),Yi.forEach(o),ni=u(e),g(Le.$$.fragment,e),ci=u(e),me=a(e,"P",{});var Ui=r(me);Gr=s(Ui,"Note that if your files are larger than "),no=a(Ui,"STRONG",{});var Bs=r(no);Tr=s(Bs,"5GB"),Bs.forEach(o),Nr=s(Ui," you\u2019ll also need to run:"),Ui.forEach(o),hi=u(e),g(Fe.$$.fragment,e),fi=u(e),I=a(e,"P",{});var ke=r(I);Hr=s(ke,"When you use Hugging Face to create a repository, Hugging Face automatically provides a list of common file extensions for common Machine Learning large files in the "),co=a(ke,"CODE",{});var Ws=r(co);Mr=s(Ws,".gitattributes"),Ws.forEach(o),Or=s(ke," file, which "),ho=a(ke,"CODE",{});var Xs=r(ho);Dr=s(Xs,"git-lfs"),Xs.forEach(o),qr=s(ke," uses to efficiently track changes to your large files. However, you might need to add new extensions if your file types are not already handled. You can do so with "),fo=a(ke,"CODE",{});var Js=r(fo);Lr=s(Js,'git lfs track "*.your_extension"'),Js.forEach(o),Fr=s(ke,"."),ke.forEach(o),ui=u(e),X=a(e,"H3",{class:!0});var ji=r(X);ge=a(ji,"A",{id:!0,class:!0,href:!0});var Ks=r(ge);uo=a(Ks,"SPAN",{});var Qs=r(uo);g(Re.$$.fragment,Qs),Qs.forEach(o),Ks.forEach(o),Rr=u(ji),po=a(ji,"SPAN",{});var Zs=r(po);Yr=s(Zs,"Pushing files"),Zs.forEach(o),ji.forEach(o),di=u(e),b=a(e,"P",{});var T=r(b);Ur=s(T,"You can use Git to save new files and any changes to already existing files as a bundle of changes called a "),mo=a(T,"EM",{});var en=r(mo);jr=s(en,"commit"),en.forEach(o),zr=s(T,", which can be thought of as a \u201Crevision\u201D to your project. To create a commit, you have to "),go=a(T,"CODE",{});var tn=r(go);Vr=s(tn,"add"),tn.forEach(o),Br=s(T," the files to let Git know that we\u2019re planning on saving the changes and then "),vo=a(T,"CODE",{});var on=r(vo);Wr=s(on,"commit"),on.forEach(o),Xr=s(T," those changes. In order to sync the new commit with the Hugging Face Hub, you then "),yo=a(T,"CODE",{});var an=r(yo);Jr=s(an,"push"),an.forEach(o),Kr=s(T," the commit to the Hub."),T.forEach(o),pi=u(e),g(Ye.$$.fragment,e),mi=u(e),ve=a(e,"P",{});var zi=r(ve);Qr=s(zi,"And you\u2019re done! You can check your repository on Hugging Face with all the recently added files. For example, in the screenshot below the user added a number of files. Note that some files in this example have a size of "),wo=a(zi,"CODE",{});var rn=r(wo);Zr=s(rn,"1.04 GB"),rn.forEach(o),el=s(zi,", so the repo uses Git LFS to track it."),zi.forEach(o),gi=u(e),J=a(e,"DIV",{class:!0});var Vi=r(J);ht=a(Vi,"IMG",{class:!0,src:!0}),tl=u(Vi),ft=a(Vi,"IMG",{class:!0,src:!0}),Vi.forEach(o),vi=u(e),K=a(e,"H2",{class:!0});var Bi=r(K);ye=a(Bi,"A",{id:!0,class:!0,href:!0});var ln=r(ye);_o=a(ln,"SPAN",{});var sn=r(_o);g(Ue.$$.fragment,sn),sn.forEach(o),ln.forEach(o),ol=u(Bi),bo=a(Bi,"SPAN",{});var nn=r(bo);il=s(nn,"Viewing a repo's history"),nn.forEach(o),Bi.forEach(o),yi=u(e),p=a(e,"P",{});var S=r(p);al=s(S,"Every time you go through the "),Eo=a(S,"CODE",{});var cn=r(Eo);rl=s(cn,"add"),cn.forEach(o),ll=s(S,"-"),ko=a(S,"CODE",{});var hn=r(ko);sl=s(hn,"commit"),hn.forEach(o),nl=s(S,"-"),$o=a(S,"CODE",{});var fn=r($o);cl=s(fn,"push"),fn.forEach(o),hl=s(S," cycle, the repo will keep track of every change you\u2019ve made to your files. The UI allows you to explore the model files and commits and to see the difference (also known as "),Po=a(S,"EM",{});var un=r(Po);fl=s(un,"diff"),un.forEach(o),ul=s(S,") introduced by each commit. To see the history, you can click on the "),Ao=a(S,"STRONG",{});var dn=r(Ao);dl=s(dn,"History: X commits"),dn.forEach(o),pl=s(S," link."),S.forEach(o),wi=u(e),Q=a(e,"DIV",{class:!0});var Wi=r(Q);ut=a(Wi,"IMG",{class:!0,src:!0}),ml=u(Wi),dt=a(Wi,"IMG",{class:!0,src:!0}),Wi.forEach(o),_i=u(e),pt=a(e,"P",{});var pn=r(pt);gl=s(pn,"You can click on an individual commit to see what changes that commit introduced:"),pn.forEach(o),bi=u(e),Z=a(e,"DIV",{class:!0});var Xi=r(Z);mt=a(Xi,"IMG",{class:!0,src:!0}),vl=u(Xi),gt=a(Xi,"IMG",{class:!0,src:!0}),Xi.forEach(o),this.h()},h(){n(N,"name","hf:doc:metadata"),n(N,"content",JSON.stringify(En)),n(ee,"id","getting-started-with-repositories"),n(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ee,"href","#getting-started-with-repositories"),n(H,"class","relative group"),n(te,"id","requirements"),n(te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(te,"href","#requirements"),n(M,"class","relative group"),n(Ae,"href","https://git-scm.com/downloads"),n(Ae,"rel","nofollow"),n(Ie,"href","https://git-lfs.github.com/"),n(Ie,"rel","nofollow"),n(ie,"href","https://huggingface.co/docs/huggingface_hub/index"),n(ie,"rel","nofollow"),n(E,"width","560"),n(E,"height","315"),d(E.src,_l="https://www.youtube-nocookie.com/embed/rkCly_cbMBk")||n(E,"src",_l),n(E,"title","Managing a repo"),n(E,"frameborder","0"),n(E,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),E.allowFullscreen=!0,n(ae,"id","creating-a-repository"),n(ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ae,"href","#creating-a-repository"),n(O,"class","relative group"),n(Ge,"href","http://huggingface.co/new"),n(Ge,"rel","nofollow"),n(We,"class","block dark:hidden"),d(We.src,bl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/new_repo.png")||n(We,"src",bl),n(Xe,"class","hidden dark:block"),d(Xe.src,El="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/new_repo-dark.png")||n(Xe,"src",El),n(D,"class","flex justify-center"),n(Je,"href","repositories-licenses"),n(k,"start","2"),n(Qe,"class","block dark:hidden"),d(Qe.src,kl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/empty_repo.png")||n(Qe,"src",kl),n(Ze,"class","hidden dark:block"),d(Ze.src,$l="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/empty_repo-dark.png")||n(Ze,"src",$l),n(L,"class","flex justify-center"),n(et,"href","./models-cards"),n(le,"id","adding-files-to-a-repository-web-ui"),n(le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(le,"href","#adding-files-to-a-repository-web-ui"),n(F,"class","relative group"),n(tt,"class","block dark:hidden"),d(tt.src,Pl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-add_file.png")||n(tt,"src",Pl),n(ot,"class","hidden dark:block"),d(ot.src,Al="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-add_file-dark.png")||n(ot,"src",Al),n(R,"class","flex justify-center"),n(se,"id","creating-a-new-file"),n(se,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(se,"href","#creating-a-new-file"),n(Y,"class","relative group"),n(it,"href","./repositories-pull-requests-discussions"),n(at,"class","block dark:hidden"),d(at.src,Il="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-create_file.png")||n(at,"src",Il),n(rt,"class","hidden dark:block"),d(rt.src,Sl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-create_file-dark.png")||n(rt,"src",Sl),n(U,"class","flex justify-center"),n(ne,"id","uploading-a-file"),n(ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ne,"href","#uploading-a-file"),n(j,"class","relative group"),n(lt,"class","block dark:hidden"),d(lt.src,Cl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-upload_file.png")||n(lt,"src",Cl),n(st,"class","hidden dark:block"),d(st.src,xl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-upload_file-dark.png")||n(st,"src",xl),n(z,"class","flex justify-center"),n(nt,"href","./repositories-pull-requests-discussions"),n(he,"id","adding-files-to-a-repository-terminal"),n(he,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(he,"href","#adding-files-to-a-repository-terminal"),n(V,"class","relative group"),n(fe,"id","cloning-repositories"),n(fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(fe,"href","#cloning-repositories"),n(B,"class","relative group"),n(de,"id","set-up"),n(de,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(de,"href","#set-up"),n(W,"class","relative group"),n(ge,"id","pushing-files"),n(ge,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ge,"href","#pushing-files"),n(X,"class","relative group"),n(ht,"class","block dark:hidden"),d(ht.src,Gl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png")||n(ht,"src",Gl),n(ft,"class","hidden dark:block"),d(ft.src,Tl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files-dark.png")||n(ft,"src",Tl),n(J,"class","flex justify-center"),n(ye,"id","viewing-a-repos-history"),n(ye,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ye,"href","#viewing-a-repos-history"),n(K,"class","relative group"),n(ut,"class","block dark:hidden"),d(ut.src,Nl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_history.png")||n(ut,"src",Nl),n(dt,"class","hidden dark:block"),d(dt.src,Hl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_history-dark.png")||n(dt,"src",Hl),n(Q,"class","flex justify-center"),n(mt,"class","block dark:hidden"),d(mt.src,Ml="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif")||n(mt,"src",Ml),n(gt,"class","hidden dark:block"),d(gt.src,Ol="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history-dark.gif")||n(gt,"src",Ol),n(Z,"class","flex justify-center")},m(e,c){t(document.head,N),h(e,So,c),h(e,H,c),t(H,ee),t(ee,_t),v($e,_t,null),t(H,Ji),t(H,bt),t(bt,Ki),h(e,Co,c),h(e,je,c),t(je,Qi),h(e,xo,c),h(e,M,c),t(M,te),t(te,Et),v(Pe,Et,null),t(M,Zi),t(M,kt),t(kt,ea),h(e,Go,c),h(e,ze,c),t(ze,ta),h(e,To,c),h(e,$,c),t($,oa),t($,$t),t($t,ia),t($,aa),t($,Ae),t(Ae,ra),t($,la),t($,Ie),t(Ie,sa),t($,na),h(e,No,c),h(e,oe,c),t(oe,ca),t(oe,ie),t(ie,Pt),t(Pt,ha),t(ie,fa),t(oe,ua),h(e,Ho,c),v(Se,e,c),h(e,Mo,c),h(e,Ve,c),t(Ve,At),t(At,da),h(e,Oo,c),h(e,E,c),h(e,Do,c),h(e,O,c),t(O,ae),t(ae,It),v(Ce,It,null),t(O,pa),t(O,St),t(St,ma),h(e,qo,c),h(e,re,c),t(re,ga),t(re,Ct),t(Ct,va),t(re,ya),h(e,Lo,c),h(e,Be,c),t(Be,xe),t(xe,wa),t(xe,Ge),t(Ge,_a),t(xe,ba),h(e,Fo,c),h(e,D,c),t(D,We),t(D,Ea),t(D,Xe),h(e,Ro,c),h(e,k,c),t(k,xt),t(xt,Gt),t(Gt,ka),t(k,$a),t(k,Tt),t(Tt,Nt),t(Nt,Pa),t(k,Aa),t(k,Ht),t(Ht,Mt),t(Mt,Ia),t(k,Sa),t(k,Ot),t(Ot,q),t(q,Ca),t(q,Dt),t(Dt,xa),t(q,Ga),t(q,Je),t(Je,qt),t(qt,Ta),t(q,Na),h(e,Yo,c),h(e,Ke,c),t(Ke,Ha),h(e,Uo,c),h(e,L,c),t(L,Qe),t(L,Ma),t(L,Ze),h(e,jo,c),h(e,x,c),t(x,Oa),t(x,Lt),t(Lt,Da),t(x,qa),t(x,et),t(et,Ft),t(Ft,La),t(x,Fa),h(e,zo,c),h(e,F,c),t(F,le),t(le,Rt),v(Te,Rt,null),t(F,Ra),t(F,Yt),t(Yt,Ya),h(e,Vo,c),h(e,G,c),t(G,Ua),t(G,Ut),t(Ut,ja),t(G,za),t(G,jt),t(jt,Va),t(G,Ba),h(e,Bo,c),h(e,R,c),t(R,tt),t(R,Wa),t(R,ot),h(e,Wo,c),h(e,Y,c),t(Y,se),t(se,zt),v(Ne,zt,null),t(Y,Xa),t(Y,Vt),t(Vt,Ja),h(e,Xo,c),h(e,P,c),t(P,Ka),t(P,Bt),t(Bt,Qa),t(P,Za),t(P,Wt),t(Wt,er),t(P,tr),t(P,it),t(it,or),t(P,ir),h(e,Jo,c),h(e,U,c),t(U,at),t(U,ar),t(U,rt),h(e,Ko,c),h(e,j,c),t(j,ne),t(ne,Xt),v(He,Xt,null),t(j,rr),t(j,Jt),t(Jt,lr),h(e,Qo,c),h(e,ce,c),t(ce,sr),t(ce,Kt),t(Kt,nr),t(ce,cr),h(e,Zo,c),h(e,z,c),t(z,lt),t(z,hr),t(z,st),h(e,ei,c),h(e,A,c),t(A,fr),t(A,Qt),t(Qt,ur),t(A,dr),t(A,nt),t(nt,pr),t(A,mr),t(A,Zt),t(Zt,gr),t(A,vr),h(e,ti,c),h(e,V,c),t(V,he),t(he,eo),v(Me,eo,null),t(V,yr),t(V,to),t(to,wr),h(e,oi,c),h(e,B,c),t(B,fe),t(fe,oo),v(Oe,oo,null),t(B,_r),t(B,io),t(io,br),h(e,ii,c),h(e,ue,c),t(ue,Er),t(ue,ao),t(ao,kr),t(ue,$r),h(e,ai,c),v(De,e,c),h(e,ri,c),h(e,W,c),t(W,de),t(de,ro),v(qe,ro,null),t(W,Pr),t(W,lo),t(lo,Ar),h(e,li,c),h(e,ct,c),t(ct,Ir),h(e,si,c),h(e,pe,c),t(pe,Sr),t(pe,so),t(so,Cr),t(pe,xr),h(e,ni,c),v(Le,e,c),h(e,ci,c),h(e,me,c),t(me,Gr),t(me,no),t(no,Tr),t(me,Nr),h(e,hi,c),v(Fe,e,c),h(e,fi,c),h(e,I,c),t(I,Hr),t(I,co),t(co,Mr),t(I,Or),t(I,ho),t(ho,Dr),t(I,qr),t(I,fo),t(fo,Lr),t(I,Fr),h(e,ui,c),h(e,X,c),t(X,ge),t(ge,uo),v(Re,uo,null),t(X,Rr),t(X,po),t(po,Yr),h(e,di,c),h(e,b,c),t(b,Ur),t(b,mo),t(mo,jr),t(b,zr),t(b,go),t(go,Vr),t(b,Br),t(b,vo),t(vo,Wr),t(b,Xr),t(b,yo),t(yo,Jr),t(b,Kr),h(e,pi,c),v(Ye,e,c),h(e,mi,c),h(e,ve,c),t(ve,Qr),t(ve,wo),t(wo,Zr),t(ve,el),h(e,gi,c),h(e,J,c),t(J,ht),t(J,tl),t(J,ft),h(e,vi,c),h(e,K,c),t(K,ye),t(ye,_o),v(Ue,_o,null),t(K,ol),t(K,bo),t(bo,il),h(e,yi,c),h(e,p,c),t(p,al),t(p,Eo),t(Eo,rl),t(p,ll),t(p,ko),t(ko,sl),t(p,nl),t(p,$o),t($o,cl),t(p,hl),t(p,Po),t(Po,fl),t(p,ul),t(p,Ao),t(Ao,dl),t(p,pl),h(e,wi,c),h(e,Q,c),t(Q,ut),t(Q,ml),t(Q,dt),h(e,_i,c),h(e,pt,c),t(pt,gl),h(e,bi,c),h(e,Z,c),t(Z,mt),t(Z,vl),t(Z,gt),Ei=!0},p:wn,i(e){Ei||(y($e.$$.fragment,e),y(Pe.$$.fragment,e),y(Se.$$.fragment,e),y(Ce.$$.fragment,e),y(Te.$$.fragment,e),y(Ne.$$.fragment,e),y(He.$$.fragment,e),y(Me.$$.fragment,e),y(Oe.$$.fragment,e),y(De.$$.fragment,e),y(qe.$$.fragment,e),y(Le.$$.fragment,e),y(Fe.$$.fragment,e),y(Re.$$.fragment,e),y(Ye.$$.fragment,e),y(Ue.$$.fragment,e),Ei=!0)},o(e){w($e.$$.fragment,e),w(Pe.$$.fragment,e),w(Se.$$.fragment,e),w(Ce.$$.fragment,e),w(Te.$$.fragment,e),w(Ne.$$.fragment,e),w(He.$$.fragment,e),w(Me.$$.fragment,e),w(Oe.$$.fragment,e),w(De.$$.fragment,e),w(qe.$$.fragment,e),w(Le.$$.fragment,e),w(Fe.$$.fragment,e),w(Re.$$.fragment,e),w(Ye.$$.fragment,e),w(Ue.$$.fragment,e),Ei=!1},d(e){o(N),e&&o(So),e&&o(H),_($e),e&&o(Co),e&&o(je),e&&o(xo),e&&o(M),_(Pe),e&&o(Go),e&&o(ze),e&&o(To),e&&o($),e&&o(No),e&&o(oe),e&&o(Ho),_(Se,e),e&&o(Mo),e&&o(Ve),e&&o(Oo),e&&o(E),e&&o(Do),e&&o(O),_(Ce),e&&o(qo),e&&o(re),e&&o(Lo),e&&o(Be),e&&o(Fo),e&&o(D),e&&o(Ro),e&&o(k),e&&o(Yo),e&&o(Ke),e&&o(Uo),e&&o(L),e&&o(jo),e&&o(x),e&&o(zo),e&&o(F),_(Te),e&&o(Vo),e&&o(G),e&&o(Bo),e&&o(R),e&&o(Wo),e&&o(Y),_(Ne),e&&o(Xo),e&&o(P),e&&o(Jo),e&&o(U),e&&o(Ko),e&&o(j),_(He),e&&o(Qo),e&&o(ce),e&&o(Zo),e&&o(z),e&&o(ei),e&&o(A),e&&o(ti),e&&o(V),_(Me),e&&o(oi),e&&o(B),_(Oe),e&&o(ii),e&&o(ue),e&&o(ai),_(De,e),e&&o(ri),e&&o(W),_(qe),e&&o(li),e&&o(ct),e&&o(si),e&&o(pe),e&&o(ni),_(Le,e),e&&o(ci),e&&o(me),e&&o(hi),_(Fe,e),e&&o(fi),e&&o(I),e&&o(ui),e&&o(X),_(Re),e&&o(di),e&&o(b),e&&o(pi),_(Ye,e),e&&o(mi),e&&o(ve),e&&o(gi),e&&o(J),e&&o(vi),e&&o(K),_(Ue),e&&o(yi),e&&o(p),e&&o(wi),e&&o(Q),e&&o(_i),e&&o(pt),e&&o(bi),e&&o(Z)}}}const En={local:"getting-started-with-repositories",sections:[{local:"requirements",title:"Requirements"},{local:"creating-a-repository",title:"Creating a repository"},{local:"adding-files-to-a-repository-web-ui",sections:[{local:"creating-a-new-file",title:"Creating a new file"},{local:"uploading-a-file",title:"Uploading a file"}],title:"Adding files to a repository (Web UI)"},{local:"adding-files-to-a-repository-terminal",sections:[{local:"cloning-repositories",title:"Cloning repositories"},{local:"set-up",title:"Set up"},{local:"pushing-files",title:"Pushing files"}],title:"Adding files to a repository (terminal)"},{local:"viewing-a-repos-history",title:"Viewing a repo's history"}],title:"Getting Started with Repositories"};function kn(wl){return _n(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class In extends mn{constructor(N){super();gn(this,N,kn,bn,vn,{})}}export{In as default,En as metadata};
