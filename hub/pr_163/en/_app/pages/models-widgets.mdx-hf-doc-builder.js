import{S as Ki,i as Vi,s as Qi,e as s,k as p,w as b,t as r,N as Xi,c as l,d as a,m as h,a as o,x,h as i,b as n,P as Ji,G as e,g as f,y as k,L as Zi,q as $,o as j,B as A,v as en}from"../chunks/vendor-hf-doc-builder.js";import{I as ht}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as dt}from"../chunks/CodeBlock-hf-doc-builder.js";function tn(or){let O,ua,D,M,mt,se,_s,ut,Es,ga,S,R,gt,le,ys,wt,bs,wa,Xe,xs,va,Ze,ks,_a,v,z,oe,$s,js,re,As,Cs,Is,ie,ne,Ps,Os,ce,Ds,Ss,F,fe,qs,Hs,pe,Ts,Ls,Ns,Y,he,Ws,Ms,de,Rs,zs,Ea,B,Fs,me,Ys,Bs,ya,q,G,vt,ue,Gs,_t,Us,ba,u,Js,Et,Ks,Vs,yt,Qs,Xs,bt,Zs,el,xt,tl,al,kt,sl,ll,xa,g,ol,$t,rl,il,et,nl,cl,jt,fl,pl,At,hl,dl,ka,w,ml,Ct,ul,gl,It,wl,vl,Pt,_l,El,ge,yl,bl,$a,C,xl,Ot,kl,$l,tt,jl,Al,ja,H,U,Dt,we,Cl,St,Il,Aa,at,Pl,Ca,ve,Ia,_,Ol,qt,Dl,Sl,Ht,ql,Hl,Tt,Tl,Ll,Pa,T,_e,rr,Nl,Ee,ir,Oa,ye,Da,E,Wl,be,Ml,Rl,Lt,zl,Fl,Nt,Yl,Bl,Sa,st,Gl,qa,xe,Ha,lt,Ul,Ta,ke,La,J,Jl,$e,Kl,Vl,Na,L,K,Wt,je,Ql,Mt,Xl,Wa,V,Zl,Ae,eo,to,Ma,ot,ao,Ra,d,Ce,Rt,so,lo,Ie,zt,oo,ro,Pe,Ft,io,no,Oe,Yt,co,fo,De,Bt,po,ho,Se,Gt,mo,uo,qe,Ut,go,wo,He,Jt,vo,_o,Te,Kt,Eo,yo,Le,Vt,bo,xo,Ne,Qt,ko,$o,We,Xt,jo,Ao,Me,Zt,Co,Io,Re,ea,Po,Oo,ze,ta,Do,So,Fe,aa,qo,Ho,N,sa,To,Lo,la,No,Wo,Ye,oa,Mo,Ro,Be,ra,zo,Fo,Ge,ia,Yo,Bo,Ue,na,Go,Uo,rt,ca,Jo,za,W,Q,fa,Je,Ko,pa,Vo,Fa,X,Qo,Ke,Xo,Zo,Ya,it,er,Ba,Ve,Ga,nt,tr,Ua,Qe,Ja,Z,ar,ct,sr,lr,Ka;return se=new ht({}),le=new ht({}),ue=new ht({}),we=new ht({}),ve=new dt({props:{code:`widget:
- text: "Jens Peter Hansen kommer fra Danmark"`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Jens Peter Hansen kommer fra Danmark&quot;</span>`}}),ye=new dt({props:{code:`widget:
- text: "Is this review positive or negative? Review: Best cast iron skillet you will ever buy."
  example_title: "Sentiment analysis"
- text: "Barack Obama nominated Hilary Clinton as his secretary of state on Monday. He chose her because she had ..."
  example_title: "Coreference resolution"
- text: "On a shelf, there are five books: a gray book, a red book, a purple book, a blue book, and a black book ..."
  example_title: "Logic puzzles"
- text: "The two men running to become New York City's next mayor will face off in their first debate Wednesday night ..."
  example_title: "Reading comprehension"`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Is this review positive or negative? Review: Best cast iron skillet you will ever buy.&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Sentiment analysis&quot;</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Barack Obama nominated Hilary Clinton as his secretary of state on Monday. He chose her because she had ...&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Coreference resolution&quot;</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;On a shelf, there are five books: a gray book, a red book, a purple book, a blue book, and a black book ...&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Logic puzzles&quot;</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;The two men running to become New York City&#x27;s next mayor will face off in their first debate Wednesday night ...&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Reading comprehension&quot;</span>`}}),xe=new dt({props:{code:`widget:
- src: https://example.org/somewhere/speech_samples/sample1.flac
  example_title: Speech sample 1
- src: https://example.org/somewhere/speech_samples/sample2.flac
  example_title: Speech sample 2`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">src:</span> <span class="hljs-string">https://example.org/somewhere/speech_samples/sample1.flac</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">Speech</span> <span class="hljs-string">sample</span> <span class="hljs-number">1</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">src:</span> <span class="hljs-string">https://example.org/somewhere/speech_samples/sample2.flac</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">Speech</span> <span class="hljs-string">sample</span> <span class="hljs-number">2</span>`}}),ke=new dt({props:{code:`widget:
- src: https://huggingface.co/username/model_repo/resolve/main/sample1.flac
  example_title: Custom Speech Sample 1`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">src:</span> <span class="hljs-string">https://huggingface.co/username/model_repo/resolve/main/sample1.flac</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">Custom</span> <span class="hljs-string">Speech</span> <span class="hljs-string">Sample</span> <span class="hljs-number">1</span>`}}),je=new ht({}),Je=new ht({}),Ve=new dt({props:{code:`inference:
  parameters:
    aggregation_strategy: "none"`,highlighted:`<span class="hljs-attr">inference:</span>
  <span class="hljs-attr">parameters:</span>
    <span class="hljs-attr">aggregation_strategy:</span> <span class="hljs-string">&quot;none&quot;</span>`}}),Qe=new dt({props:{code:`inference:
  parameters:
    temperature: 0.7`,highlighted:`<span class="hljs-attr">inference:</span>
  <span class="hljs-attr">parameters:</span>
    <span class="hljs-attr">temperature:</span> <span class="hljs-number">0.7</span>`}}),{c(){O=s("meta"),ua=p(),D=s("h1"),M=s("a"),mt=s("span"),b(se.$$.fragment),_s=p(),ut=s("span"),Es=r("Widgets"),ga=p(),S=s("h2"),R=s("a"),gt=s("span"),b(le.$$.fragment),ys=p(),wt=s("span"),bs=r("What's a widget?"),wa=p(),Xe=s("p"),xs=r("Many model repos have a widget that allows anyone to run inferences directly in the browser!"),va=p(),Ze=s("p"),ks=r("Here are some examples:"),_a=p(),v=s("ul"),z=s("li"),oe=s("a"),$s=r("Named Entity Recognition"),js=r(" using "),re=s("a"),As=r("spaCy"),Cs=r("."),Is=p(),ie=s("li"),ne=s("a"),Ps=r("Image Classification"),Os=r(" using "),ce=s("a"),Ds=r("\u{1F917} Transformers"),Ss=p(),F=s("li"),fe=s("a"),qs=r("Text to Speech"),Hs=r(" using "),pe=s("a"),Ts=r("ESPnet"),Ls=r("."),Ns=p(),Y=s("li"),he=s("a"),Ws=r("Sentence Similarity"),Ms=r(" using "),de=s("a"),Rs=r("Sentence Transformers"),zs=r("."),Ea=p(),B=s("p"),Fs=r("You can try out all the widgets "),me=s("a"),Ys=r("here"),Bs=r("."),ya=p(),q=s("h2"),G=s("a"),vt=s("span"),b(ue.$$.fragment),Gs=p(),_t=s("span"),Us=r("Creating a Widget"),ba=p(),u=s("p"),Js=r("A widget is automatically created for your model when you upload it to the Hub. To determine which pipeline and widget to display ("),Et=s("code"),Ks=r("text-classification"),Vs=r(", "),yt=s("code"),Qs=r("token-classification"),Xs=r(", "),bt=s("code"),Zs=r("translation"),el=r(", etc.), we analyze information in the repo, such as the metadata provided in the model card and configuration files. This information is mapped to a single "),xt=s("code"),tl=r("pipeline_tag"),al=r(". We choose to expose "),kt=s("strong"),sl=r("only one"),ll=r(" widget per model for simplicity."),xa=p(),g=s("p"),ol=r("For most use cases, we determine the model type from the tags. For example, if there is "),$t=s("code"),rl=r("tag: text-classification"),il=r(" in the "),et=s("a"),nl=r("model card metadata"),cl=r(", the inferred "),jt=s("code"),fl=r("pipeline_tag"),pl=r(" will be "),At=s("code"),hl=r("text-classification"),dl=r("."),ka=p(),w=s("p"),ml=r("However, for \u{1F917}  Transformers, the model type is determined automatically from "),Ct=s("code"),ul=r("config.json"),gl=r(". The architecture can determine the type: for example, "),It=s("code"),wl=r("AutoModelForTokenClassification"),vl=r(" corresponds to "),Pt=s("code"),_l=r("token-classification"),El=r(". If you\u2019re interested in this, you can see pseudo-code in "),ge=s("a"),yl=r("this gist"),bl=r("."),$a=p(),C=s("p"),xl=r("You can always manually override your pipeline type with "),Ot=s("code"),kl=r("pipeline_tag: xxx"),$l=r(" in your "),tt=s("a"),jl=r("model card metadata"),Al=r("."),ja=p(),H=s("h3"),U=s("a"),Dt=s("span"),b(we.$$.fragment),Cl=p(),St=s("span"),Il=r("How can I control my model's widget example input?"),Aa=p(),at=s("p"),Pl=r("You can specify the widget input in the model card metadata section:"),Ca=p(),b(ve.$$.fragment),Ia=p(),_=s("p"),Ol=r("You can provide more than one example input. In the examples dropdown menu of the widget, they will appear as "),qt=s("code"),Dl=r("Example 1"),Sl=r(", "),Ht=s("code"),ql=r("Example 2"),Hl=r(", etc. Optionally, you can supply "),Tt=s("code"),Tl=r("example_title"),Ll=r(" as well."),Pa=p(),T=s("div"),_e=s("img"),Nl=p(),Ee=s("img"),Oa=p(),b(ye.$$.fragment),Da=p(),E=s("p"),Wl=r("Moreover, you can specify non-text example inputs in the model card metadata. Refer "),be=s("a"),Ml=r("here"),Rl=r(" for a complete list of sample input formats for all widget types. For vision & audio widget types, provide example inputs with "),Lt=s("code"),zl=r("src"),Fl=r(" rather than "),Nt=s("code"),Yl=r("text"),Bl=r("."),Sa=p(),st=s("p"),Gl=r("For example, allow users to choose from two sample audio files for automatic speech recognition tasks by:"),qa=p(),b(xe.$$.fragment),Ha=p(),lt=s("p"),Ul=r(`Note that you can also include example files in your model repository and use
them as:`),Ta=p(),b(ke.$$.fragment),La=p(),J=s("p"),Jl=r("We provide example inputs for some languages and most widget types in "),$e=s("a"),Kl=r("the DefaultWidget.ts file"),Vl=r(". If some examples are missing, we welcome PRs from the community to add them!"),Na=p(),L=s("h2"),K=s("a"),Wt=s("span"),b(je.$$.fragment),Ql=p(),Mt=s("span"),Xl=r("What are all the possible task/widget types?"),Wa=p(),V=s("p"),Zl=r("You can find all the supported tasks "),Ae=s("a"),eo=r("here"),to=r("."),Ma=p(),ot=s("p"),ao=r("Here are some links to examples:"),Ra=p(),d=s("ul"),Ce=s("li"),Rt=s("code"),so=r("text-classification"),lo=r(", for instance "),Ie=s("a"),zt=s("code"),oo=r("roberta-large-mnli"),ro=p(),Pe=s("li"),Ft=s("code"),io=r("token-classification"),no=r(", for instance "),Oe=s("a"),Yt=s("code"),co=r("dbmdz/bert-large-cased-finetuned-conll03-english"),fo=p(),De=s("li"),Bt=s("code"),po=r("question-answering"),ho=r(", for instance "),Se=s("a"),Gt=s("code"),mo=r("distilbert-base-uncased-distilled-squad"),uo=p(),qe=s("li"),Ut=s("code"),go=r("translation"),wo=r(", for instance "),He=s("a"),Jt=s("code"),vo=r("t5-base"),_o=p(),Te=s("li"),Kt=s("code"),Eo=r("summarization"),yo=r(", for instance "),Le=s("a"),Vt=s("code"),bo=r("facebook/bart-large-cnn"),xo=p(),Ne=s("li"),Qt=s("code"),ko=r("conversational"),$o=r(", for instance "),We=s("a"),Xt=s("code"),jo=r("facebook/blenderbot-400M-distill"),Ao=p(),Me=s("li"),Zt=s("code"),Co=r("text-generation"),Io=r(", for instance "),Re=s("a"),ea=s("code"),Po=r("gpt2"),Oo=p(),ze=s("li"),ta=s("code"),Do=r("fill-mask"),So=r(", for instance "),Fe=s("a"),aa=s("code"),qo=r("distilroberta-base"),Ho=p(),N=s("li"),sa=s("code"),To=r("zero-shot-classification"),Lo=r(" (implemented on top of a nli "),la=s("code"),No=r("text-classification"),Wo=r(" model), for instance "),Ye=s("a"),oa=s("code"),Mo=r("facebook/bart-large-mnli"),Ro=p(),Be=s("li"),ra=s("code"),zo=r("table-question-answering"),Fo=r(", for instance "),Ge=s("a"),ia=s("code"),Yo=r("google/tapas-base-finetuned-wtq"),Bo=p(),Ue=s("li"),na=s("code"),Go=r("sentence-similarity"),Uo=r(", for instance "),rt=s("a"),ca=s("code"),Jo=r("osanseviero/full-sentence-distillroberta2"),za=p(),W=s("h2"),Q=s("a"),fa=s("span"),b(Je.$$.fragment),Ko=p(),pa=s("span"),Vo=r("How can I control my model's widget Inference API parameters?"),Fa=p(),X=s("p"),Qo=r("Generally, the Inference API for a model uses the default pipeline settings associated with each task. But if you\u2019d like to change the pipeline\u2019s default settings and specify additional inference parameters, you can configure the parameters directly through the model card metadata. Refer "),Ke=s("a"),Xo=r("here"),Zo=r(" for some of the most commonly used parameters associated with each task."),Ya=p(),it=s("p"),er=r("For example, if you want to specify an aggregation strategy for a NER task in the widget:"),Ba=p(),b(Ve.$$.fragment),Ga=p(),nt=s("p"),tr=r("Or if you\u2019d like to change the temperature for a summarization task in the widget:"),Ua=p(),b(Qe.$$.fragment),Ja=p(),Z=s("p"),ar=r("The Inference API allows you to send HTTP requests to models in the Hugging Face Hub, and it\u2019s 2x to 10x faster than the widgets! \u26A1\u26A1 Learn more about it by reading the "),ct=s("a"),sr=r("Inference API documentation"),lr=r("."),this.h()},l(t){const c=Xi('[data-svelte="svelte-1phssyn"]',document.head);O=l(c,"META",{name:!0,content:!0}),c.forEach(a),ua=h(t),D=l(t,"H1",{class:!0});var Va=o(D);M=l(Va,"A",{id:!0,class:!0,href:!0});var nr=o(M);mt=l(nr,"SPAN",{});var cr=o(mt);x(se.$$.fragment,cr),cr.forEach(a),nr.forEach(a),_s=h(Va),ut=l(Va,"SPAN",{});var fr=o(ut);Es=i(fr,"Widgets"),fr.forEach(a),Va.forEach(a),ga=h(t),S=l(t,"H2",{class:!0});var Qa=o(S);R=l(Qa,"A",{id:!0,class:!0,href:!0});var pr=o(R);gt=l(pr,"SPAN",{});var hr=o(gt);x(le.$$.fragment,hr),hr.forEach(a),pr.forEach(a),ys=h(Qa),wt=l(Qa,"SPAN",{});var dr=o(wt);bs=i(dr,"What's a widget?"),dr.forEach(a),Qa.forEach(a),wa=h(t),Xe=l(t,"P",{});var mr=o(Xe);xs=i(mr,"Many model repos have a widget that allows anyone to run inferences directly in the browser!"),mr.forEach(a),va=h(t),Ze=l(t,"P",{});var ur=o(Ze);ks=i(ur,"Here are some examples:"),ur.forEach(a),_a=h(t),v=l(t,"UL",{});var ee=o(v);z=l(ee,"LI",{});var ha=o(z);oe=l(ha,"A",{href:!0,rel:!0});var gr=o(oe);$s=i(gr,"Named Entity Recognition"),gr.forEach(a),js=i(ha," using "),re=l(ha,"A",{href:!0,rel:!0});var wr=o(re);As=i(wr,"spaCy"),wr.forEach(a),Cs=i(ha,"."),ha.forEach(a),Is=h(ee),ie=l(ee,"LI",{});var Xa=o(ie);ne=l(Xa,"A",{href:!0,rel:!0});var vr=o(ne);Ps=i(vr,"Image Classification"),vr.forEach(a),Os=i(Xa," using "),ce=l(Xa,"A",{href:!0,rel:!0});var _r=o(ce);Ds=i(_r,"\u{1F917} Transformers"),_r.forEach(a),Xa.forEach(a),Ss=h(ee),F=l(ee,"LI",{});var da=o(F);fe=l(da,"A",{href:!0,rel:!0});var Er=o(fe);qs=i(Er,"Text to Speech"),Er.forEach(a),Hs=i(da," using "),pe=l(da,"A",{href:!0,rel:!0});var yr=o(pe);Ts=i(yr,"ESPnet"),yr.forEach(a),Ls=i(da,"."),da.forEach(a),Ns=h(ee),Y=l(ee,"LI",{});var ma=o(Y);he=l(ma,"A",{href:!0,rel:!0});var br=o(he);Ws=i(br,"Sentence Similarity"),br.forEach(a),Ms=i(ma," using "),de=l(ma,"A",{href:!0,rel:!0});var xr=o(de);Rs=i(xr,"Sentence Transformers"),xr.forEach(a),zs=i(ma,"."),ma.forEach(a),ee.forEach(a),Ea=h(t),B=l(t,"P",{});var Za=o(B);Fs=i(Za,"You can try out all the widgets "),me=l(Za,"A",{href:!0,rel:!0});var kr=o(me);Ys=i(kr,"here"),kr.forEach(a),Bs=i(Za,"."),Za.forEach(a),ya=h(t),q=l(t,"H2",{class:!0});var es=o(q);G=l(es,"A",{id:!0,class:!0,href:!0});var $r=o(G);vt=l($r,"SPAN",{});var jr=o(vt);x(ue.$$.fragment,jr),jr.forEach(a),$r.forEach(a),Gs=h(es),_t=l(es,"SPAN",{});var Ar=o(_t);Us=i(Ar,"Creating a Widget"),Ar.forEach(a),es.forEach(a),ba=h(t),u=l(t,"P",{});var y=o(u);Js=i(y,"A widget is automatically created for your model when you upload it to the Hub. To determine which pipeline and widget to display ("),Et=l(y,"CODE",{});var Cr=o(Et);Ks=i(Cr,"text-classification"),Cr.forEach(a),Vs=i(y,", "),yt=l(y,"CODE",{});var Ir=o(yt);Qs=i(Ir,"token-classification"),Ir.forEach(a),Xs=i(y,", "),bt=l(y,"CODE",{});var Pr=o(bt);Zs=i(Pr,"translation"),Pr.forEach(a),el=i(y,", etc.), we analyze information in the repo, such as the metadata provided in the model card and configuration files. This information is mapped to a single "),xt=l(y,"CODE",{});var Or=o(xt);tl=i(Or,"pipeline_tag"),Or.forEach(a),al=i(y,". We choose to expose "),kt=l(y,"STRONG",{});var Dr=o(kt);sl=i(Dr,"only one"),Dr.forEach(a),ll=i(y," widget per model for simplicity."),y.forEach(a),xa=h(t),g=l(t,"P",{});var I=o(g);ol=i(I,"For most use cases, we determine the model type from the tags. For example, if there is "),$t=l(I,"CODE",{});var Sr=o($t);rl=i(Sr,"tag: text-classification"),Sr.forEach(a),il=i(I," in the "),et=l(I,"A",{href:!0});var qr=o(et);nl=i(qr,"model card metadata"),qr.forEach(a),cl=i(I,", the inferred "),jt=l(I,"CODE",{});var Hr=o(jt);fl=i(Hr,"pipeline_tag"),Hr.forEach(a),pl=i(I," will be "),At=l(I,"CODE",{});var Tr=o(At);hl=i(Tr,"text-classification"),Tr.forEach(a),dl=i(I,"."),I.forEach(a),ka=h(t),w=l(t,"P",{});var P=o(w);ml=i(P,"However, for \u{1F917}  Transformers, the model type is determined automatically from "),Ct=l(P,"CODE",{});var Lr=o(Ct);ul=i(Lr,"config.json"),Lr.forEach(a),gl=i(P,". The architecture can determine the type: for example, "),It=l(P,"CODE",{});var Nr=o(It);wl=i(Nr,"AutoModelForTokenClassification"),Nr.forEach(a),vl=i(P," corresponds to "),Pt=l(P,"CODE",{});var Wr=o(Pt);_l=i(Wr,"token-classification"),Wr.forEach(a),El=i(P,". If you\u2019re interested in this, you can see pseudo-code in "),ge=l(P,"A",{href:!0,rel:!0});var Mr=o(ge);yl=i(Mr,"this gist"),Mr.forEach(a),bl=i(P,"."),P.forEach(a),$a=h(t),C=l(t,"P",{});var ft=o(C);xl=i(ft,"You can always manually override your pipeline type with "),Ot=l(ft,"CODE",{});var Rr=o(Ot);kl=i(Rr,"pipeline_tag: xxx"),Rr.forEach(a),$l=i(ft," in your "),tt=l(ft,"A",{href:!0});var zr=o(tt);jl=i(zr,"model card metadata"),zr.forEach(a),Al=i(ft,"."),ft.forEach(a),ja=h(t),H=l(t,"H3",{class:!0});var ts=o(H);U=l(ts,"A",{id:!0,class:!0,href:!0});var Fr=o(U);Dt=l(Fr,"SPAN",{});var Yr=o(Dt);x(we.$$.fragment,Yr),Yr.forEach(a),Fr.forEach(a),Cl=h(ts),St=l(ts,"SPAN",{});var Br=o(St);Il=i(Br,"How can I control my model's widget example input?"),Br.forEach(a),ts.forEach(a),Aa=h(t),at=l(t,"P",{});var Gr=o(at);Pl=i(Gr,"You can specify the widget input in the model card metadata section:"),Gr.forEach(a),Ca=h(t),x(ve.$$.fragment,t),Ia=h(t),_=l(t,"P",{});var te=o(_);Ol=i(te,"You can provide more than one example input. In the examples dropdown menu of the widget, they will appear as "),qt=l(te,"CODE",{});var Ur=o(qt);Dl=i(Ur,"Example 1"),Ur.forEach(a),Sl=i(te,", "),Ht=l(te,"CODE",{});var Jr=o(Ht);ql=i(Jr,"Example 2"),Jr.forEach(a),Hl=i(te,", etc. Optionally, you can supply "),Tt=l(te,"CODE",{});var Kr=o(Tt);Tl=i(Kr,"example_title"),Kr.forEach(a),Ll=i(te," as well."),te.forEach(a),Pa=h(t),T=l(t,"DIV",{class:!0});var as=o(T);_e=l(as,"IMG",{class:!0,width:!0,src:!0}),Nl=h(as),Ee=l(as,"IMG",{class:!0,width:!0,src:!0}),as.forEach(a),Oa=h(t),x(ye.$$.fragment,t),Da=h(t),E=l(t,"P",{});var ae=o(E);Wl=i(ae,"Moreover, you can specify non-text example inputs in the model card metadata. Refer "),be=l(ae,"A",{href:!0,rel:!0});var Vr=o(be);Ml=i(Vr,"here"),Vr.forEach(a),Rl=i(ae," for a complete list of sample input formats for all widget types. For vision & audio widget types, provide example inputs with "),Lt=l(ae,"CODE",{});var Qr=o(Lt);zl=i(Qr,"src"),Qr.forEach(a),Fl=i(ae," rather than "),Nt=l(ae,"CODE",{});var Xr=o(Nt);Yl=i(Xr,"text"),Xr.forEach(a),Bl=i(ae,"."),ae.forEach(a),Sa=h(t),st=l(t,"P",{});var Zr=o(st);Gl=i(Zr,"For example, allow users to choose from two sample audio files for automatic speech recognition tasks by:"),Zr.forEach(a),qa=h(t),x(xe.$$.fragment,t),Ha=h(t),lt=l(t,"P",{});var ei=o(lt);Ul=i(ei,`Note that you can also include example files in your model repository and use
them as:`),ei.forEach(a),Ta=h(t),x(ke.$$.fragment,t),La=h(t),J=l(t,"P",{});var ss=o(J);Jl=i(ss,"We provide example inputs for some languages and most widget types in "),$e=l(ss,"A",{href:!0,rel:!0});var ti=o($e);Kl=i(ti,"the DefaultWidget.ts file"),ti.forEach(a),Vl=i(ss,". If some examples are missing, we welcome PRs from the community to add them!"),ss.forEach(a),Na=h(t),L=l(t,"H2",{class:!0});var ls=o(L);K=l(ls,"A",{id:!0,class:!0,href:!0});var ai=o(K);Wt=l(ai,"SPAN",{});var si=o(Wt);x(je.$$.fragment,si),si.forEach(a),ai.forEach(a),Ql=h(ls),Mt=l(ls,"SPAN",{});var li=o(Mt);Xl=i(li,"What are all the possible task/widget types?"),li.forEach(a),ls.forEach(a),Wa=h(t),V=l(t,"P",{});var os=o(V);Zl=i(os,"You can find all the supported tasks "),Ae=l(os,"A",{href:!0,rel:!0});var oi=o(Ae);eo=i(oi,"here"),oi.forEach(a),to=i(os,"."),os.forEach(a),Ma=h(t),ot=l(t,"P",{});var ri=o(ot);ao=i(ri,"Here are some links to examples:"),ri.forEach(a),Ra=h(t),d=l(t,"UL",{});var m=o(d);Ce=l(m,"LI",{});var rs=o(Ce);Rt=l(rs,"CODE",{});var ii=o(Rt);so=i(ii,"text-classification"),ii.forEach(a),lo=i(rs,", for instance "),Ie=l(rs,"A",{href:!0,rel:!0});var ni=o(Ie);zt=l(ni,"CODE",{});var ci=o(zt);oo=i(ci,"roberta-large-mnli"),ci.forEach(a),ni.forEach(a),rs.forEach(a),ro=h(m),Pe=l(m,"LI",{});var is=o(Pe);Ft=l(is,"CODE",{});var fi=o(Ft);io=i(fi,"token-classification"),fi.forEach(a),no=i(is,", for instance "),Oe=l(is,"A",{href:!0,rel:!0});var pi=o(Oe);Yt=l(pi,"CODE",{});var hi=o(Yt);co=i(hi,"dbmdz/bert-large-cased-finetuned-conll03-english"),hi.forEach(a),pi.forEach(a),is.forEach(a),fo=h(m),De=l(m,"LI",{});var ns=o(De);Bt=l(ns,"CODE",{});var di=o(Bt);po=i(di,"question-answering"),di.forEach(a),ho=i(ns,", for instance "),Se=l(ns,"A",{href:!0,rel:!0});var mi=o(Se);Gt=l(mi,"CODE",{});var ui=o(Gt);mo=i(ui,"distilbert-base-uncased-distilled-squad"),ui.forEach(a),mi.forEach(a),ns.forEach(a),uo=h(m),qe=l(m,"LI",{});var cs=o(qe);Ut=l(cs,"CODE",{});var gi=o(Ut);go=i(gi,"translation"),gi.forEach(a),wo=i(cs,", for instance "),He=l(cs,"A",{href:!0,rel:!0});var wi=o(He);Jt=l(wi,"CODE",{});var vi=o(Jt);vo=i(vi,"t5-base"),vi.forEach(a),wi.forEach(a),cs.forEach(a),_o=h(m),Te=l(m,"LI",{});var fs=o(Te);Kt=l(fs,"CODE",{});var _i=o(Kt);Eo=i(_i,"summarization"),_i.forEach(a),yo=i(fs,", for instance "),Le=l(fs,"A",{href:!0,rel:!0});var Ei=o(Le);Vt=l(Ei,"CODE",{});var yi=o(Vt);bo=i(yi,"facebook/bart-large-cnn"),yi.forEach(a),Ei.forEach(a),fs.forEach(a),xo=h(m),Ne=l(m,"LI",{});var ps=o(Ne);Qt=l(ps,"CODE",{});var bi=o(Qt);ko=i(bi,"conversational"),bi.forEach(a),$o=i(ps,", for instance "),We=l(ps,"A",{href:!0,rel:!0});var xi=o(We);Xt=l(xi,"CODE",{});var ki=o(Xt);jo=i(ki,"facebook/blenderbot-400M-distill"),ki.forEach(a),xi.forEach(a),ps.forEach(a),Ao=h(m),Me=l(m,"LI",{});var hs=o(Me);Zt=l(hs,"CODE",{});var $i=o(Zt);Co=i($i,"text-generation"),$i.forEach(a),Io=i(hs,", for instance "),Re=l(hs,"A",{href:!0,rel:!0});var ji=o(Re);ea=l(ji,"CODE",{});var Ai=o(ea);Po=i(Ai,"gpt2"),Ai.forEach(a),ji.forEach(a),hs.forEach(a),Oo=h(m),ze=l(m,"LI",{});var ds=o(ze);ta=l(ds,"CODE",{});var Ci=o(ta);Do=i(Ci,"fill-mask"),Ci.forEach(a),So=i(ds,", for instance "),Fe=l(ds,"A",{href:!0,rel:!0});var Ii=o(Fe);aa=l(Ii,"CODE",{});var Pi=o(aa);qo=i(Pi,"distilroberta-base"),Pi.forEach(a),Ii.forEach(a),ds.forEach(a),Ho=h(m),N=l(m,"LI",{});var pt=o(N);sa=l(pt,"CODE",{});var Oi=o(sa);To=i(Oi,"zero-shot-classification"),Oi.forEach(a),Lo=i(pt," (implemented on top of a nli "),la=l(pt,"CODE",{});var Di=o(la);No=i(Di,"text-classification"),Di.forEach(a),Wo=i(pt," model), for instance "),Ye=l(pt,"A",{href:!0,rel:!0});var Si=o(Ye);oa=l(Si,"CODE",{});var qi=o(oa);Mo=i(qi,"facebook/bart-large-mnli"),qi.forEach(a),Si.forEach(a),pt.forEach(a),Ro=h(m),Be=l(m,"LI",{});var ms=o(Be);ra=l(ms,"CODE",{});var Hi=o(ra);zo=i(Hi,"table-question-answering"),Hi.forEach(a),Fo=i(ms,", for instance "),Ge=l(ms,"A",{href:!0,rel:!0});var Ti=o(Ge);ia=l(Ti,"CODE",{});var Li=o(ia);Yo=i(Li,"google/tapas-base-finetuned-wtq"),Li.forEach(a),Ti.forEach(a),ms.forEach(a),Bo=h(m),Ue=l(m,"LI",{});var us=o(Ue);na=l(us,"CODE",{});var Ni=o(na);Go=i(Ni,"sentence-similarity"),Ni.forEach(a),Uo=i(us,", for instance "),rt=l(us,"A",{href:!0});var Wi=o(rt);ca=l(Wi,"CODE",{});var Mi=o(ca);Jo=i(Mi,"osanseviero/full-sentence-distillroberta2"),Mi.forEach(a),Wi.forEach(a),us.forEach(a),m.forEach(a),za=h(t),W=l(t,"H2",{class:!0});var gs=o(W);Q=l(gs,"A",{id:!0,class:!0,href:!0});var Ri=o(Q);fa=l(Ri,"SPAN",{});var zi=o(fa);x(Je.$$.fragment,zi),zi.forEach(a),Ri.forEach(a),Ko=h(gs),pa=l(gs,"SPAN",{});var Fi=o(pa);Vo=i(Fi,"How can I control my model's widget Inference API parameters?"),Fi.forEach(a),gs.forEach(a),Fa=h(t),X=l(t,"P",{});var ws=o(X);Qo=i(ws,"Generally, the Inference API for a model uses the default pipeline settings associated with each task. But if you\u2019d like to change the pipeline\u2019s default settings and specify additional inference parameters, you can configure the parameters directly through the model card metadata. Refer "),Ke=l(ws,"A",{href:!0,rel:!0});var Yi=o(Ke);Xo=i(Yi,"here"),Yi.forEach(a),Zo=i(ws," for some of the most commonly used parameters associated with each task."),ws.forEach(a),Ya=h(t),it=l(t,"P",{});var Bi=o(it);er=i(Bi,"For example, if you want to specify an aggregation strategy for a NER task in the widget:"),Bi.forEach(a),Ba=h(t),x(Ve.$$.fragment,t),Ga=h(t),nt=l(t,"P",{});var Gi=o(nt);tr=i(Gi,"Or if you\u2019d like to change the temperature for a summarization task in the widget:"),Gi.forEach(a),Ua=h(t),x(Qe.$$.fragment,t),Ja=h(t),Z=l(t,"P",{});var vs=o(Z);ar=i(vs,"The Inference API allows you to send HTTP requests to models in the Hugging Face Hub, and it\u2019s 2x to 10x faster than the widgets! \u26A1\u26A1 Learn more about it by reading the "),ct=l(vs,"A",{href:!0});var Ui=o(ct);sr=i(Ui,"Inference API documentation"),Ui.forEach(a),lr=i(vs,"."),vs.forEach(a),this.h()},h(){n(O,"name","hf:doc:metadata"),n(O,"content",JSON.stringify(an)),n(M,"id","widgets"),n(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(M,"href","#widgets"),n(D,"class","relative group"),n(R,"id","whats-a-widget"),n(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(R,"href","#whats-a-widget"),n(S,"class","relative group"),n(oe,"href","https://huggingface.co/spacy/en_core_web_sm?text=My+name+is+Sarah+and+I+live+in+London"),n(oe,"rel","nofollow"),n(re,"href","https://spacy.io/"),n(re,"rel","nofollow"),n(ne,"href","https://huggingface.co/google/vit-base-patch16-224"),n(ne,"rel","nofollow"),n(ce,"href","https://github.com/huggingface/transformers"),n(ce,"rel","nofollow"),n(fe,"href","https://huggingface.co/julien-c/ljspeech_tts_train_tacotron2_raw_phn_tacotron_g2p_en_no_space_train"),n(fe,"rel","nofollow"),n(pe,"href","https://github.com/espnet/espnet"),n(pe,"rel","nofollow"),n(he,"href","https://huggingface.co/osanseviero/full-sentence-distillroberta3"),n(he,"rel","nofollow"),n(de,"href","https://github.com/UKPLab/sentence-transformers"),n(de,"rel","nofollow"),n(me,"href","https://huggingface-widgets.netlify.app/"),n(me,"rel","nofollow"),n(G,"id","creating-a-widget"),n(G,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(G,"href","#creating-a-widget"),n(q,"class","relative group"),n(et,"href","./models-cards"),n(ge,"href","https://gist.github.com/julien-c/857ba86a6c6a895ecd90e7f7cab48046"),n(ge,"rel","nofollow"),n(tt,"href","./models-cards#model-card-metadata"),n(U,"id","how-can-i-control-my-models-widget-example-input"),n(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(U,"href","#how-can-i-control-my-models-widget-example-input"),n(H,"class","relative group"),n(_e,"class","block dark:hidden"),n(_e,"width","500"),Ji(_e.src,rr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/widget_input_examples.gif")||n(_e,"src",rr),n(Ee,"class","hidden dark:block"),n(Ee,"width","500"),Ji(Ee.src,ir="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/widget_input_examples-dark.gif")||n(Ee,"src",ir),n(T,"class","flex justify-center"),n(be,"href","https://github.com/huggingface/hub-docs/blob/main/docs/hub/input-examples.md"),n(be,"rel","nofollow"),n($e,"href","https://github.com/huggingface/hub-docs/blob/master/js/src/lib/interfaces/DefaultWidget.ts"),n($e,"rel","nofollow"),n(K,"id","what-are-all-the-possible-taskwidget-types"),n(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(K,"href","#what-are-all-the-possible-taskwidget-types"),n(L,"class","relative group"),n(Ae,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Types.ts"),n(Ae,"rel","nofollow"),n(Ie,"href","https://huggingface.co/roberta-large-mnli"),n(Ie,"rel","nofollow"),n(Oe,"href","https://huggingface.co/dbmdz/bert-large-cased-finetuned-conll03-english"),n(Oe,"rel","nofollow"),n(Se,"href","https://huggingface.co/distilbert-base-uncased-distilled-squad"),n(Se,"rel","nofollow"),n(He,"href","https://huggingface.co/t5-base"),n(He,"rel","nofollow"),n(Le,"href","https://huggingface.co/facebook/bart-large-cnn"),n(Le,"rel","nofollow"),n(We,"href","https://huggingface.co/facebook/blenderbot-400M-distill"),n(We,"rel","nofollow"),n(Re,"href","https://huggingface.co/gpt2"),n(Re,"rel","nofollow"),n(Fe,"href","https://huggingface.co/distilroberta-base"),n(Fe,"rel","nofollow"),n(Ye,"href","https://huggingface.co/facebook/bart-large-mnli"),n(Ye,"rel","nofollow"),n(Ge,"href","https://huggingface.co/google/tapas-base-finetuned-wtq"),n(Ge,"rel","nofollow"),n(rt,"href","/osanseviero/full-sentence-distillroberta2"),n(Q,"id","how-can-i-control-my-models-widget-inference-api-parameters"),n(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(Q,"href","#how-can-i-control-my-models-widget-inference-api-parameters"),n(W,"class","relative group"),n(Ke,"href","https://api-inference.huggingface.co/docs/python/html/detailed_parameters.html#"),n(Ke,"rel","nofollow"),n(ct,"href","./models-inference")},m(t,c){e(document.head,O),f(t,ua,c),f(t,D,c),e(D,M),e(M,mt),k(se,mt,null),e(D,_s),e(D,ut),e(ut,Es),f(t,ga,c),f(t,S,c),e(S,R),e(R,gt),k(le,gt,null),e(S,ys),e(S,wt),e(wt,bs),f(t,wa,c),f(t,Xe,c),e(Xe,xs),f(t,va,c),f(t,Ze,c),e(Ze,ks),f(t,_a,c),f(t,v,c),e(v,z),e(z,oe),e(oe,$s),e(z,js),e(z,re),e(re,As),e(z,Cs),e(v,Is),e(v,ie),e(ie,ne),e(ne,Ps),e(ie,Os),e(ie,ce),e(ce,Ds),e(v,Ss),e(v,F),e(F,fe),e(fe,qs),e(F,Hs),e(F,pe),e(pe,Ts),e(F,Ls),e(v,Ns),e(v,Y),e(Y,he),e(he,Ws),e(Y,Ms),e(Y,de),e(de,Rs),e(Y,zs),f(t,Ea,c),f(t,B,c),e(B,Fs),e(B,me),e(me,Ys),e(B,Bs),f(t,ya,c),f(t,q,c),e(q,G),e(G,vt),k(ue,vt,null),e(q,Gs),e(q,_t),e(_t,Us),f(t,ba,c),f(t,u,c),e(u,Js),e(u,Et),e(Et,Ks),e(u,Vs),e(u,yt),e(yt,Qs),e(u,Xs),e(u,bt),e(bt,Zs),e(u,el),e(u,xt),e(xt,tl),e(u,al),e(u,kt),e(kt,sl),e(u,ll),f(t,xa,c),f(t,g,c),e(g,ol),e(g,$t),e($t,rl),e(g,il),e(g,et),e(et,nl),e(g,cl),e(g,jt),e(jt,fl),e(g,pl),e(g,At),e(At,hl),e(g,dl),f(t,ka,c),f(t,w,c),e(w,ml),e(w,Ct),e(Ct,ul),e(w,gl),e(w,It),e(It,wl),e(w,vl),e(w,Pt),e(Pt,_l),e(w,El),e(w,ge),e(ge,yl),e(w,bl),f(t,$a,c),f(t,C,c),e(C,xl),e(C,Ot),e(Ot,kl),e(C,$l),e(C,tt),e(tt,jl),e(C,Al),f(t,ja,c),f(t,H,c),e(H,U),e(U,Dt),k(we,Dt,null),e(H,Cl),e(H,St),e(St,Il),f(t,Aa,c),f(t,at,c),e(at,Pl),f(t,Ca,c),k(ve,t,c),f(t,Ia,c),f(t,_,c),e(_,Ol),e(_,qt),e(qt,Dl),e(_,Sl),e(_,Ht),e(Ht,ql),e(_,Hl),e(_,Tt),e(Tt,Tl),e(_,Ll),f(t,Pa,c),f(t,T,c),e(T,_e),e(T,Nl),e(T,Ee),f(t,Oa,c),k(ye,t,c),f(t,Da,c),f(t,E,c),e(E,Wl),e(E,be),e(be,Ml),e(E,Rl),e(E,Lt),e(Lt,zl),e(E,Fl),e(E,Nt),e(Nt,Yl),e(E,Bl),f(t,Sa,c),f(t,st,c),e(st,Gl),f(t,qa,c),k(xe,t,c),f(t,Ha,c),f(t,lt,c),e(lt,Ul),f(t,Ta,c),k(ke,t,c),f(t,La,c),f(t,J,c),e(J,Jl),e(J,$e),e($e,Kl),e(J,Vl),f(t,Na,c),f(t,L,c),e(L,K),e(K,Wt),k(je,Wt,null),e(L,Ql),e(L,Mt),e(Mt,Xl),f(t,Wa,c),f(t,V,c),e(V,Zl),e(V,Ae),e(Ae,eo),e(V,to),f(t,Ma,c),f(t,ot,c),e(ot,ao),f(t,Ra,c),f(t,d,c),e(d,Ce),e(Ce,Rt),e(Rt,so),e(Ce,lo),e(Ce,Ie),e(Ie,zt),e(zt,oo),e(d,ro),e(d,Pe),e(Pe,Ft),e(Ft,io),e(Pe,no),e(Pe,Oe),e(Oe,Yt),e(Yt,co),e(d,fo),e(d,De),e(De,Bt),e(Bt,po),e(De,ho),e(De,Se),e(Se,Gt),e(Gt,mo),e(d,uo),e(d,qe),e(qe,Ut),e(Ut,go),e(qe,wo),e(qe,He),e(He,Jt),e(Jt,vo),e(d,_o),e(d,Te),e(Te,Kt),e(Kt,Eo),e(Te,yo),e(Te,Le),e(Le,Vt),e(Vt,bo),e(d,xo),e(d,Ne),e(Ne,Qt),e(Qt,ko),e(Ne,$o),e(Ne,We),e(We,Xt),e(Xt,jo),e(d,Ao),e(d,Me),e(Me,Zt),e(Zt,Co),e(Me,Io),e(Me,Re),e(Re,ea),e(ea,Po),e(d,Oo),e(d,ze),e(ze,ta),e(ta,Do),e(ze,So),e(ze,Fe),e(Fe,aa),e(aa,qo),e(d,Ho),e(d,N),e(N,sa),e(sa,To),e(N,Lo),e(N,la),e(la,No),e(N,Wo),e(N,Ye),e(Ye,oa),e(oa,Mo),e(d,Ro),e(d,Be),e(Be,ra),e(ra,zo),e(Be,Fo),e(Be,Ge),e(Ge,ia),e(ia,Yo),e(d,Bo),e(d,Ue),e(Ue,na),e(na,Go),e(Ue,Uo),e(Ue,rt),e(rt,ca),e(ca,Jo),f(t,za,c),f(t,W,c),e(W,Q),e(Q,fa),k(Je,fa,null),e(W,Ko),e(W,pa),e(pa,Vo),f(t,Fa,c),f(t,X,c),e(X,Qo),e(X,Ke),e(Ke,Xo),e(X,Zo),f(t,Ya,c),f(t,it,c),e(it,er),f(t,Ba,c),k(Ve,t,c),f(t,Ga,c),f(t,nt,c),e(nt,tr),f(t,Ua,c),k(Qe,t,c),f(t,Ja,c),f(t,Z,c),e(Z,ar),e(Z,ct),e(ct,sr),e(Z,lr),Ka=!0},p:Zi,i(t){Ka||($(se.$$.fragment,t),$(le.$$.fragment,t),$(ue.$$.fragment,t),$(we.$$.fragment,t),$(ve.$$.fragment,t),$(ye.$$.fragment,t),$(xe.$$.fragment,t),$(ke.$$.fragment,t),$(je.$$.fragment,t),$(Je.$$.fragment,t),$(Ve.$$.fragment,t),$(Qe.$$.fragment,t),Ka=!0)},o(t){j(se.$$.fragment,t),j(le.$$.fragment,t),j(ue.$$.fragment,t),j(we.$$.fragment,t),j(ve.$$.fragment,t),j(ye.$$.fragment,t),j(xe.$$.fragment,t),j(ke.$$.fragment,t),j(je.$$.fragment,t),j(Je.$$.fragment,t),j(Ve.$$.fragment,t),j(Qe.$$.fragment,t),Ka=!1},d(t){a(O),t&&a(ua),t&&a(D),A(se),t&&a(ga),t&&a(S),A(le),t&&a(wa),t&&a(Xe),t&&a(va),t&&a(Ze),t&&a(_a),t&&a(v),t&&a(Ea),t&&a(B),t&&a(ya),t&&a(q),A(ue),t&&a(ba),t&&a(u),t&&a(xa),t&&a(g),t&&a(ka),t&&a(w),t&&a($a),t&&a(C),t&&a(ja),t&&a(H),A(we),t&&a(Aa),t&&a(at),t&&a(Ca),A(ve,t),t&&a(Ia),t&&a(_),t&&a(Pa),t&&a(T),t&&a(Oa),A(ye,t),t&&a(Da),t&&a(E),t&&a(Sa),t&&a(st),t&&a(qa),A(xe,t),t&&a(Ha),t&&a(lt),t&&a(Ta),A(ke,t),t&&a(La),t&&a(J),t&&a(Na),t&&a(L),A(je),t&&a(Wa),t&&a(V),t&&a(Ma),t&&a(ot),t&&a(Ra),t&&a(d),t&&a(za),t&&a(W),A(Je),t&&a(Fa),t&&a(X),t&&a(Ya),t&&a(it),t&&a(Ba),A(Ve,t),t&&a(Ga),t&&a(nt),t&&a(Ua),A(Qe,t),t&&a(Ja),t&&a(Z)}}}const an={local:"widgets",sections:[{local:"whats-a-widget",title:"What's a widget?"},{local:"creating-a-widget",sections:[{local:"how-can-i-control-my-models-widget-example-input",title:"How can I control my model's widget example input?"}],title:"Creating a Widget"},{local:"what-are-all-the-possible-taskwidget-types",title:"What are all the possible task/widget types?"},{local:"how-can-i-control-my-models-widget-inference-api-parameters",title:"How can I control my model's widget Inference API parameters?"}],title:"Widgets"};function sn(or){return en(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class nn extends Ki{constructor(O){super();Vi(this,O,sn,tn,Qi,{})}}export{nn as default,an as metadata};
