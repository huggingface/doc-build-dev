import{S as Oa,i as Ha,s as Ca,e as i,k as f,w as $,t as s,N as Da,c as r,d as t,m as c,a,x as T,h as l,b as h,G as o,g as u,y as A,L as Na,q as S,o as x,B as O,v as La}from"../chunks/vendor-hf-doc-builder.js";import{I as Et}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Ao}from"../chunks/CodeBlock-hf-doc-builder.js";function Ya(_r){let y,Gt,v,H,Ne,V,So,Le,xo,_t,J,Ye,Oo,Ho,kt,p,Co,Ie,Do,No,Fe,Lo,Yo,Pt,Ee,Io,bt,C,Me,Fo,Mo,Re,Ro,$t,D,Uo,w,qo,Ue,Bo,Ko,Wo,Tt,Ge,jo,At,N,Vo,Q,Jo,Qo,St,E,L,qe,z,zo,Be,Xo,xt,Y,Zo,X,ei,ti,Ot,_e,Z,oi,Ke,ii,ri,Ht,m,ai,ee,si,li,We,ni,ui,Ct,te,fi,oe,ci,Dt,ke,hi,Nt,I,je,ie,Ve,pi,mi,Je,di,gi,G,re,Qe,yi,vi,ze,wi,Ei,ae,Xe,Gi,_i,Ze,ki,Pi,se,et,bi,$i,tt,Ti,Lt,F,Ai,ot,Si,xi,Yt,M,Oi,it,Hi,Ci,It,R,Di,rt,Ni,Li,Ft,U,Yi,Pe,Ii,Fi,Mt,_,q,at,le,Mi,st,Ri,Rt,be,Ui,Ut,ne,qt,$e,qi,Bt,B,Bi,ue,Ki,Wi,Kt,k,K,lt,fe,ji,nt,Vi,Wt,W,ut,ce,Ji,he,Qi,zi,Xi,ft,ct,Zi,jt,pe,Vt,me,P,er,de,tr,or,ht,ir,rr,Jt,d,ar,pt,sr,lr,mt,nr,ur,Qt,ge,dt,fr,zt,b,j,gt,ye,cr,yt,hr,Xt,Te,pr,Zt,ve,eo,g,mr,vt,dr,gr,wt,yr,vr,to,we,oo,Ae,wr,io;return V=new Et({}),z=new Et({}),le=new Et({}),ne=new Ao({props:{code:"gpg --gen-key",highlighted:"gpg --gen-key"}}),fe=new Et({}),pe=new Ao({props:{code:"gpg --armor --export <YOUR KEY ID>",highlighted:'gpg --armor --<span class="hljs-built_in">export</span> &lt;YOUR KEY ID&gt;'}}),ye=new Et({}),ve=new Ao({props:{code:`git config user.signingkey <Your GPG Key ID>
git config user.email <Your email on hf.co>`,highlighted:`git config user.signingkey &lt;Your GPG Key ID&gt;
git config user.email &lt;Your email on hf.co&gt;`}}),we=new Ao({props:{code:'git commit -S -m "My first signed commit"',highlighted:'git commit -S -m <span class="hljs-string">&quot;My first signed commit&quot;</span>'}}),{c(){y=i("meta"),Gt=f(),v=i("h1"),H=i("a"),Ne=i("span"),$(V.$$.fragment),So=f(),Le=i("span"),xo=s("Signing commits with GPG"),_t=f(),J=i("p"),Ye=i("code"),Oo=s("git"),Ho=s(" has an authentication layer to control who can push commits to a repo, but it does not authenticate the actual commit authors."),kt=f(),p=i("p"),Co=s("In other words, you can commit changes as "),Ie=i("code"),Do=s("Elon Musk <elon@tesla.com>"),No=s(", push them to your preferred "),Fe=i("code"),Lo=s("git"),Yo=s(" host (for instance github.com), and your commit will link to Elon\u2019s GitHub profile. (Try it! But don\u2019t blame us if Elon gets mad at you for impersonating him.)"),Pt=f(),Ee=i("p"),Io=s("The reasons we implemented GPG signing were:"),bt=f(),C=i("ul"),Me=i("li"),Fo=s("To provide finer-grained security, especially as more and more Enterprise users rely on the Hub."),Mo=f(),Re=i("li"),Ro=s("To provide ML benchmarks backed by a cryptographically-secure source."),$t=f(),D=i("p"),Uo=s("See Ale Segala\u2019s "),w=i("a"),qo=s("How (and why) to sign "),Ue=i("code"),Bo=s("git"),Ko=s(" commits"),Wo=s(" for more context."),Tt=f(),Ge=i("p"),jo=s("You can prove a commit was authored by you with GNU Privacy Guard (GPG) and a key server. GPG is a cryptographic tool used to verify the authenticity of a message\u2019s origin. We\u2019ll explain how to set this up on Hugging Face below."),At=f(),N=i("p"),Vo=s("The Pro Git book is, as usual, a good resource about commit signing: "),Q=i("a"),Jo=s("Pro Git: Signing your work"),Qo=s("."),St=f(),E=i("h2"),L=i("a"),qe=i("span"),$(z.$$.fragment),zo=f(),Be=i("span"),Xo=s("Setting up signed commits verification"),xt=f(),Y=i("p"),Zo=s("You will need to install "),X=i("a"),ei=s("GPG"),ti=s(" on your system in order to execute the following commands."),Ot=f(),_e=i("blockquote"),Z=i("p"),oi=s(`It\u2019s included by default in most Linux distributions.
On Windows, it is included in Git Bash (which comes with `),Ke=i("code"),ii=s("git"),ri=s(" for Windows)."),Ht=f(),m=i("p"),ai=s("You can sign your commits locally using "),ee=i("a"),si=s("GPG"),li=s(`.
Then configure your profile to mark these commits as `),We=i("strong"),ni=s("verified"),ui=s(` on the Hub,
so other people can be confident that they come from a trusted source.`),Ct=f(),te=i("p"),fi=s("For a more in-depth explanation of how git and GPG interact, please visit the the "),oe=i("a"),ci=s("git documentation on the subject"),Dt=f(),ke=i("p"),hi=s("Commits can have the following signing statuses:"),Nt=f(),I=i("table"),je=i("thead"),ie=i("tr"),Ve=i("th"),pi=s("Status"),mi=f(),Je=i("th"),di=s("Explanation"),gi=f(),G=i("tbody"),re=i("tr"),Qe=i("td"),yi=s("Verified"),vi=f(),ze=i("td"),wi=s("The commit is signed and the signature is verified"),Ei=f(),ae=i("tr"),Xe=i("td"),Gi=s("Unverified"),_i=f(),Ze=i("td"),ki=s("The commit is signed but the signature could not be verified"),Pi=f(),se=i("tr"),et=i("td"),bi=s("No signing status"),$i=f(),tt=i("td"),Ti=s("The commit is not signed"),Lt=f(),F=i("p"),Ai=s("For a commit to be marked as "),ot=i("strong"),Si=s("verified"),xi=s(", you need to upload the public key used to sign it on your Hugging Face account."),Yt=f(),M=i("p"),Oi=s("Use the "),it=i("code"),Hi=s("gpg --list-secret-keys"),Ci=s(` command to list the GPG keys for which you have both a public and private key.
A private key is required for signing commits or tags.`),It=f(),R=i("p"),Di=s("If you don\u2019t have a GPG key pair or you don\u2019t want to use the existing keys to sign your commits, go to "),rt=i("strong"),Ni=s("Generating a new GPG key"),Li=s("."),Ft=f(),U=i("p"),Yi=s("Otherwise, go straight to  "),Pe=i("a"),Ii=s("Adding a GPG key to your account"),Fi=s("."),Mt=f(),_=i("h2"),q=i("a"),at=i("span"),$(le.$$.fragment),Mi=f(),st=i("span"),Ri=s("Generating a new GPG key"),Rt=f(),be=i("p"),Ui=s("To generate a GPG key, run the following:"),Ut=f(),$(ne.$$.fragment),qt=f(),$e=i("p"),qi=s("GPG will then guide you through the process of creating a GPG key pair."),Bt=f(),B=i("p"),Bi=s("Make sure you specify an email address for this key, and that the email address matches the one you specified in your Hugging Face "),ue=i("a"),Ki=s("account"),Wi=s("."),Kt=f(),k=i("h2"),K=i("a"),lt=i("span"),$(fe.$$.fragment),ji=f(),nt=i("span"),Vi=s("Adding a GPG key to your account"),Wt=f(),W=i("ol"),ut=i("li"),ce=i("p"),Ji=s("First, select or generate a GPG key on your computer. Make sure the email address of the key matches the one in your Hugging Face "),he=i("a"),Qi=s("account"),zi=s(" and that the email of your account is verified."),Xi=f(),ft=i("li"),ct=i("p"),Zi=s("Export the public part of the selected key:"),jt=f(),$(pe.$$.fragment),Vt=f(),me=i("ol"),P=i("li"),er=s("Then visit your profile "),de=i("a"),tr=s("settings page"),or=s(" and click on "),ht=i("strong"),ir=s("Add GPG Key"),rr=s("."),Jt=f(),d=i("p"),ar=s("Copy & paste the output of the "),pt=i("code"),sr=s("gpg --export"),lr=s(" command in the text area and click on "),mt=i("strong"),nr=s("Add Key"),ur=s("."),Qt=f(),ge=i("ol"),dt=i("li"),fr=s("Congratulations! \u{1F389}  You\u2019ve just added a GPG key to your account!"),zt=f(),b=i("h2"),j=i("a"),gt=i("span"),$(ye.$$.fragment),cr=f(),yt=i("span"),hr=s("Configure git to sign your commits with GPG"),Xt=f(),Te=i("p"),pr=s("The last step is to configure git to sign your commits:"),Zt=f(),$(ve.$$.fragment),eo=f(),g=i("p"),mr=s("Then add the "),vt=i("code"),dr=s("-S"),gr=s(" flag to your "),wt=i("code"),yr=s("git commit"),vr=s(" commands to sign your commits!"),to=f(),$(we.$$.fragment),oo=f(),Ae=i("p"),wr=s("Once pushed on the Hub, you should see the commit with a \u201CVerified\u201D badge."),this.h()},l(e){const n=Da('[data-svelte="svelte-1phssyn"]',document.head);y=r(n,"META",{name:!0,content:!0}),n.forEach(t),Gt=c(e),v=r(e,"H1",{class:!0});var ro=a(v);H=r(ro,"A",{id:!0,class:!0,href:!0});var kr=a(H);Ne=r(kr,"SPAN",{});var Pr=a(Ne);T(V.$$.fragment,Pr),Pr.forEach(t),kr.forEach(t),So=c(ro),Le=r(ro,"SPAN",{});var br=a(Le);xo=l(br,"Signing commits with GPG"),br.forEach(t),ro.forEach(t),_t=c(e),J=r(e,"P",{});var Er=a(J);Ye=r(Er,"CODE",{});var $r=a(Ye);Oo=l($r,"git"),$r.forEach(t),Ho=l(Er," has an authentication layer to control who can push commits to a repo, but it does not authenticate the actual commit authors."),Er.forEach(t),kt=c(e),p=r(e,"P",{});var Se=a(p);Co=l(Se,"In other words, you can commit changes as "),Ie=r(Se,"CODE",{});var Tr=a(Ie);Do=l(Tr,"Elon Musk <elon@tesla.com>"),Tr.forEach(t),No=l(Se,", push them to your preferred "),Fe=r(Se,"CODE",{});var Ar=a(Fe);Lo=l(Ar,"git"),Ar.forEach(t),Yo=l(Se," host (for instance github.com), and your commit will link to Elon\u2019s GitHub profile. (Try it! But don\u2019t blame us if Elon gets mad at you for impersonating him.)"),Se.forEach(t),Pt=c(e),Ee=r(e,"P",{});var Sr=a(Ee);Io=l(Sr,"The reasons we implemented GPG signing were:"),Sr.forEach(t),bt=c(e),C=r(e,"UL",{});var ao=a(C);Me=r(ao,"LI",{});var xr=a(Me);Fo=l(xr,"To provide finer-grained security, especially as more and more Enterprise users rely on the Hub."),xr.forEach(t),Mo=c(ao),Re=r(ao,"LI",{});var Or=a(Re);Ro=l(Or,"To provide ML benchmarks backed by a cryptographically-secure source."),Or.forEach(t),ao.forEach(t),$t=c(e),D=r(e,"P",{});var so=a(D);Uo=l(so,"See Ale Segala\u2019s "),w=r(so,"A",{href:!0,rel:!0});var lo=a(w);qo=l(lo,"How (and why) to sign "),Ue=r(lo,"CODE",{});var Hr=a(Ue);Bo=l(Hr,"git"),Hr.forEach(t),Ko=l(lo," commits"),lo.forEach(t),Wo=l(so," for more context."),so.forEach(t),Tt=c(e),Ge=r(e,"P",{});var Cr=a(Ge);jo=l(Cr,"You can prove a commit was authored by you with GNU Privacy Guard (GPG) and a key server. GPG is a cryptographic tool used to verify the authenticity of a message\u2019s origin. We\u2019ll explain how to set this up on Hugging Face below."),Cr.forEach(t),At=c(e),N=r(e,"P",{});var no=a(N);Vo=l(no,"The Pro Git book is, as usual, a good resource about commit signing: "),Q=r(no,"A",{href:!0,rel:!0});var Dr=a(Q);Jo=l(Dr,"Pro Git: Signing your work"),Dr.forEach(t),Qo=l(no,"."),no.forEach(t),St=c(e),E=r(e,"H2",{class:!0});var uo=a(E);L=r(uo,"A",{id:!0,class:!0,href:!0});var Nr=a(L);qe=r(Nr,"SPAN",{});var Lr=a(qe);T(z.$$.fragment,Lr),Lr.forEach(t),Nr.forEach(t),zo=c(uo),Be=r(uo,"SPAN",{});var Yr=a(Be);Xo=l(Yr,"Setting up signed commits verification"),Yr.forEach(t),uo.forEach(t),xt=c(e),Y=r(e,"P",{});var fo=a(Y);Zo=l(fo,"You will need to install "),X=r(fo,"A",{href:!0,rel:!0});var Ir=a(X);ei=l(Ir,"GPG"),Ir.forEach(t),ti=l(fo," on your system in order to execute the following commands."),fo.forEach(t),Ot=c(e),_e=r(e,"BLOCKQUOTE",{});var Fr=a(_e);Z=r(Fr,"P",{});var co=a(Z);oi=l(co,`It\u2019s included by default in most Linux distributions.
On Windows, it is included in Git Bash (which comes with `),Ke=r(co,"CODE",{});var Mr=a(Ke);ii=l(Mr,"git"),Mr.forEach(t),ri=l(co," for Windows)."),co.forEach(t),Fr.forEach(t),Ht=c(e),m=r(e,"P",{});var xe=a(m);ai=l(xe,"You can sign your commits locally using "),ee=r(xe,"A",{href:!0,rel:!0});var Rr=a(ee);si=l(Rr,"GPG"),Rr.forEach(t),li=l(xe,`.
Then configure your profile to mark these commits as `),We=r(xe,"STRONG",{});var Ur=a(We);ni=l(Ur,"verified"),Ur.forEach(t),ui=l(xe,` on the Hub,
so other people can be confident that they come from a trusted source.`),xe.forEach(t),Ct=c(e),te=r(e,"P",{});var Gr=a(te);fi=l(Gr,"For a more in-depth explanation of how git and GPG interact, please visit the the "),oe=r(Gr,"A",{href:!0,rel:!0});var qr=a(oe);ci=l(qr,"git documentation on the subject"),qr.forEach(t),Gr.forEach(t),Dt=c(e),ke=r(e,"P",{});var Br=a(ke);hi=l(Br,"Commits can have the following signing statuses:"),Br.forEach(t),Nt=c(e),I=r(e,"TABLE",{});var ho=a(I);je=r(ho,"THEAD",{});var Kr=a(je);ie=r(Kr,"TR",{});var po=a(ie);Ve=r(po,"TH",{});var Wr=a(Ve);pi=l(Wr,"Status"),Wr.forEach(t),mi=c(po),Je=r(po,"TH",{});var jr=a(Je);di=l(jr,"Explanation"),jr.forEach(t),po.forEach(t),Kr.forEach(t),gi=c(ho),G=r(ho,"TBODY",{});var Oe=a(G);re=r(Oe,"TR",{});var mo=a(re);Qe=r(mo,"TD",{});var Vr=a(Qe);yi=l(Vr,"Verified"),Vr.forEach(t),vi=c(mo),ze=r(mo,"TD",{});var Jr=a(ze);wi=l(Jr,"The commit is signed and the signature is verified"),Jr.forEach(t),mo.forEach(t),Ei=c(Oe),ae=r(Oe,"TR",{});var go=a(ae);Xe=r(go,"TD",{});var Qr=a(Xe);Gi=l(Qr,"Unverified"),Qr.forEach(t),_i=c(go),Ze=r(go,"TD",{});var zr=a(Ze);ki=l(zr,"The commit is signed but the signature could not be verified"),zr.forEach(t),go.forEach(t),Pi=c(Oe),se=r(Oe,"TR",{});var yo=a(se);et=r(yo,"TD",{});var Xr=a(et);bi=l(Xr,"No signing status"),Xr.forEach(t),$i=c(yo),tt=r(yo,"TD",{});var Zr=a(tt);Ti=l(Zr,"The commit is not signed"),Zr.forEach(t),yo.forEach(t),Oe.forEach(t),ho.forEach(t),Lt=c(e),F=r(e,"P",{});var vo=a(F);Ai=l(vo,"For a commit to be marked as "),ot=r(vo,"STRONG",{});var ea=a(ot);Si=l(ea,"verified"),ea.forEach(t),xi=l(vo,", you need to upload the public key used to sign it on your Hugging Face account."),vo.forEach(t),Yt=c(e),M=r(e,"P",{});var wo=a(M);Oi=l(wo,"Use the "),it=r(wo,"CODE",{});var ta=a(it);Hi=l(ta,"gpg --list-secret-keys"),ta.forEach(t),Ci=l(wo,` command to list the GPG keys for which you have both a public and private key.
A private key is required for signing commits or tags.`),wo.forEach(t),It=c(e),R=r(e,"P",{});var Eo=a(R);Di=l(Eo,"If you don\u2019t have a GPG key pair or you don\u2019t want to use the existing keys to sign your commits, go to "),rt=r(Eo,"STRONG",{});var oa=a(rt);Ni=l(oa,"Generating a new GPG key"),oa.forEach(t),Li=l(Eo,"."),Eo.forEach(t),Ft=c(e),U=r(e,"P",{});var Go=a(U);Yi=l(Go,"Otherwise, go straight to  "),Pe=r(Go,"A",{href:!0});var ia=a(Pe);Ii=l(ia,"Adding a GPG key to your account"),ia.forEach(t),Fi=l(Go,"."),Go.forEach(t),Mt=c(e),_=r(e,"H2",{class:!0});var _o=a(_);q=r(_o,"A",{id:!0,class:!0,href:!0});var ra=a(q);at=r(ra,"SPAN",{});var aa=a(at);T(le.$$.fragment,aa),aa.forEach(t),ra.forEach(t),Mi=c(_o),st=r(_o,"SPAN",{});var sa=a(st);Ri=l(sa,"Generating a new GPG key"),sa.forEach(t),_o.forEach(t),Rt=c(e),be=r(e,"P",{});var la=a(be);Ui=l(la,"To generate a GPG key, run the following:"),la.forEach(t),Ut=c(e),T(ne.$$.fragment,e),qt=c(e),$e=r(e,"P",{});var na=a($e);qi=l(na,"GPG will then guide you through the process of creating a GPG key pair."),na.forEach(t),Bt=c(e),B=r(e,"P",{});var ko=a(B);Bi=l(ko,"Make sure you specify an email address for this key, and that the email address matches the one you specified in your Hugging Face "),ue=r(ko,"A",{href:!0,rel:!0});var ua=a(ue);Ki=l(ua,"account"),ua.forEach(t),Wi=l(ko,"."),ko.forEach(t),Kt=c(e),k=r(e,"H2",{class:!0});var Po=a(k);K=r(Po,"A",{id:!0,class:!0,href:!0});var fa=a(K);lt=r(fa,"SPAN",{});var ca=a(lt);T(fe.$$.fragment,ca),ca.forEach(t),fa.forEach(t),ji=c(Po),nt=r(Po,"SPAN",{});var ha=a(nt);Vi=l(ha,"Adding a GPG key to your account"),ha.forEach(t),Po.forEach(t),Wt=c(e),W=r(e,"OL",{});var bo=a(W);ut=r(bo,"LI",{});var pa=a(ut);ce=r(pa,"P",{});var $o=a(ce);Ji=l($o,"First, select or generate a GPG key on your computer. Make sure the email address of the key matches the one in your Hugging Face "),he=r($o,"A",{href:!0,rel:!0});var ma=a(he);Qi=l(ma,"account"),ma.forEach(t),zi=l($o," and that the email of your account is verified."),$o.forEach(t),pa.forEach(t),Xi=c(bo),ft=r(bo,"LI",{});var da=a(ft);ct=r(da,"P",{});var ga=a(ct);Zi=l(ga,"Export the public part of the selected key:"),ga.forEach(t),da.forEach(t),bo.forEach(t),jt=c(e),T(pe.$$.fragment,e),Vt=c(e),me=r(e,"OL",{start:!0});var ya=a(me);P=r(ya,"LI",{});var He=a(P);er=l(He,"Then visit your profile "),de=r(He,"A",{href:!0,rel:!0});var va=a(de);tr=l(va,"settings page"),va.forEach(t),or=l(He," and click on "),ht=r(He,"STRONG",{});var wa=a(ht);ir=l(wa,"Add GPG Key"),wa.forEach(t),rr=l(He,"."),He.forEach(t),ya.forEach(t),Jt=c(e),d=r(e,"P",{});var Ce=a(d);ar=l(Ce,"Copy & paste the output of the "),pt=r(Ce,"CODE",{});var Ea=a(pt);sr=l(Ea,"gpg --export"),Ea.forEach(t),lr=l(Ce," command in the text area and click on "),mt=r(Ce,"STRONG",{});var Ga=a(mt);nr=l(Ga,"Add Key"),Ga.forEach(t),ur=l(Ce,"."),Ce.forEach(t),Qt=c(e),ge=r(e,"OL",{start:!0});var _a=a(ge);dt=r(_a,"LI",{});var ka=a(dt);fr=l(ka,"Congratulations! \u{1F389}  You\u2019ve just added a GPG key to your account!"),ka.forEach(t),_a.forEach(t),zt=c(e),b=r(e,"H2",{class:!0});var To=a(b);j=r(To,"A",{id:!0,class:!0,href:!0});var Pa=a(j);gt=r(Pa,"SPAN",{});var ba=a(gt);T(ye.$$.fragment,ba),ba.forEach(t),Pa.forEach(t),cr=c(To),yt=r(To,"SPAN",{});var $a=a(yt);hr=l($a,"Configure git to sign your commits with GPG"),$a.forEach(t),To.forEach(t),Xt=c(e),Te=r(e,"P",{});var Ta=a(Te);pr=l(Ta,"The last step is to configure git to sign your commits:"),Ta.forEach(t),Zt=c(e),T(ve.$$.fragment,e),eo=c(e),g=r(e,"P",{});var De=a(g);mr=l(De,"Then add the "),vt=r(De,"CODE",{});var Aa=a(vt);dr=l(Aa,"-S"),Aa.forEach(t),gr=l(De," flag to your "),wt=r(De,"CODE",{});var Sa=a(wt);yr=l(Sa,"git commit"),Sa.forEach(t),vr=l(De," commands to sign your commits!"),De.forEach(t),to=c(e),T(we.$$.fragment,e),oo=c(e),Ae=r(e,"P",{});var xa=a(Ae);wr=l(xa,"Once pushed on the Hub, you should see the commit with a \u201CVerified\u201D badge."),xa.forEach(t),this.h()},h(){h(y,"name","hf:doc:metadata"),h(y,"content",JSON.stringify(Ia)),h(H,"id","signing-commits-with-gpg"),h(H,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(H,"href","#signing-commits-with-gpg"),h(v,"class","relative group"),h(w,"href","https://withblue.ink/2020/05/17/how-and-why-to-sign-git-commits.html"),h(w,"rel","nofollow"),h(Q,"href","https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work"),h(Q,"rel","nofollow"),h(L,"id","setting-up-signed-commits-verification"),h(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(L,"href","#setting-up-signed-commits-verification"),h(E,"class","relative group"),h(X,"href","https://gnupg.org/"),h(X,"rel","nofollow"),h(ee,"href","https://gnupg.org/"),h(ee,"rel","nofollow"),h(oe,"href","https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work"),h(oe,"rel","nofollow"),h(Pe,"href","#adding-a-gpg-key-to-your-account"),h(q,"id","generating-a-new-gpg-key"),h(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(q,"href","#generating-a-new-gpg-key"),h(_,"class","relative group"),h(ue,"href","https://huggingface.co/settings/account"),h(ue,"rel","nofollow"),h(K,"id","adding-a-gpg-key-to-your-account"),h(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(K,"href","#adding-a-gpg-key-to-your-account"),h(k,"class","relative group"),h(he,"href","https://huggingface.co/settings/account"),h(he,"rel","nofollow"),h(de,"href","https://huggingface.co/settings/keys"),h(de,"rel","nofollow"),h(me,"start","3"),h(ge,"start","4"),h(j,"id","configure-git-to-sign-your-commits-with-gpg"),h(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(j,"href","#configure-git-to-sign-your-commits-with-gpg"),h(b,"class","relative group")},m(e,n){o(document.head,y),u(e,Gt,n),u(e,v,n),o(v,H),o(H,Ne),A(V,Ne,null),o(v,So),o(v,Le),o(Le,xo),u(e,_t,n),u(e,J,n),o(J,Ye),o(Ye,Oo),o(J,Ho),u(e,kt,n),u(e,p,n),o(p,Co),o(p,Ie),o(Ie,Do),o(p,No),o(p,Fe),o(Fe,Lo),o(p,Yo),u(e,Pt,n),u(e,Ee,n),o(Ee,Io),u(e,bt,n),u(e,C,n),o(C,Me),o(Me,Fo),o(C,Mo),o(C,Re),o(Re,Ro),u(e,$t,n),u(e,D,n),o(D,Uo),o(D,w),o(w,qo),o(w,Ue),o(Ue,Bo),o(w,Ko),o(D,Wo),u(e,Tt,n),u(e,Ge,n),o(Ge,jo),u(e,At,n),u(e,N,n),o(N,Vo),o(N,Q),o(Q,Jo),o(N,Qo),u(e,St,n),u(e,E,n),o(E,L),o(L,qe),A(z,qe,null),o(E,zo),o(E,Be),o(Be,Xo),u(e,xt,n),u(e,Y,n),o(Y,Zo),o(Y,X),o(X,ei),o(Y,ti),u(e,Ot,n),u(e,_e,n),o(_e,Z),o(Z,oi),o(Z,Ke),o(Ke,ii),o(Z,ri),u(e,Ht,n),u(e,m,n),o(m,ai),o(m,ee),o(ee,si),o(m,li),o(m,We),o(We,ni),o(m,ui),u(e,Ct,n),u(e,te,n),o(te,fi),o(te,oe),o(oe,ci),u(e,Dt,n),u(e,ke,n),o(ke,hi),u(e,Nt,n),u(e,I,n),o(I,je),o(je,ie),o(ie,Ve),o(Ve,pi),o(ie,mi),o(ie,Je),o(Je,di),o(I,gi),o(I,G),o(G,re),o(re,Qe),o(Qe,yi),o(re,vi),o(re,ze),o(ze,wi),o(G,Ei),o(G,ae),o(ae,Xe),o(Xe,Gi),o(ae,_i),o(ae,Ze),o(Ze,ki),o(G,Pi),o(G,se),o(se,et),o(et,bi),o(se,$i),o(se,tt),o(tt,Ti),u(e,Lt,n),u(e,F,n),o(F,Ai),o(F,ot),o(ot,Si),o(F,xi),u(e,Yt,n),u(e,M,n),o(M,Oi),o(M,it),o(it,Hi),o(M,Ci),u(e,It,n),u(e,R,n),o(R,Di),o(R,rt),o(rt,Ni),o(R,Li),u(e,Ft,n),u(e,U,n),o(U,Yi),o(U,Pe),o(Pe,Ii),o(U,Fi),u(e,Mt,n),u(e,_,n),o(_,q),o(q,at),A(le,at,null),o(_,Mi),o(_,st),o(st,Ri),u(e,Rt,n),u(e,be,n),o(be,Ui),u(e,Ut,n),A(ne,e,n),u(e,qt,n),u(e,$e,n),o($e,qi),u(e,Bt,n),u(e,B,n),o(B,Bi),o(B,ue),o(ue,Ki),o(B,Wi),u(e,Kt,n),u(e,k,n),o(k,K),o(K,lt),A(fe,lt,null),o(k,ji),o(k,nt),o(nt,Vi),u(e,Wt,n),u(e,W,n),o(W,ut),o(ut,ce),o(ce,Ji),o(ce,he),o(he,Qi),o(ce,zi),o(W,Xi),o(W,ft),o(ft,ct),o(ct,Zi),u(e,jt,n),A(pe,e,n),u(e,Vt,n),u(e,me,n),o(me,P),o(P,er),o(P,de),o(de,tr),o(P,or),o(P,ht),o(ht,ir),o(P,rr),u(e,Jt,n),u(e,d,n),o(d,ar),o(d,pt),o(pt,sr),o(d,lr),o(d,mt),o(mt,nr),o(d,ur),u(e,Qt,n),u(e,ge,n),o(ge,dt),o(dt,fr),u(e,zt,n),u(e,b,n),o(b,j),o(j,gt),A(ye,gt,null),o(b,cr),o(b,yt),o(yt,hr),u(e,Xt,n),u(e,Te,n),o(Te,pr),u(e,Zt,n),A(ve,e,n),u(e,eo,n),u(e,g,n),o(g,mr),o(g,vt),o(vt,dr),o(g,gr),o(g,wt),o(wt,yr),o(g,vr),u(e,to,n),A(we,e,n),u(e,oo,n),u(e,Ae,n),o(Ae,wr),io=!0},p:Na,i(e){io||(S(V.$$.fragment,e),S(z.$$.fragment,e),S(le.$$.fragment,e),S(ne.$$.fragment,e),S(fe.$$.fragment,e),S(pe.$$.fragment,e),S(ye.$$.fragment,e),S(ve.$$.fragment,e),S(we.$$.fragment,e),io=!0)},o(e){x(V.$$.fragment,e),x(z.$$.fragment,e),x(le.$$.fragment,e),x(ne.$$.fragment,e),x(fe.$$.fragment,e),x(pe.$$.fragment,e),x(ye.$$.fragment,e),x(ve.$$.fragment,e),x(we.$$.fragment,e),io=!1},d(e){t(y),e&&t(Gt),e&&t(v),O(V),e&&t(_t),e&&t(J),e&&t(kt),e&&t(p),e&&t(Pt),e&&t(Ee),e&&t(bt),e&&t(C),e&&t($t),e&&t(D),e&&t(Tt),e&&t(Ge),e&&t(At),e&&t(N),e&&t(St),e&&t(E),O(z),e&&t(xt),e&&t(Y),e&&t(Ot),e&&t(_e),e&&t(Ht),e&&t(m),e&&t(Ct),e&&t(te),e&&t(Dt),e&&t(ke),e&&t(Nt),e&&t(I),e&&t(Lt),e&&t(F),e&&t(Yt),e&&t(M),e&&t(It),e&&t(R),e&&t(Ft),e&&t(U),e&&t(Mt),e&&t(_),O(le),e&&t(Rt),e&&t(be),e&&t(Ut),O(ne,e),e&&t(qt),e&&t($e),e&&t(Bt),e&&t(B),e&&t(Kt),e&&t(k),O(fe),e&&t(Wt),e&&t(W),e&&t(jt),O(pe,e),e&&t(Vt),e&&t(me),e&&t(Jt),e&&t(d),e&&t(Qt),e&&t(ge),e&&t(zt),e&&t(b),O(ye),e&&t(Xt),e&&t(Te),e&&t(Zt),O(ve,e),e&&t(eo),e&&t(g),e&&t(to),O(we,e),e&&t(oo),e&&t(Ae)}}}const Ia={local:"signing-commits-with-gpg",sections:[{local:"setting-up-signed-commits-verification",title:"Setting up signed commits verification"},{local:"generating-a-new-gpg-key",title:"Generating a new GPG key"},{local:"adding-a-gpg-key-to-your-account",title:"Adding a GPG key to your account"},{local:"configure-git-to-sign-your-commits-with-gpg",title:"Configure git to sign your commits with GPG"}],title:"Signing commits with GPG"};function Fa(_r){return La(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class qa extends Oa{constructor(y){super();Ha(this,y,Fa,Ya,Ca,{})}}export{qa as default,Ia as metadata};
