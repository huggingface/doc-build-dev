import{S as ur,i as pr,s as gr,e as r,k as h,w as q,t as i,N as vr,c as a,d as s,m as d,a as n,x as N,h as c,b as o,P as ve,G as t,g as f,y as U,L as _r,q as C,o as D,B as O,v as wr}from"../chunks/vendor-hf-doc-builder.js";import{I as Ce}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as ks}from"../chunks/CodeBlock-hf-doc-builder.js";function br(xs){let v,De,_,A,_e,G,yt,we,$t,Oe,Y,be,Et,kt,Ge,w,S,ye,F,xt,$e,At,Ye,m,St,Ee,It,Pt,V,Tt,Ht,B,ke,Lt,jt,J,xe,Mt,qt,K,Nt,Ut,Fe,le,Ct,Ve,u,Ae,Dt,Ot,Se,Gt,Yt,Ie,Ft,Vt,Pe,Bt,Be,b,ie,As,Jt,ce,Ss,Je,y,I,Te,R,Kt,He,Rt,Ke,fe,zt,Re,z,ze,he,Qt,Qe,Q,We,P,Wt,Le,Xt,Zt,Xe,$,de,Is,es,me,Ps,Ze,E,ue,Ts,ts,pe,Hs,et,k,T,je,W,ss,Me,rs,tt,H,as,qe,ns,os,st,X,rt,L,ls,Z,is,cs,at,x,j,Ne,ee,fs,Ue,hs,nt,g,te,ds,se,ms,us,ps,re,gs,ae,vs,_s,ws,ne,bs,oe,ys,$s,ot;return G=new Ce({}),F=new Ce({}),R=new Ce({}),z=new ks({props:{code:`from sentence_transformers import SentenceTransformer
model = SentenceTransformer('model_name')`,highlighted:`<span class="hljs-keyword">from</span> sentence_transformers <span class="hljs-keyword">import</span> SentenceTransformer
model = SentenceTransformer(<span class="hljs-string">&#x27;model_name&#x27;</span>)`}}),Q=new ks({props:{code:`
`,highlighted:`<span class="hljs-keyword">from</span> sentence_transformers <span class="hljs-keyword">import</span> SentenceTransformer, util
model = SentenceTransformer(<span class="hljs-string">&#x27;multi-qa-MiniLM-L6-cos-v1&#x27;</span>)

query_embedding = model.encode(<span class="hljs-string">&#x27;How big is London&#x27;</span>)
passage_embedding = model.encode([<span class="hljs-string">&#x27;London has 9,787,426 inhabitants at the 2011 census&#x27;</span>,
                                  <span class="hljs-string">&#x27;London is known for its finacial district&#x27;</span>])

<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Similarity:&quot;</span>, util.dot_score(query_embedding, passage_embedding))`}}),W=new Ce({}),X=new ks({props:{code:"",highlighted:`<span class="hljs-keyword">from</span> sentence_transformers <span class="hljs-keyword">import</span> SentenceTransformer

<span class="hljs-comment"># Load or train a model</span>
model.save_to_hub(<span class="hljs-string">&quot;my_new_model&quot;</span>)`}}),ee=new Ce({}),{c(){v=r("meta"),De=h(),_=r("h1"),A=r("a"),_e=r("span"),q(G.$$.fragment),yt=h(),we=r("span"),$t=i("Using Sentence Transformers at Hugging Face"),Oe=h(),Y=r("p"),be=r("code"),Et=i("sentence-transformers"),kt=i(" is a library that provides easy methods to compute embeddings (dense vector representations) for sentences, paragraphs and images. Texts are embedded in a vector space such that similar text is close, which enables applications such as semantic search, clustering, and retrieval."),Ge=h(),w=r("h2"),S=r("a"),ye=r("span"),q(F.$$.fragment),xt=h(),$e=r("span"),At=i("Exploring sentence-transformers in the Hub"),Ye=h(),m=r("p"),St=i("You can find over 500 hundred "),Ee=r("code"),It=i("sentence-transformer"),Pt=i(" models by filtering at the left of the "),V=r("a"),Tt=i("models page"),Ht=i(". Most of these models support different tasks, such as doing "),B=r("a"),ke=r("code"),Lt=i("feature-extraction"),jt=i(" to generate the embedding, and "),J=r("a"),xe=r("code"),Mt=i("sentence-similarity"),qt=i(" as a way to determine how similar is a given sentence to other. You can also find an overview of the official pre-trained models in "),K=r("a"),Nt=i("the official docs"),Ut=i("."),Fe=h(),le=r("p"),Ct=i("All models on the Hub come up with features:"),Ve=h(),u=r("ol"),Ae=r("li"),Dt=i("An automatically generated model card with a description, example code snippets, architecture overview, and more."),Ot=h(),Se=r("li"),Gt=i("Metadata tags that help for discoverability and contain information such as license."),Yt=h(),Ie=r("li"),Ft=i("An interactive widget you can use to play out with the model directly in the browser."),Vt=h(),Pe=r("li"),Bt=i("An Inference API that allows to make inference requests."),Be=h(),b=r("div"),ie=r("img"),Jt=h(),ce=r("img"),Je=h(),y=r("h2"),I=r("a"),Te=r("span"),q(R.$$.fragment),Kt=h(),He=r("span"),Rt=i("Using existing models"),Ke=h(),fe=r("p"),zt=i("The pre-trained models on the Hub can be loaded with a single line of code"),Re=h(),q(z.$$.fragment),ze=h(),he=r("p"),Qt=i("Here is an example that encodes sentences and then computes the distance between them for doing semantic search."),Qe=h(),q(Q.$$.fragment),We=h(),P=r("p"),Wt=i("If you want to see how to load a specific model, you can click "),Le=r("code"),Xt=i("Use in sentence-transformers"),Zt=i(" and you will be given a working snippet that you can load it!"),Xe=h(),$=r("div"),de=r("img"),es=h(),me=r("img"),Ze=h(),E=r("div"),ue=r("img"),ts=h(),pe=r("img"),et=h(),k=r("h2"),T=r("a"),je=r("span"),q(W.$$.fragment),ss=h(),Me=r("span"),rs=i("Sharing your models"),tt=h(),H=r("p"),as=i("You can share your Sentence Transformers by using the "),qe=r("code"),ns=i("save_to_hub"),os=i(" method from a trained model."),st=h(),q(X.$$.fragment),rt=h(),L=r("p"),ls=i("This command creates a repository with an automatically generated model card, an inference widget, example code snippets, and more! "),Z=r("a"),is=i("Here"),cs=i(" is an example."),at=h(),x=r("h2"),j=r("a"),Ne=r("span"),q(ee.$$.fragment),fs=h(),Ue=r("span"),hs=i("Additional resources"),nt=h(),g=r("ul"),te=r("li"),ds=i("Sentence Transformers "),se=r("a"),ms=i("library"),us=i("."),ps=h(),re=r("li"),gs=i("Sentence Transformers "),ae=r("a"),vs=i("docs"),_s=i("."),ws=h(),ne=r("li"),bs=i("Integration with Hub "),oe=r("a"),ys=i("announcement"),$s=i("."),this.h()},l(e){const l=vr('[data-svelte="svelte-1phssyn"]',document.head);v=a(l,"META",{name:!0,content:!0}),l.forEach(s),De=d(e),_=a(e,"H1",{class:!0});var lt=n(_);A=a(lt,"A",{id:!0,class:!0,href:!0});var Ls=n(A);_e=a(Ls,"SPAN",{});var js=n(_e);N(G.$$.fragment,js),js.forEach(s),Ls.forEach(s),yt=d(lt),we=a(lt,"SPAN",{});var Ms=n(we);$t=c(Ms,"Using Sentence Transformers at Hugging Face"),Ms.forEach(s),lt.forEach(s),Oe=d(e),Y=a(e,"P",{});var Es=n(Y);be=a(Es,"CODE",{});var qs=n(be);Et=c(qs,"sentence-transformers"),qs.forEach(s),kt=c(Es," is a library that provides easy methods to compute embeddings (dense vector representations) for sentences, paragraphs and images. Texts are embedded in a vector space such that similar text is close, which enables applications such as semantic search, clustering, and retrieval."),Es.forEach(s),Ge=d(e),w=a(e,"H2",{class:!0});var it=n(w);S=a(it,"A",{id:!0,class:!0,href:!0});var Ns=n(S);ye=a(Ns,"SPAN",{});var Us=n(ye);N(F.$$.fragment,Us),Us.forEach(s),Ns.forEach(s),xt=d(it),$e=a(it,"SPAN",{});var Cs=n($e);At=c(Cs,"Exploring sentence-transformers in the Hub"),Cs.forEach(s),it.forEach(s),Ye=d(e),m=a(e,"P",{});var p=n(m);St=c(p,"You can find over 500 hundred "),Ee=a(p,"CODE",{});var Ds=n(Ee);It=c(Ds,"sentence-transformer"),Ds.forEach(s),Pt=c(p," models by filtering at the left of the "),V=a(p,"A",{href:!0,rel:!0});var Os=n(V);Tt=c(Os,"models page"),Os.forEach(s),Ht=c(p,". Most of these models support different tasks, such as doing "),B=a(p,"A",{href:!0,rel:!0});var Gs=n(B);ke=a(Gs,"CODE",{});var Ys=n(ke);Lt=c(Ys,"feature-extraction"),Ys.forEach(s),Gs.forEach(s),jt=c(p," to generate the embedding, and "),J=a(p,"A",{href:!0,rel:!0});var Fs=n(J);xe=a(Fs,"CODE",{});var Vs=n(xe);Mt=c(Vs,"sentence-similarity"),Vs.forEach(s),Fs.forEach(s),qt=c(p," as a way to determine how similar is a given sentence to other. You can also find an overview of the official pre-trained models in "),K=a(p,"A",{href:!0,rel:!0});var Bs=n(K);Nt=c(Bs,"the official docs"),Bs.forEach(s),Ut=c(p,"."),p.forEach(s),Fe=d(e),le=a(e,"P",{});var Js=n(le);Ct=c(Js,"All models on the Hub come up with features:"),Js.forEach(s),Ve=d(e),u=a(e,"OL",{});var M=n(u);Ae=a(M,"LI",{});var Ks=n(Ae);Dt=c(Ks,"An automatically generated model card with a description, example code snippets, architecture overview, and more."),Ks.forEach(s),Ot=d(M),Se=a(M,"LI",{});var Rs=n(Se);Gt=c(Rs,"Metadata tags that help for discoverability and contain information such as license."),Rs.forEach(s),Yt=d(M),Ie=a(M,"LI",{});var zs=n(Ie);Ft=c(zs,"An interactive widget you can use to play out with the model directly in the browser."),zs.forEach(s),Vt=d(M),Pe=a(M,"LI",{});var Qs=n(Pe);Bt=c(Qs,"An Inference API that allows to make inference requests."),Qs.forEach(s),M.forEach(s),Be=d(e),b=a(e,"DIV",{class:!0});var ct=n(b);ie=a(ct,"IMG",{class:!0,src:!0}),Jt=d(ct),ce=a(ct,"IMG",{class:!0,src:!0}),ct.forEach(s),Je=d(e),y=a(e,"H2",{class:!0});var ft=n(y);I=a(ft,"A",{id:!0,class:!0,href:!0});var Ws=n(I);Te=a(Ws,"SPAN",{});var Xs=n(Te);N(R.$$.fragment,Xs),Xs.forEach(s),Ws.forEach(s),Kt=d(ft),He=a(ft,"SPAN",{});var Zs=n(He);Rt=c(Zs,"Using existing models"),Zs.forEach(s),ft.forEach(s),Ke=d(e),fe=a(e,"P",{});var er=n(fe);zt=c(er,"The pre-trained models on the Hub can be loaded with a single line of code"),er.forEach(s),Re=d(e),N(z.$$.fragment,e),ze=d(e),he=a(e,"P",{});var tr=n(he);Qt=c(tr,"Here is an example that encodes sentences and then computes the distance between them for doing semantic search."),tr.forEach(s),Qe=d(e),N(Q.$$.fragment,e),We=d(e),P=a(e,"P",{});var ht=n(P);Wt=c(ht,"If you want to see how to load a specific model, you can click "),Le=a(ht,"CODE",{});var sr=n(Le);Xt=c(sr,"Use in sentence-transformers"),sr.forEach(s),Zt=c(ht," and you will be given a working snippet that you can load it!"),ht.forEach(s),Xe=d(e),$=a(e,"DIV",{class:!0});var dt=n($);de=a(dt,"IMG",{class:!0,src:!0}),es=d(dt),me=a(dt,"IMG",{class:!0,src:!0}),dt.forEach(s),Ze=d(e),E=a(e,"DIV",{class:!0});var mt=n(E);ue=a(mt,"IMG",{class:!0,src:!0}),ts=d(mt),pe=a(mt,"IMG",{class:!0,src:!0}),mt.forEach(s),et=d(e),k=a(e,"H2",{class:!0});var ut=n(k);T=a(ut,"A",{id:!0,class:!0,href:!0});var rr=n(T);je=a(rr,"SPAN",{});var ar=n(je);N(W.$$.fragment,ar),ar.forEach(s),rr.forEach(s),ss=d(ut),Me=a(ut,"SPAN",{});var nr=n(Me);rs=c(nr,"Sharing your models"),nr.forEach(s),ut.forEach(s),tt=d(e),H=a(e,"P",{});var pt=n(H);as=c(pt,"You can share your Sentence Transformers by using the "),qe=a(pt,"CODE",{});var or=n(qe);ns=c(or,"save_to_hub"),or.forEach(s),os=c(pt," method from a trained model."),pt.forEach(s),st=d(e),N(X.$$.fragment,e),rt=d(e),L=a(e,"P",{});var gt=n(L);ls=c(gt,"This command creates a repository with an automatically generated model card, an inference widget, example code snippets, and more! "),Z=a(gt,"A",{href:!0,rel:!0});var lr=n(Z);is=c(lr,"Here"),lr.forEach(s),cs=c(gt," is an example."),gt.forEach(s),at=d(e),x=a(e,"H2",{class:!0});var vt=n(x);j=a(vt,"A",{id:!0,class:!0,href:!0});var ir=n(j);Ne=a(ir,"SPAN",{});var cr=n(Ne);N(ee.$$.fragment,cr),cr.forEach(s),ir.forEach(s),fs=d(vt),Ue=a(vt,"SPAN",{});var fr=n(Ue);hs=c(fr,"Additional resources"),fr.forEach(s),vt.forEach(s),nt=d(e),g=a(e,"UL",{});var ge=n(g);te=a(ge,"LI",{});var _t=n(te);ds=c(_t,"Sentence Transformers "),se=a(_t,"A",{href:!0,rel:!0});var hr=n(se);ms=c(hr,"library"),hr.forEach(s),us=c(_t,"."),_t.forEach(s),ps=d(ge),re=a(ge,"LI",{});var wt=n(re);gs=c(wt,"Sentence Transformers "),ae=a(wt,"A",{href:!0,rel:!0});var dr=n(ae);vs=c(dr,"docs"),dr.forEach(s),_s=c(wt,"."),wt.forEach(s),ws=d(ge),ne=a(ge,"LI",{});var bt=n(ne);bs=c(bt,"Integration with Hub "),oe=a(bt,"A",{href:!0,rel:!0});var mr=n(oe);ys=c(mr,"announcement"),mr.forEach(s),$s=c(bt,"."),bt.forEach(s),ge.forEach(s),this.h()},h(){o(v,"name","hf:doc:metadata"),o(v,"content",JSON.stringify(yr)),o(A,"id","using-sentence-transformers-at-hugging-face"),o(A,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(A,"href","#using-sentence-transformers-at-hugging-face"),o(_,"class","relative group"),o(S,"id","exploring-sentencetransformers-in-the-hub"),o(S,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(S,"href","#exploring-sentencetransformers-in-the-hub"),o(w,"class","relative group"),o(V,"href","https://huggingface.co/models?library=sentence-transformers&sort=downloads"),o(V,"rel","nofollow"),o(B,"href","https://huggingface.co/models?library=sentence-transformers&pipeline_tag=feature-extraction&sort=downloads"),o(B,"rel","nofollow"),o(J,"href","https://huggingface.co/models?library=sentence-transformers&pipeline_tag=sentence-similarity&sort=downloads"),o(J,"rel","nofollow"),o(K,"href","https://www.sbert.net/docs/pretrained_models.html"),o(K,"rel","nofollow"),o(ie,"class","block dark:hidden"),ve(ie.src,As="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_widget.png")||o(ie,"src",As),o(ce,"class","hidden dark:block"),ve(ce.src,Ss="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_widget-dark.png")||o(ce,"src",Ss),o(b,"class","flex justify-center"),o(I,"id","using-existing-models"),o(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(I,"href","#using-existing-models"),o(y,"class","relative group"),o(de,"class","block dark:hidden"),ve(de.src,Is="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet1.png")||o(de,"src",Is),o(me,"class","hidden dark:block"),ve(me.src,Ps="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet1-dark.png")||o(me,"src",Ps),o($,"class","flex justify-center"),o(ue,"class","block dark:hidden"),ve(ue.src,Ts="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet2.png")||o(ue,"src",Ts),o(pe,"class","hidden dark:block"),ve(pe.src,Hs="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/libraries-sentence_transformers_snippet2-dark.png")||o(pe,"src",Hs),o(E,"class","flex justify-center"),o(T,"id","sharing-your-models"),o(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(T,"href","#sharing-your-models"),o(k,"class","relative group"),o(Z,"href","https://huggingface.co/osanseviero/my_new_model"),o(Z,"rel","nofollow"),o(j,"id","additional-resources"),o(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(j,"href","#additional-resources"),o(x,"class","relative group"),o(se,"href","https://github.com/UKPLab/sentence-transformers"),o(se,"rel","nofollow"),o(ae,"href","https://www.sbert.net/"),o(ae,"rel","nofollow"),o(oe,"href","https://huggingface.co/blog/sentence-transformers-in-the-hub"),o(oe,"rel","nofollow")},m(e,l){t(document.head,v),f(e,De,l),f(e,_,l),t(_,A),t(A,_e),U(G,_e,null),t(_,yt),t(_,we),t(we,$t),f(e,Oe,l),f(e,Y,l),t(Y,be),t(be,Et),t(Y,kt),f(e,Ge,l),f(e,w,l),t(w,S),t(S,ye),U(F,ye,null),t(w,xt),t(w,$e),t($e,At),f(e,Ye,l),f(e,m,l),t(m,St),t(m,Ee),t(Ee,It),t(m,Pt),t(m,V),t(V,Tt),t(m,Ht),t(m,B),t(B,ke),t(ke,Lt),t(m,jt),t(m,J),t(J,xe),t(xe,Mt),t(m,qt),t(m,K),t(K,Nt),t(m,Ut),f(e,Fe,l),f(e,le,l),t(le,Ct),f(e,Ve,l),f(e,u,l),t(u,Ae),t(Ae,Dt),t(u,Ot),t(u,Se),t(Se,Gt),t(u,Yt),t(u,Ie),t(Ie,Ft),t(u,Vt),t(u,Pe),t(Pe,Bt),f(e,Be,l),f(e,b,l),t(b,ie),t(b,Jt),t(b,ce),f(e,Je,l),f(e,y,l),t(y,I),t(I,Te),U(R,Te,null),t(y,Kt),t(y,He),t(He,Rt),f(e,Ke,l),f(e,fe,l),t(fe,zt),f(e,Re,l),U(z,e,l),f(e,ze,l),f(e,he,l),t(he,Qt),f(e,Qe,l),U(Q,e,l),f(e,We,l),f(e,P,l),t(P,Wt),t(P,Le),t(Le,Xt),t(P,Zt),f(e,Xe,l),f(e,$,l),t($,de),t($,es),t($,me),f(e,Ze,l),f(e,E,l),t(E,ue),t(E,ts),t(E,pe),f(e,et,l),f(e,k,l),t(k,T),t(T,je),U(W,je,null),t(k,ss),t(k,Me),t(Me,rs),f(e,tt,l),f(e,H,l),t(H,as),t(H,qe),t(qe,ns),t(H,os),f(e,st,l),U(X,e,l),f(e,rt,l),f(e,L,l),t(L,ls),t(L,Z),t(Z,is),t(L,cs),f(e,at,l),f(e,x,l),t(x,j),t(j,Ne),U(ee,Ne,null),t(x,fs),t(x,Ue),t(Ue,hs),f(e,nt,l),f(e,g,l),t(g,te),t(te,ds),t(te,se),t(se,ms),t(te,us),t(g,ps),t(g,re),t(re,gs),t(re,ae),t(ae,vs),t(re,_s),t(g,ws),t(g,ne),t(ne,bs),t(ne,oe),t(oe,ys),t(ne,$s),ot=!0},p:_r,i(e){ot||(C(G.$$.fragment,e),C(F.$$.fragment,e),C(R.$$.fragment,e),C(z.$$.fragment,e),C(Q.$$.fragment,e),C(W.$$.fragment,e),C(X.$$.fragment,e),C(ee.$$.fragment,e),ot=!0)},o(e){D(G.$$.fragment,e),D(F.$$.fragment,e),D(R.$$.fragment,e),D(z.$$.fragment,e),D(Q.$$.fragment,e),D(W.$$.fragment,e),D(X.$$.fragment,e),D(ee.$$.fragment,e),ot=!1},d(e){s(v),e&&s(De),e&&s(_),O(G),e&&s(Oe),e&&s(Y),e&&s(Ge),e&&s(w),O(F),e&&s(Ye),e&&s(m),e&&s(Fe),e&&s(le),e&&s(Ve),e&&s(u),e&&s(Be),e&&s(b),e&&s(Je),e&&s(y),O(R),e&&s(Ke),e&&s(fe),e&&s(Re),O(z,e),e&&s(ze),e&&s(he),e&&s(Qe),O(Q,e),e&&s(We),e&&s(P),e&&s(Xe),e&&s($),e&&s(Ze),e&&s(E),e&&s(et),e&&s(k),O(W),e&&s(tt),e&&s(H),e&&s(st),O(X,e),e&&s(rt),e&&s(L),e&&s(at),e&&s(x),O(ee),e&&s(nt),e&&s(g)}}}const yr={local:"using-sentence-transformers-at-hugging-face",sections:[{local:"exploring-sentencetransformers-in-the-hub",title:"Exploring sentence-transformers in the Hub"},{local:"using-existing-models",title:"Using existing models"},{local:"sharing-your-models",title:"Sharing your models"},{local:"additional-resources",title:"Additional resources"}],title:"Using Sentence Transformers at Hugging Face"};function $r(xs){return wr(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ar extends ur{constructor(v){super();pr(this,v,$r,br,gr,{})}}export{Ar as default,yr as metadata};
