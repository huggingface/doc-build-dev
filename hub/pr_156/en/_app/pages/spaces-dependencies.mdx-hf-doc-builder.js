import{S as _t,i as wt,s as Et,e as o,k as d,w as We,t as s,N as bt,c as n,d as a,m as p,a as r,x as Be,h as l,b as i,G as e,g as h,y as Je,L as Pt,q as je,o as Fe,B as Ke,v as At}from"../chunks/vendor-hf-doc-builder.js";import{I as Qe}from"../chunks/IconCopyLink-hf-doc-builder.js";function $t(Ve){let m,Y,y,_,R,P,fe,G,ue,Z,v,w,z,A,me,M,ye,ee,N,ve,te,f,$,S,ge,I,U,_e,we,Ee,x,be,k,Pe,Ae,$e,W,q,D,B,Se,Ie,xe,J,L,T,j,ke,De,ae,g,E,F,H,Te,K,He,oe,b,Ne,Q,qe,Le,ne,u,Oe,V,Ce,Re,X,Ge,ze,re;return P=new Qe({}),A=new Qe({}),H=new Qe({}),{c(){m=o("meta"),Y=d(),y=o("h1"),_=o("a"),R=o("span"),We(P.$$.fragment),fe=d(),G=o("span"),ue=s("Handling Spaces Dependencies"),Z=d(),v=o("h2"),w=o("a"),z=o("span"),We(A.$$.fragment),me=d(),M=o("span"),ye=s("Default dependencies"),ee=d(),N=o("p"),ve=s("The default Spaces environment comes with several pre-installed dependencies:"),te=d(),f=o("ul"),$=o("li"),S=o("p"),ge=s("The "),I=o("a"),U=o("code"),_e=s("huggingface_hub"),we=s(" client library allows you to manage your repository and files on the Hub with Python and programmatically access the Inference API from your Space. If you choose to instantiate the model in your app with our Inference API, you can benefit from the built-in acceleration optimizations. This option also consumes less computing resources, which is always nice for the environment! \u{1F30E}"),Ee=d(),x=o("p"),be=s("Refer to this "),k=o("a"),Pe=s("page"),Ae=s(" for more information on how to programmatically access the Inference API."),$e=d(),W=o("li"),q=o("p"),D=o("a"),B=o("code"),Se=s("requests"),Ie=s(" is useful for calling third-party APIs from your app."),xe=d(),J=o("li"),L=o("p"),T=o("a"),j=o("code"),ke=s("datasets"),De=s(" allows you to fetch or display any dataset from the Hub inside your app."),ae=d(),g=o("h2"),E=o("a"),F=o("span"),We(H.$$.fragment),Te=d(),K=o("span"),He=s("Adding extra dependencies"),oe=d(),b=o("p"),Ne=s("We you need other Python packages to run your app, add them to a "),Q=o("strong"),qe=s("requirements.txt"),Le=s(" file at the root of your repository. The Spaces runtime engine will create a custom environment on-the-fly."),ne=d(),u=o("p"),Oe=s("Debian dependencies are also supported. Add a "),V=o("strong"),Ce=s("packages.txt"),Re=s(" file at the root of your repository, and list all your dependencies in it. Each dependency should be on a separate line, and each line will be read and installed by "),X=o("code"),Ge=s("apt-get install"),ze=s("."),this.h()},l(t){const c=bt('[data-svelte="svelte-1phssyn"]',document.head);m=n(c,"META",{name:!0,content:!0}),c.forEach(a),Y=p(t),y=n(t,"H1",{class:!0});var se=r(y);_=n(se,"A",{id:!0,class:!0,href:!0});var Xe=r(_);R=n(Xe,"SPAN",{});var Ye=r(R);Be(P.$$.fragment,Ye),Ye.forEach(a),Xe.forEach(a),fe=p(se),G=n(se,"SPAN",{});var Ze=r(G);ue=l(Ze,"Handling Spaces Dependencies"),Ze.forEach(a),se.forEach(a),Z=p(t),v=n(t,"H2",{class:!0});var le=r(v);w=n(le,"A",{id:!0,class:!0,href:!0});var et=r(w);z=n(et,"SPAN",{});var tt=r(z);Be(A.$$.fragment,tt),tt.forEach(a),et.forEach(a),me=p(le),M=n(le,"SPAN",{});var at=r(M);ye=l(at,"Default dependencies"),at.forEach(a),le.forEach(a),ee=p(t),N=n(t,"P",{});var ot=r(N);ve=l(ot,"The default Spaces environment comes with several pre-installed dependencies:"),ot.forEach(a),te=p(t),f=n(t,"UL",{});var O=r(f);$=n(O,"LI",{});var ie=r($);S=n(ie,"P",{});var ce=r(S);ge=l(ce,"The "),I=n(ce,"A",{href:!0,rel:!0});var nt=r(I);U=n(nt,"CODE",{});var rt=r(U);_e=l(rt,"huggingface_hub"),rt.forEach(a),nt.forEach(a),we=l(ce," client library allows you to manage your repository and files on the Hub with Python and programmatically access the Inference API from your Space. If you choose to instantiate the model in your app with our Inference API, you can benefit from the built-in acceleration optimizations. This option also consumes less computing resources, which is always nice for the environment! \u{1F30E}"),ce.forEach(a),Ee=p(ie),x=n(ie,"P",{});var he=r(x);be=l(he,"Refer to this "),k=n(he,"A",{href:!0,rel:!0});var st=r(k);Pe=l(st,"page"),st.forEach(a),Ae=l(he," for more information on how to programmatically access the Inference API."),he.forEach(a),ie.forEach(a),$e=p(O),W=n(O,"LI",{});var lt=r(W);q=n(lt,"P",{});var Me=r(q);D=n(Me,"A",{href:!0,rel:!0});var it=r(D);B=n(it,"CODE",{});var ct=r(B);Se=l(ct,"requests"),ct.forEach(a),it.forEach(a),Ie=l(Me," is useful for calling third-party APIs from your app."),Me.forEach(a),lt.forEach(a),xe=p(O),J=n(O,"LI",{});var ht=r(J);L=n(ht,"P",{});var Ue=r(L);T=n(Ue,"A",{href:!0,rel:!0});var dt=r(T);j=n(dt,"CODE",{});var pt=r(j);ke=l(pt,"datasets"),pt.forEach(a),dt.forEach(a),De=l(Ue," allows you to fetch or display any dataset from the Hub inside your app."),Ue.forEach(a),ht.forEach(a),O.forEach(a),ae=p(t),g=n(t,"H2",{class:!0});var de=r(g);E=n(de,"A",{id:!0,class:!0,href:!0});var ft=r(E);F=n(ft,"SPAN",{});var ut=r(F);Be(H.$$.fragment,ut),ut.forEach(a),ft.forEach(a),Te=p(de),K=n(de,"SPAN",{});var mt=r(K);He=l(mt,"Adding extra dependencies"),mt.forEach(a),de.forEach(a),oe=p(t),b=n(t,"P",{});var pe=r(b);Ne=l(pe,"We you need other Python packages to run your app, add them to a "),Q=n(pe,"STRONG",{});var yt=r(Q);qe=l(yt,"requirements.txt"),yt.forEach(a),Le=l(pe," file at the root of your repository. The Spaces runtime engine will create a custom environment on-the-fly."),pe.forEach(a),ne=p(t),u=n(t,"P",{});var C=r(u);Oe=l(C,"Debian dependencies are also supported. Add a "),V=n(C,"STRONG",{});var vt=r(V);Ce=l(vt,"packages.txt"),vt.forEach(a),Re=l(C," file at the root of your repository, and list all your dependencies in it. Each dependency should be on a separate line, and each line will be read and installed by "),X=n(C,"CODE",{});var gt=r(X);Ge=l(gt,"apt-get install"),gt.forEach(a),ze=l(C,"."),C.forEach(a),this.h()},h(){i(m,"name","hf:doc:metadata"),i(m,"content",JSON.stringify(St)),i(_,"id","handling-spaces-dependencies"),i(_,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(_,"href","#handling-spaces-dependencies"),i(y,"class","relative group"),i(w,"id","default-dependencies"),i(w,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(w,"href","#default-dependencies"),i(v,"class","relative group"),i(I,"href","https://huggingface.co/docs/huggingface_hub/index"),i(I,"rel","nofollow"),i(k,"href","https://huggingface.co/docs/huggingface_hub/how-to-inference"),i(k,"rel","nofollow"),i(D,"href","https://docs.python-requests.org/en/master/"),i(D,"rel","nofollow"),i(T,"href","https://github.com/huggingface/datasets"),i(T,"rel","nofollow"),i(E,"id","adding-extra-dependencies"),i(E,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(E,"href","#adding-extra-dependencies"),i(g,"class","relative group")},m(t,c){e(document.head,m),h(t,Y,c),h(t,y,c),e(y,_),e(_,R),Je(P,R,null),e(y,fe),e(y,G),e(G,ue),h(t,Z,c),h(t,v,c),e(v,w),e(w,z),Je(A,z,null),e(v,me),e(v,M),e(M,ye),h(t,ee,c),h(t,N,c),e(N,ve),h(t,te,c),h(t,f,c),e(f,$),e($,S),e(S,ge),e(S,I),e(I,U),e(U,_e),e(S,we),e($,Ee),e($,x),e(x,be),e(x,k),e(k,Pe),e(x,Ae),e(f,$e),e(f,W),e(W,q),e(q,D),e(D,B),e(B,Se),e(q,Ie),e(f,xe),e(f,J),e(J,L),e(L,T),e(T,j),e(j,ke),e(L,De),h(t,ae,c),h(t,g,c),e(g,E),e(E,F),Je(H,F,null),e(g,Te),e(g,K),e(K,He),h(t,oe,c),h(t,b,c),e(b,Ne),e(b,Q),e(Q,qe),e(b,Le),h(t,ne,c),h(t,u,c),e(u,Oe),e(u,V),e(V,Ce),e(u,Re),e(u,X),e(X,Ge),e(u,ze),re=!0},p:Pt,i(t){re||(je(P.$$.fragment,t),je(A.$$.fragment,t),je(H.$$.fragment,t),re=!0)},o(t){Fe(P.$$.fragment,t),Fe(A.$$.fragment,t),Fe(H.$$.fragment,t),re=!1},d(t){a(m),t&&a(Y),t&&a(y),Ke(P),t&&a(Z),t&&a(v),Ke(A),t&&a(ee),t&&a(N),t&&a(te),t&&a(f),t&&a(ae),t&&a(g),Ke(H),t&&a(oe),t&&a(b),t&&a(ne),t&&a(u)}}}const St={local:"handling-spaces-dependencies",sections:[{local:"default-dependencies",title:"Default dependencies"},{local:"adding-extra-dependencies",title:"Adding extra dependencies"}],title:"Handling Spaces Dependencies"};function It(Ve){return At(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Dt extends _t{constructor(m){super();wt(this,m,It,$t,Et,{})}}export{Dt as default,St as metadata};
