import{S as ja,i as Ua,s as Va,e as i,k as c,w as y,t as l,N as Wa,c as a,d as t,m as u,a as r,x as v,h as n,b as f,P as Te,G as o,g as h,y as w,L as Xa,q as _,o as b,B as E,v as Ja}from"../chunks/vendor-hf-doc-builder.js";import{I as He}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as pt}from"../chunks/CodeBlock-hf-doc-builder.js";function Ka(Fi){let x,mt,A,M,Ne,J,co,Ge,uo,dt,ce,po,gt,C,I,Me,K,mo,Ie,go,yt,d,yo,Fe,vo,wo,Q,_o,bo,Z,Eo,$o,vt,F,ko,L,Le,Po,xo,Ao,wt,ee,_t,O,Co,Oe,So,To,bt,m,Li,Et,S,Y,Ye,te,Ho,De,No,$t,D,Go,Re,Mo,Io,kt,ue,oe,Fo,ie,Lo,Oo,Pt,pe,me,Oi,xt,T,qe,Be,Yo,Do,ze,je,Ro,At,$,qo,Ue,Bo,zo,de,Ve,jo,Uo,Ct,ge,Vo,St,ye,ve,Yi,Tt,k,Wo,We,Xo,Jo,we,Xe,Ko,Qo,Ht,H,R,Je,ae,Zo,Ke,ei,Nt,q,ti,Qe,oi,ii,Gt,re,Mt,N,B,Ze,se,ai,et,ri,It,_e,si,Ft,z,li,tt,ni,hi,Lt,le,Ot,j,fi,ot,ci,ui,Yt,ne,Dt,g,pi,it,mi,di,at,gi,yi,rt,vi,wi,Rt,p,_i,st,bi,Ei,lt,$i,ki,nt,Pi,xi,ht,Ai,Ci,qt,he,Bt,U,Si,ft,Ti,Hi,zt,be,Ee,Di,jt,G,V,ct,fe,Ni,ut,Gi,Ut,$e,ke,Ri,Vt,Pe,Mi,Wt,xe,Ae,qi,Xt;return J=new He({}),K=new He({}),ee=new pt({props:{code:`python -m pip install huggingface_hub
huggingface-cli login`,highlighted:`python -m pip install huggingface_hub
huggingface-cli login`}}),te=new He({}),ae=new He({}),re=new pt({props:{code:`git clone https://huggingface.co/<your-username>/<your-model-id>
cd <your-model-id>`,highlighted:`git <span class="hljs-built_in">clone</span> https://huggingface.co/&lt;your-username&gt;/&lt;your-model-id&gt;
<span class="hljs-built_in">cd</span> &lt;your-model-id&gt;`}}),se=new He({}),le=new pt({props:{code:"git lfs install",highlighted:"git lfs install"}}),ne=new pt({props:{code:"huggingface-cli lfs-enable-largefiles",highlighted:"huggingface-cli lfs-enable-largefiles"}}),he=new pt({props:{code:`# Create any files you like! Then...
git add .
git commit -m "First model version"  # You can choose any descriptive message
git push`,highlighted:`<span class="hljs-comment"># Create any files you like! Then...</span>
git add .
git commit -m <span class="hljs-string">&quot;First model version&quot;</span>  <span class="hljs-comment"># You can choose any descriptive message</span>
git push`}}),fe=new He({}),{c(){x=i("meta"),mt=c(),A=i("h1"),M=i("a"),Ne=i("span"),y(J.$$.fragment),co=c(),Ge=i("span"),uo=l("Getting Started with Repositories"),dt=c(),ce=i("p"),po=l("This beginner-friendly guide will help you get the basic skills you need to create and manage your repository on the Hub. Each section builds on the previous one, so feel free to choose where to start!"),gt=c(),C=i("h2"),I=i("a"),Me=i("span"),y(K.$$.fragment),mo=c(),Ie=i("span"),go=l("Requirements"),yt=c(),d=i("p"),yo=l("If you do not have "),Fe=i("code"),vo=l("git"),wo=l(" available as a CLI command yet, you will need to "),Q=i("a"),_o=l("install Git"),bo=l(" for your platform. You will also need to "),Z=i("a"),Eo=l("install Git LFS"),$o=l(", which will be used to handle large files such as images and model weights."),vt=c(),F=i("p"),ko=l("To be able to push your code to the Hub, you\u2019ll need to authenticate somehow. The easiest way to do this is by installing the "),L=i("a"),Le=i("code"),Po=l("huggingface_hub"),xo=l(" CLI"),Ao=l(" and running the login command:"),wt=c(),y(ee.$$.fragment),_t=c(),O=i("p"),Co=l("The content in the "),Oe=i("strong"),So=l("Getting Started"),To=l(" section of this document is also available as a video!"),bt=c(),m=i("iframe"),Et=c(),S=i("h2"),Y=i("a"),Ye=i("span"),y(te.$$.fragment),Ho=c(),De=i("span"),No=l("Creating a repository"),$t=c(),D=i("p"),Go=l("Using the Hub\u2019s web interface you can easily create repositories, add files (even large ones!), explore models, visualize diffs, and much more. There are three kinds of repositories on the Hub, and in this guide we\u2019ll be creating a "),Re=i("strong"),Mo=l("model repository"),Io=l(" for demonstration purposes. For information on creating and managing models, datasets, and Spaces, refer to their respective documentation."),kt=c(),ue=i("ol"),oe=i("li"),Fo=l("To create a new repository, visit "),ie=i("a"),Lo=l("huggingface.co/new"),Oo=l(":"),Pt=c(),pe=i("p"),me=i("img"),xt=c(),T=i("ol"),qe=i("li"),Be=i("p"),Yo=l("First, specify the owner of the repository: this can be either you or any of the organizations you\u2019re affiliated with."),Do=c(),ze=i("li"),je=i("p"),Ro=l("Next, enter your model\u2019s name. This will also be the name of the repository. Finally, you can specify whether you want your model to be public or private."),At=c(),$=i("p"),qo=l("You can leave the "),Ue=i("em"),Bo=l("License"),zo=l(" field blank for now. To learn about licenses, visit the "),de=i("a"),Ve=i("strong"),jo=l("Licenses"),Uo=l(" section of this documentation."),Ct=c(),ge=i("p"),Vo=l("After creating your model repository, you should see a page like this:"),St=c(),ye=i("p"),ve=i("img"),Tt=c(),k=i("p"),Wo=l("Note that the Hub prompts you to create a "),We=i("em"),Xo=l("Model Card"),Jo=l(", which you can learn about in the "),we=i("a"),Xe=i("strong"),Ko=l("Model Cards documentation"),Qo=l(". Including a Model Card in your model repo is best practice, but since we\u2019re only making a test repo at the moment we can skip this."),Ht=c(),H=i("h2"),R=i("a"),Je=i("span"),y(ae.$$.fragment),Zo=c(),Ke=i("span"),ei=l("Cloning repositories"),Nt=c(),q=i("p"),ti=l("Downloading repositories to your local machine is called "),Qe=i("em"),oi=l("cloning"),ii=l(". You can use the following commands to load the repo that we made and navigate to it:"),Gt=c(),y(re.$$.fragment),Mt=c(),N=i("h2"),B=i("a"),Ze=i("span"),y(se.$$.fragment),ai=c(),et=i("span"),ri=l("Adding files to a repository"),It=c(),_e=i("p"),si=l("Now\u2019s the time, you can add any files you want to the repository! \u{1F525}"),Ft=c(),z=i("p"),li=l("Do you have files larger than 10MB? Those files should be tracked with "),tt=i("code"),ni=l("git-lfs"),hi=l(", which you can initialize with:"),Lt=c(),y(le.$$.fragment),Ot=c(),j=i("p"),fi=l("Note that if your files are larger than "),ot=i("strong"),ci=l("5GB"),ui=l(" you\u2019ll also need to run:"),Yt=c(),y(ne.$$.fragment),Dt=c(),g=i("p"),pi=l("When you use Hugging Face to create a repository, we automatically provide a list of common file extensions for these files in the "),it=i("code"),mi=l(".gitattributes"),di=l(" file, which "),at=i("code"),gi=l("git-lfs"),yi=l(" uses to efficiently track changes to your large files. However, you might need to add new extensions if your file types are not already handled. You can do so with "),rt=i("code"),vi=l('git lfs track "*.your_extension"'),wi=l("."),Rt=c(),p=i("p"),_i=l("You can use Git to save new files and any changes to already existing files as a bundle of changes called a "),st=i("em"),bi=l("commit"),Ei=l(", which can be thought of as a \u201Crevision\u201D to your project. To create a commit, we have to "),lt=i("code"),$i=l("add"),ki=l(" the files to let Git know that we\u2019re planning on saving the changes and then "),nt=i("code"),Pi=l("commit"),xi=l(" those changes. In order to sync the new commit with the Hugging Face Hub, we then "),ht=i("code"),Ai=l("push"),Ci=l(" the commit to the Hub."),qt=c(),y(he.$$.fragment),Bt=c(),U=i("p"),Si=l("And we\u2019re done! You can check your repository on Hugging Face with all the recently added files. For example, in the screenshot below the user added a number of files. Note that one of the files in this example has a size of "),ft=i("code"),Ti=l("413 MB"),Hi=l(", so the repo uses Git LFS to track it."),zt=c(),be=i("p"),Ee=i("img"),jt=c(),G=i("h2"),V=i("a"),ct=i("span"),y(fe.$$.fragment),Ni=c(),ut=i("span"),Gi=l("Viewing a repo's history"),Ut=l("\n\nEvery time you go through the `add`-`commit`-`push` cycle, the repo will keep track of every change you've made to your files. The UI allows you to explore the model files and commits and to see the difference (also known as *diff*) introduced by each commit. To see the history, you can click on the **History: X commits** link.\n"),$e=i("p"),ke=i("img"),Vt=c(),Pe=i("p"),Mi=l("You can click on an individual commit to see what changes that commit introduced:"),Wt=c(),xe=i("p"),Ae=i("img"),this.h()},l(e){const s=Wa('[data-svelte="svelte-1phssyn"]',document.head);x=a(s,"META",{name:!0,content:!0}),s.forEach(t),mt=u(e),A=a(e,"H1",{class:!0});var Jt=r(A);M=a(Jt,"A",{id:!0,class:!0,href:!0});var Bi=r(M);Ne=a(Bi,"SPAN",{});var zi=r(Ne);v(J.$$.fragment,zi),zi.forEach(t),Bi.forEach(t),co=u(Jt),Ge=a(Jt,"SPAN",{});var ji=r(Ge);uo=n(ji,"Getting Started with Repositories"),ji.forEach(t),Jt.forEach(t),dt=u(e),ce=a(e,"P",{});var Ui=r(ce);po=n(Ui,"This beginner-friendly guide will help you get the basic skills you need to create and manage your repository on the Hub. Each section builds on the previous one, so feel free to choose where to start!"),Ui.forEach(t),gt=u(e),C=a(e,"H2",{class:!0});var Kt=r(C);I=a(Kt,"A",{id:!0,class:!0,href:!0});var Vi=r(I);Me=a(Vi,"SPAN",{});var Wi=r(Me);v(K.$$.fragment,Wi),Wi.forEach(t),Vi.forEach(t),mo=u(Kt),Ie=a(Kt,"SPAN",{});var Xi=r(Ie);go=n(Xi,"Requirements"),Xi.forEach(t),Kt.forEach(t),yt=u(e),d=a(e,"P",{});var W=r(d);yo=n(W,"If you do not have "),Fe=a(W,"CODE",{});var Ji=r(Fe);vo=n(Ji,"git"),Ji.forEach(t),wo=n(W," available as a CLI command yet, you will need to "),Q=a(W,"A",{href:!0,rel:!0});var Ki=r(Q);_o=n(Ki,"install Git"),Ki.forEach(t),bo=n(W," for your platform. You will also need to "),Z=a(W,"A",{href:!0,rel:!0});var Qi=r(Z);Eo=n(Qi,"install Git LFS"),Qi.forEach(t),$o=n(W,", which will be used to handle large files such as images and model weights."),W.forEach(t),vt=u(e),F=a(e,"P",{});var Qt=r(F);ko=n(Qt,"To be able to push your code to the Hub, you\u2019ll need to authenticate somehow. The easiest way to do this is by installing the "),L=a(Qt,"A",{href:!0,rel:!0});var Ii=r(L);Le=a(Ii,"CODE",{});var Zi=r(Le);Po=n(Zi,"huggingface_hub"),Zi.forEach(t),xo=n(Ii," CLI"),Ii.forEach(t),Ao=n(Qt," and running the login command:"),Qt.forEach(t),wt=u(e),v(ee.$$.fragment,e),_t=u(e),O=a(e,"P",{});var Zt=r(O);Co=n(Zt,"The content in the "),Oe=a(Zt,"STRONG",{});var ea=r(Oe);So=n(ea,"Getting Started"),ea.forEach(t),To=n(Zt," section of this document is also available as a video!"),Zt.forEach(t),bt=u(e),m=a(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),r(m).forEach(t),Et=u(e),S=a(e,"H2",{class:!0});var eo=r(S);Y=a(eo,"A",{id:!0,class:!0,href:!0});var ta=r(Y);Ye=a(ta,"SPAN",{});var oa=r(Ye);v(te.$$.fragment,oa),oa.forEach(t),ta.forEach(t),Ho=u(eo),De=a(eo,"SPAN",{});var ia=r(De);No=n(ia,"Creating a repository"),ia.forEach(t),eo.forEach(t),$t=u(e),D=a(e,"P",{});var to=r(D);Go=n(to,"Using the Hub\u2019s web interface you can easily create repositories, add files (even large ones!), explore models, visualize diffs, and much more. There are three kinds of repositories on the Hub, and in this guide we\u2019ll be creating a "),Re=a(to,"STRONG",{});var aa=r(Re);Mo=n(aa,"model repository"),aa.forEach(t),Io=n(to," for demonstration purposes. For information on creating and managing models, datasets, and Spaces, refer to their respective documentation."),to.forEach(t),kt=u(e),ue=a(e,"OL",{});var ra=r(ue);oe=a(ra,"LI",{});var oo=r(oe);Fo=n(oo,"To create a new repository, visit "),ie=a(oo,"A",{href:!0,rel:!0});var sa=r(ie);Lo=n(sa,"huggingface.co/new"),sa.forEach(t),Oo=n(oo,":"),oo.forEach(t),ra.forEach(t),Pt=u(e),pe=a(e,"P",{});var la=r(pe);me=a(la,"IMG",{src:!0,alt:!0}),la.forEach(t),xt=u(e),T=a(e,"OL",{start:!0});var io=r(T);qe=a(io,"LI",{});var na=r(qe);Be=a(na,"P",{});var ha=r(Be);Yo=n(ha,"First, specify the owner of the repository: this can be either you or any of the organizations you\u2019re affiliated with."),ha.forEach(t),na.forEach(t),Do=u(io),ze=a(io,"LI",{});var fa=r(ze);je=a(fa,"P",{});var ca=r(je);Ro=n(ca,"Next, enter your model\u2019s name. This will also be the name of the repository. Finally, you can specify whether you want your model to be public or private."),ca.forEach(t),fa.forEach(t),io.forEach(t),At=u(e),$=a(e,"P",{});var Ce=r($);qo=n(Ce,"You can leave the "),Ue=a(Ce,"EM",{});var ua=r(Ue);Bo=n(ua,"License"),ua.forEach(t),zo=n(Ce," field blank for now. To learn about licenses, visit the "),de=a(Ce,"A",{href:!0});var pa=r(de);Ve=a(pa,"STRONG",{});var ma=r(Ve);jo=n(ma,"Licenses"),ma.forEach(t),pa.forEach(t),Uo=n(Ce," section of this documentation."),Ce.forEach(t),Ct=u(e),ge=a(e,"P",{});var da=r(ge);Vo=n(da,"After creating your model repository, you should see a page like this:"),da.forEach(t),St=u(e),ye=a(e,"P",{});var ga=r(ye);ve=a(ga,"IMG",{src:!0,alt:!0}),ga.forEach(t),Tt=u(e),k=a(e,"P",{});var Se=r(k);Wo=n(Se,"Note that the Hub prompts you to create a "),We=a(Se,"EM",{});var ya=r(We);Xo=n(ya,"Model Card"),ya.forEach(t),Jo=n(Se,", which you can learn about in the "),we=a(Se,"A",{href:!0});var va=r(we);Xe=a(va,"STRONG",{});var wa=r(Xe);Ko=n(wa,"Model Cards documentation"),wa.forEach(t),va.forEach(t),Qo=n(Se,". Including a Model Card in your model repo is best practice, but since we\u2019re only making a test repo at the moment we can skip this."),Se.forEach(t),Ht=u(e),H=a(e,"H2",{class:!0});var ao=r(H);R=a(ao,"A",{id:!0,class:!0,href:!0});var _a=r(R);Je=a(_a,"SPAN",{});var ba=r(Je);v(ae.$$.fragment,ba),ba.forEach(t),_a.forEach(t),Zo=u(ao),Ke=a(ao,"SPAN",{});var Ea=r(Ke);ei=n(Ea,"Cloning repositories"),Ea.forEach(t),ao.forEach(t),Nt=u(e),q=a(e,"P",{});var ro=r(q);ti=n(ro,"Downloading repositories to your local machine is called "),Qe=a(ro,"EM",{});var $a=r(Qe);oi=n($a,"cloning"),$a.forEach(t),ii=n(ro,". You can use the following commands to load the repo that we made and navigate to it:"),ro.forEach(t),Gt=u(e),v(re.$$.fragment,e),Mt=u(e),N=a(e,"H2",{class:!0});var so=r(N);B=a(so,"A",{id:!0,class:!0,href:!0});var ka=r(B);Ze=a(ka,"SPAN",{});var Pa=r(Ze);v(se.$$.fragment,Pa),Pa.forEach(t),ka.forEach(t),ai=u(so),et=a(so,"SPAN",{});var xa=r(et);ri=n(xa,"Adding files to a repository"),xa.forEach(t),so.forEach(t),It=u(e),_e=a(e,"P",{});var Aa=r(_e);si=n(Aa,"Now\u2019s the time, you can add any files you want to the repository! \u{1F525}"),Aa.forEach(t),Ft=u(e),z=a(e,"P",{});var lo=r(z);li=n(lo,"Do you have files larger than 10MB? Those files should be tracked with "),tt=a(lo,"CODE",{});var Ca=r(tt);ni=n(Ca,"git-lfs"),Ca.forEach(t),hi=n(lo,", which you can initialize with:"),lo.forEach(t),Lt=u(e),v(le.$$.fragment,e),Ot=u(e),j=a(e,"P",{});var no=r(j);fi=n(no,"Note that if your files are larger than "),ot=a(no,"STRONG",{});var Sa=r(ot);ci=n(Sa,"5GB"),Sa.forEach(t),ui=n(no," you\u2019ll also need to run:"),no.forEach(t),Yt=u(e),v(ne.$$.fragment,e),Dt=u(e),g=a(e,"P",{});var X=r(g);pi=n(X,"When you use Hugging Face to create a repository, we automatically provide a list of common file extensions for these files in the "),it=a(X,"CODE",{});var Ta=r(it);mi=n(Ta,".gitattributes"),Ta.forEach(t),di=n(X," file, which "),at=a(X,"CODE",{});var Ha=r(at);gi=n(Ha,"git-lfs"),Ha.forEach(t),yi=n(X," uses to efficiently track changes to your large files. However, you might need to add new extensions if your file types are not already handled. You can do so with "),rt=a(X,"CODE",{});var Na=r(rt);vi=n(Na,'git lfs track "*.your_extension"'),Na.forEach(t),wi=n(X,"."),X.forEach(t),Rt=u(e),p=a(e,"P",{});var P=r(p);_i=n(P,"You can use Git to save new files and any changes to already existing files as a bundle of changes called a "),st=a(P,"EM",{});var Ga=r(st);bi=n(Ga,"commit"),Ga.forEach(t),Ei=n(P,", which can be thought of as a \u201Crevision\u201D to your project. To create a commit, we have to "),lt=a(P,"CODE",{});var Ma=r(lt);$i=n(Ma,"add"),Ma.forEach(t),ki=n(P," the files to let Git know that we\u2019re planning on saving the changes and then "),nt=a(P,"CODE",{});var Ia=r(nt);Pi=n(Ia,"commit"),Ia.forEach(t),xi=n(P," those changes. In order to sync the new commit with the Hugging Face Hub, we then "),ht=a(P,"CODE",{});var Fa=r(ht);Ai=n(Fa,"push"),Fa.forEach(t),Ci=n(P," the commit to the Hub."),P.forEach(t),qt=u(e),v(he.$$.fragment,e),Bt=u(e),U=a(e,"P",{});var ho=r(U);Si=n(ho,"And we\u2019re done! You can check your repository on Hugging Face with all the recently added files. For example, in the screenshot below the user added a number of files. Note that one of the files in this example has a size of "),ft=a(ho,"CODE",{});var La=r(ft);Ti=n(La,"413 MB"),La.forEach(t),Hi=n(ho,", so the repo uses Git LFS to track it."),ho.forEach(t),zt=u(e),be=a(e,"P",{});var Oa=r(be);Ee=a(Oa,"IMG",{src:!0,alt:!0}),Oa.forEach(t),jt=u(e),G=a(e,"H2",{class:!0});var fo=r(G);V=a(fo,"A",{id:!0,class:!0,href:!0});var Ya=r(V);ct=a(Ya,"SPAN",{});var Da=r(ct);v(fe.$$.fragment,Da),Da.forEach(t),Ya.forEach(t),Ni=u(fo),ut=a(fo,"SPAN",{});var Ra=r(ut);Gi=n(Ra,"Viewing a repo's history"),Ra.forEach(t),fo.forEach(t),Ut=n(e,"\n\nEvery time you go through the `add`-`commit`-`push` cycle, the repo will keep track of every change you've made to your files. The UI allows you to explore the model files and commits and to see the difference (also known as *diff*) introduced by each commit. To see the history, you can click on the **History: X commits** link.\n"),$e=a(e,"P",{});var qa=r($e);ke=a(qa,"IMG",{src:!0,alt:!0}),qa.forEach(t),Vt=u(e),Pe=a(e,"P",{});var Ba=r(Pe);Mi=n(Ba,"You can click on an individual commit to see what changes that commit introduced:"),Ba.forEach(t),Wt=u(e),xe=a(e,"P",{});var za=r(xe);Ae=a(za,"IMG",{src:!0,alt:!0}),za.forEach(t),this.h()},h(){f(x,"name","hf:doc:metadata"),f(x,"content",JSON.stringify(Qa)),f(M,"id","getting-started-with-repositories"),f(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(M,"href","#getting-started-with-repositories"),f(A,"class","relative group"),f(I,"id","requirements"),f(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(I,"href","#requirements"),f(C,"class","relative group"),f(Q,"href","https://git-scm.com/downloads"),f(Q,"rel","nofollow"),f(Z,"href","https://git-lfs.github.com/"),f(Z,"rel","nofollow"),f(L,"href","https://huggingface.co/docs/huggingface_hub/index"),f(L,"rel","nofollow"),f(m,"width","560"),f(m,"height","315"),Te(m.src,Li="https://www.youtube-nocookie.com/embed/rkCly_cbMBk")||f(m,"src",Li),f(m,"title","Managing a repo"),f(m,"frameborder","0"),f(m,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),m.allowFullscreen=!0,f(Y,"id","creating-a-repository"),f(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(Y,"href","#creating-a-repository"),f(S,"class","relative group"),f(ie,"href","http://huggingface.co/new"),f(ie,"rel","nofollow"),Te(me.src,Oi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/new_repo.png")||f(me,"src",Oi),f(me,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/new_repo.png"),f(T,"start","2"),f(de,"href","repositories-licenses"),Te(ve.src,Yi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/empty_repo.png")||f(ve,"src",Yi),f(ve,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/empty_repo.png"),f(we,"href","./models-cards"),f(R,"id","cloning-repositories"),f(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(R,"href","#cloning-repositories"),f(H,"class","relative group"),f(B,"id","adding-files-to-a-repository"),f(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(B,"href","#adding-files-to-a-repository"),f(N,"class","relative group"),Te(Ee.src,Di="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png")||f(Ee,"src",Di),f(Ee,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png"),f(V,"id","viewing-a-repos-history"),f(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(V,"href","#viewing-a-repos-history"),f(G,"class","relative group"),Te(ke.src,Ri="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_history.png")||f(ke,"src",Ri),f(ke,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_history.png"),Te(Ae.src,qi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif")||f(Ae,"src",qi),f(Ae,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif")},m(e,s){o(document.head,x),h(e,mt,s),h(e,A,s),o(A,M),o(M,Ne),w(J,Ne,null),o(A,co),o(A,Ge),o(Ge,uo),h(e,dt,s),h(e,ce,s),o(ce,po),h(e,gt,s),h(e,C,s),o(C,I),o(I,Me),w(K,Me,null),o(C,mo),o(C,Ie),o(Ie,go),h(e,yt,s),h(e,d,s),o(d,yo),o(d,Fe),o(Fe,vo),o(d,wo),o(d,Q),o(Q,_o),o(d,bo),o(d,Z),o(Z,Eo),o(d,$o),h(e,vt,s),h(e,F,s),o(F,ko),o(F,L),o(L,Le),o(Le,Po),o(L,xo),o(F,Ao),h(e,wt,s),w(ee,e,s),h(e,_t,s),h(e,O,s),o(O,Co),o(O,Oe),o(Oe,So),o(O,To),h(e,bt,s),h(e,m,s),h(e,Et,s),h(e,S,s),o(S,Y),o(Y,Ye),w(te,Ye,null),o(S,Ho),o(S,De),o(De,No),h(e,$t,s),h(e,D,s),o(D,Go),o(D,Re),o(Re,Mo),o(D,Io),h(e,kt,s),h(e,ue,s),o(ue,oe),o(oe,Fo),o(oe,ie),o(ie,Lo),o(oe,Oo),h(e,Pt,s),h(e,pe,s),o(pe,me),h(e,xt,s),h(e,T,s),o(T,qe),o(qe,Be),o(Be,Yo),o(T,Do),o(T,ze),o(ze,je),o(je,Ro),h(e,At,s),h(e,$,s),o($,qo),o($,Ue),o(Ue,Bo),o($,zo),o($,de),o(de,Ve),o(Ve,jo),o($,Uo),h(e,Ct,s),h(e,ge,s),o(ge,Vo),h(e,St,s),h(e,ye,s),o(ye,ve),h(e,Tt,s),h(e,k,s),o(k,Wo),o(k,We),o(We,Xo),o(k,Jo),o(k,we),o(we,Xe),o(Xe,Ko),o(k,Qo),h(e,Ht,s),h(e,H,s),o(H,R),o(R,Je),w(ae,Je,null),o(H,Zo),o(H,Ke),o(Ke,ei),h(e,Nt,s),h(e,q,s),o(q,ti),o(q,Qe),o(Qe,oi),o(q,ii),h(e,Gt,s),w(re,e,s),h(e,Mt,s),h(e,N,s),o(N,B),o(B,Ze),w(se,Ze,null),o(N,ai),o(N,et),o(et,ri),h(e,It,s),h(e,_e,s),o(_e,si),h(e,Ft,s),h(e,z,s),o(z,li),o(z,tt),o(tt,ni),o(z,hi),h(e,Lt,s),w(le,e,s),h(e,Ot,s),h(e,j,s),o(j,fi),o(j,ot),o(ot,ci),o(j,ui),h(e,Yt,s),w(ne,e,s),h(e,Dt,s),h(e,g,s),o(g,pi),o(g,it),o(it,mi),o(g,di),o(g,at),o(at,gi),o(g,yi),o(g,rt),o(rt,vi),o(g,wi),h(e,Rt,s),h(e,p,s),o(p,_i),o(p,st),o(st,bi),o(p,Ei),o(p,lt),o(lt,$i),o(p,ki),o(p,nt),o(nt,Pi),o(p,xi),o(p,ht),o(ht,Ai),o(p,Ci),h(e,qt,s),w(he,e,s),h(e,Bt,s),h(e,U,s),o(U,Si),o(U,ft),o(ft,Ti),o(U,Hi),h(e,zt,s),h(e,be,s),o(be,Ee),h(e,jt,s),h(e,G,s),o(G,V),o(V,ct),w(fe,ct,null),o(G,Ni),o(G,ut),o(ut,Gi),h(e,Ut,s),h(e,$e,s),o($e,ke),h(e,Vt,s),h(e,Pe,s),o(Pe,Mi),h(e,Wt,s),h(e,xe,s),o(xe,Ae),Xt=!0},p:Xa,i(e){Xt||(_(J.$$.fragment,e),_(K.$$.fragment,e),_(ee.$$.fragment,e),_(te.$$.fragment,e),_(ae.$$.fragment,e),_(re.$$.fragment,e),_(se.$$.fragment,e),_(le.$$.fragment,e),_(ne.$$.fragment,e),_(he.$$.fragment,e),_(fe.$$.fragment,e),Xt=!0)},o(e){b(J.$$.fragment,e),b(K.$$.fragment,e),b(ee.$$.fragment,e),b(te.$$.fragment,e),b(ae.$$.fragment,e),b(re.$$.fragment,e),b(se.$$.fragment,e),b(le.$$.fragment,e),b(ne.$$.fragment,e),b(he.$$.fragment,e),b(fe.$$.fragment,e),Xt=!1},d(e){t(x),e&&t(mt),e&&t(A),E(J),e&&t(dt),e&&t(ce),e&&t(gt),e&&t(C),E(K),e&&t(yt),e&&t(d),e&&t(vt),e&&t(F),e&&t(wt),E(ee,e),e&&t(_t),e&&t(O),e&&t(bt),e&&t(m),e&&t(Et),e&&t(S),E(te),e&&t($t),e&&t(D),e&&t(kt),e&&t(ue),e&&t(Pt),e&&t(pe),e&&t(xt),e&&t(T),e&&t(At),e&&t($),e&&t(Ct),e&&t(ge),e&&t(St),e&&t(ye),e&&t(Tt),e&&t(k),e&&t(Ht),e&&t(H),E(ae),e&&t(Nt),e&&t(q),e&&t(Gt),E(re,e),e&&t(Mt),e&&t(N),E(se),e&&t(It),e&&t(_e),e&&t(Ft),e&&t(z),e&&t(Lt),E(le,e),e&&t(Ot),e&&t(j),e&&t(Yt),E(ne,e),e&&t(Dt),e&&t(g),e&&t(Rt),e&&t(p),e&&t(qt),E(he,e),e&&t(Bt),e&&t(U),e&&t(zt),e&&t(be),e&&t(jt),e&&t(G),E(fe),e&&t(Ut),e&&t($e),e&&t(Vt),e&&t(Pe),e&&t(Wt),e&&t(xe)}}}const Qa={local:"getting-started-with-repositories",sections:[{local:"requirements",title:"Requirements"},{local:"creating-a-repository",title:"Creating a repository"},{local:"cloning-repositories",title:"Cloning repositories"},{local:"adding-files-to-a-repository",title:"Adding files to a repository"},{local:"viewing-a-repos-history",title:"Viewing a repo's history"}],title:"Getting Started with Repositories"};function Za(Fi){return Ja(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ir extends ja{constructor(x){super();Ua(this,x,Za,Ka,Va,{})}}export{ir as default,Qa as metadata};
