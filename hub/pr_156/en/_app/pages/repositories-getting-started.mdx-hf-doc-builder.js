import{S as Fr,i as Yr,s as Rr,e as i,k as f,w as _,t as s,N as qr,c as a,d as o,m as u,a as r,x as b,h as l,b as c,P as T,G as t,g as h,y as E,L as jr,q as k,o as $,B as S,v as Br}from"../chunks/vendor-hf-doc-builder.js";import{I as Oe}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Ct}from"../chunks/CodeBlock-hf-doc-builder.js";function zr(ba){let C,xt,x,R,Fe,ae,Ao,Ye,Ho,Gt,_e,Mo,At,G,q,Re,re,No,qe,Lo,Ht,be,Do,Mt,v,Oo,je,Fo,Yo,se,Ro,qo,le,jo,Bo,Nt,j,zo,B,Be,Vo,Uo,Wo,Lt,ne,Dt,z,Xo,ze,Jo,Ko,Ot,m,Ea,Ft,A,V,Ve,he,Qo,Ue,Zo,Yt,U,ei,We,ti,oi,Rt,Ee,ce,ii,fe,ai,ri,qt,H,ke,ka,si,$e,$a,jt,g,Xe,Je,li,ni,Ke,Qe,hi,ci,Ze,et,fi,ui,tt,M,di,ot,pi,mi,Se,it,gi,vi,Bt,Ie,yi,zt,N,Pe,Sa,wi,Te,Ia,Vt,I,_i,at,bi,Ei,Ce,rt,ki,$i,Ut,L,W,st,ue,Si,lt,Ii,Wt,X,Pi,nt,Ti,Ci,Xt,de,Jt,D,J,ht,pe,xi,ct,Gi,Kt,xe,Ai,Qt,K,Hi,ft,Mi,Ni,Zt,me,eo,Q,Li,ut,Di,Oi,to,ge,oo,y,Fi,dt,Yi,Ri,pt,qi,ji,mt,Bi,zi,io,p,Vi,gt,Ui,Wi,vt,Xi,Ji,yt,Ki,Qi,wt,Zi,ea,ao,ve,ro,Z,ta,_t,oa,ia,so,O,Ge,Pa,aa,Ae,Ta,lo,F,ee,bt,ye,ra,Et,sa,no,d,la,kt,na,ha,$t,ca,fa,St,ua,da,It,pa,ma,Pt,ga,va,ho,Y,He,Ca,ya,Me,xa,co,Ne,wa,fo,we,Tt,Ga,uo;return ae=new Oe({}),re=new Oe({}),ne=new Ct({props:{code:`python -m pip install huggingface_hub
huggingface-cli login`,highlighted:`python -m pip install huggingface_hub
huggingface-cli login`}}),he=new Oe({}),ue=new Oe({}),de=new Ct({props:{code:`git clone https://huggingface.co/<your-username>/<your-model-id>
cd <your-model-id>`,highlighted:`git <span class="hljs-built_in">clone</span> https://huggingface.co/&lt;your-username&gt;/&lt;your-model-id&gt;
<span class="hljs-built_in">cd</span> &lt;your-model-id&gt;`}}),pe=new Oe({}),me=new Ct({props:{code:"git lfs install",highlighted:"git lfs install"}}),ge=new Ct({props:{code:"huggingface-cli lfs-enable-largefiles",highlighted:"huggingface-cli lfs-enable-largefiles"}}),ve=new Ct({props:{code:`# Create any files you like! Then...
git add .
git commit -m "First model version"  # You can choose any descriptive message
git push`,highlighted:`<span class="hljs-comment"># Create any files you like! Then...</span>
git add .
git commit -m <span class="hljs-string">&quot;First model version&quot;</span>  <span class="hljs-comment"># You can choose any descriptive message</span>
git push`}}),ye=new Oe({}),{c(){C=i("meta"),xt=f(),x=i("h1"),R=i("a"),Fe=i("span"),_(ae.$$.fragment),Ao=f(),Ye=i("span"),Ho=s("Getting Started with Repositories"),Gt=f(),_e=i("p"),Mo=s("This beginner-friendly guide will help you get the basic skills you need to create and manage your repository on the Hub. Each section builds on the previous one, so feel free to choose where to start!"),At=f(),G=i("h2"),q=i("a"),Re=i("span"),_(re.$$.fragment),No=f(),qe=i("span"),Lo=s("Requirements"),Ht=f(),be=i("p"),Do=s("This document shows how to handle repositories through the web interface as well as through the terminal. There are no requirements if working with the UI. If you want to work with the terminal, please follow these instructions."),Mt=f(),v=i("p"),Oo=s("If you do not have "),je=i("code"),Fo=s("git"),Yo=s(" available as a CLI command yet, you will need to "),se=i("a"),Ro=s("install Git"),qo=s(" for your platform. You will also need to "),le=i("a"),jo=s("install Git LFS"),Bo=s(", which will be used to handle large files such as images and model weights."),Nt=f(),j=i("p"),zo=s("To be able to push your code to the Hub, you\u2019ll need to authenticate somehow. The easiest way to do this is by installing the "),B=i("a"),Be=i("code"),Vo=s("huggingface_hub"),Uo=s(" CLI"),Wo=s(" and running the login command:"),Lt=f(),_(ne.$$.fragment),Dt=f(),z=i("p"),Xo=s("The content in the "),ze=i("strong"),Jo=s("Getting Started"),Ko=s(" section of this document is also available as a video!"),Ot=f(),m=i("iframe"),Ft=f(),A=i("h2"),V=i("a"),Ve=i("span"),_(he.$$.fragment),Qo=f(),Ue=i("span"),Zo=s("Creating a repository"),Yt=f(),U=i("p"),ei=s("Using the Hub\u2019s web interface you can easily create repositories, add files (even large ones!), explore models, visualize diffs, and much more. There are three kinds of repositories on the Hub, and in this guide you\u2019ll be creating a "),We=i("strong"),ti=s("model repository"),oi=s(" for demonstration purposes. For information on creating and managing models, datasets, and Spaces, refer to their respective documentation."),Rt=f(),Ee=i("ol"),ce=i("li"),ii=s("To create a new repository, visit "),fe=i("a"),ai=s("huggingface.co/new"),ri=s(":"),qt=f(),H=i("div"),ke=i("img"),si=f(),$e=i("img"),jt=f(),g=i("ol"),Xe=i("li"),Je=i("p"),li=s("Specify the owner of the repository: this can be either you or any of the organizations you\u2019re affiliated with."),ni=f(),Ke=i("li"),Qe=i("p"),hi=s("Enter your model\u2019s name. This will also be the name of the repository."),ci=f(),Ze=i("li"),et=i("p"),fi=s("Specify whether you want your model to be public or private."),ui=f(),tt=i("li"),M=i("p"),di=s("Specify the license. You can leave the "),ot=i("em"),pi=s("License"),mi=s(" field blank for now. To learn about licenses, visit the "),Se=i("a"),it=i("strong"),gi=s("Licenses"),vi=s(" documentation."),Bt=f(),Ie=i("p"),yi=s("After creating your model repository, you should see a page like this:"),zt=f(),N=i("div"),Pe=i("img"),wi=f(),Te=i("img"),Vt=f(),I=i("p"),_i=s("Note that the Hub prompts you to create a "),at=i("em"),bi=s("Model Card"),Ei=s(", which you can learn about in the "),Ce=i("a"),rt=i("strong"),ki=s("Model Cards documentation"),$i=s(". Including a Model Card in your model repo is best practice, but since we\u2019re only making a test repo at the moment we can skip this."),Ut=f(),L=i("h2"),W=i("a"),st=i("span"),_(ue.$$.fragment),Si=f(),lt=i("span"),Ii=s("Cloning repositories"),Wt=f(),X=i("p"),Pi=s("Downloading repositories to your local machine is called "),nt=i("em"),Ti=s("cloning"),Ci=s(". You can use the following commands to load the repo that we made and navigate to it:"),Xt=f(),_(de.$$.fragment),Jt=f(),D=i("h2"),J=i("a"),ht=i("span"),_(pe.$$.fragment),xi=f(),ct=i("span"),Gi=s("Adding files to a repository (terminal)"),Kt=f(),xe=i("p"),Ai=s("Now\u2019s the time, you can add any files you want to the repository! \u{1F525}"),Qt=f(),K=i("p"),Hi=s("Do you have files larger than 10MB? Those files should be tracked with "),ft=i("code"),Mi=s("git-lfs"),Ni=s(", which you can initialize with:"),Zt=f(),_(me.$$.fragment),eo=f(),Q=i("p"),Li=s("Note that if your files are larger than "),ut=i("strong"),Di=s("5GB"),Oi=s(" you\u2019ll also need to run:"),to=f(),_(ge.$$.fragment),oo=f(),y=i("p"),Fi=s("When you use Hugging Face to create a repository, Hugging Face automatically provides a list of common file extensions for common Machine Learning large files in the "),dt=i("code"),Yi=s(".gitattributes"),Ri=s(" file, which "),pt=i("code"),qi=s("git-lfs"),ji=s(" uses to efficiently track changes to your large files. However, you might need to add new extensions if your file types are not already handled. You can do so with "),mt=i("code"),Bi=s('git lfs track "*.your_extension"'),zi=s("."),io=f(),p=i("p"),Vi=s("You can use Git to save new files and any changes to already existing files as a bundle of changes called a "),gt=i("em"),Ui=s("commit"),Wi=s(", which can be thought of as a \u201Crevision\u201D to your project. To create a commit, you have to "),vt=i("code"),Xi=s("add"),Ji=s(" the files to let Git know that we\u2019re planning on saving the changes and then "),yt=i("code"),Ki=s("commit"),Qi=s(" those changes. In order to sync the new commit with the Hugging Face Hub, you then "),wt=i("code"),Zi=s("push"),ea=s(" the commit to the Hub."),ao=f(),_(ve.$$.fragment),ro=f(),Z=i("p"),ta=s("And you\u2019re done! You can check your repository on Hugging Face with all the recently added files. For example, in the screenshot below the user added a number of files. Note that some files in this example have a size of "),_t=i("code"),oa=s("1.04 GB"),ia=s(", so the repo uses Git LFS to track it."),so=f(),O=i("div"),Ge=i("img"),aa=f(),Ae=i("img"),lo=f(),F=i("h2"),ee=i("a"),bt=i("span"),_(ye.$$.fragment),ra=f(),Et=i("span"),sa=s("Viewing a repo's history"),no=f(),d=i("p"),la=s("Every time you go through the "),kt=i("code"),na=s("add"),ha=s("-"),$t=i("code"),ca=s("commit"),fa=s("-"),St=i("code"),ua=s("push"),da=s(" cycle, the repo will keep track of every change you\u2019ve made to your files. The UI allows you to explore the model files and commits and to see the difference (also known as "),It=i("em"),pa=s("diff"),ma=s(") introduced by each commit. To see the history, you can click on the "),Pt=i("strong"),ga=s("History: X commits"),va=s(" link."),ho=f(),Y=i("div"),He=i("img"),ya=f(),Me=i("img"),co=f(),Ne=i("p"),wa=s("You can click on an individual commit to see what changes that commit introduced:"),fo=f(),we=i("div"),Tt=i("img"),this.h()},l(e){const n=qr('[data-svelte="svelte-1phssyn"]',document.head);C=a(n,"META",{name:!0,content:!0}),n.forEach(o),xt=u(e),x=a(e,"H1",{class:!0});var po=r(x);R=a(po,"A",{id:!0,class:!0,href:!0});var Aa=r(R);Fe=a(Aa,"SPAN",{});var Ha=r(Fe);b(ae.$$.fragment,Ha),Ha.forEach(o),Aa.forEach(o),Ao=u(po),Ye=a(po,"SPAN",{});var Ma=r(Ye);Ho=l(Ma,"Getting Started with Repositories"),Ma.forEach(o),po.forEach(o),Gt=u(e),_e=a(e,"P",{});var Na=r(_e);Mo=l(Na,"This beginner-friendly guide will help you get the basic skills you need to create and manage your repository on the Hub. Each section builds on the previous one, so feel free to choose where to start!"),Na.forEach(o),At=u(e),G=a(e,"H2",{class:!0});var mo=r(G);q=a(mo,"A",{id:!0,class:!0,href:!0});var La=r(q);Re=a(La,"SPAN",{});var Da=r(Re);b(re.$$.fragment,Da),Da.forEach(o),La.forEach(o),No=u(mo),qe=a(mo,"SPAN",{});var Oa=r(qe);Lo=l(Oa,"Requirements"),Oa.forEach(o),mo.forEach(o),Ht=u(e),be=a(e,"P",{});var Fa=r(be);Do=l(Fa,"This document shows how to handle repositories through the web interface as well as through the terminal. There are no requirements if working with the UI. If you want to work with the terminal, please follow these instructions."),Fa.forEach(o),Mt=u(e),v=a(e,"P",{});var te=r(v);Oo=l(te,"If you do not have "),je=a(te,"CODE",{});var Ya=r(je);Fo=l(Ya,"git"),Ya.forEach(o),Yo=l(te," available as a CLI command yet, you will need to "),se=a(te,"A",{href:!0,rel:!0});var Ra=r(se);Ro=l(Ra,"install Git"),Ra.forEach(o),qo=l(te," for your platform. You will also need to "),le=a(te,"A",{href:!0,rel:!0});var qa=r(le);jo=l(qa,"install Git LFS"),qa.forEach(o),Bo=l(te,", which will be used to handle large files such as images and model weights."),te.forEach(o),Nt=u(e),j=a(e,"P",{});var go=r(j);zo=l(go,"To be able to push your code to the Hub, you\u2019ll need to authenticate somehow. The easiest way to do this is by installing the "),B=a(go,"A",{href:!0,rel:!0});var _a=r(B);Be=a(_a,"CODE",{});var ja=r(Be);Vo=l(ja,"huggingface_hub"),ja.forEach(o),Uo=l(_a," CLI"),_a.forEach(o),Wo=l(go," and running the login command:"),go.forEach(o),Lt=u(e),b(ne.$$.fragment,e),Dt=u(e),z=a(e,"P",{});var vo=r(z);Xo=l(vo,"The content in the "),ze=a(vo,"STRONG",{});var Ba=r(ze);Jo=l(Ba,"Getting Started"),Ba.forEach(o),Ko=l(vo," section of this document is also available as a video!"),vo.forEach(o),Ot=u(e),m=a(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),r(m).forEach(o),Ft=u(e),A=a(e,"H2",{class:!0});var yo=r(A);V=a(yo,"A",{id:!0,class:!0,href:!0});var za=r(V);Ve=a(za,"SPAN",{});var Va=r(Ve);b(he.$$.fragment,Va),Va.forEach(o),za.forEach(o),Qo=u(yo),Ue=a(yo,"SPAN",{});var Ua=r(Ue);Zo=l(Ua,"Creating a repository"),Ua.forEach(o),yo.forEach(o),Yt=u(e),U=a(e,"P",{});var wo=r(U);ei=l(wo,"Using the Hub\u2019s web interface you can easily create repositories, add files (even large ones!), explore models, visualize diffs, and much more. There are three kinds of repositories on the Hub, and in this guide you\u2019ll be creating a "),We=a(wo,"STRONG",{});var Wa=r(We);ti=l(Wa,"model repository"),Wa.forEach(o),oi=l(wo," for demonstration purposes. For information on creating and managing models, datasets, and Spaces, refer to their respective documentation."),wo.forEach(o),Rt=u(e),Ee=a(e,"OL",{});var Xa=r(Ee);ce=a(Xa,"LI",{});var _o=r(ce);ii=l(_o,"To create a new repository, visit "),fe=a(_o,"A",{href:!0,rel:!0});var Ja=r(fe);ai=l(Ja,"huggingface.co/new"),Ja.forEach(o),ri=l(_o,":"),_o.forEach(o),Xa.forEach(o),qt=u(e),H=a(e,"DIV",{class:!0});var bo=r(H);ke=a(bo,"IMG",{class:!0,src:!0}),si=u(bo),$e=a(bo,"IMG",{class:!0,src:!0}),bo.forEach(o),jt=u(e),g=a(e,"OL",{start:!0});var oe=r(g);Xe=a(oe,"LI",{});var Ka=r(Xe);Je=a(Ka,"P",{});var Qa=r(Je);li=l(Qa,"Specify the owner of the repository: this can be either you or any of the organizations you\u2019re affiliated with."),Qa.forEach(o),Ka.forEach(o),ni=u(oe),Ke=a(oe,"LI",{});var Za=r(Ke);Qe=a(Za,"P",{});var er=r(Qe);hi=l(er,"Enter your model\u2019s name. This will also be the name of the repository."),er.forEach(o),Za.forEach(o),ci=u(oe),Ze=a(oe,"LI",{});var tr=r(Ze);et=a(tr,"P",{});var or=r(et);fi=l(or,"Specify whether you want your model to be public or private."),or.forEach(o),tr.forEach(o),ui=u(oe),tt=a(oe,"LI",{});var ir=r(tt);M=a(ir,"P",{});var Le=r(M);di=l(Le,"Specify the license. You can leave the "),ot=a(Le,"EM",{});var ar=r(ot);pi=l(ar,"License"),ar.forEach(o),mi=l(Le," field blank for now. To learn about licenses, visit the "),Se=a(Le,"A",{href:!0});var rr=r(Se);it=a(rr,"STRONG",{});var sr=r(it);gi=l(sr,"Licenses"),sr.forEach(o),rr.forEach(o),vi=l(Le," documentation."),Le.forEach(o),ir.forEach(o),oe.forEach(o),Bt=u(e),Ie=a(e,"P",{});var lr=r(Ie);yi=l(lr,"After creating your model repository, you should see a page like this:"),lr.forEach(o),zt=u(e),N=a(e,"DIV",{class:!0});var Eo=r(N);Pe=a(Eo,"IMG",{class:!0,src:!0}),wi=u(Eo),Te=a(Eo,"IMG",{class:!0,src:!0}),Eo.forEach(o),Vt=u(e),I=a(e,"P",{});var De=r(I);_i=l(De,"Note that the Hub prompts you to create a "),at=a(De,"EM",{});var nr=r(at);bi=l(nr,"Model Card"),nr.forEach(o),Ei=l(De,", which you can learn about in the "),Ce=a(De,"A",{href:!0});var hr=r(Ce);rt=a(hr,"STRONG",{});var cr=r(rt);ki=l(cr,"Model Cards documentation"),cr.forEach(o),hr.forEach(o),$i=l(De,". Including a Model Card in your model repo is best practice, but since we\u2019re only making a test repo at the moment we can skip this."),De.forEach(o),Ut=u(e),L=a(e,"H2",{class:!0});var ko=r(L);W=a(ko,"A",{id:!0,class:!0,href:!0});var fr=r(W);st=a(fr,"SPAN",{});var ur=r(st);b(ue.$$.fragment,ur),ur.forEach(o),fr.forEach(o),Si=u(ko),lt=a(ko,"SPAN",{});var dr=r(lt);Ii=l(dr,"Cloning repositories"),dr.forEach(o),ko.forEach(o),Wt=u(e),X=a(e,"P",{});var $o=r(X);Pi=l($o,"Downloading repositories to your local machine is called "),nt=a($o,"EM",{});var pr=r(nt);Ti=l(pr,"cloning"),pr.forEach(o),Ci=l($o,". You can use the following commands to load the repo that we made and navigate to it:"),$o.forEach(o),Xt=u(e),b(de.$$.fragment,e),Jt=u(e),D=a(e,"H2",{class:!0});var So=r(D);J=a(So,"A",{id:!0,class:!0,href:!0});var mr=r(J);ht=a(mr,"SPAN",{});var gr=r(ht);b(pe.$$.fragment,gr),gr.forEach(o),mr.forEach(o),xi=u(So),ct=a(So,"SPAN",{});var vr=r(ct);Gi=l(vr,"Adding files to a repository (terminal)"),vr.forEach(o),So.forEach(o),Kt=u(e),xe=a(e,"P",{});var yr=r(xe);Ai=l(yr,"Now\u2019s the time, you can add any files you want to the repository! \u{1F525}"),yr.forEach(o),Qt=u(e),K=a(e,"P",{});var Io=r(K);Hi=l(Io,"Do you have files larger than 10MB? Those files should be tracked with "),ft=a(Io,"CODE",{});var wr=r(ft);Mi=l(wr,"git-lfs"),wr.forEach(o),Ni=l(Io,", which you can initialize with:"),Io.forEach(o),Zt=u(e),b(me.$$.fragment,e),eo=u(e),Q=a(e,"P",{});var Po=r(Q);Li=l(Po,"Note that if your files are larger than "),ut=a(Po,"STRONG",{});var _r=r(ut);Di=l(_r,"5GB"),_r.forEach(o),Oi=l(Po," you\u2019ll also need to run:"),Po.forEach(o),to=u(e),b(ge.$$.fragment,e),oo=u(e),y=a(e,"P",{});var ie=r(y);Fi=l(ie,"When you use Hugging Face to create a repository, Hugging Face automatically provides a list of common file extensions for common Machine Learning large files in the "),dt=a(ie,"CODE",{});var br=r(dt);Yi=l(br,".gitattributes"),br.forEach(o),Ri=l(ie," file, which "),pt=a(ie,"CODE",{});var Er=r(pt);qi=l(Er,"git-lfs"),Er.forEach(o),ji=l(ie," uses to efficiently track changes to your large files. However, you might need to add new extensions if your file types are not already handled. You can do so with "),mt=a(ie,"CODE",{});var kr=r(mt);Bi=l(kr,'git lfs track "*.your_extension"'),kr.forEach(o),zi=l(ie,"."),ie.forEach(o),io=u(e),p=a(e,"P",{});var P=r(p);Vi=l(P,"You can use Git to save new files and any changes to already existing files as a bundle of changes called a "),gt=a(P,"EM",{});var $r=r(gt);Ui=l($r,"commit"),$r.forEach(o),Wi=l(P,", which can be thought of as a \u201Crevision\u201D to your project. To create a commit, you have to "),vt=a(P,"CODE",{});var Sr=r(vt);Xi=l(Sr,"add"),Sr.forEach(o),Ji=l(P," the files to let Git know that we\u2019re planning on saving the changes and then "),yt=a(P,"CODE",{});var Ir=r(yt);Ki=l(Ir,"commit"),Ir.forEach(o),Qi=l(P," those changes. In order to sync the new commit with the Hugging Face Hub, you then "),wt=a(P,"CODE",{});var Pr=r(wt);Zi=l(Pr,"push"),Pr.forEach(o),ea=l(P," the commit to the Hub."),P.forEach(o),ao=u(e),b(ve.$$.fragment,e),ro=u(e),Z=a(e,"P",{});var To=r(Z);ta=l(To,"And you\u2019re done! You can check your repository on Hugging Face with all the recently added files. For example, in the screenshot below the user added a number of files. Note that some files in this example have a size of "),_t=a(To,"CODE",{});var Tr=r(_t);oa=l(Tr,"1.04 GB"),Tr.forEach(o),ia=l(To,", so the repo uses Git LFS to track it."),To.forEach(o),so=u(e),O=a(e,"DIV",{class:!0});var Co=r(O);Ge=a(Co,"IMG",{class:!0,src:!0}),aa=u(Co),Ae=a(Co,"IMG",{class:!0,src:!0}),Co.forEach(o),lo=u(e),F=a(e,"H2",{class:!0});var xo=r(F);ee=a(xo,"A",{id:!0,class:!0,href:!0});var Cr=r(ee);bt=a(Cr,"SPAN",{});var xr=r(bt);b(ye.$$.fragment,xr),xr.forEach(o),Cr.forEach(o),ra=u(xo),Et=a(xo,"SPAN",{});var Gr=r(Et);sa=l(Gr,"Viewing a repo's history"),Gr.forEach(o),xo.forEach(o),no=u(e),d=a(e,"P",{});var w=r(d);la=l(w,"Every time you go through the "),kt=a(w,"CODE",{});var Ar=r(kt);na=l(Ar,"add"),Ar.forEach(o),ha=l(w,"-"),$t=a(w,"CODE",{});var Hr=r($t);ca=l(Hr,"commit"),Hr.forEach(o),fa=l(w,"-"),St=a(w,"CODE",{});var Mr=r(St);ua=l(Mr,"push"),Mr.forEach(o),da=l(w," cycle, the repo will keep track of every change you\u2019ve made to your files. The UI allows you to explore the model files and commits and to see the difference (also known as "),It=a(w,"EM",{});var Nr=r(It);pa=l(Nr,"diff"),Nr.forEach(o),ma=l(w,") introduced by each commit. To see the history, you can click on the "),Pt=a(w,"STRONG",{});var Lr=r(Pt);ga=l(Lr,"History: X commits"),Lr.forEach(o),va=l(w," link."),w.forEach(o),ho=u(e),Y=a(e,"DIV",{class:!0});var Go=r(Y);He=a(Go,"IMG",{class:!0,src:!0}),ya=u(Go),Me=a(Go,"IMG",{class:!0,src:!0}),Go.forEach(o),co=u(e),Ne=a(e,"P",{});var Dr=r(Ne);wa=l(Dr,"You can click on an individual commit to see what changes that commit introduced:"),Dr.forEach(o),fo=u(e),we=a(e,"DIV",{class:!0});var Or=r(we);Tt=a(Or,"IMG",{src:!0}),Or.forEach(o),this.h()},h(){c(C,"name","hf:doc:metadata"),c(C,"content",JSON.stringify(Vr)),c(R,"id","getting-started-with-repositories"),c(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(R,"href","#getting-started-with-repositories"),c(x,"class","relative group"),c(q,"id","requirements"),c(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(q,"href","#requirements"),c(G,"class","relative group"),c(se,"href","https://git-scm.com/downloads"),c(se,"rel","nofollow"),c(le,"href","https://git-lfs.github.com/"),c(le,"rel","nofollow"),c(B,"href","https://huggingface.co/docs/huggingface_hub/index"),c(B,"rel","nofollow"),c(m,"width","560"),c(m,"height","315"),T(m.src,Ea="https://www.youtube-nocookie.com/embed/rkCly_cbMBk")||c(m,"src",Ea),c(m,"title","Managing a repo"),c(m,"frameborder","0"),c(m,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),m.allowFullscreen=!0,c(V,"id","creating-a-repository"),c(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(V,"href","#creating-a-repository"),c(A,"class","relative group"),c(fe,"href","http://huggingface.co/new"),c(fe,"rel","nofollow"),c(ke,"class","block dark:hidden"),T(ke.src,ka="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/new_repo.png")||c(ke,"src",ka),c($e,"class","hidden dark:block"),T($e.src,$a="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/new_repo-dark.png")||c($e,"src",$a),c(H,"class","flex justify-center"),c(Se,"href","repositories-licenses"),c(g,"start","2"),c(Pe,"class","block dark:hidden"),T(Pe.src,Sa="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/empty_repo.png")||c(Pe,"src",Sa),c(Te,"class","hidden dark:block"),T(Te.src,Ia="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/empty_repo-dark.png")||c(Te,"src",Ia),c(N,"class","flex justify-center"),c(Ce,"href","./models-cards"),c(W,"id","cloning-repositories"),c(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(W,"href","#cloning-repositories"),c(L,"class","relative group"),c(J,"id","adding-files-to-a-repository-terminal"),c(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(J,"href","#adding-files-to-a-repository-terminal"),c(D,"class","relative group"),c(Ge,"class","block dark:hidden"),T(Ge.src,Pa="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png")||c(Ge,"src",Pa),c(Ae,"class","hidden dark:block"),T(Ae.src,Ta="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files-dark.png")||c(Ae,"src",Ta),c(O,"class","flex justify-center"),c(ee,"id","viewing-a-repos-history"),c(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(ee,"href","#viewing-a-repos-history"),c(F,"class","relative group"),c(He,"class","block dark:hidden"),T(He.src,Ca="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_history.png")||c(He,"src",Ca),c(Me,"class","hidden dark:block"),T(Me.src,xa="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_history-dark.png")||c(Me,"src",xa),c(Y,"class","flex justify-center"),T(Tt.src,Ga="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif")||c(Tt,"src",Ga),c(we,"class","flex justify-center")},m(e,n){t(document.head,C),h(e,xt,n),h(e,x,n),t(x,R),t(R,Fe),E(ae,Fe,null),t(x,Ao),t(x,Ye),t(Ye,Ho),h(e,Gt,n),h(e,_e,n),t(_e,Mo),h(e,At,n),h(e,G,n),t(G,q),t(q,Re),E(re,Re,null),t(G,No),t(G,qe),t(qe,Lo),h(e,Ht,n),h(e,be,n),t(be,Do),h(e,Mt,n),h(e,v,n),t(v,Oo),t(v,je),t(je,Fo),t(v,Yo),t(v,se),t(se,Ro),t(v,qo),t(v,le),t(le,jo),t(v,Bo),h(e,Nt,n),h(e,j,n),t(j,zo),t(j,B),t(B,Be),t(Be,Vo),t(B,Uo),t(j,Wo),h(e,Lt,n),E(ne,e,n),h(e,Dt,n),h(e,z,n),t(z,Xo),t(z,ze),t(ze,Jo),t(z,Ko),h(e,Ot,n),h(e,m,n),h(e,Ft,n),h(e,A,n),t(A,V),t(V,Ve),E(he,Ve,null),t(A,Qo),t(A,Ue),t(Ue,Zo),h(e,Yt,n),h(e,U,n),t(U,ei),t(U,We),t(We,ti),t(U,oi),h(e,Rt,n),h(e,Ee,n),t(Ee,ce),t(ce,ii),t(ce,fe),t(fe,ai),t(ce,ri),h(e,qt,n),h(e,H,n),t(H,ke),t(H,si),t(H,$e),h(e,jt,n),h(e,g,n),t(g,Xe),t(Xe,Je),t(Je,li),t(g,ni),t(g,Ke),t(Ke,Qe),t(Qe,hi),t(g,ci),t(g,Ze),t(Ze,et),t(et,fi),t(g,ui),t(g,tt),t(tt,M),t(M,di),t(M,ot),t(ot,pi),t(M,mi),t(M,Se),t(Se,it),t(it,gi),t(M,vi),h(e,Bt,n),h(e,Ie,n),t(Ie,yi),h(e,zt,n),h(e,N,n),t(N,Pe),t(N,wi),t(N,Te),h(e,Vt,n),h(e,I,n),t(I,_i),t(I,at),t(at,bi),t(I,Ei),t(I,Ce),t(Ce,rt),t(rt,ki),t(I,$i),h(e,Ut,n),h(e,L,n),t(L,W),t(W,st),E(ue,st,null),t(L,Si),t(L,lt),t(lt,Ii),h(e,Wt,n),h(e,X,n),t(X,Pi),t(X,nt),t(nt,Ti),t(X,Ci),h(e,Xt,n),E(de,e,n),h(e,Jt,n),h(e,D,n),t(D,J),t(J,ht),E(pe,ht,null),t(D,xi),t(D,ct),t(ct,Gi),h(e,Kt,n),h(e,xe,n),t(xe,Ai),h(e,Qt,n),h(e,K,n),t(K,Hi),t(K,ft),t(ft,Mi),t(K,Ni),h(e,Zt,n),E(me,e,n),h(e,eo,n),h(e,Q,n),t(Q,Li),t(Q,ut),t(ut,Di),t(Q,Oi),h(e,to,n),E(ge,e,n),h(e,oo,n),h(e,y,n),t(y,Fi),t(y,dt),t(dt,Yi),t(y,Ri),t(y,pt),t(pt,qi),t(y,ji),t(y,mt),t(mt,Bi),t(y,zi),h(e,io,n),h(e,p,n),t(p,Vi),t(p,gt),t(gt,Ui),t(p,Wi),t(p,vt),t(vt,Xi),t(p,Ji),t(p,yt),t(yt,Ki),t(p,Qi),t(p,wt),t(wt,Zi),t(p,ea),h(e,ao,n),E(ve,e,n),h(e,ro,n),h(e,Z,n),t(Z,ta),t(Z,_t),t(_t,oa),t(Z,ia),h(e,so,n),h(e,O,n),t(O,Ge),t(O,aa),t(O,Ae),h(e,lo,n),h(e,F,n),t(F,ee),t(ee,bt),E(ye,bt,null),t(F,ra),t(F,Et),t(Et,sa),h(e,no,n),h(e,d,n),t(d,la),t(d,kt),t(kt,na),t(d,ha),t(d,$t),t($t,ca),t(d,fa),t(d,St),t(St,ua),t(d,da),t(d,It),t(It,pa),t(d,ma),t(d,Pt),t(Pt,ga),t(d,va),h(e,ho,n),h(e,Y,n),t(Y,He),t(Y,ya),t(Y,Me),h(e,co,n),h(e,Ne,n),t(Ne,wa),h(e,fo,n),h(e,we,n),t(we,Tt),uo=!0},p:jr,i(e){uo||(k(ae.$$.fragment,e),k(re.$$.fragment,e),k(ne.$$.fragment,e),k(he.$$.fragment,e),k(ue.$$.fragment,e),k(de.$$.fragment,e),k(pe.$$.fragment,e),k(me.$$.fragment,e),k(ge.$$.fragment,e),k(ve.$$.fragment,e),k(ye.$$.fragment,e),uo=!0)},o(e){$(ae.$$.fragment,e),$(re.$$.fragment,e),$(ne.$$.fragment,e),$(he.$$.fragment,e),$(ue.$$.fragment,e),$(de.$$.fragment,e),$(pe.$$.fragment,e),$(me.$$.fragment,e),$(ge.$$.fragment,e),$(ve.$$.fragment,e),$(ye.$$.fragment,e),uo=!1},d(e){o(C),e&&o(xt),e&&o(x),S(ae),e&&o(Gt),e&&o(_e),e&&o(At),e&&o(G),S(re),e&&o(Ht),e&&o(be),e&&o(Mt),e&&o(v),e&&o(Nt),e&&o(j),e&&o(Lt),S(ne,e),e&&o(Dt),e&&o(z),e&&o(Ot),e&&o(m),e&&o(Ft),e&&o(A),S(he),e&&o(Yt),e&&o(U),e&&o(Rt),e&&o(Ee),e&&o(qt),e&&o(H),e&&o(jt),e&&o(g),e&&o(Bt),e&&o(Ie),e&&o(zt),e&&o(N),e&&o(Vt),e&&o(I),e&&o(Ut),e&&o(L),S(ue),e&&o(Wt),e&&o(X),e&&o(Xt),S(de,e),e&&o(Jt),e&&o(D),S(pe),e&&o(Kt),e&&o(xe),e&&o(Qt),e&&o(K),e&&o(Zt),S(me,e),e&&o(eo),e&&o(Q),e&&o(to),S(ge,e),e&&o(oo),e&&o(y),e&&o(io),e&&o(p),e&&o(ao),S(ve,e),e&&o(ro),e&&o(Z),e&&o(so),e&&o(O),e&&o(lo),e&&o(F),S(ye),e&&o(no),e&&o(d),e&&o(ho),e&&o(Y),e&&o(co),e&&o(Ne),e&&o(fo),e&&o(we)}}}const Vr={local:"getting-started-with-repositories",sections:[{local:"requirements",title:"Requirements"},{local:"creating-a-repository",title:"Creating a repository"},{local:"cloning-repositories",title:"Cloning repositories"},{local:"adding-files-to-a-repository-terminal",title:"Adding files to a repository (terminal)"},{local:"viewing-a-repos-history",title:"Viewing a repo's history"}],title:"Getting Started with Repositories"};function Ur(ba){return Br(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Kr extends Fr{constructor(C){super();Yr(this,C,Ur,zr,Rr,{})}}export{Kr as default,Vr as metadata};
