import{S as En,i as kn,s as $n,e as a,k as c,w as p,t as h,N as An,c as l,d as t,m as d,a as r,x as m,h as f,b as n,P as H,G as o,g as s,y as v,L as In,q as g,o as w,B as y,v as Pn}from"../chunks/vendor-hf-doc-builder.js";import{I as b}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as bn}from"../chunks/CodeBlock-hf-doc-builder.js";function Hn(pi){let S,So,x,j,Tt,me,Za,Nt,el,xo,T,q,Lt,ve,tl,Ot,ol,To,je,al,No,ge,Lo,qe,ll,Oo,Xe,Ve,mi,Mo,We,rl,Co,Qe,Je,vi,Go,N,X,Mt,we,il,Ct,sl,Fo,V,nl,ye,Gt,hl,fl,Yo,_e,Uo,L,W,Ft,be,cl,Yt,dl,Do,Q,ul,Ee,pl,ml,Ro,E,vl,ke,gl,wl,$e,yl,_l,Ae,bl,El,zo,Ke,kl,Bo,O,J,Ut,Ie,$l,Dt,Al,jo,K,Il,Pe,Pl,Hl,qo,Ze,Rt,Sl,Xo,et,tt,gi,Vo,He,zt,xl,Wo,ot,at,wi,Qo,M,Bt,Se,Tl,jt,Nl,Ll,Ol,qt,Xt,Ml,Jo,lt,Cl,Ko,rt,it,yi,Zo,st,Gl,ea,nt,ht,_i,ta,xe,Vt,Fl,oa,ft,Yl,aa,u,Wt,Ul,Dl,C,Rl,Qt,zl,Bl,Jt,jl,ql,Xl,Kt,Vl,Wl,Zt,Ql,Jl,eo,Kl,Zl,to,er,tr,oo,or,la,Z,ar,ct,lr,rr,ra,Te,ao,ir,ia,k,sr,lo,nr,hr,ee,ro,fr,cr,dr,io,ur,pr,sa,dt,ut,bi,na,A,mr,Ne,vr,gr,Le,so,wr,yr,ha,G,te,no,Oe,_r,ho,br,fa,I,Er,pt,kr,$r,fo,Ar,Ir,ca,F,oe,co,Me,Pr,Ce,Hr,uo,Sr,xr,da,P,Tr,po,Nr,Lr,Ge,Or,Mr,ua,Y,ae,mo,Fe,Cr,vo,Gr,pa,U,le,go,Ye,Fr,wo,Yr,ma,mt,Ur,va,vt,gt,Ei,ga,D,re,yo,Ue,Dr,_o,Rr,wa,ie,zr,wt,Br,jr,ya,yt,qr,_a,_t,bt,ki,ba,se,Xr,Et,Vr,Wr,Ea,R,ne,bo,De,Qr,Eo,Jr,ka,kt,Kr,$a,z,he,ko,Re,Zr,$o,ei,Aa,$,ti,$t,oi,ai,ze,li,ri,Ao,ii,si,Ia,B,fe,Io,Be,ni,Po,hi,Pa,ce,fi,Ho,ci,di,Ha,At,It,$i,Sa;return me=new b({}),ve=new b({}),ge=new bn({props:{code:`git lfs install
git clone <MODEL URL>`,highlighted:`git lfs install
git <span class="hljs-built_in">clone</span> &lt;MODEL URL&gt;`}}),we=new b({}),_e=new bn({props:{code:`from huggingface_hub import hf_hub_url, cached_download
import joblib

REPO_ID = "YOUR_REPO_ID"
FILENAME = "sklearn_model.joblib"

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_url, cached_download
<span class="hljs-keyword">import</span> joblib

REPO_ID = <span class="hljs-string">&quot;YOUR_REPO_ID&quot;</span>
FILENAME = <span class="hljs-string">&quot;sklearn_model.joblib&quot;</span>

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`}}),be=new b({}),Ie=new b({}),Oe=new b({}),Me=new b({}),Fe=new b({}),Ye=new b({}),Ue=new b({}),De=new b({}),Re=new b({}),Be=new b({}),{c(){S=a("meta"),So=c(),x=a("h1"),j=a("a"),Tt=a("span"),p(me.$$.fragment),Za=c(),Nt=a("span"),el=h("Interacting with models on the hub"),xo=c(),T=a("h2"),q=a("a"),Lt=a("span"),p(ve.$$.fragment),tl=c(),Ot=a("span"),ol=h("Accessing models for local use"),To=c(),je=a("p"),al=h("Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),No=c(),p(ge.$$.fragment),Lo=c(),qe=a("p"),ll=h("For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),Oo=c(),Xe=a("p"),Ve=a("img"),Mo=c(),We=a("p"),rl=h("If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),Co=c(),Qe=a("p"),Je=a("img"),Go=c(),N=a("h3"),X=a("a"),Mt=a("span"),p(we.$$.fragment),il=c(),Ct=a("span"),sl=h("Can I access models programmatically?"),Fo=c(),V=a("p"),nl=h("You can use the "),ye=a("a"),Gt=a("code"),hl=h("huggingface_hub"),fl=h(" library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),Yo=c(),p(_e.$$.fragment),Uo=c(),L=a("h2"),W=a("a"),Ft=a("span"),p(be.$$.fragment),cl=c(),Yt=a("span"),dl=h("Uploading models"),Do=c(),Q=a("p"),ul=h("The first step is to create an account at "),Ee=a("a"),pl=h("Hugging Face"),ml=h(". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),Ro=c(),E=a("p"),vl=h("You can link repositories with an individual, such as "),ke=a("a"),gl=h("osanseviero/fashion_brands_patterns"),wl=h(", or with an organization, such as "),$e=a("a"),yl=h("facebook/bart-large-xsum"),_l=h(". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),Ae=a("a"),bl=h("here"),El=h("."),zo=c(),Ke=a("p"),kl=h("There are several ways to upload models to the Hub, described below."),Bo=c(),O=a("h3"),J=a("a"),Ut=a("span"),p(Ie.$$.fragment),$l=c(),Dt=a("span"),Al=h("Using the web interface"),jo=c(),K=a("p"),Il=h("To create a brand new model repository, visit "),Pe=a("a"),Pl=h("huggingface.co/new"),Hl=h(". Then follow these steps:"),qo=c(),Ze=a("ol"),Rt=a("li"),Sl=h("In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),Xo=c(),et=a("p"),tt=a("img"),Vo=c(),He=a("ol"),zt=a("li"),xl=h("From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),Wo=c(),ot=a("p"),at=a("img"),Qo=c(),M=a("ol"),Bt=a("li"),Se=a("p"),Tl=h("Afterwards, click "),jt=a("strong"),Nl=h("Commit changes"),Ll=h(" to upload your model to the Hub!"),Ol=c(),qt=a("li"),Xt=a("p"),Ml=h("Inspect files and history"),Jo=c(),lt=a("p"),Cl=h("You can check your repository with all the recently added files!"),Ko=c(),rt=a("p"),it=a("img"),Zo=c(),st=a("p"),Gl=h("The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),ea=c(),nt=a("p"),ht=a("img"),ta=c(),xe=a("ol"),Vt=a("li"),Fl=h("Add metadata"),oa=c(),ft=a("p"),Yl=h("You can add metadata to your model card. You can specify:"),aa=c(),u=a("ul"),Wt=a("li"),Ul=h("the type of task this model is for, enabling widgets and the Inference API."),Dl=c(),C=a("li"),Rl=h("the used library ("),Qt=a("code"),zl=h("transformers"),Bl=h(", "),Jt=a("code"),jl=h("spaCy"),ql=h(", etc.)"),Xl=c(),Kt=a("li"),Vl=h("the language"),Wl=c(),Zt=a("li"),Ql=h("the dataset"),Jl=c(),eo=a("li"),Kl=h("metrics"),Zl=c(),to=a("li"),er=h("license"),tr=c(),oo=a("li"),or=h("a lot more!"),la=c(),Z=a("p"),ar=h("Read more about model tags "),ct=a("a"),lr=h("here"),rr=h("."),ra=c(),Te=a("ol"),ao=a("li"),ir=h("Add TensorBoard traces"),ia=c(),k=a("p"),sr=h("Any repository that contains TensorBoard traces (filenames that contain "),lo=a("code"),nr=h("tfevents"),hr=h(") is categorized with the "),ee=a("a"),ro=a("code"),fr=h("TensorBoard"),cr=h(" tag"),dr=h(". As a convention, we suggest that you save traces under the "),io=a("code"),ur=h("runs/"),pr=h(" subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),sa=c(),dt=a("p"),ut=a("img"),na=c(),A=a("p"),mr=h("Models trained with \u{1F917} Transformers will generate "),Ne=a("a"),vr=h("TensorBoard traces"),gr=h(" by default if "),Le=a("a"),so=a("code"),wr=h("tensorboard"),yr=h(" is installed."),ha=c(),G=a("h3"),te=a("a"),no=a("span"),p(Oe.$$.fragment),_r=c(),ho=a("span"),br=h("Using Git"),fa=c(),I=a("p"),Er=h("Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),pt=a("a"),kr=h("Getting Started with Repositories"),$r=h(" to learn about using the "),fo=a("code"),Ar=h("git"),Ir=h(" CLI to commit and push your models."),ca=c(),F=a("h3"),oe=a("a"),co=a("span"),p(Me.$$.fragment),Pr=c(),Ce=a("span"),Hr=h("Using the "),uo=a("code"),Sr=h("huggingface_hub"),xr=h(" client library"),da=c(),P=a("p"),Tr=h("The rich feature set in the "),po=a("code"),Nr=h("huggingface_hub"),Lr=h(" library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),Ge=a("a"),Or=h("the client library\u2019s documentation"),Mr=h(" to learn more."),ua=c(),Y=a("h2"),ae=a("a"),mo=a("span"),p(Fe.$$.fragment),Cr=c(),vo=a("span"),Gr=h("FAQ"),pa=c(),U=a("h3"),le=a("a"),go=a("span"),p(Ye.$$.fragment),Fr=c(),wo=a("span"),Yr=h("How can I see what dataset was used to train the model?"),ma=c(),mt=a("p"),Ur=h("It\u2019s up to the person who uploaded the model to include the training information! You may find the information about the datasets that the model was trained on in the model card. If the datasets used for the model are on the Hub, the uploader may have included them in the model card\u2019s metadata. In that case, the datasets would be linked with a handy card on the right side of the model page:"),va=c(),vt=a("p"),gt=a("img"),ga=c(),D=a("h3"),re=a("a"),yo=a("span"),p(Ue.$$.fragment),Dr=c(),_o=a("span"),Rr=h("How can I see an example of the model in action?"),wa=c(),ie=a("p"),zr=h("Models can have inference widgets that let you try out the model in the browser! Inference widgets are easy to configure, and there are many different options at your disposal. Visit the "),wt=a("a"),Br=h("Widgets documentation"),jr=h(" to learn more."),ya=c(),yt=a("p"),qr=h("The Hugging Face Hub is also home to Spaces, which are interactive demos used to showcase models. If a model has any Spaces associated with it, you\u2019ll find them linked on the model page like so:"),_a=c(),_t=a("p"),bt=a("img"),ba=c(),se=a("p"),Xr=h("Spaces are a great way to show off a model you\u2019ve made or explore new ways to use existing models! Visit the "),Et=a("a"),Vr=h("Spaces documentation"),Wr=h(" to learn how to make your own."),Ea=c(),R=a("h3"),ne=a("a"),bo=a("span"),p(De.$$.fragment),Qr=c(),Eo=a("span"),Jr=h("How do I upload an update / new version of the model?"),ka=c(),kt=a("p"),Kr=h("Releasing an update to a model that you\u2019ve already published can be done by pushing a new commit to your model\u2019s repo. To do this, go through the same process that you followed to upload your initial model. Your previous model versions will remain in the repository\u2019s commit history."),$a=c(),z=a("h3"),he=a("a"),ko=a("span"),p(Re.$$.fragment),Zr=c(),$o=a("span"),ei=h("What if I have a different checkpoint of the model trained on a different dataset?"),Aa=c(),$=a("p"),ti=h("By convention, each model repo should contain a single checkpoint trained on a particular dataset. You should upload any new checkpoints trained on different datasets to the Hub in a new model repo. You can link the models together by using a "),$t=a("a"),oi=h("tag in your model card\u2019s metadata"),ai=h(" or by linking to them in the model cards. The "),ze=a("a"),li=h("akiyamasho/AnimeBackgroundGAN-Shinkai"),ri=h(" model, for example, references other checkpoints in the model card under "),Ao=a("em"),ii=h("\u201COther pre-trained model versions\u201D"),si=h("."),Ia=c(),B=a("h3"),fe=a("a"),Io=a("span"),p(Be.$$.fragment),ni=c(),Po=a("span"),hi=h("Can I link my model to a paper on arXiv?"),Pa=c(),ce=a("p"),fi=h("If the model card includes a link to a paper on arXiv, the Hugging Face Hub will extract the arXiv ID  and include it in the model tags with the format "),Ho=a("code"),ci=h("arxiv:<PAPER ID>"),di=h(". Clicking on the tag will let you visit the paper on arXiv, as well as filter for other models on the Hub that cite the same paper."),Ha=c(),At=a("p"),It=a("img"),this.h()},l(e){const i=An('[data-svelte="svelte-1phssyn"]',document.head);S=l(i,"META",{name:!0,content:!0}),i.forEach(t),So=d(e),x=l(e,"H1",{class:!0});var xa=r(x);j=l(xa,"A",{id:!0,class:!0,href:!0});var Ai=r(j);Tt=l(Ai,"SPAN",{});var Ii=r(Tt);m(me.$$.fragment,Ii),Ii.forEach(t),Ai.forEach(t),Za=d(xa),Nt=l(xa,"SPAN",{});var Pi=r(Nt);el=f(Pi,"Interacting with models on the hub"),Pi.forEach(t),xa.forEach(t),xo=d(e),T=l(e,"H2",{class:!0});var Ta=r(T);q=l(Ta,"A",{id:!0,class:!0,href:!0});var Hi=r(q);Lt=l(Hi,"SPAN",{});var Si=r(Lt);m(ve.$$.fragment,Si),Si.forEach(t),Hi.forEach(t),tl=d(Ta),Ot=l(Ta,"SPAN",{});var xi=r(Ot);ol=f(xi,"Accessing models for local use"),xi.forEach(t),Ta.forEach(t),To=d(e),je=l(e,"P",{});var Ti=r(je);al=f(Ti,"Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),Ti.forEach(t),No=d(e),m(ge.$$.fragment,e),Lo=d(e),qe=l(e,"P",{});var Ni=r(qe);ll=f(Ni,"For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),Ni.forEach(t),Oo=d(e),Xe=l(e,"P",{});var Li=r(Xe);Ve=l(Li,"IMG",{src:!0,alt:!0}),Li.forEach(t),Mo=d(e),We=l(e,"P",{});var Oi=r(We);rl=f(Oi,"If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),Oi.forEach(t),Co=d(e),Qe=l(e,"P",{});var Mi=r(Qe);Je=l(Mi,"IMG",{src:!0,alt:!0}),Mi.forEach(t),Go=d(e),N=l(e,"H3",{class:!0});var Na=r(N);X=l(Na,"A",{id:!0,class:!0,href:!0});var Ci=r(X);Mt=l(Ci,"SPAN",{});var Gi=r(Mt);m(we.$$.fragment,Gi),Gi.forEach(t),Ci.forEach(t),il=d(Na),Ct=l(Na,"SPAN",{});var Fi=r(Ct);sl=f(Fi,"Can I access models programmatically?"),Fi.forEach(t),Na.forEach(t),Fo=d(e),V=l(e,"P",{});var La=r(V);nl=f(La,"You can use the "),ye=l(La,"A",{href:!0,rel:!0});var Yi=r(ye);Gt=l(Yi,"CODE",{});var Ui=r(Gt);hl=f(Ui,"huggingface_hub"),Ui.forEach(t),Yi.forEach(t),fl=f(La," library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),La.forEach(t),Yo=d(e),m(_e.$$.fragment,e),Uo=d(e),L=l(e,"H2",{class:!0});var Oa=r(L);W=l(Oa,"A",{id:!0,class:!0,href:!0});var Di=r(W);Ft=l(Di,"SPAN",{});var Ri=r(Ft);m(be.$$.fragment,Ri),Ri.forEach(t),Di.forEach(t),cl=d(Oa),Yt=l(Oa,"SPAN",{});var zi=r(Yt);dl=f(zi,"Uploading models"),zi.forEach(t),Oa.forEach(t),Do=d(e),Q=l(e,"P",{});var Ma=r(Q);ul=f(Ma,"The first step is to create an account at "),Ee=l(Ma,"A",{href:!0,rel:!0});var Bi=r(Ee);pl=f(Bi,"Hugging Face"),Bi.forEach(t),ml=f(Ma,". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),Ma.forEach(t),Ro=d(e),E=l(e,"P",{});var de=r(E);vl=f(de,"You can link repositories with an individual, such as "),ke=l(de,"A",{href:!0,rel:!0});var ji=r(ke);gl=f(ji,"osanseviero/fashion_brands_patterns"),ji.forEach(t),wl=f(de,", or with an organization, such as "),$e=l(de,"A",{href:!0,rel:!0});var qi=r($e);yl=f(qi,"facebook/bart-large-xsum"),qi.forEach(t),_l=f(de,". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),Ae=l(de,"A",{href:!0,rel:!0});var Xi=r(Ae);bl=f(Xi,"here"),Xi.forEach(t),El=f(de,"."),de.forEach(t),zo=d(e),Ke=l(e,"P",{});var Vi=r(Ke);kl=f(Vi,"There are several ways to upload models to the Hub, described below."),Vi.forEach(t),Bo=d(e),O=l(e,"H3",{class:!0});var Ca=r(O);J=l(Ca,"A",{id:!0,class:!0,href:!0});var Wi=r(J);Ut=l(Wi,"SPAN",{});var Qi=r(Ut);m(Ie.$$.fragment,Qi),Qi.forEach(t),Wi.forEach(t),$l=d(Ca),Dt=l(Ca,"SPAN",{});var Ji=r(Dt);Al=f(Ji,"Using the web interface"),Ji.forEach(t),Ca.forEach(t),jo=d(e),K=l(e,"P",{});var Ga=r(K);Il=f(Ga,"To create a brand new model repository, visit "),Pe=l(Ga,"A",{href:!0,rel:!0});var Ki=r(Pe);Pl=f(Ki,"huggingface.co/new"),Ki.forEach(t),Hl=f(Ga,". Then follow these steps:"),Ga.forEach(t),qo=d(e),Ze=l(e,"OL",{});var Zi=r(Ze);Rt=l(Zi,"LI",{});var es=r(Rt);Sl=f(es,"In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),es.forEach(t),Zi.forEach(t),Xo=d(e),et=l(e,"P",{});var ts=r(et);tt=l(ts,"IMG",{src:!0,alt:!0}),ts.forEach(t),Vo=d(e),He=l(e,"OL",{start:!0});var os=r(He);zt=l(os,"LI",{});var as=r(zt);xl=f(as,"From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),as.forEach(t),os.forEach(t),Wo=d(e),ot=l(e,"P",{});var ls=r(ot);at=l(ls,"IMG",{src:!0,alt:!0}),ls.forEach(t),Qo=d(e),M=l(e,"OL",{start:!0});var Fa=r(M);Bt=l(Fa,"LI",{});var rs=r(Bt);Se=l(rs,"P",{});var Ya=r(Se);Tl=f(Ya,"Afterwards, click "),jt=l(Ya,"STRONG",{});var is=r(jt);Nl=f(is,"Commit changes"),is.forEach(t),Ll=f(Ya," to upload your model to the Hub!"),Ya.forEach(t),rs.forEach(t),Ol=d(Fa),qt=l(Fa,"LI",{});var ss=r(qt);Xt=l(ss,"P",{});var ns=r(Xt);Ml=f(ns,"Inspect files and history"),ns.forEach(t),ss.forEach(t),Fa.forEach(t),Jo=d(e),lt=l(e,"P",{});var hs=r(lt);Cl=f(hs,"You can check your repository with all the recently added files!"),hs.forEach(t),Ko=d(e),rt=l(e,"P",{});var fs=r(rt);it=l(fs,"IMG",{src:!0,alt:!0}),fs.forEach(t),Zo=d(e),st=l(e,"P",{});var cs=r(st);Gl=f(cs,"The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),cs.forEach(t),ea=d(e),nt=l(e,"P",{});var ds=r(nt);ht=l(ds,"IMG",{src:!0,alt:!0}),ds.forEach(t),ta=d(e),xe=l(e,"OL",{start:!0});var us=r(xe);Vt=l(us,"LI",{});var ps=r(Vt);Fl=f(ps,"Add metadata"),ps.forEach(t),us.forEach(t),oa=d(e),ft=l(e,"P",{});var ms=r(ft);Yl=f(ms,"You can add metadata to your model card. You can specify:"),ms.forEach(t),aa=d(e),u=l(e,"UL",{});var _=r(u);Wt=l(_,"LI",{});var vs=r(Wt);Ul=f(vs,"the type of task this model is for, enabling widgets and the Inference API."),vs.forEach(t),Dl=d(_),C=l(_,"LI",{});var Pt=r(C);Rl=f(Pt,"the used library ("),Qt=l(Pt,"CODE",{});var gs=r(Qt);zl=f(gs,"transformers"),gs.forEach(t),Bl=f(Pt,", "),Jt=l(Pt,"CODE",{});var ws=r(Jt);jl=f(ws,"spaCy"),ws.forEach(t),ql=f(Pt,", etc.)"),Pt.forEach(t),Xl=d(_),Kt=l(_,"LI",{});var ys=r(Kt);Vl=f(ys,"the language"),ys.forEach(t),Wl=d(_),Zt=l(_,"LI",{});var _s=r(Zt);Ql=f(_s,"the dataset"),_s.forEach(t),Jl=d(_),eo=l(_,"LI",{});var bs=r(eo);Kl=f(bs,"metrics"),bs.forEach(t),Zl=d(_),to=l(_,"LI",{});var Es=r(to);er=f(Es,"license"),Es.forEach(t),tr=d(_),oo=l(_,"LI",{});var ks=r(oo);or=f(ks,"a lot more!"),ks.forEach(t),_.forEach(t),la=d(e),Z=l(e,"P",{});var Ua=r(Z);ar=f(Ua,"Read more about model tags "),ct=l(Ua,"A",{href:!0});var $s=r(ct);lr=f($s,"here"),$s.forEach(t),rr=f(Ua,"."),Ua.forEach(t),ra=d(e),Te=l(e,"OL",{start:!0});var As=r(Te);ao=l(As,"LI",{});var Is=r(ao);ir=f(Is,"Add TensorBoard traces"),Is.forEach(t),As.forEach(t),ia=d(e),k=l(e,"P",{});var ue=r(k);sr=f(ue,"Any repository that contains TensorBoard traces (filenames that contain "),lo=l(ue,"CODE",{});var Ps=r(lo);nr=f(Ps,"tfevents"),Ps.forEach(t),hr=f(ue,") is categorized with the "),ee=l(ue,"A",{href:!0,rel:!0});var ui=r(ee);ro=l(ui,"CODE",{});var Hs=r(ro);fr=f(Hs,"TensorBoard"),Hs.forEach(t),cr=f(ui," tag"),ui.forEach(t),dr=f(ue,". As a convention, we suggest that you save traces under the "),io=l(ue,"CODE",{});var Ss=r(io);ur=f(Ss,"runs/"),Ss.forEach(t),pr=f(ue," subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),ue.forEach(t),sa=d(e),dt=l(e,"P",{});var xs=r(dt);ut=l(xs,"IMG",{src:!0,alt:!0}),xs.forEach(t),na=d(e),A=l(e,"P",{});var Ht=r(A);mr=f(Ht,"Models trained with \u{1F917} Transformers will generate "),Ne=l(Ht,"A",{href:!0,rel:!0});var Ts=r(Ne);vr=f(Ts,"TensorBoard traces"),Ts.forEach(t),gr=f(Ht," by default if "),Le=l(Ht,"A",{href:!0,rel:!0});var Ns=r(Le);so=l(Ns,"CODE",{});var Ls=r(so);wr=f(Ls,"tensorboard"),Ls.forEach(t),Ns.forEach(t),yr=f(Ht," is installed."),Ht.forEach(t),ha=d(e),G=l(e,"H3",{class:!0});var Da=r(G);te=l(Da,"A",{id:!0,class:!0,href:!0});var Os=r(te);no=l(Os,"SPAN",{});var Ms=r(no);m(Oe.$$.fragment,Ms),Ms.forEach(t),Os.forEach(t),_r=d(Da),ho=l(Da,"SPAN",{});var Cs=r(ho);br=f(Cs,"Using Git"),Cs.forEach(t),Da.forEach(t),fa=d(e),I=l(e,"P",{});var St=r(I);Er=f(St,"Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),pt=l(St,"A",{href:!0});var Gs=r(pt);kr=f(Gs,"Getting Started with Repositories"),Gs.forEach(t),$r=f(St," to learn about using the "),fo=l(St,"CODE",{});var Fs=r(fo);Ar=f(Fs,"git"),Fs.forEach(t),Ir=f(St," CLI to commit and push your models."),St.forEach(t),ca=d(e),F=l(e,"H3",{class:!0});var Ra=r(F);oe=l(Ra,"A",{id:!0,class:!0,href:!0});var Ys=r(oe);co=l(Ys,"SPAN",{});var Us=r(co);m(Me.$$.fragment,Us),Us.forEach(t),Ys.forEach(t),Pr=d(Ra),Ce=l(Ra,"SPAN",{});var za=r(Ce);Hr=f(za,"Using the "),uo=l(za,"CODE",{});var Ds=r(uo);Sr=f(Ds,"huggingface_hub"),Ds.forEach(t),xr=f(za," client library"),za.forEach(t),Ra.forEach(t),da=d(e),P=l(e,"P",{});var xt=r(P);Tr=f(xt,"The rich feature set in the "),po=l(xt,"CODE",{});var Rs=r(po);Nr=f(Rs,"huggingface_hub"),Rs.forEach(t),Lr=f(xt," library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),Ge=l(xt,"A",{href:!0,rel:!0});var zs=r(Ge);Or=f(zs,"the client library\u2019s documentation"),zs.forEach(t),Mr=f(xt," to learn more."),xt.forEach(t),ua=d(e),Y=l(e,"H2",{class:!0});var Ba=r(Y);ae=l(Ba,"A",{id:!0,class:!0,href:!0});var Bs=r(ae);mo=l(Bs,"SPAN",{});var js=r(mo);m(Fe.$$.fragment,js),js.forEach(t),Bs.forEach(t),Cr=d(Ba),vo=l(Ba,"SPAN",{});var qs=r(vo);Gr=f(qs,"FAQ"),qs.forEach(t),Ba.forEach(t),pa=d(e),U=l(e,"H3",{class:!0});var ja=r(U);le=l(ja,"A",{id:!0,class:!0,href:!0});var Xs=r(le);go=l(Xs,"SPAN",{});var Vs=r(go);m(Ye.$$.fragment,Vs),Vs.forEach(t),Xs.forEach(t),Fr=d(ja),wo=l(ja,"SPAN",{});var Ws=r(wo);Yr=f(Ws,"How can I see what dataset was used to train the model?"),Ws.forEach(t),ja.forEach(t),ma=d(e),mt=l(e,"P",{});var Qs=r(mt);Ur=f(Qs,"It\u2019s up to the person who uploaded the model to include the training information! You may find the information about the datasets that the model was trained on in the model card. If the datasets used for the model are on the Hub, the uploader may have included them in the model card\u2019s metadata. In that case, the datasets would be linked with a handy card on the right side of the model page:"),Qs.forEach(t),va=d(e),vt=l(e,"P",{});var Js=r(vt);gt=l(Js,"IMG",{src:!0,alt:!0}),Js.forEach(t),ga=d(e),D=l(e,"H3",{class:!0});var qa=r(D);re=l(qa,"A",{id:!0,class:!0,href:!0});var Ks=r(re);yo=l(Ks,"SPAN",{});var Zs=r(yo);m(Ue.$$.fragment,Zs),Zs.forEach(t),Ks.forEach(t),Dr=d(qa),_o=l(qa,"SPAN",{});var en=r(_o);Rr=f(en,"How can I see an example of the model in action?"),en.forEach(t),qa.forEach(t),wa=d(e),ie=l(e,"P",{});var Xa=r(ie);zr=f(Xa,"Models can have inference widgets that let you try out the model in the browser! Inference widgets are easy to configure, and there are many different options at your disposal. Visit the "),wt=l(Xa,"A",{href:!0});var tn=r(wt);Br=f(tn,"Widgets documentation"),tn.forEach(t),jr=f(Xa," to learn more."),Xa.forEach(t),ya=d(e),yt=l(e,"P",{});var on=r(yt);qr=f(on,"The Hugging Face Hub is also home to Spaces, which are interactive demos used to showcase models. If a model has any Spaces associated with it, you\u2019ll find them linked on the model page like so:"),on.forEach(t),_a=d(e),_t=l(e,"P",{});var an=r(_t);bt=l(an,"IMG",{src:!0,alt:!0}),an.forEach(t),ba=d(e),se=l(e,"P",{});var Va=r(se);Xr=f(Va,"Spaces are a great way to show off a model you\u2019ve made or explore new ways to use existing models! Visit the "),Et=l(Va,"A",{href:!0});var ln=r(Et);Vr=f(ln,"Spaces documentation"),ln.forEach(t),Wr=f(Va," to learn how to make your own."),Va.forEach(t),Ea=d(e),R=l(e,"H3",{class:!0});var Wa=r(R);ne=l(Wa,"A",{id:!0,class:!0,href:!0});var rn=r(ne);bo=l(rn,"SPAN",{});var sn=r(bo);m(De.$$.fragment,sn),sn.forEach(t),rn.forEach(t),Qr=d(Wa),Eo=l(Wa,"SPAN",{});var nn=r(Eo);Jr=f(nn,"How do I upload an update / new version of the model?"),nn.forEach(t),Wa.forEach(t),ka=d(e),kt=l(e,"P",{});var hn=r(kt);Kr=f(hn,"Releasing an update to a model that you\u2019ve already published can be done by pushing a new commit to your model\u2019s repo. To do this, go through the same process that you followed to upload your initial model. Your previous model versions will remain in the repository\u2019s commit history."),hn.forEach(t),$a=d(e),z=l(e,"H3",{class:!0});var Qa=r(z);he=l(Qa,"A",{id:!0,class:!0,href:!0});var fn=r(he);ko=l(fn,"SPAN",{});var cn=r(ko);m(Re.$$.fragment,cn),cn.forEach(t),fn.forEach(t),Zr=d(Qa),$o=l(Qa,"SPAN",{});var dn=r($o);ei=f(dn,"What if I have a different checkpoint of the model trained on a different dataset?"),dn.forEach(t),Qa.forEach(t),Aa=d(e),$=l(e,"P",{});var pe=r($);ti=f(pe,"By convention, each model repo should contain a single checkpoint trained on a particular dataset. You should upload any new checkpoints trained on different datasets to the Hub in a new model repo. You can link the models together by using a "),$t=l(pe,"A",{href:!0});var un=r($t);oi=f(un,"tag in your model card\u2019s metadata"),un.forEach(t),ai=f(pe," or by linking to them in the model cards. The "),ze=l(pe,"A",{href:!0,rel:!0});var pn=r(ze);li=f(pn,"akiyamasho/AnimeBackgroundGAN-Shinkai"),pn.forEach(t),ri=f(pe," model, for example, references other checkpoints in the model card under "),Ao=l(pe,"EM",{});var mn=r(Ao);ii=f(mn,"\u201COther pre-trained model versions\u201D"),mn.forEach(t),si=f(pe,"."),pe.forEach(t),Ia=d(e),B=l(e,"H3",{class:!0});var Ja=r(B);fe=l(Ja,"A",{id:!0,class:!0,href:!0});var vn=r(fe);Io=l(vn,"SPAN",{});var gn=r(Io);m(Be.$$.fragment,gn),gn.forEach(t),vn.forEach(t),ni=d(Ja),Po=l(Ja,"SPAN",{});var wn=r(Po);hi=f(wn,"Can I link my model to a paper on arXiv?"),wn.forEach(t),Ja.forEach(t),Pa=d(e),ce=l(e,"P",{});var Ka=r(ce);fi=f(Ka,"If the model card includes a link to a paper on arXiv, the Hugging Face Hub will extract the arXiv ID  and include it in the model tags with the format "),Ho=l(Ka,"CODE",{});var yn=r(Ho);ci=f(yn,"arxiv:<PAPER ID>"),yn.forEach(t),di=f(Ka,". Clicking on the tag will let you visit the paper on arXiv, as well as filter for other models on the Hub that cite the same paper."),Ka.forEach(t),Ha=d(e),At=l(e,"P",{});var _n=r(At);It=l(_n,"IMG",{src:!0,alt:!0}),_n.forEach(t),this.h()},h(){n(S,"name","hf:doc:metadata"),n(S,"content",JSON.stringify(Sn)),n(j,"id","interacting-with-models-on-the-hub"),n(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(j,"href","#interacting-with-models-on-the-hub"),n(x,"class","relative group"),n(q,"id","accessing-models-for-local-use"),n(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(q,"href","#accessing-models-for-local-use"),n(T,"class","relative group"),H(Ve.src,mi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage.png")||n(Ve,"src",mi),n(Ve,"alt","Models can be used locally through the 'Use in Transformer' button"),H(Je.src,vi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-modal.png")||n(Je,"src",vi),n(Je,"alt","Snippets for using a model with the \u{1F917} transformers library"),n(X,"id","can-i-access-models-programmatically"),n(X,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(X,"href","#can-i-access-models-programmatically"),n(N,"class","relative group"),n(ye,"href","https://github.com/huggingface/huggingface_hub"),n(ye,"rel","nofollow"),n(W,"id","uploading-models"),n(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(W,"href","#uploading-models"),n(L,"class","relative group"),n(Ee,"href","https://huggingface.co/login"),n(Ee,"rel","nofollow"),n(ke,"href","https://huggingface.co/osanseviero/fashion_brands_patterns"),n(ke,"rel","nofollow"),n($e,"href","https://huggingface.co/facebook/bart-large-xsum"),n($e,"rel","nofollow"),n(Ae,"href","https://huggingface.co/organizations/new"),n(Ae,"rel","nofollow"),n(J,"id","using-the-web-interface"),n(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(J,"href","#using-the-web-interface"),n(O,"class","relative group"),n(Pe,"href","http://huggingface.co/new"),n(Pe,"rel","nofollow"),H(tt.src,gi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file.png")||n(tt,"src",gi),n(tt,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file.png"),n(He,"start","2"),H(at.src,wi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file.png")||n(at,"src",wi),n(at,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file.png"),n(M,"start","3"),H(it.src,yi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png")||n(it,"src",yi),n(it,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png"),H(ht.src,_i="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif")||n(ht,"src",_i),n(ht,"alt","https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif"),n(xe,"start","5"),n(ct,"href","/docs/hub/model-repos#model-card-metadata"),n(Te,"start","6"),n(ee,"href","https://huggingface.co/models?filter=tensorboard"),n(ee,"rel","nofollow"),H(ut.src,bi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/tensorboard.png")||n(ut,"src",bi),n(ut,"alt","Training metrics tab on a model's page, with TensorBoard"),n(Ne,"href","https://huggingface.co/transformers/main_classes/callback.html?highlight=tensorboard#transformers.integrations.TensorBoardCallback"),n(Ne,"rel","nofollow"),n(Le,"href","https://pypi.org/project/tensorboard/"),n(Le,"rel","nofollow"),n(te,"id","using-git"),n(te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(te,"href","#using-git"),n(G,"class","relative group"),n(pt,"href","repositories-getting-started.md"),n(oe,"id","using-the-huggingfacehub-client-library"),n(oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(oe,"href","#using-the-huggingfacehub-client-library"),n(F,"class","relative group"),n(Ge,"href","https://huggingface.co/docs/huggingface_hub/index"),n(Ge,"rel","nofollow"),n(ae,"id","faq"),n(ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ae,"href","#faq"),n(Y,"class","relative group"),n(le,"id","how-can-i-see-what-dataset-was-used-to-train-the-model"),n(le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(le,"href","#how-can-i-see-what-dataset-was-used-to-train-the-model"),n(U,"class","relative group"),H(gt.src,Ei="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-linked-datasets.png")||n(gt,"src",Ei),n(gt,"alt","Linked datasets for a model"),n(re,"id","how-can-i-see-an-example-of-the-model-in-action"),n(re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(re,"href","#how-can-i-see-an-example-of-the-model-in-action"),n(D,"class","relative group"),n(wt,"href","models-widgets.md"),H(bt.src,ki="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-linked-spaces.png")||n(bt,"src",ki),n(bt,"alt","Linked spaces for a model"),n(Et,"href","./spaces-main"),n(ne,"id","how-do-i-upload-an-update-new-version-of-the-model"),n(ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(ne,"href","#how-do-i-upload-an-update-new-version-of-the-model"),n(R,"class","relative group"),n(he,"id","what-if-i-have-a-different-checkpoint-of-the-model-trained-on-a-different-dataset"),n(he,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(he,"href","#what-if-i-have-a-different-checkpoint-of-the-model-trained-on-a-different-dataset"),n(z,"class","relative group"),n($t,"href","./modelcard"),n(ze,"href","https://huggingface.co/akiyamasho/AnimeBackgroundGAN-Shinkai#other-pre-trained-model-versions"),n(ze,"rel","nofollow"),n(fe,"id","can-i-link-my-model-to-a-paper-on-arxiv"),n(fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(fe,"href","#can-i-link-my-model-to-a-paper-on-arxiv"),n(B,"class","relative group"),H(It.src,$i="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/datasets-arxiv.jpeg")||n(It,"src",$i),n(It,"alt","arXiv tag for models on the Hub")},m(e,i){o(document.head,S),s(e,So,i),s(e,x,i),o(x,j),o(j,Tt),v(me,Tt,null),o(x,Za),o(x,Nt),o(Nt,el),s(e,xo,i),s(e,T,i),o(T,q),o(q,Lt),v(ve,Lt,null),o(T,tl),o(T,Ot),o(Ot,ol),s(e,To,i),s(e,je,i),o(je,al),s(e,No,i),v(ge,e,i),s(e,Lo,i),s(e,qe,i),o(qe,ll),s(e,Oo,i),s(e,Xe,i),o(Xe,Ve),s(e,Mo,i),s(e,We,i),o(We,rl),s(e,Co,i),s(e,Qe,i),o(Qe,Je),s(e,Go,i),s(e,N,i),o(N,X),o(X,Mt),v(we,Mt,null),o(N,il),o(N,Ct),o(Ct,sl),s(e,Fo,i),s(e,V,i),o(V,nl),o(V,ye),o(ye,Gt),o(Gt,hl),o(V,fl),s(e,Yo,i),v(_e,e,i),s(e,Uo,i),s(e,L,i),o(L,W),o(W,Ft),v(be,Ft,null),o(L,cl),o(L,Yt),o(Yt,dl),s(e,Do,i),s(e,Q,i),o(Q,ul),o(Q,Ee),o(Ee,pl),o(Q,ml),s(e,Ro,i),s(e,E,i),o(E,vl),o(E,ke),o(ke,gl),o(E,wl),o(E,$e),o($e,yl),o(E,_l),o(E,Ae),o(Ae,bl),o(E,El),s(e,zo,i),s(e,Ke,i),o(Ke,kl),s(e,Bo,i),s(e,O,i),o(O,J),o(J,Ut),v(Ie,Ut,null),o(O,$l),o(O,Dt),o(Dt,Al),s(e,jo,i),s(e,K,i),o(K,Il),o(K,Pe),o(Pe,Pl),o(K,Hl),s(e,qo,i),s(e,Ze,i),o(Ze,Rt),o(Rt,Sl),s(e,Xo,i),s(e,et,i),o(et,tt),s(e,Vo,i),s(e,He,i),o(He,zt),o(zt,xl),s(e,Wo,i),s(e,ot,i),o(ot,at),s(e,Qo,i),s(e,M,i),o(M,Bt),o(Bt,Se),o(Se,Tl),o(Se,jt),o(jt,Nl),o(Se,Ll),o(M,Ol),o(M,qt),o(qt,Xt),o(Xt,Ml),s(e,Jo,i),s(e,lt,i),o(lt,Cl),s(e,Ko,i),s(e,rt,i),o(rt,it),s(e,Zo,i),s(e,st,i),o(st,Gl),s(e,ea,i),s(e,nt,i),o(nt,ht),s(e,ta,i),s(e,xe,i),o(xe,Vt),o(Vt,Fl),s(e,oa,i),s(e,ft,i),o(ft,Yl),s(e,aa,i),s(e,u,i),o(u,Wt),o(Wt,Ul),o(u,Dl),o(u,C),o(C,Rl),o(C,Qt),o(Qt,zl),o(C,Bl),o(C,Jt),o(Jt,jl),o(C,ql),o(u,Xl),o(u,Kt),o(Kt,Vl),o(u,Wl),o(u,Zt),o(Zt,Ql),o(u,Jl),o(u,eo),o(eo,Kl),o(u,Zl),o(u,to),o(to,er),o(u,tr),o(u,oo),o(oo,or),s(e,la,i),s(e,Z,i),o(Z,ar),o(Z,ct),o(ct,lr),o(Z,rr),s(e,ra,i),s(e,Te,i),o(Te,ao),o(ao,ir),s(e,ia,i),s(e,k,i),o(k,sr),o(k,lo),o(lo,nr),o(k,hr),o(k,ee),o(ee,ro),o(ro,fr),o(ee,cr),o(k,dr),o(k,io),o(io,ur),o(k,pr),s(e,sa,i),s(e,dt,i),o(dt,ut),s(e,na,i),s(e,A,i),o(A,mr),o(A,Ne),o(Ne,vr),o(A,gr),o(A,Le),o(Le,so),o(so,wr),o(A,yr),s(e,ha,i),s(e,G,i),o(G,te),o(te,no),v(Oe,no,null),o(G,_r),o(G,ho),o(ho,br),s(e,fa,i),s(e,I,i),o(I,Er),o(I,pt),o(pt,kr),o(I,$r),o(I,fo),o(fo,Ar),o(I,Ir),s(e,ca,i),s(e,F,i),o(F,oe),o(oe,co),v(Me,co,null),o(F,Pr),o(F,Ce),o(Ce,Hr),o(Ce,uo),o(uo,Sr),o(Ce,xr),s(e,da,i),s(e,P,i),o(P,Tr),o(P,po),o(po,Nr),o(P,Lr),o(P,Ge),o(Ge,Or),o(P,Mr),s(e,ua,i),s(e,Y,i),o(Y,ae),o(ae,mo),v(Fe,mo,null),o(Y,Cr),o(Y,vo),o(vo,Gr),s(e,pa,i),s(e,U,i),o(U,le),o(le,go),v(Ye,go,null),o(U,Fr),o(U,wo),o(wo,Yr),s(e,ma,i),s(e,mt,i),o(mt,Ur),s(e,va,i),s(e,vt,i),o(vt,gt),s(e,ga,i),s(e,D,i),o(D,re),o(re,yo),v(Ue,yo,null),o(D,Dr),o(D,_o),o(_o,Rr),s(e,wa,i),s(e,ie,i),o(ie,zr),o(ie,wt),o(wt,Br),o(ie,jr),s(e,ya,i),s(e,yt,i),o(yt,qr),s(e,_a,i),s(e,_t,i),o(_t,bt),s(e,ba,i),s(e,se,i),o(se,Xr),o(se,Et),o(Et,Vr),o(se,Wr),s(e,Ea,i),s(e,R,i),o(R,ne),o(ne,bo),v(De,bo,null),o(R,Qr),o(R,Eo),o(Eo,Jr),s(e,ka,i),s(e,kt,i),o(kt,Kr),s(e,$a,i),s(e,z,i),o(z,he),o(he,ko),v(Re,ko,null),o(z,Zr),o(z,$o),o($o,ei),s(e,Aa,i),s(e,$,i),o($,ti),o($,$t),o($t,oi),o($,ai),o($,ze),o(ze,li),o($,ri),o($,Ao),o(Ao,ii),o($,si),s(e,Ia,i),s(e,B,i),o(B,fe),o(fe,Io),v(Be,Io,null),o(B,ni),o(B,Po),o(Po,hi),s(e,Pa,i),s(e,ce,i),o(ce,fi),o(ce,Ho),o(Ho,ci),o(ce,di),s(e,Ha,i),s(e,At,i),o(At,It),Sa=!0},p:In,i(e){Sa||(g(me.$$.fragment,e),g(ve.$$.fragment,e),g(ge.$$.fragment,e),g(we.$$.fragment,e),g(_e.$$.fragment,e),g(be.$$.fragment,e),g(Ie.$$.fragment,e),g(Oe.$$.fragment,e),g(Me.$$.fragment,e),g(Fe.$$.fragment,e),g(Ye.$$.fragment,e),g(Ue.$$.fragment,e),g(De.$$.fragment,e),g(Re.$$.fragment,e),g(Be.$$.fragment,e),Sa=!0)},o(e){w(me.$$.fragment,e),w(ve.$$.fragment,e),w(ge.$$.fragment,e),w(we.$$.fragment,e),w(_e.$$.fragment,e),w(be.$$.fragment,e),w(Ie.$$.fragment,e),w(Oe.$$.fragment,e),w(Me.$$.fragment,e),w(Fe.$$.fragment,e),w(Ye.$$.fragment,e),w(Ue.$$.fragment,e),w(De.$$.fragment,e),w(Re.$$.fragment,e),w(Be.$$.fragment,e),Sa=!1},d(e){t(S),e&&t(So),e&&t(x),y(me),e&&t(xo),e&&t(T),y(ve),e&&t(To),e&&t(je),e&&t(No),y(ge,e),e&&t(Lo),e&&t(qe),e&&t(Oo),e&&t(Xe),e&&t(Mo),e&&t(We),e&&t(Co),e&&t(Qe),e&&t(Go),e&&t(N),y(we),e&&t(Fo),e&&t(V),e&&t(Yo),y(_e,e),e&&t(Uo),e&&t(L),y(be),e&&t(Do),e&&t(Q),e&&t(Ro),e&&t(E),e&&t(zo),e&&t(Ke),e&&t(Bo),e&&t(O),y(Ie),e&&t(jo),e&&t(K),e&&t(qo),e&&t(Ze),e&&t(Xo),e&&t(et),e&&t(Vo),e&&t(He),e&&t(Wo),e&&t(ot),e&&t(Qo),e&&t(M),e&&t(Jo),e&&t(lt),e&&t(Ko),e&&t(rt),e&&t(Zo),e&&t(st),e&&t(ea),e&&t(nt),e&&t(ta),e&&t(xe),e&&t(oa),e&&t(ft),e&&t(aa),e&&t(u),e&&t(la),e&&t(Z),e&&t(ra),e&&t(Te),e&&t(ia),e&&t(k),e&&t(sa),e&&t(dt),e&&t(na),e&&t(A),e&&t(ha),e&&t(G),y(Oe),e&&t(fa),e&&t(I),e&&t(ca),e&&t(F),y(Me),e&&t(da),e&&t(P),e&&t(ua),e&&t(Y),y(Fe),e&&t(pa),e&&t(U),y(Ye),e&&t(ma),e&&t(mt),e&&t(va),e&&t(vt),e&&t(ga),e&&t(D),y(Ue),e&&t(wa),e&&t(ie),e&&t(ya),e&&t(yt),e&&t(_a),e&&t(_t),e&&t(ba),e&&t(se),e&&t(Ea),e&&t(R),y(De),e&&t(ka),e&&t(kt),e&&t($a),e&&t(z),y(Re),e&&t(Aa),e&&t($),e&&t(Ia),e&&t(B),y(Be),e&&t(Pa),e&&t(ce),e&&t(Ha),e&&t(At)}}}const Sn={local:"interacting-with-models-on-the-hub",sections:[{local:"accessing-models-for-local-use",sections:[{local:"can-i-access-models-programmatically",title:"Can I access models programmatically?"}],title:"Accessing models for local use"},{local:"uploading-models",sections:[{local:"using-the-web-interface",title:"Using the web interface"},{local:"using-git",title:"Using Git"},{local:"using-the-huggingfacehub-client-library",title:"Using the `huggingface_hub` client library"}],title:"Uploading models"},{local:"faq",sections:[{local:"how-can-i-see-what-dataset-was-used-to-train-the-model",title:"How can I see what dataset was used to train the model?"},{local:"how-can-i-see-an-example-of-the-model-in-action",title:"How can I see an example of the model in action?"},{local:"how-do-i-upload-an-update-new-version-of-the-model",title:"How do I upload an update / new version of the model?"},{local:"what-if-i-have-a-different-checkpoint-of-the-model-trained-on-a-different-dataset",title:"What if I have a different checkpoint of the model trained on a different dataset?"},{local:"can-i-link-my-model-to-a-paper-on-arxiv",title:"Can I link my model to a paper on arXiv?"}],title:"FAQ"}],title:"Interacting with models on the hub"};function xn(pi){return Pn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class On extends En{constructor(S){super();kn(this,S,xn,Hn,$n,{})}}export{On as default,Sn as metadata};
