import{S as Wn,i as Qn,s as Jn,e as o,k as d,w as p,t as h,N as Kn,c as l,d as t,m as f,a as r,x as g,h as c,b as i,P as u,G as a,g as n,y as v,L as Zn,q as w,o as y,B as _,v as eh}from"../chunks/vendor-hf-doc-builder.js";import{I as k}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Xn}from"../chunks/CodeBlock-hf-doc-builder.js";function th(ji){let H,Oa,S,ee,Ft,$e,vl,Yt,wl,Ca,M,te,jt,Ie,yl,Ut,_l,Fa,tt,bl,Ya,Ae,ja,at,kl,Ua,T,ot,Ui,El,lt,Ri,Ra,rt,$l,za,G,it,zi,Il,st,Bi,Ba,N,ae,Rt,Pe,Al,zt,Pl,Va,oe,xl,xe,Bt,Hl,Sl,qa,He,Xa,D,le,Vt,Se,Ml,qt,Tl,Wa,re,Gl,Me,Nl,Dl,Qa,E,Ll,Te,Ol,Cl,Ge,Fl,Yl,Ne,jl,Ul,Ja,nt,Rl,Ka,L,ie,Xt,De,zl,Wt,Bl,Za,se,Vl,Le,ql,Xl,eo,ht,Qt,Wl,to,O,ct,Vi,Ql,dt,qi,ao,Oe,Jt,Jl,oo,C,ft,Xi,Kl,ut,Wi,lo,F,Kt,Ce,Zl,Zt,er,tr,ar,ea,ta,or,ro,mt,lr,io,Y,pt,Qi,rr,gt,Ji,so,vt,ir,no,Fe,aa,Ki,ho,Ye,oa,sr,co,wt,nr,fo,m,la,hr,cr,j,dr,ra,fr,ur,ia,mr,pr,gr,sa,vr,wr,na,yr,_r,ha,br,kr,ca,Er,$r,da,Ir,uo,ne,Ar,yt,Pr,xr,mo,je,fa,Hr,po,$,Sr,ua,Mr,Tr,he,ma,Gr,Nr,Dr,pa,Lr,Or,go,U,_t,Zi,Cr,bt,es,vo,A,Fr,Ue,Yr,jr,Re,ga,Ur,Rr,wo,R,ce,va,ze,zr,wa,Br,yo,P,Vr,kt,qr,Xr,ya,Wr,Qr,_o,z,de,_a,Be,Jr,Ve,Kr,ba,Zr,ei,bo,x,ti,ka,ai,oi,qe,li,ri,ko,B,fe,Ea,Xe,ii,$a,si,Eo,V,ue,Ia,We,ni,Aa,hi,$o,Et,ci,Io,q,$t,ts,di,It,as,Ao,X,me,Pa,Qe,fi,xa,ui,Po,pe,mi,At,pi,gi,xo,Pt,vi,Ho,W,xt,os,wi,Ht,ls,So,ge,yi,St,_i,bi,Mo,Q,ve,Ha,Je,ki,Sa,Ei,To,Mt,$i,Go,J,we,Ma,Ke,Ii,Ta,Ai,No,I,Pi,Tt,xi,Hi,Ze,Si,Mi,Ga,Ti,Gi,Do,K,ye,Na,et,Ni,Da,Di,Lo,_e,Li,La,Oi,Ci,Oo,Z,Gt,rs,Fi,Nt,is,Co;return $e=new k({}),Ie=new k({}),Ae=new Xn({props:{code:`git lfs install
git clone <MODEL URL>`,highlighted:`git lfs install
git <span class="hljs-built_in">clone</span> &lt;MODEL URL&gt;`}}),Pe=new k({}),He=new Xn({props:{code:`from huggingface_hub import hf_hub_url, cached_download
import joblib

REPO_ID = "YOUR_REPO_ID"
FILENAME = "sklearn_model.joblib"

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_url, cached_download
<span class="hljs-keyword">import</span> joblib

REPO_ID = <span class="hljs-string">&quot;YOUR_REPO_ID&quot;</span>
FILENAME = <span class="hljs-string">&quot;sklearn_model.joblib&quot;</span>

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`}}),Se=new k({}),De=new k({}),ze=new k({}),Be=new k({}),Xe=new k({}),We=new k({}),Qe=new k({}),Je=new k({}),Ke=new k({}),et=new k({}),{c(){H=o("meta"),Oa=d(),S=o("h1"),ee=o("a"),Ft=o("span"),p($e.$$.fragment),vl=d(),Yt=o("span"),wl=h("Interacting with models on the hub"),Ca=d(),M=o("h2"),te=o("a"),jt=o("span"),p(Ie.$$.fragment),yl=d(),Ut=o("span"),_l=h("Accessing models for local use"),Fa=d(),tt=o("p"),bl=h("Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),Ya=d(),p(Ae.$$.fragment),ja=d(),at=o("p"),kl=h("For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),Ua=d(),T=o("div"),ot=o("img"),El=d(),lt=o("img"),Ra=d(),rt=o("p"),$l=h("If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),za=d(),G=o("div"),it=o("img"),Il=d(),st=o("img"),Ba=d(),N=o("h3"),ae=o("a"),Rt=o("span"),p(Pe.$$.fragment),Al=d(),zt=o("span"),Pl=h("Can I access models programmatically?"),Va=d(),oe=o("p"),xl=h("You can use the "),xe=o("a"),Bt=o("code"),Hl=h("huggingface_hub"),Sl=h(" library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),qa=d(),p(He.$$.fragment),Xa=d(),D=o("h2"),le=o("a"),Vt=o("span"),p(Se.$$.fragment),Ml=d(),qt=o("span"),Tl=h("Uploading models"),Wa=d(),re=o("p"),Gl=h("The first step is to create an account at "),Me=o("a"),Nl=h("Hugging Face"),Dl=h(". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),Qa=d(),E=o("p"),Ll=h("You can link repositories with an individual, such as "),Te=o("a"),Ol=h("osanseviero/fashion_brands_patterns"),Cl=h(", or with an organization, such as "),Ge=o("a"),Fl=h("facebook/bart-large-xsum"),Yl=h(". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),Ne=o("a"),jl=h("here"),Ul=h("."),Ja=d(),nt=o("p"),Rl=h("There are several ways to upload models to the Hub, described below."),Ka=d(),L=o("h3"),ie=o("a"),Xt=o("span"),p(De.$$.fragment),zl=d(),Wt=o("span"),Bl=h("Using the web interface"),Za=d(),se=o("p"),Vl=h("To create a brand new model repository, visit "),Le=o("a"),ql=h("huggingface.co/new"),Xl=h(". Then follow these steps:"),eo=d(),ht=o("ol"),Qt=o("li"),Wl=h("In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),to=d(),O=o("div"),ct=o("img"),Ql=d(),dt=o("img"),ao=d(),Oe=o("ol"),Jt=o("li"),Jl=h("From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),oo=d(),C=o("div"),ft=o("img"),Kl=d(),ut=o("img"),lo=d(),F=o("ol"),Kt=o("li"),Ce=o("p"),Zl=h("Afterwards, click "),Zt=o("strong"),er=h("Commit changes"),tr=h(" to upload your model to the Hub!"),ar=d(),ea=o("li"),ta=o("p"),or=h("Inspect files and history"),ro=d(),mt=o("p"),lr=h("You can check your repository with all the recently added files!"),io=d(),Y=o("div"),pt=o("img"),rr=d(),gt=o("img"),so=d(),vt=o("p"),ir=h("The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),no=d(),Fe=o("div"),aa=o("img"),ho=d(),Ye=o("ol"),oa=o("li"),sr=h("Add metadata"),co=d(),wt=o("p"),nr=h("You can add metadata to your model card. You can specify:"),fo=d(),m=o("ul"),la=o("li"),hr=h("the type of task this model is for, enabling widgets and the Inference API."),cr=d(),j=o("li"),dr=h("the used library ("),ra=o("code"),fr=h("transformers"),ur=h(", "),ia=o("code"),mr=h("spaCy"),pr=h(", etc.)"),gr=d(),sa=o("li"),vr=h("the language"),wr=d(),na=o("li"),yr=h("the dataset"),_r=d(),ha=o("li"),br=h("metrics"),kr=d(),ca=o("li"),Er=h("license"),$r=d(),da=o("li"),Ir=h("a lot more!"),uo=d(),ne=o("p"),Ar=h("Read more about model tags "),yt=o("a"),Pr=h("here"),xr=h("."),mo=d(),je=o("ol"),fa=o("li"),Hr=h("Add TensorBoard traces"),po=d(),$=o("p"),Sr=h("Any repository that contains TensorBoard traces (filenames that contain "),ua=o("code"),Mr=h("tfevents"),Tr=h(") is categorized with the "),he=o("a"),ma=o("code"),Gr=h("TensorBoard"),Nr=h(" tag"),Dr=h(". As a convention, we suggest that you save traces under the "),pa=o("code"),Lr=h("runs/"),Or=h(" subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),go=d(),U=o("div"),_t=o("img"),Cr=d(),bt=o("img"),vo=d(),A=o("p"),Fr=h("Models trained with \u{1F917} Transformers will generate "),Ue=o("a"),Yr=h("TensorBoard traces"),jr=h(" by default if "),Re=o("a"),ga=o("code"),Ur=h("tensorboard"),Rr=h(" is installed."),wo=d(),R=o("h3"),ce=o("a"),va=o("span"),p(ze.$$.fragment),zr=d(),wa=o("span"),Br=h("Using Git"),yo=d(),P=o("p"),Vr=h("Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),kt=o("a"),qr=h("Getting Started with Repositories"),Xr=h(" to learn about using the "),ya=o("code"),Wr=h("git"),Qr=h(" CLI to commit and push your models."),_o=d(),z=o("h3"),de=o("a"),_a=o("span"),p(Be.$$.fragment),Jr=d(),Ve=o("span"),Kr=h("Using the "),ba=o("code"),Zr=h("huggingface_hub"),ei=h(" client library"),bo=d(),x=o("p"),ti=h("The rich feature set in the "),ka=o("code"),ai=h("huggingface_hub"),oi=h(" library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),qe=o("a"),li=h("the client library\u2019s documentation"),ri=h(" to learn more."),ko=d(),B=o("h2"),fe=o("a"),Ea=o("span"),p(Xe.$$.fragment),ii=d(),$a=o("span"),si=h("FAQ"),Eo=d(),V=o("h3"),ue=o("a"),Ia=o("span"),p(We.$$.fragment),ni=d(),Aa=o("span"),hi=h("How can I see what dataset was used to train the model?"),$o=d(),Et=o("p"),ci=h("It\u2019s up to the person who uploaded the model to include the training information! You may find the information about the datasets that the model was trained on in the model card. If the datasets used for the model are on the Hub, the uploader may have included them in the model card\u2019s metadata. In that case, the datasets would be linked with a handy card on the right side of the model page:"),Io=d(),q=o("div"),$t=o("img"),di=d(),It=o("img"),Ao=d(),X=o("h3"),me=o("a"),Pa=o("span"),p(Qe.$$.fragment),fi=d(),xa=o("span"),ui=h("How can I see an example of the model in action?"),Po=d(),pe=o("p"),mi=h("Models can have inference widgets that let you try out the model in the browser! Inference widgets are easy to configure, and there are many different options at your disposal. Visit the "),At=o("a"),pi=h("Widgets documentation"),gi=h(" to learn more."),xo=d(),Pt=o("p"),vi=h("The Hugging Face Hub is also home to Spaces, which are interactive demos used to showcase models. If a model has any Spaces associated with it, you\u2019ll find them linked on the model page like so:"),Ho=d(),W=o("div"),xt=o("img"),wi=d(),Ht=o("img"),So=d(),ge=o("p"),yi=h("Spaces are a great way to show off a model you\u2019ve made or explore new ways to use existing models! Visit the "),St=o("a"),_i=h("Spaces documentation"),bi=h(" to learn how to make your own."),Mo=d(),Q=o("h3"),ve=o("a"),Ha=o("span"),p(Je.$$.fragment),ki=d(),Sa=o("span"),Ei=h("How do I upload an update / new version of the model?"),To=d(),Mt=o("p"),$i=h("Releasing an update to a model that you\u2019ve already published can be done by pushing a new commit to your model\u2019s repo. To do this, go through the same process that you followed to upload your initial model. Your previous model versions will remain in the repository\u2019s commit history."),Go=d(),J=o("h3"),we=o("a"),Ma=o("span"),p(Ke.$$.fragment),Ii=d(),Ta=o("span"),Ai=h("What if I have a different checkpoint of the model trained on a different dataset?"),No=d(),I=o("p"),Pi=h("By convention, each model repo should contain a single checkpoint trained on a particular dataset. You should upload any new checkpoints trained on different datasets to the Hub in a new model repo. You can link the models together by using a "),Tt=o("a"),xi=h("tag in your model card\u2019s metadata"),Hi=h(" or by linking to them in the model cards. The "),Ze=o("a"),Si=h("akiyamasho/AnimeBackgroundGAN-Shinkai"),Mi=h(" model, for example, references other checkpoints in the model card under "),Ga=o("em"),Ti=h("\u201COther pre-trained model versions\u201D"),Gi=h("."),Do=d(),K=o("h3"),ye=o("a"),Na=o("span"),p(et.$$.fragment),Ni=d(),Da=o("span"),Di=h("Can I link my model to a paper on arXiv?"),Lo=d(),_e=o("p"),Li=h("If the model card includes a link to a paper on arXiv, the Hugging Face Hub will extract the arXiv ID  and include it in the model tags with the format "),La=o("code"),Oi=h("arxiv:<PAPER ID>"),Ci=h(". Clicking on the tag will let you visit the paper on arXiv, as well as filter for other models on the Hub that cite the same paper."),Oo=d(),Z=o("div"),Gt=o("img"),Fi=d(),Nt=o("img"),this.h()},l(e){const s=Kn('[data-svelte="svelte-1phssyn"]',document.head);H=l(s,"META",{name:!0,content:!0}),s.forEach(t),Oa=f(e),S=l(e,"H1",{class:!0});var Fo=r(S);ee=l(Fo,"A",{id:!0,class:!0,href:!0});var ss=r(ee);Ft=l(ss,"SPAN",{});var ns=r(Ft);g($e.$$.fragment,ns),ns.forEach(t),ss.forEach(t),vl=f(Fo),Yt=l(Fo,"SPAN",{});var hs=r(Yt);wl=c(hs,"Interacting with models on the hub"),hs.forEach(t),Fo.forEach(t),Ca=f(e),M=l(e,"H2",{class:!0});var Yo=r(M);te=l(Yo,"A",{id:!0,class:!0,href:!0});var cs=r(te);jt=l(cs,"SPAN",{});var ds=r(jt);g(Ie.$$.fragment,ds),ds.forEach(t),cs.forEach(t),yl=f(Yo),Ut=l(Yo,"SPAN",{});var fs=r(Ut);_l=c(fs,"Accessing models for local use"),fs.forEach(t),Yo.forEach(t),Fa=f(e),tt=l(e,"P",{});var us=r(tt);bl=c(us,"Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),us.forEach(t),Ya=f(e),g(Ae.$$.fragment,e),ja=f(e),at=l(e,"P",{});var ms=r(at);kl=c(ms,"For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),ms.forEach(t),Ua=f(e),T=l(e,"DIV",{class:!0});var jo=r(T);ot=l(jo,"IMG",{class:!0,src:!0}),El=f(jo),lt=l(jo,"IMG",{class:!0,src:!0}),jo.forEach(t),Ra=f(e),rt=l(e,"P",{});var ps=r(rt);$l=c(ps,"If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),ps.forEach(t),za=f(e),G=l(e,"DIV",{class:!0});var Uo=r(G);it=l(Uo,"IMG",{class:!0,src:!0}),Il=f(Uo),st=l(Uo,"IMG",{class:!0,src:!0}),Uo.forEach(t),Ba=f(e),N=l(e,"H3",{class:!0});var Ro=r(N);ae=l(Ro,"A",{id:!0,class:!0,href:!0});var gs=r(ae);Rt=l(gs,"SPAN",{});var vs=r(Rt);g(Pe.$$.fragment,vs),vs.forEach(t),gs.forEach(t),Al=f(Ro),zt=l(Ro,"SPAN",{});var ws=r(zt);Pl=c(ws,"Can I access models programmatically?"),ws.forEach(t),Ro.forEach(t),Va=f(e),oe=l(e,"P",{});var zo=r(oe);xl=c(zo,"You can use the "),xe=l(zo,"A",{href:!0,rel:!0});var ys=r(xe);Bt=l(ys,"CODE",{});var _s=r(Bt);Hl=c(_s,"huggingface_hub"),_s.forEach(t),ys.forEach(t),Sl=c(zo," library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),zo.forEach(t),qa=f(e),g(He.$$.fragment,e),Xa=f(e),D=l(e,"H2",{class:!0});var Bo=r(D);le=l(Bo,"A",{id:!0,class:!0,href:!0});var bs=r(le);Vt=l(bs,"SPAN",{});var ks=r(Vt);g(Se.$$.fragment,ks),ks.forEach(t),bs.forEach(t),Ml=f(Bo),qt=l(Bo,"SPAN",{});var Es=r(qt);Tl=c(Es,"Uploading models"),Es.forEach(t),Bo.forEach(t),Wa=f(e),re=l(e,"P",{});var Vo=r(re);Gl=c(Vo,"The first step is to create an account at "),Me=l(Vo,"A",{href:!0,rel:!0});var $s=r(Me);Nl=c($s,"Hugging Face"),$s.forEach(t),Dl=c(Vo,". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),Vo.forEach(t),Qa=f(e),E=l(e,"P",{});var be=r(E);Ll=c(be,"You can link repositories with an individual, such as "),Te=l(be,"A",{href:!0,rel:!0});var Is=r(Te);Ol=c(Is,"osanseviero/fashion_brands_patterns"),Is.forEach(t),Cl=c(be,", or with an organization, such as "),Ge=l(be,"A",{href:!0,rel:!0});var As=r(Ge);Fl=c(As,"facebook/bart-large-xsum"),As.forEach(t),Yl=c(be,". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),Ne=l(be,"A",{href:!0,rel:!0});var Ps=r(Ne);jl=c(Ps,"here"),Ps.forEach(t),Ul=c(be,"."),be.forEach(t),Ja=f(e),nt=l(e,"P",{});var xs=r(nt);Rl=c(xs,"There are several ways to upload models to the Hub, described below."),xs.forEach(t),Ka=f(e),L=l(e,"H3",{class:!0});var qo=r(L);ie=l(qo,"A",{id:!0,class:!0,href:!0});var Hs=r(ie);Xt=l(Hs,"SPAN",{});var Ss=r(Xt);g(De.$$.fragment,Ss),Ss.forEach(t),Hs.forEach(t),zl=f(qo),Wt=l(qo,"SPAN",{});var Ms=r(Wt);Bl=c(Ms,"Using the web interface"),Ms.forEach(t),qo.forEach(t),Za=f(e),se=l(e,"P",{});var Xo=r(se);Vl=c(Xo,"To create a brand new model repository, visit "),Le=l(Xo,"A",{href:!0,rel:!0});var Ts=r(Le);ql=c(Ts,"huggingface.co/new"),Ts.forEach(t),Xl=c(Xo,". Then follow these steps:"),Xo.forEach(t),eo=f(e),ht=l(e,"OL",{});var Gs=r(ht);Qt=l(Gs,"LI",{});var Ns=r(Qt);Wl=c(Ns,"In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),Ns.forEach(t),Gs.forEach(t),to=f(e),O=l(e,"DIV",{class:!0});var Wo=r(O);ct=l(Wo,"IMG",{class:!0,src:!0}),Ql=f(Wo),dt=l(Wo,"IMG",{class:!0,src:!0}),Wo.forEach(t),ao=f(e),Oe=l(e,"OL",{start:!0});var Ds=r(Oe);Jt=l(Ds,"LI",{});var Ls=r(Jt);Jl=c(Ls,"From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),Ls.forEach(t),Ds.forEach(t),oo=f(e),C=l(e,"DIV",{class:!0});var Qo=r(C);ft=l(Qo,"IMG",{class:!0,src:!0}),Kl=f(Qo),ut=l(Qo,"IMG",{class:!0,src:!0}),Qo.forEach(t),lo=f(e),F=l(e,"OL",{start:!0});var Jo=r(F);Kt=l(Jo,"LI",{});var Os=r(Kt);Ce=l(Os,"P",{});var Ko=r(Ce);Zl=c(Ko,"Afterwards, click "),Zt=l(Ko,"STRONG",{});var Cs=r(Zt);er=c(Cs,"Commit changes"),Cs.forEach(t),tr=c(Ko," to upload your model to the Hub!"),Ko.forEach(t),Os.forEach(t),ar=f(Jo),ea=l(Jo,"LI",{});var Fs=r(ea);ta=l(Fs,"P",{});var Ys=r(ta);or=c(Ys,"Inspect files and history"),Ys.forEach(t),Fs.forEach(t),Jo.forEach(t),ro=f(e),mt=l(e,"P",{});var js=r(mt);lr=c(js,"You can check your repository with all the recently added files!"),js.forEach(t),io=f(e),Y=l(e,"DIV",{class:!0});var Zo=r(Y);pt=l(Zo,"IMG",{class:!0,src:!0}),rr=f(Zo),gt=l(Zo,"IMG",{class:!0,src:!0}),Zo.forEach(t),so=f(e),vt=l(e,"P",{});var Us=r(vt);ir=c(Us,"The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),Us.forEach(t),no=f(e),Fe=l(e,"DIV",{class:!0});var Rs=r(Fe);aa=l(Rs,"IMG",{src:!0}),Rs.forEach(t),ho=f(e),Ye=l(e,"OL",{start:!0});var zs=r(Ye);oa=l(zs,"LI",{});var Bs=r(oa);sr=c(Bs,"Add metadata"),Bs.forEach(t),zs.forEach(t),co=f(e),wt=l(e,"P",{});var Vs=r(wt);nr=c(Vs,"You can add metadata to your model card. You can specify:"),Vs.forEach(t),fo=f(e),m=l(e,"UL",{});var b=r(m);la=l(b,"LI",{});var qs=r(la);hr=c(qs,"the type of task this model is for, enabling widgets and the Inference API."),qs.forEach(t),cr=f(b),j=l(b,"LI",{});var Dt=r(j);dr=c(Dt,"the used library ("),ra=l(Dt,"CODE",{});var Xs=r(ra);fr=c(Xs,"transformers"),Xs.forEach(t),ur=c(Dt,", "),ia=l(Dt,"CODE",{});var Ws=r(ia);mr=c(Ws,"spaCy"),Ws.forEach(t),pr=c(Dt,", etc.)"),Dt.forEach(t),gr=f(b),sa=l(b,"LI",{});var Qs=r(sa);vr=c(Qs,"the language"),Qs.forEach(t),wr=f(b),na=l(b,"LI",{});var Js=r(na);yr=c(Js,"the dataset"),Js.forEach(t),_r=f(b),ha=l(b,"LI",{});var Ks=r(ha);br=c(Ks,"metrics"),Ks.forEach(t),kr=f(b),ca=l(b,"LI",{});var Zs=r(ca);Er=c(Zs,"license"),Zs.forEach(t),$r=f(b),da=l(b,"LI",{});var en=r(da);Ir=c(en,"a lot more!"),en.forEach(t),b.forEach(t),uo=f(e),ne=l(e,"P",{});var el=r(ne);Ar=c(el,"Read more about model tags "),yt=l(el,"A",{href:!0});var tn=r(yt);Pr=c(tn,"here"),tn.forEach(t),xr=c(el,"."),el.forEach(t),mo=f(e),je=l(e,"OL",{start:!0});var an=r(je);fa=l(an,"LI",{});var on=r(fa);Hr=c(on,"Add TensorBoard traces"),on.forEach(t),an.forEach(t),po=f(e),$=l(e,"P",{});var ke=r($);Sr=c(ke,"Any repository that contains TensorBoard traces (filenames that contain "),ua=l(ke,"CODE",{});var ln=r(ua);Mr=c(ln,"tfevents"),ln.forEach(t),Tr=c(ke,") is categorized with the "),he=l(ke,"A",{href:!0,rel:!0});var Yi=r(he);ma=l(Yi,"CODE",{});var rn=r(ma);Gr=c(rn,"TensorBoard"),rn.forEach(t),Nr=c(Yi," tag"),Yi.forEach(t),Dr=c(ke,". As a convention, we suggest that you save traces under the "),pa=l(ke,"CODE",{});var sn=r(pa);Lr=c(sn,"runs/"),sn.forEach(t),Or=c(ke," subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),ke.forEach(t),go=f(e),U=l(e,"DIV",{class:!0});var tl=r(U);_t=l(tl,"IMG",{class:!0,src:!0}),Cr=f(tl),bt=l(tl,"IMG",{class:!0,src:!0}),tl.forEach(t),vo=f(e),A=l(e,"P",{});var Lt=r(A);Fr=c(Lt,"Models trained with \u{1F917} Transformers will generate "),Ue=l(Lt,"A",{href:!0,rel:!0});var nn=r(Ue);Yr=c(nn,"TensorBoard traces"),nn.forEach(t),jr=c(Lt," by default if "),Re=l(Lt,"A",{href:!0,rel:!0});var hn=r(Re);ga=l(hn,"CODE",{});var cn=r(ga);Ur=c(cn,"tensorboard"),cn.forEach(t),hn.forEach(t),Rr=c(Lt," is installed."),Lt.forEach(t),wo=f(e),R=l(e,"H3",{class:!0});var al=r(R);ce=l(al,"A",{id:!0,class:!0,href:!0});var dn=r(ce);va=l(dn,"SPAN",{});var fn=r(va);g(ze.$$.fragment,fn),fn.forEach(t),dn.forEach(t),zr=f(al),wa=l(al,"SPAN",{});var un=r(wa);Br=c(un,"Using Git"),un.forEach(t),al.forEach(t),yo=f(e),P=l(e,"P",{});var Ot=r(P);Vr=c(Ot,"Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),kt=l(Ot,"A",{href:!0});var mn=r(kt);qr=c(mn,"Getting Started with Repositories"),mn.forEach(t),Xr=c(Ot," to learn about using the "),ya=l(Ot,"CODE",{});var pn=r(ya);Wr=c(pn,"git"),pn.forEach(t),Qr=c(Ot," CLI to commit and push your models."),Ot.forEach(t),_o=f(e),z=l(e,"H3",{class:!0});var ol=r(z);de=l(ol,"A",{id:!0,class:!0,href:!0});var gn=r(de);_a=l(gn,"SPAN",{});var vn=r(_a);g(Be.$$.fragment,vn),vn.forEach(t),gn.forEach(t),Jr=f(ol),Ve=l(ol,"SPAN",{});var ll=r(Ve);Kr=c(ll,"Using the "),ba=l(ll,"CODE",{});var wn=r(ba);Zr=c(wn,"huggingface_hub"),wn.forEach(t),ei=c(ll," client library"),ll.forEach(t),ol.forEach(t),bo=f(e),x=l(e,"P",{});var Ct=r(x);ti=c(Ct,"The rich feature set in the "),ka=l(Ct,"CODE",{});var yn=r(ka);ai=c(yn,"huggingface_hub"),yn.forEach(t),oi=c(Ct," library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),qe=l(Ct,"A",{href:!0,rel:!0});var _n=r(qe);li=c(_n,"the client library\u2019s documentation"),_n.forEach(t),ri=c(Ct," to learn more."),Ct.forEach(t),ko=f(e),B=l(e,"H2",{class:!0});var rl=r(B);fe=l(rl,"A",{id:!0,class:!0,href:!0});var bn=r(fe);Ea=l(bn,"SPAN",{});var kn=r(Ea);g(Xe.$$.fragment,kn),kn.forEach(t),bn.forEach(t),ii=f(rl),$a=l(rl,"SPAN",{});var En=r($a);si=c(En,"FAQ"),En.forEach(t),rl.forEach(t),Eo=f(e),V=l(e,"H3",{class:!0});var il=r(V);ue=l(il,"A",{id:!0,class:!0,href:!0});var $n=r(ue);Ia=l($n,"SPAN",{});var In=r(Ia);g(We.$$.fragment,In),In.forEach(t),$n.forEach(t),ni=f(il),Aa=l(il,"SPAN",{});var An=r(Aa);hi=c(An,"How can I see what dataset was used to train the model?"),An.forEach(t),il.forEach(t),$o=f(e),Et=l(e,"P",{});var Pn=r(Et);ci=c(Pn,"It\u2019s up to the person who uploaded the model to include the training information! You may find the information about the datasets that the model was trained on in the model card. If the datasets used for the model are on the Hub, the uploader may have included them in the model card\u2019s metadata. In that case, the datasets would be linked with a handy card on the right side of the model page:"),Pn.forEach(t),Io=f(e),q=l(e,"DIV",{class:!0});var sl=r(q);$t=l(sl,"IMG",{class:!0,src:!0}),di=f(sl),It=l(sl,"IMG",{class:!0,src:!0}),sl.forEach(t),Ao=f(e),X=l(e,"H3",{class:!0});var nl=r(X);me=l(nl,"A",{id:!0,class:!0,href:!0});var xn=r(me);Pa=l(xn,"SPAN",{});var Hn=r(Pa);g(Qe.$$.fragment,Hn),Hn.forEach(t),xn.forEach(t),fi=f(nl),xa=l(nl,"SPAN",{});var Sn=r(xa);ui=c(Sn,"How can I see an example of the model in action?"),Sn.forEach(t),nl.forEach(t),Po=f(e),pe=l(e,"P",{});var hl=r(pe);mi=c(hl,"Models can have inference widgets that let you try out the model in the browser! Inference widgets are easy to configure, and there are many different options at your disposal. Visit the "),At=l(hl,"A",{href:!0});var Mn=r(At);pi=c(Mn,"Widgets documentation"),Mn.forEach(t),gi=c(hl," to learn more."),hl.forEach(t),xo=f(e),Pt=l(e,"P",{});var Tn=r(Pt);vi=c(Tn,"The Hugging Face Hub is also home to Spaces, which are interactive demos used to showcase models. If a model has any Spaces associated with it, you\u2019ll find them linked on the model page like so:"),Tn.forEach(t),Ho=f(e),W=l(e,"DIV",{class:!0});var cl=r(W);xt=l(cl,"IMG",{class:!0,src:!0}),wi=f(cl),Ht=l(cl,"IMG",{class:!0,src:!0}),cl.forEach(t),So=f(e),ge=l(e,"P",{});var dl=r(ge);yi=c(dl,"Spaces are a great way to show off a model you\u2019ve made or explore new ways to use existing models! Visit the "),St=l(dl,"A",{href:!0});var Gn=r(St);_i=c(Gn,"Spaces documentation"),Gn.forEach(t),bi=c(dl," to learn how to make your own."),dl.forEach(t),Mo=f(e),Q=l(e,"H3",{class:!0});var fl=r(Q);ve=l(fl,"A",{id:!0,class:!0,href:!0});var Nn=r(ve);Ha=l(Nn,"SPAN",{});var Dn=r(Ha);g(Je.$$.fragment,Dn),Dn.forEach(t),Nn.forEach(t),ki=f(fl),Sa=l(fl,"SPAN",{});var Ln=r(Sa);Ei=c(Ln,"How do I upload an update / new version of the model?"),Ln.forEach(t),fl.forEach(t),To=f(e),Mt=l(e,"P",{});var On=r(Mt);$i=c(On,"Releasing an update to a model that you\u2019ve already published can be done by pushing a new commit to your model\u2019s repo. To do this, go through the same process that you followed to upload your initial model. Your previous model versions will remain in the repository\u2019s commit history."),On.forEach(t),Go=f(e),J=l(e,"H3",{class:!0});var ul=r(J);we=l(ul,"A",{id:!0,class:!0,href:!0});var Cn=r(we);Ma=l(Cn,"SPAN",{});var Fn=r(Ma);g(Ke.$$.fragment,Fn),Fn.forEach(t),Cn.forEach(t),Ii=f(ul),Ta=l(ul,"SPAN",{});var Yn=r(Ta);Ai=c(Yn,"What if I have a different checkpoint of the model trained on a different dataset?"),Yn.forEach(t),ul.forEach(t),No=f(e),I=l(e,"P",{});var Ee=r(I);Pi=c(Ee,"By convention, each model repo should contain a single checkpoint trained on a particular dataset. You should upload any new checkpoints trained on different datasets to the Hub in a new model repo. You can link the models together by using a "),Tt=l(Ee,"A",{href:!0});var jn=r(Tt);xi=c(jn,"tag in your model card\u2019s metadata"),jn.forEach(t),Hi=c(Ee," or by linking to them in the model cards. The "),Ze=l(Ee,"A",{href:!0,rel:!0});var Un=r(Ze);Si=c(Un,"akiyamasho/AnimeBackgroundGAN-Shinkai"),Un.forEach(t),Mi=c(Ee," model, for example, references other checkpoints in the model card under "),Ga=l(Ee,"EM",{});var Rn=r(Ga);Ti=c(Rn,"\u201COther pre-trained model versions\u201D"),Rn.forEach(t),Gi=c(Ee,"."),Ee.forEach(t),Do=f(e),K=l(e,"H3",{class:!0});var ml=r(K);ye=l(ml,"A",{id:!0,class:!0,href:!0});var zn=r(ye);Na=l(zn,"SPAN",{});var Bn=r(Na);g(et.$$.fragment,Bn),Bn.forEach(t),zn.forEach(t),Ni=f(ml),Da=l(ml,"SPAN",{});var Vn=r(Da);Di=c(Vn,"Can I link my model to a paper on arXiv?"),Vn.forEach(t),ml.forEach(t),Lo=f(e),_e=l(e,"P",{});var pl=r(_e);Li=c(pl,"If the model card includes a link to a paper on arXiv, the Hugging Face Hub will extract the arXiv ID  and include it in the model tags with the format "),La=l(pl,"CODE",{});var qn=r(La);Oi=c(qn,"arxiv:<PAPER ID>"),qn.forEach(t),Ci=c(pl,". Clicking on the tag will let you visit the paper on arXiv, as well as filter for other models on the Hub that cite the same paper."),pl.forEach(t),Oo=f(e),Z=l(e,"DIV",{class:!0});var gl=r(Z);Gt=l(gl,"IMG",{class:!0,src:!0}),Fi=f(gl),Nt=l(gl,"IMG",{class:!0,src:!0}),gl.forEach(t),this.h()},h(){i(H,"name","hf:doc:metadata"),i(H,"content",JSON.stringify(ah)),i(ee,"id","interacting-with-models-on-the-hub"),i(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ee,"href","#interacting-with-models-on-the-hub"),i(S,"class","relative group"),i(te,"id","accessing-models-for-local-use"),i(te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(te,"href","#accessing-models-for-local-use"),i(M,"class","relative group"),i(ot,"class","block dark:hidden"),u(ot.src,Ui="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage.png")||i(ot,"src",Ui),i(lt,"class","hidden dark:block"),u(lt.src,Ri="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-dark.png")||i(lt,"src",Ri),i(T,"class","flex justify-center"),i(it,"class","block dark:hidden"),u(it.src,zi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-modal.png")||i(it,"src",zi),i(st,"class","hidden dark:block"),u(st.src,Bi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-modal-dark.png")||i(st,"src",Bi),i(G,"class","flex justify-center"),i(ae,"id","can-i-access-models-programmatically"),i(ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ae,"href","#can-i-access-models-programmatically"),i(N,"class","relative group"),i(xe,"href","https://github.com/huggingface/huggingface_hub"),i(xe,"rel","nofollow"),i(le,"id","uploading-models"),i(le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(le,"href","#uploading-models"),i(D,"class","relative group"),i(Me,"href","https://huggingface.co/login"),i(Me,"rel","nofollow"),i(Te,"href","https://huggingface.co/osanseviero/fashion_brands_patterns"),i(Te,"rel","nofollow"),i(Ge,"href","https://huggingface.co/facebook/bart-large-xsum"),i(Ge,"rel","nofollow"),i(Ne,"href","https://huggingface.co/organizations/new"),i(Ne,"rel","nofollow"),i(ie,"id","using-the-web-interface"),i(ie,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ie,"href","#using-the-web-interface"),i(L,"class","relative group"),i(Le,"href","http://huggingface.co/new"),i(Le,"rel","nofollow"),i(ct,"class","block dark:hidden"),u(ct.src,Vi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file.png")||i(ct,"src",Vi),i(dt,"class","hidden dark:block"),u(dt.src,qi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file-dark.png")||i(dt,"src",qi),i(O,"class","flex justify-center"),i(Oe,"start","2"),i(ft,"class","block dark:hidden"),u(ft.src,Xi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file.png")||i(ft,"src",Xi),i(ut,"class","hidden dark:block"),u(ut.src,Wi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file-dark.png")||i(ut,"src",Wi),i(C,"class","flex justify-center"),i(F,"start","3"),i(pt,"class","block dark:hidden"),u(pt.src,Qi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png")||i(pt,"src",Qi),i(gt,"class","hidden dark:block"),u(gt.src,Ji="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files-dark.png")||i(gt,"src",Ji),i(Y,"class","flex justify-center"),u(aa.src,Ki="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif")||i(aa,"src",Ki),i(Fe,"class","flex justify-center"),i(Ye,"start","5"),i(yt,"href","/docs/hub/model-repos#model-card-metadata"),i(je,"start","6"),i(he,"href","https://huggingface.co/models?filter=tensorboard"),i(he,"rel","nofollow"),i(_t,"class","block dark:hidden"),u(_t.src,Zi="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/tensorboard.png")||i(_t,"src",Zi),i(bt,"class","hidden dark:block"),u(bt.src,es="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/tensorboard-dark.png")||i(bt,"src",es),i(U,"class","flex justify-center"),i(Ue,"href","https://huggingface.co/transformers/main_classes/callback.html?highlight=tensorboard#transformers.integrations.TensorBoardCallback"),i(Ue,"rel","nofollow"),i(Re,"href","https://pypi.org/project/tensorboard/"),i(Re,"rel","nofollow"),i(ce,"id","using-git"),i(ce,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ce,"href","#using-git"),i(R,"class","relative group"),i(kt,"href","repositories-getting-started.md"),i(de,"id","using-the-huggingfacehub-client-library"),i(de,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(de,"href","#using-the-huggingfacehub-client-library"),i(z,"class","relative group"),i(qe,"href","https://huggingface.co/docs/huggingface_hub/index"),i(qe,"rel","nofollow"),i(fe,"id","faq"),i(fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(fe,"href","#faq"),i(B,"class","relative group"),i(ue,"id","how-can-i-see-what-dataset-was-used-to-train-the-model"),i(ue,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ue,"href","#how-can-i-see-what-dataset-was-used-to-train-the-model"),i(V,"class","relative group"),i($t,"class","block dark:hidden"),u($t.src,ts="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-linked-datasets.png")||i($t,"src",ts),i(It,"class","hidden dark:block"),u(It.src,as="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-linked-datasets-dark.png")||i(It,"src",as),i(q,"class","flex justify-center"),i(me,"id","how-can-i-see-an-example-of-the-model-in-action"),i(me,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(me,"href","#how-can-i-see-an-example-of-the-model-in-action"),i(X,"class","relative group"),i(At,"href","models-widgets.md"),i(xt,"class","block dark:hidden"),u(xt.src,os="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-linked-spaces.png")||i(xt,"src",os),i(Ht,"class","hidden dark:block"),u(Ht.src,ls="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-linked-spaces-dark.png")||i(Ht,"src",ls),i(W,"class","flex justify-center"),i(St,"href","./spaces-main"),i(ve,"id","how-do-i-upload-an-update-new-version-of-the-model"),i(ve,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ve,"href","#how-do-i-upload-an-update-new-version-of-the-model"),i(Q,"class","relative group"),i(we,"id","what-if-i-have-a-different-checkpoint-of-the-model-trained-on-a-different-dataset"),i(we,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(we,"href","#what-if-i-have-a-different-checkpoint-of-the-model-trained-on-a-different-dataset"),i(J,"class","relative group"),i(Tt,"href","./modelcard"),i(Ze,"href","https://huggingface.co/akiyamasho/AnimeBackgroundGAN-Shinkai#other-pre-trained-model-versions"),i(Ze,"rel","nofollow"),i(ye,"id","can-i-link-my-model-to-a-paper-on-arxiv"),i(ye,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ye,"href","#can-i-link-my-model-to-a-paper-on-arxiv"),i(K,"class","relative group"),i(Gt,"class","block dark:hidden"),u(Gt.src,rs="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/datasets-arxiv.png")||i(Gt,"src",rs),i(Nt,"class","hidden dark:block"),u(Nt.src,is="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/datasets-arxiv-dark.png")||i(Nt,"src",is),i(Z,"class","flex justify-center")},m(e,s){a(document.head,H),n(e,Oa,s),n(e,S,s),a(S,ee),a(ee,Ft),v($e,Ft,null),a(S,vl),a(S,Yt),a(Yt,wl),n(e,Ca,s),n(e,M,s),a(M,te),a(te,jt),v(Ie,jt,null),a(M,yl),a(M,Ut),a(Ut,_l),n(e,Fa,s),n(e,tt,s),a(tt,bl),n(e,Ya,s),v(Ae,e,s),n(e,ja,s),n(e,at,s),a(at,kl),n(e,Ua,s),n(e,T,s),a(T,ot),a(T,El),a(T,lt),n(e,Ra,s),n(e,rt,s),a(rt,$l),n(e,za,s),n(e,G,s),a(G,it),a(G,Il),a(G,st),n(e,Ba,s),n(e,N,s),a(N,ae),a(ae,Rt),v(Pe,Rt,null),a(N,Al),a(N,zt),a(zt,Pl),n(e,Va,s),n(e,oe,s),a(oe,xl),a(oe,xe),a(xe,Bt),a(Bt,Hl),a(oe,Sl),n(e,qa,s),v(He,e,s),n(e,Xa,s),n(e,D,s),a(D,le),a(le,Vt),v(Se,Vt,null),a(D,Ml),a(D,qt),a(qt,Tl),n(e,Wa,s),n(e,re,s),a(re,Gl),a(re,Me),a(Me,Nl),a(re,Dl),n(e,Qa,s),n(e,E,s),a(E,Ll),a(E,Te),a(Te,Ol),a(E,Cl),a(E,Ge),a(Ge,Fl),a(E,Yl),a(E,Ne),a(Ne,jl),a(E,Ul),n(e,Ja,s),n(e,nt,s),a(nt,Rl),n(e,Ka,s),n(e,L,s),a(L,ie),a(ie,Xt),v(De,Xt,null),a(L,zl),a(L,Wt),a(Wt,Bl),n(e,Za,s),n(e,se,s),a(se,Vl),a(se,Le),a(Le,ql),a(se,Xl),n(e,eo,s),n(e,ht,s),a(ht,Qt),a(Qt,Wl),n(e,to,s),n(e,O,s),a(O,ct),a(O,Ql),a(O,dt),n(e,ao,s),n(e,Oe,s),a(Oe,Jt),a(Jt,Jl),n(e,oo,s),n(e,C,s),a(C,ft),a(C,Kl),a(C,ut),n(e,lo,s),n(e,F,s),a(F,Kt),a(Kt,Ce),a(Ce,Zl),a(Ce,Zt),a(Zt,er),a(Ce,tr),a(F,ar),a(F,ea),a(ea,ta),a(ta,or),n(e,ro,s),n(e,mt,s),a(mt,lr),n(e,io,s),n(e,Y,s),a(Y,pt),a(Y,rr),a(Y,gt),n(e,so,s),n(e,vt,s),a(vt,ir),n(e,no,s),n(e,Fe,s),a(Fe,aa),n(e,ho,s),n(e,Ye,s),a(Ye,oa),a(oa,sr),n(e,co,s),n(e,wt,s),a(wt,nr),n(e,fo,s),n(e,m,s),a(m,la),a(la,hr),a(m,cr),a(m,j),a(j,dr),a(j,ra),a(ra,fr),a(j,ur),a(j,ia),a(ia,mr),a(j,pr),a(m,gr),a(m,sa),a(sa,vr),a(m,wr),a(m,na),a(na,yr),a(m,_r),a(m,ha),a(ha,br),a(m,kr),a(m,ca),a(ca,Er),a(m,$r),a(m,da),a(da,Ir),n(e,uo,s),n(e,ne,s),a(ne,Ar),a(ne,yt),a(yt,Pr),a(ne,xr),n(e,mo,s),n(e,je,s),a(je,fa),a(fa,Hr),n(e,po,s),n(e,$,s),a($,Sr),a($,ua),a(ua,Mr),a($,Tr),a($,he),a(he,ma),a(ma,Gr),a(he,Nr),a($,Dr),a($,pa),a(pa,Lr),a($,Or),n(e,go,s),n(e,U,s),a(U,_t),a(U,Cr),a(U,bt),n(e,vo,s),n(e,A,s),a(A,Fr),a(A,Ue),a(Ue,Yr),a(A,jr),a(A,Re),a(Re,ga),a(ga,Ur),a(A,Rr),n(e,wo,s),n(e,R,s),a(R,ce),a(ce,va),v(ze,va,null),a(R,zr),a(R,wa),a(wa,Br),n(e,yo,s),n(e,P,s),a(P,Vr),a(P,kt),a(kt,qr),a(P,Xr),a(P,ya),a(ya,Wr),a(P,Qr),n(e,_o,s),n(e,z,s),a(z,de),a(de,_a),v(Be,_a,null),a(z,Jr),a(z,Ve),a(Ve,Kr),a(Ve,ba),a(ba,Zr),a(Ve,ei),n(e,bo,s),n(e,x,s),a(x,ti),a(x,ka),a(ka,ai),a(x,oi),a(x,qe),a(qe,li),a(x,ri),n(e,ko,s),n(e,B,s),a(B,fe),a(fe,Ea),v(Xe,Ea,null),a(B,ii),a(B,$a),a($a,si),n(e,Eo,s),n(e,V,s),a(V,ue),a(ue,Ia),v(We,Ia,null),a(V,ni),a(V,Aa),a(Aa,hi),n(e,$o,s),n(e,Et,s),a(Et,ci),n(e,Io,s),n(e,q,s),a(q,$t),a(q,di),a(q,It),n(e,Ao,s),n(e,X,s),a(X,me),a(me,Pa),v(Qe,Pa,null),a(X,fi),a(X,xa),a(xa,ui),n(e,Po,s),n(e,pe,s),a(pe,mi),a(pe,At),a(At,pi),a(pe,gi),n(e,xo,s),n(e,Pt,s),a(Pt,vi),n(e,Ho,s),n(e,W,s),a(W,xt),a(W,wi),a(W,Ht),n(e,So,s),n(e,ge,s),a(ge,yi),a(ge,St),a(St,_i),a(ge,bi),n(e,Mo,s),n(e,Q,s),a(Q,ve),a(ve,Ha),v(Je,Ha,null),a(Q,ki),a(Q,Sa),a(Sa,Ei),n(e,To,s),n(e,Mt,s),a(Mt,$i),n(e,Go,s),n(e,J,s),a(J,we),a(we,Ma),v(Ke,Ma,null),a(J,Ii),a(J,Ta),a(Ta,Ai),n(e,No,s),n(e,I,s),a(I,Pi),a(I,Tt),a(Tt,xi),a(I,Hi),a(I,Ze),a(Ze,Si),a(I,Mi),a(I,Ga),a(Ga,Ti),a(I,Gi),n(e,Do,s),n(e,K,s),a(K,ye),a(ye,Na),v(et,Na,null),a(K,Ni),a(K,Da),a(Da,Di),n(e,Lo,s),n(e,_e,s),a(_e,Li),a(_e,La),a(La,Oi),a(_e,Ci),n(e,Oo,s),n(e,Z,s),a(Z,Gt),a(Z,Fi),a(Z,Nt),Co=!0},p:Zn,i(e){Co||(w($e.$$.fragment,e),w(Ie.$$.fragment,e),w(Ae.$$.fragment,e),w(Pe.$$.fragment,e),w(He.$$.fragment,e),w(Se.$$.fragment,e),w(De.$$.fragment,e),w(ze.$$.fragment,e),w(Be.$$.fragment,e),w(Xe.$$.fragment,e),w(We.$$.fragment,e),w(Qe.$$.fragment,e),w(Je.$$.fragment,e),w(Ke.$$.fragment,e),w(et.$$.fragment,e),Co=!0)},o(e){y($e.$$.fragment,e),y(Ie.$$.fragment,e),y(Ae.$$.fragment,e),y(Pe.$$.fragment,e),y(He.$$.fragment,e),y(Se.$$.fragment,e),y(De.$$.fragment,e),y(ze.$$.fragment,e),y(Be.$$.fragment,e),y(Xe.$$.fragment,e),y(We.$$.fragment,e),y(Qe.$$.fragment,e),y(Je.$$.fragment,e),y(Ke.$$.fragment,e),y(et.$$.fragment,e),Co=!1},d(e){t(H),e&&t(Oa),e&&t(S),_($e),e&&t(Ca),e&&t(M),_(Ie),e&&t(Fa),e&&t(tt),e&&t(Ya),_(Ae,e),e&&t(ja),e&&t(at),e&&t(Ua),e&&t(T),e&&t(Ra),e&&t(rt),e&&t(za),e&&t(G),e&&t(Ba),e&&t(N),_(Pe),e&&t(Va),e&&t(oe),e&&t(qa),_(He,e),e&&t(Xa),e&&t(D),_(Se),e&&t(Wa),e&&t(re),e&&t(Qa),e&&t(E),e&&t(Ja),e&&t(nt),e&&t(Ka),e&&t(L),_(De),e&&t(Za),e&&t(se),e&&t(eo),e&&t(ht),e&&t(to),e&&t(O),e&&t(ao),e&&t(Oe),e&&t(oo),e&&t(C),e&&t(lo),e&&t(F),e&&t(ro),e&&t(mt),e&&t(io),e&&t(Y),e&&t(so),e&&t(vt),e&&t(no),e&&t(Fe),e&&t(ho),e&&t(Ye),e&&t(co),e&&t(wt),e&&t(fo),e&&t(m),e&&t(uo),e&&t(ne),e&&t(mo),e&&t(je),e&&t(po),e&&t($),e&&t(go),e&&t(U),e&&t(vo),e&&t(A),e&&t(wo),e&&t(R),_(ze),e&&t(yo),e&&t(P),e&&t(_o),e&&t(z),_(Be),e&&t(bo),e&&t(x),e&&t(ko),e&&t(B),_(Xe),e&&t(Eo),e&&t(V),_(We),e&&t($o),e&&t(Et),e&&t(Io),e&&t(q),e&&t(Ao),e&&t(X),_(Qe),e&&t(Po),e&&t(pe),e&&t(xo),e&&t(Pt),e&&t(Ho),e&&t(W),e&&t(So),e&&t(ge),e&&t(Mo),e&&t(Q),_(Je),e&&t(To),e&&t(Mt),e&&t(Go),e&&t(J),_(Ke),e&&t(No),e&&t(I),e&&t(Do),e&&t(K),_(et),e&&t(Lo),e&&t(_e),e&&t(Oo),e&&t(Z)}}}const ah={local:"interacting-with-models-on-the-hub",sections:[{local:"accessing-models-for-local-use",sections:[{local:"can-i-access-models-programmatically",title:"Can I access models programmatically?"}],title:"Accessing models for local use"},{local:"uploading-models",sections:[{local:"using-the-web-interface",title:"Using the web interface"},{local:"using-git",title:"Using Git"},{local:"using-the-huggingfacehub-client-library",title:"Using the `huggingface_hub` client library"}],title:"Uploading models"},{local:"faq",sections:[{local:"how-can-i-see-what-dataset-was-used-to-train-the-model",title:"How can I see what dataset was used to train the model?"},{local:"how-can-i-see-an-example-of-the-model-in-action",title:"How can I see an example of the model in action?"},{local:"how-do-i-upload-an-update-new-version-of-the-model",title:"How do I upload an update / new version of the model?"},{local:"what-if-i-have-a-different-checkpoint-of-the-model-trained-on-a-different-dataset",title:"What if I have a different checkpoint of the model trained on a different dataset?"},{local:"can-i-link-my-model-to-a-paper-on-arxiv",title:"Can I link my model to a paper on arXiv?"}],title:"FAQ"}],title:"Interacting with models on the hub"};function oh(ji){return eh(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class sh extends Wn{constructor(H){super();Qn(this,H,oh,th,Jn,{})}}export{sh as default,ah as metadata};
