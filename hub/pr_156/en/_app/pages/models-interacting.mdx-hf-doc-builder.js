import{S as ns,i as cs,s as hs,e as a,k as f,w as U,t as n,N as fs,c as l,d as t,m as u,a as r,x as j,h as c,b as s,P as p,G as o,g as h,y as H,L as us,q as N,o as F,B as Y,v as ds}from"../chunks/vendor-hf-doc-builder.js";import{I as Le}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as is}from"../chunks/CodeBlock-hf-doc-builder.js";function ms(Sl){let w,jt,E,z,et,ae,Ro,tt,Bo,Ht,k,R,ot,le,qo,at,Vo,Nt,Me,Jo,Ft,re,Yt,xe,Ko,zt,$,Oe,Dl,Qo,Ge,Cl,Rt,Se,Wo,Bt,I,De,Ul,Xo,Ce,jl,qt,A,B,lt,se,Zo,rt,ea,Vt,q,ta,ie,st,oa,aa,Jt,ne,Kt,P,V,it,ce,la,nt,ra,Qt,J,sa,he,ia,na,Wt,g,ca,fe,ha,fa,ue,ua,da,de,ma,pa,Xt,Ue,ga,Zt,T,K,ct,me,va,ht,_a,eo,Q,ba,pe,ya,wa,to,je,ft,Ea,oo,L,ge,Hl,ka,ve,Nl,ao,_e,ut,$a,lo,M,He,Fl,Ia,Ne,Yl,ro,x,dt,be,Aa,mt,Pa,Ta,La,pt,gt,Ma,so,Fe,xa,io,O,Ye,zl,Oa,ze,Rl,no,Re,Ga,co,ye,vt,Bl,ho,we,_t,Sa,fo,Be,Da,uo,d,bt,Ca,Ua,G,ja,yt,Ha,Na,wt,Fa,Ya,za,Et,Ra,Ba,kt,qa,Va,$t,Ja,Ka,It,Qa,Wa,At,Xa,mo,W,Za,qe,el,tl,po,Ee,Pt,ol,go,v,al,Tt,ll,rl,X,Lt,sl,il,nl,Mt,cl,hl,vo,S,Ve,ql,fl,Je,Vl,_o,_,ul,ke,dl,ml,$e,xt,pl,gl,bo,D,Z,Ot,Ie,vl,Gt,_l,yo,b,bl,Ke,yl,wl,St,El,kl,wo,C,ee,Dt,Ae,$l,Pe,Il,Ct,Al,Pl,Eo,y,Tl,Ut,Ll,Ml,Te,xl,Ol,ko;return ae=new Le({}),le=new Le({}),re=new is({props:{code:`git lfs install
git clone <MODEL URL>`,highlighted:`git lfs install
git <span class="hljs-built_in">clone</span> &lt;MODEL URL&gt;`}}),se=new Le({}),ne=new is({props:{code:`from huggingface_hub import hf_hub_url, cached_download
import joblib

REPO_ID = "YOUR_REPO_ID"
FILENAME = "sklearn_model.joblib"

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_url, cached_download
<span class="hljs-keyword">import</span> joblib

REPO_ID = <span class="hljs-string">&quot;YOUR_REPO_ID&quot;</span>
FILENAME = <span class="hljs-string">&quot;sklearn_model.joblib&quot;</span>

model = joblib.load(cached_download(
    hf_hub_url(REPO_ID, FILENAME)
))`}}),ce=new Le({}),me=new Le({}),Ie=new Le({}),Ae=new Le({}),{c(){w=a("meta"),jt=f(),E=a("h1"),z=a("a"),et=a("span"),U(ae.$$.fragment),Ro=f(),tt=a("span"),Bo=n("Interacting with models on the hub"),Ht=f(),k=a("h2"),R=a("a"),ot=a("span"),U(le.$$.fragment),qo=f(),at=a("span"),Vo=n("Accessing models for local use"),Nt=f(),Me=a("p"),Jo=n("Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),Ft=f(),U(re.$$.fragment),Yt=f(),xe=a("p"),Ko=n("For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),zt=f(),$=a("div"),Oe=a("img"),Qo=f(),Ge=a("img"),Rt=f(),Se=a("p"),Wo=n("If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),Bt=f(),I=a("div"),De=a("img"),Xo=f(),Ce=a("img"),qt=f(),A=a("h3"),B=a("a"),lt=a("span"),U(se.$$.fragment),Zo=f(),rt=a("span"),ea=n("Can I access models programmatically?"),Vt=f(),q=a("p"),ta=n("You can use the "),ie=a("a"),st=a("code"),oa=n("huggingface_hub"),aa=n(" library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),Jt=f(),U(ne.$$.fragment),Kt=f(),P=a("h2"),V=a("a"),it=a("span"),U(ce.$$.fragment),la=f(),nt=a("span"),ra=n("Uploading models"),Qt=f(),J=a("p"),sa=n("The first step is to create an account at "),he=a("a"),ia=n("Hugging Face"),na=n(". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),Wt=f(),g=a("p"),ca=n("You can link repositories with an individual, such as "),fe=a("a"),ha=n("osanseviero/fashion_brands_patterns"),fa=n(", or with an organization, such as "),ue=a("a"),ua=n("facebook/bart-large-xsum"),da=n(". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),de=a("a"),ma=n("here"),pa=n("."),Xt=f(),Ue=a("p"),ga=n("There are several ways to upload models to the Hub, described below."),Zt=f(),T=a("h3"),K=a("a"),ct=a("span"),U(me.$$.fragment),va=f(),ht=a("span"),_a=n("Using the web interface"),eo=f(),Q=a("p"),ba=n("To create a brand new model repository, visit "),pe=a("a"),ya=n("huggingface.co/new"),wa=n(". Then follow these steps:"),to=f(),je=a("ol"),ft=a("li"),Ea=n("In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),oo=f(),L=a("div"),ge=a("img"),ka=f(),ve=a("img"),ao=f(),_e=a("ol"),ut=a("li"),$a=n("From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),lo=f(),M=a("div"),He=a("img"),Ia=f(),Ne=a("img"),ro=f(),x=a("ol"),dt=a("li"),be=a("p"),Aa=n("Afterwards, click "),mt=a("strong"),Pa=n("Commit changes"),Ta=n(" to upload your model to the Hub!"),La=f(),pt=a("li"),gt=a("p"),Ma=n("Inspect files and history"),so=f(),Fe=a("p"),xa=n("You can check your repository with all the recently added files!"),io=f(),O=a("div"),Ye=a("img"),Oa=f(),ze=a("img"),no=f(),Re=a("p"),Ga=n("The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),co=f(),ye=a("div"),vt=a("img"),ho=f(),we=a("ol"),_t=a("li"),Sa=n("Add metadata"),fo=f(),Be=a("p"),Da=n("You can add metadata to your model card. You can specify:"),uo=f(),d=a("ul"),bt=a("li"),Ca=n("the type of task this model is for, enabling widgets and the Inference API."),Ua=f(),G=a("li"),ja=n("the used library ("),yt=a("code"),Ha=n("transformers"),Na=n(", "),wt=a("code"),Fa=n("spaCy"),Ya=n(", etc.)"),za=f(),Et=a("li"),Ra=n("the language"),Ba=f(),kt=a("li"),qa=n("the dataset"),Va=f(),$t=a("li"),Ja=n("metrics"),Ka=f(),It=a("li"),Qa=n("license"),Wa=f(),At=a("li"),Xa=n("a lot more!"),mo=f(),W=a("p"),Za=n("Read more about model tags "),qe=a("a"),el=n("here"),tl=n("."),po=f(),Ee=a("ol"),Pt=a("li"),ol=n("Add TensorBoard traces"),go=f(),v=a("p"),al=n("Any repository that contains TensorBoard traces (filenames that contain "),Tt=a("code"),ll=n("tfevents"),rl=n(") is categorized with the "),X=a("a"),Lt=a("code"),sl=n("TensorBoard"),il=n(" tag"),nl=n(". As a convention, we suggest that you save traces under the "),Mt=a("code"),cl=n("runs/"),hl=n(" subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),vo=f(),S=a("div"),Ve=a("img"),fl=f(),Je=a("img"),_o=f(),_=a("p"),ul=n("Models trained with \u{1F917} Transformers will generate "),ke=a("a"),dl=n("TensorBoard traces"),ml=n(" by default if "),$e=a("a"),xt=a("code"),pl=n("tensorboard"),gl=n(" is installed."),bo=f(),D=a("h3"),Z=a("a"),Ot=a("span"),U(Ie.$$.fragment),vl=f(),Gt=a("span"),_l=n("Using Git"),yo=f(),b=a("p"),bl=n("Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),Ke=a("a"),yl=n("Getting Started with Repositories"),wl=n(" to learn about using the "),St=a("code"),El=n("git"),kl=n(" CLI to commit and push your models."),wo=f(),C=a("h3"),ee=a("a"),Dt=a("span"),U(Ae.$$.fragment),$l=f(),Pe=a("span"),Il=n("Using the "),Ct=a("code"),Al=n("huggingface_hub"),Pl=n(" client library"),Eo=f(),y=a("p"),Tl=n("The rich feature set in the "),Ut=a("code"),Ll=n("huggingface_hub"),Ml=n(" library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),Te=a("a"),xl=n("the client library\u2019s documentation"),Ol=n(" to learn more."),this.h()},l(e){const i=fs('[data-svelte="svelte-1phssyn"]',document.head);w=l(i,"META",{name:!0,content:!0}),i.forEach(t),jt=u(e),E=l(e,"H1",{class:!0});var $o=r(E);z=l($o,"A",{id:!0,class:!0,href:!0});var Jl=r(z);et=l(Jl,"SPAN",{});var Kl=r(et);j(ae.$$.fragment,Kl),Kl.forEach(t),Jl.forEach(t),Ro=u($o),tt=l($o,"SPAN",{});var Ql=r(tt);Bo=c(Ql,"Interacting with models on the hub"),Ql.forEach(t),$o.forEach(t),Ht=u(e),k=l(e,"H2",{class:!0});var Io=r(k);R=l(Io,"A",{id:!0,class:!0,href:!0});var Wl=r(R);ot=l(Wl,"SPAN",{});var Xl=r(ot);j(le.$$.fragment,Xl),Xl.forEach(t),Wl.forEach(t),qo=u(Io),at=l(Io,"SPAN",{});var Zl=r(at);Vo=c(Zl,"Accessing models for local use"),Zl.forEach(t),Io.forEach(t),Nt=u(e),Me=l(e,"P",{});var er=r(Me);Jo=c(er,"Since all models on the Model Hub are Git repositories, you can clone the models locally by running:"),er.forEach(t),Ft=u(e),j(re.$$.fragment,e),Yt=u(e),xe=l(e,"P",{});var tr=r(xe);Ko=c(tr,"For detailed information on accessing the model, you can click on the \u201CUse in Transformer\u201D button on any model page."),tr.forEach(t),zt=u(e),$=l(e,"DIV",{class:!0});var Ao=r($);Oe=l(Ao,"IMG",{class:!0,src:!0}),Qo=u(Ao),Ge=l(Ao,"IMG",{class:!0,src:!0}),Ao.forEach(t),Rt=u(e),Se=l(e,"P",{});var or=r(Se);Wo=c(or,"If the model is compatible with \u{1F917}  Transformers, you\u2019ll even receive snippets to help you get started."),or.forEach(t),Bt=u(e),I=l(e,"DIV",{class:!0});var Po=r(I);De=l(Po,"IMG",{class:!0,src:!0}),Xo=u(Po),Ce=l(Po,"IMG",{class:!0,src:!0}),Po.forEach(t),qt=u(e),A=l(e,"H3",{class:!0});var To=r(A);B=l(To,"A",{id:!0,class:!0,href:!0});var ar=r(B);lt=l(ar,"SPAN",{});var lr=r(lt);j(se.$$.fragment,lr),lr.forEach(t),ar.forEach(t),Zo=u(To),rt=l(To,"SPAN",{});var rr=r(rt);ea=c(rr,"Can I access models programmatically?"),rr.forEach(t),To.forEach(t),Vt=u(e),q=l(e,"P",{});var Lo=r(q);ta=c(Lo,"You can use the "),ie=l(Lo,"A",{href:!0,rel:!0});var sr=r(ie);st=l(sr,"CODE",{});var ir=r(st);oa=c(ir,"huggingface_hub"),ir.forEach(t),sr.forEach(t),aa=c(Lo," library to create, delete, update and retrieve information from repos. You can also download files from repos or integrate them into your library! For example, you can quickly load a Scikit learn model with a few lines."),Lo.forEach(t),Jt=u(e),j(ne.$$.fragment,e),Kt=u(e),P=l(e,"H2",{class:!0});var Mo=r(P);V=l(Mo,"A",{id:!0,class:!0,href:!0});var nr=r(V);it=l(nr,"SPAN",{});var cr=r(it);j(ce.$$.fragment,cr),cr.forEach(t),nr.forEach(t),la=u(Mo),nt=l(Mo,"SPAN",{});var hr=r(nt);ra=c(hr,"Uploading models"),hr.forEach(t),Mo.forEach(t),Qt=u(e),J=l(e,"P",{});var xo=r(J);sa=c(xo,"The first step is to create an account at "),he=l(xo,"A",{href:!0,rel:!0});var fr=r(he);ia=c(fr,"Hugging Face"),fr.forEach(t),na=c(xo,". Models on the Hub are Git-based repositories, which give you versioning, branches, discoverability and sharing features, integration with over a dozen libraries, and more! You have control over what you want to upload to your repository, which could include checkpoints, configs, and any other files."),xo.forEach(t),Wt=u(e),g=l(e,"P",{});var te=r(g);ca=c(te,"You can link repositories with an individual, such as "),fe=l(te,"A",{href:!0,rel:!0});var ur=r(fe);ha=c(ur,"osanseviero/fashion_brands_patterns"),ur.forEach(t),fa=c(te,", or with an organization, such as "),ue=l(te,"A",{href:!0,rel:!0});var dr=r(ue);ua=c(dr,"facebook/bart-large-xsum"),dr.forEach(t),da=c(te,". Organizations can collect models related to a company, community, or library! If you choose an organization, the model will be featured on the organization\u2019s page, and every member of the organization will have the ability to contribute to the repository. You can create a new organization "),de=l(te,"A",{href:!0,rel:!0});var mr=r(de);ma=c(mr,"here"),mr.forEach(t),pa=c(te,"."),te.forEach(t),Xt=u(e),Ue=l(e,"P",{});var pr=r(Ue);ga=c(pr,"There are several ways to upload models to the Hub, described below."),pr.forEach(t),Zt=u(e),T=l(e,"H3",{class:!0});var Oo=r(T);K=l(Oo,"A",{id:!0,class:!0,href:!0});var gr=r(K);ct=l(gr,"SPAN",{});var vr=r(ct);j(me.$$.fragment,vr),vr.forEach(t),gr.forEach(t),va=u(Oo),ht=l(Oo,"SPAN",{});var _r=r(ht);_a=c(_r,"Using the web interface"),_r.forEach(t),Oo.forEach(t),eo=u(e),Q=l(e,"P",{});var Go=r(Q);ba=c(Go,"To create a brand new model repository, visit "),pe=l(Go,"A",{href:!0,rel:!0});var br=r(pe);ya=c(br,"huggingface.co/new"),br.forEach(t),wa=c(Go,". Then follow these steps:"),Go.forEach(t),to=u(e),je=l(e,"OL",{});var yr=r(je);ft=l(yr,"LI",{});var wr=r(ft);Ea=c(wr,"In the \u201CFiles and versions\u201D tab, select \u201CAdd File\u201D and specify \u201CUpload File\u201D:"),wr.forEach(t),yr.forEach(t),oo=u(e),L=l(e,"DIV",{class:!0});var So=r(L);ge=l(So,"IMG",{class:!0,width:!0,src:!0}),ka=u(So),ve=l(So,"IMG",{class:!0,width:!0,src:!0}),So.forEach(t),ao=u(e),_e=l(e,"OL",{start:!0});var Er=r(_e);ut=l(Er,"LI",{});var kr=r(ut);$a=c(kr,"From there, select a file from your computer to upload and leave a helpful commit message to know what you are uploading:"),kr.forEach(t),Er.forEach(t),lo=u(e),M=l(e,"DIV",{class:!0});var Do=r(M);He=l(Do,"IMG",{class:!0,src:!0}),Ia=u(Do),Ne=l(Do,"IMG",{class:!0,src:!0}),Do.forEach(t),ro=u(e),x=l(e,"OL",{start:!0});var Co=r(x);dt=l(Co,"LI",{});var $r=r(dt);be=l($r,"P",{});var Uo=r(be);Aa=c(Uo,"Afterwards, click "),mt=l(Uo,"STRONG",{});var Ir=r(mt);Pa=c(Ir,"Commit changes"),Ir.forEach(t),Ta=c(Uo," to upload your model to the Hub!"),Uo.forEach(t),$r.forEach(t),La=u(Co),pt=l(Co,"LI",{});var Ar=r(pt);gt=l(Ar,"P",{});var Pr=r(gt);Ma=c(Pr,"Inspect files and history"),Pr.forEach(t),Ar.forEach(t),Co.forEach(t),so=u(e),Fe=l(e,"P",{});var Tr=r(Fe);xa=c(Tr,"You can check your repository with all the recently added files!"),Tr.forEach(t),io=u(e),O=l(e,"DIV",{class:!0});var jo=r(O);Ye=l(jo,"IMG",{class:!0,src:!0}),Oa=u(jo),ze=l(jo,"IMG",{class:!0,src:!0}),jo.forEach(t),no=u(e),Re=l(e,"P",{});var Lr=r(Re);Ga=c(Lr,"The UI allows you to explore the model files and commits and to see the diff introduced by each commit:"),Lr.forEach(t),co=u(e),ye=l(e,"DIV",{class:!0});var Mr=r(ye);vt=l(Mr,"IMG",{src:!0}),Mr.forEach(t),ho=u(e),we=l(e,"OL",{start:!0});var xr=r(we);_t=l(xr,"LI",{});var Or=r(_t);Sa=c(Or,"Add metadata"),Or.forEach(t),xr.forEach(t),fo=u(e),Be=l(e,"P",{});var Gr=r(Be);Da=c(Gr,"You can add metadata to your model card. You can specify:"),Gr.forEach(t),uo=u(e),d=l(e,"UL",{});var m=r(d);bt=l(m,"LI",{});var Sr=r(bt);Ca=c(Sr,"the type of task this model is for, enabling widgets and the Inference API."),Sr.forEach(t),Ua=u(m),G=l(m,"LI",{});var Qe=r(G);ja=c(Qe,"the used library ("),yt=l(Qe,"CODE",{});var Dr=r(yt);Ha=c(Dr,"transformers"),Dr.forEach(t),Na=c(Qe,", "),wt=l(Qe,"CODE",{});var Cr=r(wt);Fa=c(Cr,"spaCy"),Cr.forEach(t),Ya=c(Qe,", etc.)"),Qe.forEach(t),za=u(m),Et=l(m,"LI",{});var Ur=r(Et);Ra=c(Ur,"the language"),Ur.forEach(t),Ba=u(m),kt=l(m,"LI",{});var jr=r(kt);qa=c(jr,"the dataset"),jr.forEach(t),Va=u(m),$t=l(m,"LI",{});var Hr=r($t);Ja=c(Hr,"metrics"),Hr.forEach(t),Ka=u(m),It=l(m,"LI",{});var Nr=r(It);Qa=c(Nr,"license"),Nr.forEach(t),Wa=u(m),At=l(m,"LI",{});var Fr=r(At);Xa=c(Fr,"a lot more!"),Fr.forEach(t),m.forEach(t),mo=u(e),W=l(e,"P",{});var Ho=r(W);Za=c(Ho,"Read more about model tags "),qe=l(Ho,"A",{href:!0});var Yr=r(qe);el=c(Yr,"here"),Yr.forEach(t),tl=c(Ho,"."),Ho.forEach(t),po=u(e),Ee=l(e,"OL",{start:!0});var zr=r(Ee);Pt=l(zr,"LI",{});var Rr=r(Pt);ol=c(Rr,"Add TensorBoard traces"),Rr.forEach(t),zr.forEach(t),go=u(e),v=l(e,"P",{});var oe=r(v);al=c(oe,"Any repository that contains TensorBoard traces (filenames that contain "),Tt=l(oe,"CODE",{});var Br=r(Tt);ll=c(Br,"tfevents"),Br.forEach(t),rl=c(oe,") is categorized with the "),X=l(oe,"A",{href:!0,rel:!0});var Gl=r(X);Lt=l(Gl,"CODE",{});var qr=r(Lt);sl=c(qr,"TensorBoard"),qr.forEach(t),il=c(Gl," tag"),Gl.forEach(t),nl=c(oe,". As a convention, we suggest that you save traces under the "),Mt=l(oe,"CODE",{});var Vr=r(Mt);cl=c(Vr,"runs/"),Vr.forEach(t),hl=c(oe," subfolder. The \u201CTraining metrics\u201D tab then makes it easy to review charts of the logged variables, like the loss or the accuracy."),oe.forEach(t),vo=u(e),S=l(e,"DIV",{class:!0});var No=r(S);Ve=l(No,"IMG",{class:!0,src:!0}),fl=u(No),Je=l(No,"IMG",{class:!0,src:!0}),No.forEach(t),_o=u(e),_=l(e,"P",{});var We=r(_);ul=c(We,"Models trained with \u{1F917} Transformers will generate "),ke=l(We,"A",{href:!0,rel:!0});var Jr=r(ke);dl=c(Jr,"TensorBoard traces"),Jr.forEach(t),ml=c(We," by default if "),$e=l(We,"A",{href:!0,rel:!0});var Kr=r($e);xt=l(Kr,"CODE",{});var Qr=r(xt);pl=c(Qr,"tensorboard"),Qr.forEach(t),Kr.forEach(t),gl=c(We," is installed."),We.forEach(t),bo=u(e),D=l(e,"H3",{class:!0});var Fo=r(D);Z=l(Fo,"A",{id:!0,class:!0,href:!0});var Wr=r(Z);Ot=l(Wr,"SPAN",{});var Xr=r(Ot);j(Ie.$$.fragment,Xr),Xr.forEach(t),Wr.forEach(t),vl=u(Fo),Gt=l(Fo,"SPAN",{});var Zr=r(Gt);_l=c(Zr,"Using Git"),Zr.forEach(t),Fo.forEach(t),yo=u(e),b=l(e,"P",{});var Xe=r(b);bl=c(Xe,"Since model repos are just Git repositories, you can use Git to push your model files to the Hub. Follow the guide on "),Ke=l(Xe,"A",{href:!0});var es=r(Ke);yl=c(es,"Getting Started with Repositories"),es.forEach(t),wl=c(Xe," to learn about using the "),St=l(Xe,"CODE",{});var ts=r(St);El=c(ts,"git"),ts.forEach(t),kl=c(Xe," CLI to commit and push your models."),Xe.forEach(t),wo=u(e),C=l(e,"H3",{class:!0});var Yo=r(C);ee=l(Yo,"A",{id:!0,class:!0,href:!0});var os=r(ee);Dt=l(os,"SPAN",{});var as=r(Dt);j(Ae.$$.fragment,as),as.forEach(t),os.forEach(t),$l=u(Yo),Pe=l(Yo,"SPAN",{});var zo=r(Pe);Il=c(zo,"Using the "),Ct=l(zo,"CODE",{});var ls=r(Ct);Al=c(ls,"huggingface_hub"),ls.forEach(t),Pl=c(zo," client library"),zo.forEach(t),Yo.forEach(t),Eo=u(e),y=l(e,"P",{});var Ze=r(y);Tl=c(Ze,"The rich feature set in the "),Ut=l(Ze,"CODE",{});var rs=r(Ut);Ll=c(rs,"huggingface_hub"),rs.forEach(t),Ml=c(Ze," library allows you to manage repositories, including creating repos and uploading models to the Model Hub. Visit "),Te=l(Ze,"A",{href:!0,rel:!0});var ss=r(Te);xl=c(ss,"the client library\u2019s documentation"),ss.forEach(t),Ol=c(Ze," to learn more."),Ze.forEach(t),this.h()},h(){s(w,"name","hf:doc:metadata"),s(w,"content",JSON.stringify(ps)),s(z,"id","interacting-with-models-on-the-hub"),s(z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(z,"href","#interacting-with-models-on-the-hub"),s(E,"class","relative group"),s(R,"id","accessing-models-for-local-use"),s(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(R,"href","#accessing-models-for-local-use"),s(k,"class","relative group"),s(Oe,"class","block dark:hidden"),p(Oe.src,Dl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage.png")||s(Oe,"src",Dl),s(Ge,"class","hidden dark:block"),p(Ge.src,Cl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-dark.png")||s(Ge,"src",Cl),s($,"class","flex justify-center"),s(De,"class","block dark:hidden"),p(De.src,Ul="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-modal.png")||s(De,"src",Ul),s(Ce,"class","hidden dark:block"),p(Ce.src,jl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/models-usage-modal-dark.png")||s(Ce,"src",jl),s(I,"class","flex justify-center"),s(B,"id","can-i-access-models-programmatically"),s(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(B,"href","#can-i-access-models-programmatically"),s(A,"class","relative group"),s(ie,"href","https://github.com/huggingface/huggingface_hub"),s(ie,"rel","nofollow"),s(V,"id","uploading-models"),s(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(V,"href","#uploading-models"),s(P,"class","relative group"),s(he,"href","https://huggingface.co/login"),s(he,"rel","nofollow"),s(fe,"href","https://huggingface.co/osanseviero/fashion_brands_patterns"),s(fe,"rel","nofollow"),s(ue,"href","https://huggingface.co/facebook/bart-large-xsum"),s(ue,"rel","nofollow"),s(de,"href","https://huggingface.co/organizations/new"),s(de,"rel","nofollow"),s(K,"id","using-the-web-interface"),s(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(K,"href","#using-the-web-interface"),s(T,"class","relative group"),s(pe,"href","http://huggingface.co/new"),s(pe,"rel","nofollow"),s(ge,"class","block dark:hidden"),s(ge,"width","300"),p(ge.src,Hl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file.png")||s(ge,"src",Hl),s(ve,"class","hidden dark:block"),s(ve,"width","300"),p(ve.src,Nl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/add-file-dark.png")||s(ve,"src",Nl),s(L,"class","flex justify-center"),s(_e,"start","2"),s(He,"class","block dark:hidden"),p(He.src,Fl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file.png")||s(He,"src",Fl),s(Ne,"class","hidden dark:block"),p(Ne.src,Yl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/commit-file-dark.png")||s(Ne,"src",Yl),s(M,"class","flex justify-center"),s(x,"start","3"),s(Ye,"class","block dark:hidden"),p(Ye.src,zl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png")||s(Ye,"src",zl),s(ze,"class","hidden dark:block"),p(ze.src,Rl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files-dark.png")||s(ze,"src",Rl),s(O,"class","flex justify-center"),p(vt.src,Bl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif")||s(vt,"src",Bl),s(ye,"class","flex justify-center"),s(we,"start","5"),s(qe,"href","/docs/hub/model-repos#model-card-metadata"),s(Ee,"start","6"),s(X,"href","https://huggingface.co/models?filter=tensorboard"),s(X,"rel","nofollow"),s(Ve,"class","block dark:hidden"),p(Ve.src,ql="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/tensorboard.png")||s(Ve,"src",ql),s(Je,"class","hidden dark:block"),p(Je.src,Vl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/tensorboard-dark.png")||s(Je,"src",Vl),s(S,"class","flex justify-center"),s(ke,"href","https://huggingface.co/transformers/main_classes/callback.html?highlight=tensorboard#transformers.integrations.TensorBoardCallback"),s(ke,"rel","nofollow"),s($e,"href","https://pypi.org/project/tensorboard/"),s($e,"rel","nofollow"),s(Z,"id","using-git"),s(Z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(Z,"href","#using-git"),s(D,"class","relative group"),s(Ke,"href","repositories-getting-started.md"),s(ee,"id","using-the-huggingfacehub-client-library"),s(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ee,"href","#using-the-huggingfacehub-client-library"),s(C,"class","relative group"),s(Te,"href","https://huggingface.co/docs/huggingface_hub/index"),s(Te,"rel","nofollow")},m(e,i){o(document.head,w),h(e,jt,i),h(e,E,i),o(E,z),o(z,et),H(ae,et,null),o(E,Ro),o(E,tt),o(tt,Bo),h(e,Ht,i),h(e,k,i),o(k,R),o(R,ot),H(le,ot,null),o(k,qo),o(k,at),o(at,Vo),h(e,Nt,i),h(e,Me,i),o(Me,Jo),h(e,Ft,i),H(re,e,i),h(e,Yt,i),h(e,xe,i),o(xe,Ko),h(e,zt,i),h(e,$,i),o($,Oe),o($,Qo),o($,Ge),h(e,Rt,i),h(e,Se,i),o(Se,Wo),h(e,Bt,i),h(e,I,i),o(I,De),o(I,Xo),o(I,Ce),h(e,qt,i),h(e,A,i),o(A,B),o(B,lt),H(se,lt,null),o(A,Zo),o(A,rt),o(rt,ea),h(e,Vt,i),h(e,q,i),o(q,ta),o(q,ie),o(ie,st),o(st,oa),o(q,aa),h(e,Jt,i),H(ne,e,i),h(e,Kt,i),h(e,P,i),o(P,V),o(V,it),H(ce,it,null),o(P,la),o(P,nt),o(nt,ra),h(e,Qt,i),h(e,J,i),o(J,sa),o(J,he),o(he,ia),o(J,na),h(e,Wt,i),h(e,g,i),o(g,ca),o(g,fe),o(fe,ha),o(g,fa),o(g,ue),o(ue,ua),o(g,da),o(g,de),o(de,ma),o(g,pa),h(e,Xt,i),h(e,Ue,i),o(Ue,ga),h(e,Zt,i),h(e,T,i),o(T,K),o(K,ct),H(me,ct,null),o(T,va),o(T,ht),o(ht,_a),h(e,eo,i),h(e,Q,i),o(Q,ba),o(Q,pe),o(pe,ya),o(Q,wa),h(e,to,i),h(e,je,i),o(je,ft),o(ft,Ea),h(e,oo,i),h(e,L,i),o(L,ge),o(L,ka),o(L,ve),h(e,ao,i),h(e,_e,i),o(_e,ut),o(ut,$a),h(e,lo,i),h(e,M,i),o(M,He),o(M,Ia),o(M,Ne),h(e,ro,i),h(e,x,i),o(x,dt),o(dt,be),o(be,Aa),o(be,mt),o(mt,Pa),o(be,Ta),o(x,La),o(x,pt),o(pt,gt),o(gt,Ma),h(e,so,i),h(e,Fe,i),o(Fe,xa),h(e,io,i),h(e,O,i),o(O,Ye),o(O,Oa),o(O,ze),h(e,no,i),h(e,Re,i),o(Re,Ga),h(e,co,i),h(e,ye,i),o(ye,vt),h(e,ho,i),h(e,we,i),o(we,_t),o(_t,Sa),h(e,fo,i),h(e,Be,i),o(Be,Da),h(e,uo,i),h(e,d,i),o(d,bt),o(bt,Ca),o(d,Ua),o(d,G),o(G,ja),o(G,yt),o(yt,Ha),o(G,Na),o(G,wt),o(wt,Fa),o(G,Ya),o(d,za),o(d,Et),o(Et,Ra),o(d,Ba),o(d,kt),o(kt,qa),o(d,Va),o(d,$t),o($t,Ja),o(d,Ka),o(d,It),o(It,Qa),o(d,Wa),o(d,At),o(At,Xa),h(e,mo,i),h(e,W,i),o(W,Za),o(W,qe),o(qe,el),o(W,tl),h(e,po,i),h(e,Ee,i),o(Ee,Pt),o(Pt,ol),h(e,go,i),h(e,v,i),o(v,al),o(v,Tt),o(Tt,ll),o(v,rl),o(v,X),o(X,Lt),o(Lt,sl),o(X,il),o(v,nl),o(v,Mt),o(Mt,cl),o(v,hl),h(e,vo,i),h(e,S,i),o(S,Ve),o(S,fl),o(S,Je),h(e,_o,i),h(e,_,i),o(_,ul),o(_,ke),o(ke,dl),o(_,ml),o(_,$e),o($e,xt),o(xt,pl),o(_,gl),h(e,bo,i),h(e,D,i),o(D,Z),o(Z,Ot),H(Ie,Ot,null),o(D,vl),o(D,Gt),o(Gt,_l),h(e,yo,i),h(e,b,i),o(b,bl),o(b,Ke),o(Ke,yl),o(b,wl),o(b,St),o(St,El),o(b,kl),h(e,wo,i),h(e,C,i),o(C,ee),o(ee,Dt),H(Ae,Dt,null),o(C,$l),o(C,Pe),o(Pe,Il),o(Pe,Ct),o(Ct,Al),o(Pe,Pl),h(e,Eo,i),h(e,y,i),o(y,Tl),o(y,Ut),o(Ut,Ll),o(y,Ml),o(y,Te),o(Te,xl),o(y,Ol),ko=!0},p:us,i(e){ko||(N(ae.$$.fragment,e),N(le.$$.fragment,e),N(re.$$.fragment,e),N(se.$$.fragment,e),N(ne.$$.fragment,e),N(ce.$$.fragment,e),N(me.$$.fragment,e),N(Ie.$$.fragment,e),N(Ae.$$.fragment,e),ko=!0)},o(e){F(ae.$$.fragment,e),F(le.$$.fragment,e),F(re.$$.fragment,e),F(se.$$.fragment,e),F(ne.$$.fragment,e),F(ce.$$.fragment,e),F(me.$$.fragment,e),F(Ie.$$.fragment,e),F(Ae.$$.fragment,e),ko=!1},d(e){t(w),e&&t(jt),e&&t(E),Y(ae),e&&t(Ht),e&&t(k),Y(le),e&&t(Nt),e&&t(Me),e&&t(Ft),Y(re,e),e&&t(Yt),e&&t(xe),e&&t(zt),e&&t($),e&&t(Rt),e&&t(Se),e&&t(Bt),e&&t(I),e&&t(qt),e&&t(A),Y(se),e&&t(Vt),e&&t(q),e&&t(Jt),Y(ne,e),e&&t(Kt),e&&t(P),Y(ce),e&&t(Qt),e&&t(J),e&&t(Wt),e&&t(g),e&&t(Xt),e&&t(Ue),e&&t(Zt),e&&t(T),Y(me),e&&t(eo),e&&t(Q),e&&t(to),e&&t(je),e&&t(oo),e&&t(L),e&&t(ao),e&&t(_e),e&&t(lo),e&&t(M),e&&t(ro),e&&t(x),e&&t(so),e&&t(Fe),e&&t(io),e&&t(O),e&&t(no),e&&t(Re),e&&t(co),e&&t(ye),e&&t(ho),e&&t(we),e&&t(fo),e&&t(Be),e&&t(uo),e&&t(d),e&&t(mo),e&&t(W),e&&t(po),e&&t(Ee),e&&t(go),e&&t(v),e&&t(vo),e&&t(S),e&&t(_o),e&&t(_),e&&t(bo),e&&t(D),Y(Ie),e&&t(yo),e&&t(b),e&&t(wo),e&&t(C),Y(Ae),e&&t(Eo),e&&t(y)}}}const ps={local:"interacting-with-models-on-the-hub",sections:[{local:"accessing-models-for-local-use",sections:[{local:"can-i-access-models-programmatically",title:"Can I access models programmatically?"}],title:"Accessing models for local use"},{local:"uploading-models",sections:[{local:"using-the-web-interface",title:"Using the web interface"},{local:"using-git",title:"Using Git"},{local:"using-the-huggingfacehub-client-library",title:"Using the `huggingface_hub` client library"}],title:"Uploading models"}],title:"Interacting with models on the hub"};function gs(Sl){return ds(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ys extends ns{constructor(w){super();cs(this,w,gs,ms,hs,{})}}export{ys as default,ps as metadata};
