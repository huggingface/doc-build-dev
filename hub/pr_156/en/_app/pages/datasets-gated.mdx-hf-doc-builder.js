import{S as Le,i as Re,s as Ye,e as r,k as y,w as Oe,t as s,N as He,c as n,d as a,m as b,a as i,x as Me,h as o,b as h,P as Se,G as t,g as p,y as Pe,L as Ue,q as Ge,o as Ne,B as Ie,v as Ve}from"../chunks/vendor-hf-doc-builder.js";import{I as ze}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Be}from"../chunks/CodeBlock-hf-doc-builder.js";function Fe(_e){let m,I,g,v,D,E,F,T,W,L,u,J,j,K,Q,q,X,Z,R,d,ee,O,te,ae,M,se,oe,S,re,ne,P,ie,de,G,le,ce,Y,x,H,_,w,ve,he,k,ye,U,f,pe,N,ue,fe,$,me,ge,V;return E=new ze({}),x=new Be({props:{code:`---
extra_gated_prompt: "You agree to not attempt to determine the identity of individuals in this dataset"
extra_gated_fields:
 Company: text
 Country: text
 I agree to use this model for non-commerical use ONLY: checkbox
---`,highlighted:`<span class="hljs-meta">---</span>
<span class="hljs-attr">extra_gated_prompt:</span> <span class="hljs-string">&quot;You agree to not attempt to determine the identity of individuals in this dataset&quot;</span>
<span class="hljs-attr">extra_gated_fields:</span>
 <span class="hljs-attr">Company:</span> <span class="hljs-string">text</span>
 <span class="hljs-attr">Country:</span> <span class="hljs-string">text</span>
 <span class="hljs-attr">I agree to use this model for non-commerical use ONLY:</span> <span class="hljs-string">checkbox</span>
<span class="hljs-meta">---</span>`}}),{c(){m=r("meta"),I=y(),g=r("h1"),v=r("a"),D=r("span"),Oe(E.$$.fragment),F=y(),T=r("span"),W=s("Gated datasets"),L=y(),u=r("p"),J=s("To give dataset creators more control over how their datasets are used, the Hub allows users to enable "),j=r("strong"),K=s("User Access requests"),Q=s(" through a dataset\u2019s "),q=r("strong"),X=s("Settings"),Z=s(" tab. Enabling this setting requires users to agree to share their contact information with Hugging Face in order to access the dataset. The contact information is stored in a database, and dataset owners are able to download a copy of the user access report."),R=y(),d=r("p"),ee=s("The User Access request dialog can be modified to include additional text and checkbox fields in the prompt. To do this, add a YAML section to the dataset\u2019s "),O=r("code"),te=s("README.md"),ae=s(" file (create one if it does not already exist) and add an "),M=r("code"),se=s("extra_gated_fields"),oe=s(" property. Within this property, you\u2019ll be able to add as many custom fields as you like and whether they are a "),S=r("code"),re=s("text"),ne=s(" or "),P=r("code"),ie=s("checkbox"),de=s(" field. An "),G=r("code"),le=s("extra_gated_prompt"),ce=s(" property can also be included to add a customized text message."),Y=y(),Oe(x.$$.fragment),H=y(),_=r("div"),w=r("img"),he=y(),k=r("img"),U=y(),f=r("p"),pe=s("The "),N=r("code"),ue=s("README.md"),fe=s(" file for a dataset is called a "),$=r("a"),me=s("Dataset Card"),ge=s(". Visit the documentation to learn more about how to use it and to see the properties that you can configure."),this.h()},l(e){const l=He('[data-svelte="svelte-1phssyn"]',document.head);m=n(l,"META",{name:!0,content:!0}),l.forEach(a),I=b(e),g=n(e,"H1",{class:!0});var z=i(g);v=n(z,"A",{id:!0,class:!0,href:!0});var be=i(v);D=n(be,"SPAN",{});var Ee=i(D);Me(E.$$.fragment,Ee),Ee.forEach(a),be.forEach(a),F=b(z),T=n(z,"SPAN",{});var xe=i(T);W=o(xe,"Gated datasets"),xe.forEach(a),z.forEach(a),L=b(e),u=n(e,"P",{});var A=i(u);J=o(A,"To give dataset creators more control over how their datasets are used, the Hub allows users to enable "),j=n(A,"STRONG",{});var we=i(j);K=o(we,"User Access requests"),we.forEach(a),Q=o(A," through a dataset\u2019s "),q=n(A,"STRONG",{});var ke=i(q);X=o(ke,"Settings"),ke.forEach(a),Z=o(A," tab. Enabling this setting requires users to agree to share their contact information with Hugging Face in order to access the dataset. The contact information is stored in a database, and dataset owners are able to download a copy of the user access report."),A.forEach(a),R=b(e),d=n(e,"P",{});var c=i(d);ee=o(c,"The User Access request dialog can be modified to include additional text and checkbox fields in the prompt. To do this, add a YAML section to the dataset\u2019s "),O=n(c,"CODE",{});var $e=i(O);te=o($e,"README.md"),$e.forEach(a),ae=o(c," file (create one if it does not already exist) and add an "),M=n(c,"CODE",{});var Ae=i(M);se=o(Ae,"extra_gated_fields"),Ae.forEach(a),oe=o(c," property. Within this property, you\u2019ll be able to add as many custom fields as you like and whether they are a "),S=n(c,"CODE",{});var Ce=i(S);re=o(Ce,"text"),Ce.forEach(a),ne=o(c," or "),P=n(c,"CODE",{});var De=i(P);ie=o(De,"checkbox"),De.forEach(a),de=o(c," field. An "),G=n(c,"CODE",{});var Te=i(G);le=o(Te,"extra_gated_prompt"),Te.forEach(a),ce=o(c," property can also be included to add a customized text message."),c.forEach(a),Y=b(e),Me(x.$$.fragment,e),H=b(e),_=n(e,"DIV",{class:!0});var B=i(_);w=n(B,"IMG",{class:!0,src:!0}),he=b(B),k=n(B,"IMG",{class:!0,src:!0}),B.forEach(a),U=b(e),f=n(e,"P",{});var C=i(f);pe=o(C,"The "),N=n(C,"CODE",{});var je=i(N);ue=o(je,"README.md"),je.forEach(a),fe=o(C," file for a dataset is called a "),$=n(C,"A",{href:!0});var qe=i($);me=o(qe,"Dataset Card"),qe.forEach(a),ge=o(C,". Visit the documentation to learn more about how to use it and to see the properties that you can configure."),C.forEach(a),this.h()},h(){h(m,"name","hf:doc:metadata"),h(m,"content",JSON.stringify(We)),h(v,"id","gated-datasets"),h(v,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(v,"href","#gated-datasets"),h(g,"class","relative group"),h(w,"class","block dark:hidden"),Se(w.src,ve="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/datasets-gated.png")||h(w,"src",ve),h(k,"class","hidden dark:block"),Se(k.src,ye="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/datasets-gated-dark.png")||h(k,"src",ye),h(_,"class","flex justify-center"),h($,"href","./datasets-cards")},m(e,l){t(document.head,m),p(e,I,l),p(e,g,l),t(g,v),t(v,D),Pe(E,D,null),t(g,F),t(g,T),t(T,W),p(e,L,l),p(e,u,l),t(u,J),t(u,j),t(j,K),t(u,Q),t(u,q),t(q,X),t(u,Z),p(e,R,l),p(e,d,l),t(d,ee),t(d,O),t(O,te),t(d,ae),t(d,M),t(M,se),t(d,oe),t(d,S),t(S,re),t(d,ne),t(d,P),t(P,ie),t(d,de),t(d,G),t(G,le),t(d,ce),p(e,Y,l),Pe(x,e,l),p(e,H,l),p(e,_,l),t(_,w),t(_,he),t(_,k),p(e,U,l),p(e,f,l),t(f,pe),t(f,N),t(N,ue),t(f,fe),t(f,$),t($,me),t(f,ge),V=!0},p:Ue,i(e){V||(Ge(E.$$.fragment,e),Ge(x.$$.fragment,e),V=!0)},o(e){Ne(E.$$.fragment,e),Ne(x.$$.fragment,e),V=!1},d(e){a(m),e&&a(I),e&&a(g),Ie(E),e&&a(L),e&&a(u),e&&a(R),e&&a(d),e&&a(Y),Ie(x,e),e&&a(H),e&&a(_),e&&a(U),e&&a(f)}}}const We={local:"gated-datasets",title:"Gated datasets"};function Je(_e){return Ve(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ze extends Le{constructor(m){super();Re(this,m,Je,Fe,Ye,{})}}export{Ze as default,We as metadata};
