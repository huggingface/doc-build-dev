import{S as Go,i as ko,s as Ao,e as s,k as c,w as ae,t as o,N as Po,c as i,d as a,m as d,a as l,x as oe,h as r,b as n,P as jo,G as t,g as h,y as re,L as No,q as se,o as ie,B as le,v as To}from"../chunks/vendor-hf-doc-builder.js";import{I as Ie}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as $o}from"../chunks/CodeBlock-hf-doc-builder.js";function Co(Ta){let b,Me,S,P,ue,x,dt,ge,ft,Fe,y,me,ut,gt,R,mt,vt,I,wt,yt,Be,f,_t,ve,Et,bt,M,St,$t,we,Gt,kt,ye,At,Pt,_e,jt,Nt,Ee,Tt,Ct,Le,_,Dt,F,qt,Ot,B,Ht,xt,Ye,$,j,be,L,Rt,Se,It,ze,E,Mt,$e,Ft,Bt,Y,Lt,Yt,Ke,N,zt,z,Kt,Wt,We,G,T,Ge,K,Ut,ke,Vt,Ue,v,Jt,W,Qt,Xt,Ae,Zt,ea,ne,ta,aa,Ve,k,C,Pe,U,oa,je,ra,Je,w,sa,Ne,ia,la,V,na,pa,Te,ha,ca,Qe,J,Xe,pe,da,Ze,A,D,Ce,Q,fa,De,ua,et,q,ga,qe,ma,va,tt,X,at,u,wa,Z,ya,_a,ee,Ea,ba,Oe,Sa,$a,He,Ga,ka,xe,Aa,Pa,Re,ja,Na,ot,he,ce,Ca,rt;return x=new Ie({}),L=new Ie({}),K=new Ie({}),U=new Ie({}),J=new $o({props:{code:`transformers
torch`,highlighted:`<span class="hljs-attribute">transformers
torch</span>`}}),Q=new Ie({}),X=new $o({props:{code:`import gradio as gr
from transformers import pipeline

pipeline = pipeline(task="image-classification", model="julien-c/hotdog-not-hotdog")

def predict(image):
  predictions = pipeline(image)
  return {p["label"]: p["score"] for p in predictions}

gr.Interface(
    predict,
    inputs=gr.inputs.Image(label="Upload hot dog candidate", type="filepath"),
    outputs=gr.outputs.Label(num_top_classes=2),
    title="Hot Dog? Or Not?",
).launch()`,highlighted:`<span class="hljs-keyword">import</span> gradio <span class="hljs-keyword">as</span> gr
<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

pipeline = pipeline(task=<span class="hljs-string">&quot;image-classification&quot;</span>, model=<span class="hljs-string">&quot;julien-c/hotdog-not-hotdog&quot;</span>)

<span class="hljs-keyword">def</span> <span class="hljs-title function_">predict</span>(<span class="hljs-params">image</span>):
  predictions = pipeline(image)
  <span class="hljs-keyword">return</span> {p[<span class="hljs-string">&quot;label&quot;</span>]: p[<span class="hljs-string">&quot;score&quot;</span>] <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> predictions}

gr.Interface(
    predict,
    inputs=gr.inputs.Image(label=<span class="hljs-string">&quot;Upload hot dog candidate&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;filepath&quot;</span>),
    outputs=gr.outputs.Label(num_top_classes=<span class="hljs-number">2</span>),
    title=<span class="hljs-string">&quot;Hot Dog? Or Not?&quot;</span>,
).launch()`}}),{c(){b=s("meta"),Me=c(),S=s("h1"),P=s("a"),ue=s("span"),ae(x.$$.fragment),dt=c(),ge=s("span"),ft=o("Gradio Spaces"),Fe=c(),y=s("p"),me=s("strong"),ut=o("Gradio"),gt=o(" provides an easy and intuitive interface for running a model from a list of inputs and displaying the outputs in formats such as images, audio, 3D objects, and more. Gradio now even has a "),R=s("a"),mt=o("Plot output component"),vt=o(" for creating data visualizations with Matplotlib, Bokeh, and Plotly! For more details, take a look at the "),I=s("a"),wt=o("Getting started"),yt=o(" guide from the Gradio team."),Be=c(),f=s("p"),_t=o("Selecting "),ve=s("strong"),Et=o("Gradio"),bt=o(" as the SDK when "),M=s("a"),St=o("creating a new Space"),$t=o(" will initialize your Space with the latest version of Gradio by setting the "),we=s("code"),Gt=o("sdk"),kt=o(" property to "),ye=s("code"),At=o("gradio"),Pt=o(" in your "),_e=s("code"),jt=o("README.md"),Nt=o(" file\u2019s YAML block. If you\u2019d like to change the Gradio version, you can edit the "),Ee=s("code"),Tt=o("sdk_version"),Ct=o(" property."),Le=c(),_=s("p"),Dt=o("Visit the "),F=s("a"),qt=o("Gradio documentation"),Ot=o(" to learn all about its features and check out the "),B=s("a"),Ht=o("Gradio Guides"),xt=o(" for some handy tutorials to help you get started!"),Ye=c(),$=s("h2"),j=s("a"),be=s("span"),ae(L.$$.fragment),Rt=c(),Se=s("span"),It=o("Your First Gradio Space: Hot Dog Classifier"),ze=c(),E=s("p"),Mt=o("In the following sections, you\u2019ll learn the basics of creating a Space, configuring it, and deploying your code to it. We\u2019ll create a "),$e=s("strong"),Ft=o("Hot Dog Classifier"),Bt=o(" Space with Gradio that\u2019ll be used to demo the "),Y=s("a"),Lt=o("julien-c/hotdog-not-hotdog"),Yt=o(" model, which can detect whether a given picture contains a hot dog \u{1F32D}"),Ke=c(),N=s("p"),zt=o("You can find a completed version of this hosted at "),z=s("a"),Kt=o("NimaBoscarino/hotdog-gradio"),Wt=o("."),We=c(),G=s("h2"),T=s("a"),Ge=s("span"),ae(K.$$.fragment),Ut=c(),ke=s("span"),Vt=o("Create a new Gradio Space"),Ue=c(),v=s("p"),Jt=o("We\u2019ll start by "),W=s("a"),Qt=o("creating a brand new Space"),Xt=o(" and choosing "),Ae=s("strong"),Zt=o("Gradio"),ea=o(" as our SDK. Hugging Face Spaces are Git repositories, meaning that you can work on your Space incrementally (and collaboratively) by pushing commits. Take a look at the "),ne=s("a"),ta=o("Getting Started with Repositories"),aa=o(" guide to learn about how you can create and edit files before continuing."),Ve=c(),k=s("h2"),C=s("a"),Pe=s("span"),ae(U.$$.fragment),oa=c(),je=s("span"),ra=o("Add the dependencies"),Je=c(),w=s("p"),sa=o("For the "),Ne=s("strong"),ia=o("Hot Dog Classifier"),la=o(" we\u2019ll be using a "),V=s("a"),na=o("\u{1F917} Transformers pipeline"),pa=o(" to use the model, so we need to start by installing a few dependencies. This can be done by creating a "),Te=s("strong"),ha=o("requirements.txt"),ca=o(" file in our repository, and adding the following dependencies to it:"),Qe=c(),ae(J.$$.fragment),Xe=c(),pe=s("p"),da=o("The Spaces runtime will handle installing the dependencies!"),Ze=c(),A=s("h2"),D=s("a"),Ce=s("span"),ae(Q.$$.fragment),fa=c(),De=s("span"),ua=o("Create the Gradio interface"),et=c(),q=s("p"),ga=o("To create the Gradio app, make a new file in the repository called "),qe=s("strong"),ma=o("app.py"),va=o(", and add the following code:"),tt=c(),ae(X.$$.fragment),at=c(),u=s("p"),wa=o("This Python script uses a "),Z=s("a"),ya=o("\u{1F917} Transformers pipeline"),_a=o(" to load the "),ee=s("a"),Ea=o("julien-c/hotdog-not-hotdog"),ba=o(" model, which is used by the Gradio interface. The Gradio app will expect you to upload an image, which it\u2019ll then classify as "),Oe=s("em"),Sa=o("hot dog"),$a=o(" or "),He=s("em"),Ga=o("not hot dog"),ka=o(". Once you\u2019ve saved the code to the "),xe=s("strong"),Aa=o("app.py"),Pa=o(" file, visit the "),Re=s("strong"),ja=o("App"),Na=o(" tab to see your app in action!"),ot=c(),he=s("p"),ce=s("img"),this.h()},l(e){const p=Po('[data-svelte="svelte-1phssyn"]',document.head);b=i(p,"META",{name:!0,content:!0}),p.forEach(a),Me=d(e),S=i(e,"H1",{class:!0});var st=l(S);P=i(st,"A",{id:!0,class:!0,href:!0});var Da=l(P);ue=i(Da,"SPAN",{});var qa=l(ue);oe(x.$$.fragment,qa),qa.forEach(a),Da.forEach(a),dt=d(st),ge=i(st,"SPAN",{});var Oa=l(ge);ft=r(Oa,"Gradio Spaces"),Oa.forEach(a),st.forEach(a),Fe=d(e),y=i(e,"P",{});var te=l(y);me=i(te,"STRONG",{});var Ha=l(me);ut=r(Ha,"Gradio"),Ha.forEach(a),gt=r(te," provides an easy and intuitive interface for running a model from a list of inputs and displaying the outputs in formats such as images, audio, 3D objects, and more. Gradio now even has a "),R=i(te,"A",{href:!0,rel:!0});var xa=l(R);mt=r(xa,"Plot output component"),xa.forEach(a),vt=r(te," for creating data visualizations with Matplotlib, Bokeh, and Plotly! For more details, take a look at the "),I=i(te,"A",{href:!0,rel:!0});var Ra=l(I);wt=r(Ra,"Getting started"),Ra.forEach(a),yt=r(te," guide from the Gradio team."),te.forEach(a),Be=d(e),f=i(e,"P",{});var g=l(f);_t=r(g,"Selecting "),ve=i(g,"STRONG",{});var Ia=l(ve);Et=r(Ia,"Gradio"),Ia.forEach(a),bt=r(g," as the SDK when "),M=i(g,"A",{href:!0,rel:!0});var Ma=l(M);St=r(Ma,"creating a new Space"),Ma.forEach(a),$t=r(g," will initialize your Space with the latest version of Gradio by setting the "),we=i(g,"CODE",{});var Fa=l(we);Gt=r(Fa,"sdk"),Fa.forEach(a),kt=r(g," property to "),ye=i(g,"CODE",{});var Ba=l(ye);At=r(Ba,"gradio"),Ba.forEach(a),Pt=r(g," in your "),_e=i(g,"CODE",{});var La=l(_e);jt=r(La,"README.md"),La.forEach(a),Nt=r(g," file\u2019s YAML block. If you\u2019d like to change the Gradio version, you can edit the "),Ee=i(g,"CODE",{});var Ya=l(Ee);Tt=r(Ya,"sdk_version"),Ya.forEach(a),Ct=r(g," property."),g.forEach(a),Le=d(e),_=i(e,"P",{});var de=l(_);Dt=r(de,"Visit the "),F=i(de,"A",{href:!0,rel:!0});var za=l(F);qt=r(za,"Gradio documentation"),za.forEach(a),Ot=r(de," to learn all about its features and check out the "),B=i(de,"A",{href:!0,rel:!0});var Ka=l(B);Ht=r(Ka,"Gradio Guides"),Ka.forEach(a),xt=r(de," for some handy tutorials to help you get started!"),de.forEach(a),Ye=d(e),$=i(e,"H2",{class:!0});var it=l($);j=i(it,"A",{id:!0,class:!0,href:!0});var Wa=l(j);be=i(Wa,"SPAN",{});var Ua=l(be);oe(L.$$.fragment,Ua),Ua.forEach(a),Wa.forEach(a),Rt=d(it),Se=i(it,"SPAN",{});var Va=l(Se);It=r(Va,"Your First Gradio Space: Hot Dog Classifier"),Va.forEach(a),it.forEach(a),ze=d(e),E=i(e,"P",{});var fe=l(E);Mt=r(fe,"In the following sections, you\u2019ll learn the basics of creating a Space, configuring it, and deploying your code to it. We\u2019ll create a "),$e=i(fe,"STRONG",{});var Ja=l($e);Ft=r(Ja,"Hot Dog Classifier"),Ja.forEach(a),Bt=r(fe," Space with Gradio that\u2019ll be used to demo the "),Y=i(fe,"A",{href:!0,rel:!0});var Qa=l(Y);Lt=r(Qa,"julien-c/hotdog-not-hotdog"),Qa.forEach(a),Yt=r(fe," model, which can detect whether a given picture contains a hot dog \u{1F32D}"),fe.forEach(a),Ke=d(e),N=i(e,"P",{});var lt=l(N);zt=r(lt,"You can find a completed version of this hosted at "),z=i(lt,"A",{href:!0,rel:!0});var Xa=l(z);Kt=r(Xa,"NimaBoscarino/hotdog-gradio"),Xa.forEach(a),Wt=r(lt,"."),lt.forEach(a),We=d(e),G=i(e,"H2",{class:!0});var nt=l(G);T=i(nt,"A",{id:!0,class:!0,href:!0});var Za=l(T);Ge=i(Za,"SPAN",{});var eo=l(Ge);oe(K.$$.fragment,eo),eo.forEach(a),Za.forEach(a),Ut=d(nt),ke=i(nt,"SPAN",{});var to=l(ke);Vt=r(to,"Create a new Gradio Space"),to.forEach(a),nt.forEach(a),Ue=d(e),v=i(e,"P",{});var O=l(v);Jt=r(O,"We\u2019ll start by "),W=i(O,"A",{href:!0,rel:!0});var ao=l(W);Qt=r(ao,"creating a brand new Space"),ao.forEach(a),Xt=r(O," and choosing "),Ae=i(O,"STRONG",{});var oo=l(Ae);Zt=r(oo,"Gradio"),oo.forEach(a),ea=r(O," as our SDK. Hugging Face Spaces are Git repositories, meaning that you can work on your Space incrementally (and collaboratively) by pushing commits. Take a look at the "),ne=i(O,"A",{href:!0});var ro=l(ne);ta=r(ro,"Getting Started with Repositories"),ro.forEach(a),aa=r(O," guide to learn about how you can create and edit files before continuing."),O.forEach(a),Ve=d(e),k=i(e,"H2",{class:!0});var pt=l(k);C=i(pt,"A",{id:!0,class:!0,href:!0});var so=l(C);Pe=i(so,"SPAN",{});var io=l(Pe);oe(U.$$.fragment,io),io.forEach(a),so.forEach(a),oa=d(pt),je=i(pt,"SPAN",{});var lo=l(je);ra=r(lo,"Add the dependencies"),lo.forEach(a),pt.forEach(a),Je=d(e),w=i(e,"P",{});var H=l(w);sa=r(H,"For the "),Ne=i(H,"STRONG",{});var no=l(Ne);ia=r(no,"Hot Dog Classifier"),no.forEach(a),la=r(H," we\u2019ll be using a "),V=i(H,"A",{href:!0,rel:!0});var po=l(V);na=r(po,"\u{1F917} Transformers pipeline"),po.forEach(a),pa=r(H," to use the model, so we need to start by installing a few dependencies. This can be done by creating a "),Te=i(H,"STRONG",{});var ho=l(Te);ha=r(ho,"requirements.txt"),ho.forEach(a),ca=r(H," file in our repository, and adding the following dependencies to it:"),H.forEach(a),Qe=d(e),oe(J.$$.fragment,e),Xe=d(e),pe=i(e,"P",{});var co=l(pe);da=r(co,"The Spaces runtime will handle installing the dependencies!"),co.forEach(a),Ze=d(e),A=i(e,"H2",{class:!0});var ht=l(A);D=i(ht,"A",{id:!0,class:!0,href:!0});var fo=l(D);Ce=i(fo,"SPAN",{});var uo=l(Ce);oe(Q.$$.fragment,uo),uo.forEach(a),fo.forEach(a),fa=d(ht),De=i(ht,"SPAN",{});var go=l(De);ua=r(go,"Create the Gradio interface"),go.forEach(a),ht.forEach(a),et=d(e),q=i(e,"P",{});var ct=l(q);ga=r(ct,"To create the Gradio app, make a new file in the repository called "),qe=i(ct,"STRONG",{});var mo=l(qe);ma=r(mo,"app.py"),mo.forEach(a),va=r(ct,", and add the following code:"),ct.forEach(a),tt=d(e),oe(X.$$.fragment,e),at=d(e),u=i(e,"P",{});var m=l(u);wa=r(m,"This Python script uses a "),Z=i(m,"A",{href:!0,rel:!0});var vo=l(Z);ya=r(vo,"\u{1F917} Transformers pipeline"),vo.forEach(a),_a=r(m," to load the "),ee=i(m,"A",{href:!0,rel:!0});var wo=l(ee);Ea=r(wo,"julien-c/hotdog-not-hotdog"),wo.forEach(a),ba=r(m," model, which is used by the Gradio interface. The Gradio app will expect you to upload an image, which it\u2019ll then classify as "),Oe=i(m,"EM",{});var yo=l(Oe);Sa=r(yo,"hot dog"),yo.forEach(a),$a=r(m," or "),He=i(m,"EM",{});var _o=l(He);Ga=r(_o,"not hot dog"),_o.forEach(a),ka=r(m,". Once you\u2019ve saved the code to the "),xe=i(m,"STRONG",{});var Eo=l(xe);Aa=r(Eo,"app.py"),Eo.forEach(a),Pa=r(m," file, visit the "),Re=i(m,"STRONG",{});var bo=l(Re);ja=r(bo,"App"),bo.forEach(a),Na=r(m," tab to see your app in action!"),m.forEach(a),ot=d(e),he=i(e,"P",{});var So=l(he);ce=i(So,"IMG",{src:!0,alt:!0}),So.forEach(a),this.h()},h(){n(b,"name","hf:doc:metadata"),n(b,"content",JSON.stringify(Do)),n(P,"id","gradio-spaces"),n(P,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(P,"href","#gradio-spaces"),n(S,"class","relative group"),n(R,"href","https://gradio.app/docs/#o_plot"),n(R,"rel","nofollow"),n(I,"href","https://gradio.app/getting_started/"),n(I,"rel","nofollow"),n(M,"href","https://huggingface.co/new-space"),n(M,"rel","nofollow"),n(F,"href","https://gradio.app/docs/"),n(F,"rel","nofollow"),n(B,"href","https://gradio.app/guides/"),n(B,"rel","nofollow"),n(j,"id","your-first-gradio-space-hot-dog-classifier"),n(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(j,"href","#your-first-gradio-space-hot-dog-classifier"),n($,"class","relative group"),n(Y,"href","https://huggingface.co/julien-c/hotdog-not-hotdog"),n(Y,"rel","nofollow"),n(z,"href","https://huggingface.co/spaces/NimaBoscarino/hotdog-gradio"),n(z,"rel","nofollow"),n(T,"id","create-a-new-gradio-space"),n(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(T,"href","#create-a-new-gradio-space"),n(G,"class","relative group"),n(W,"href","https://huggingface.co/new-space"),n(W,"rel","nofollow"),n(ne,"href","./repositories-getting-started"),n(C,"id","add-the-dependencies"),n(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(C,"href","#add-the-dependencies"),n(k,"class","relative group"),n(V,"href","https://huggingface.co/docs/transformers/pipeline_tutorial"),n(V,"rel","nofollow"),n(D,"id","create-the-gradio-interface"),n(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(D,"href","#create-the-gradio-interface"),n(A,"class","relative group"),n(Z,"href","https://huggingface.co/docs/transformers/pipeline_tutorial"),n(Z,"rel","nofollow"),n(ee,"href","https://huggingface.co/julien-c/hotdog-not-hotdog"),n(ee,"rel","nofollow"),jo(ce.src,Ca="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-hot-dog-gradio.png")||n(ce,"src",Ca),n(ce,"alt","Hot Dog Classifier Space")},m(e,p){t(document.head,b),h(e,Me,p),h(e,S,p),t(S,P),t(P,ue),re(x,ue,null),t(S,dt),t(S,ge),t(ge,ft),h(e,Fe,p),h(e,y,p),t(y,me),t(me,ut),t(y,gt),t(y,R),t(R,mt),t(y,vt),t(y,I),t(I,wt),t(y,yt),h(e,Be,p),h(e,f,p),t(f,_t),t(f,ve),t(ve,Et),t(f,bt),t(f,M),t(M,St),t(f,$t),t(f,we),t(we,Gt),t(f,kt),t(f,ye),t(ye,At),t(f,Pt),t(f,_e),t(_e,jt),t(f,Nt),t(f,Ee),t(Ee,Tt),t(f,Ct),h(e,Le,p),h(e,_,p),t(_,Dt),t(_,F),t(F,qt),t(_,Ot),t(_,B),t(B,Ht),t(_,xt),h(e,Ye,p),h(e,$,p),t($,j),t(j,be),re(L,be,null),t($,Rt),t($,Se),t(Se,It),h(e,ze,p),h(e,E,p),t(E,Mt),t(E,$e),t($e,Ft),t(E,Bt),t(E,Y),t(Y,Lt),t(E,Yt),h(e,Ke,p),h(e,N,p),t(N,zt),t(N,z),t(z,Kt),t(N,Wt),h(e,We,p),h(e,G,p),t(G,T),t(T,Ge),re(K,Ge,null),t(G,Ut),t(G,ke),t(ke,Vt),h(e,Ue,p),h(e,v,p),t(v,Jt),t(v,W),t(W,Qt),t(v,Xt),t(v,Ae),t(Ae,Zt),t(v,ea),t(v,ne),t(ne,ta),t(v,aa),h(e,Ve,p),h(e,k,p),t(k,C),t(C,Pe),re(U,Pe,null),t(k,oa),t(k,je),t(je,ra),h(e,Je,p),h(e,w,p),t(w,sa),t(w,Ne),t(Ne,ia),t(w,la),t(w,V),t(V,na),t(w,pa),t(w,Te),t(Te,ha),t(w,ca),h(e,Qe,p),re(J,e,p),h(e,Xe,p),h(e,pe,p),t(pe,da),h(e,Ze,p),h(e,A,p),t(A,D),t(D,Ce),re(Q,Ce,null),t(A,fa),t(A,De),t(De,ua),h(e,et,p),h(e,q,p),t(q,ga),t(q,qe),t(qe,ma),t(q,va),h(e,tt,p),re(X,e,p),h(e,at,p),h(e,u,p),t(u,wa),t(u,Z),t(Z,ya),t(u,_a),t(u,ee),t(ee,Ea),t(u,ba),t(u,Oe),t(Oe,Sa),t(u,$a),t(u,He),t(He,Ga),t(u,ka),t(u,xe),t(xe,Aa),t(u,Pa),t(u,Re),t(Re,ja),t(u,Na),h(e,ot,p),h(e,he,p),t(he,ce),rt=!0},p:No,i(e){rt||(se(x.$$.fragment,e),se(L.$$.fragment,e),se(K.$$.fragment,e),se(U.$$.fragment,e),se(J.$$.fragment,e),se(Q.$$.fragment,e),se(X.$$.fragment,e),rt=!0)},o(e){ie(x.$$.fragment,e),ie(L.$$.fragment,e),ie(K.$$.fragment,e),ie(U.$$.fragment,e),ie(J.$$.fragment,e),ie(Q.$$.fragment,e),ie(X.$$.fragment,e),rt=!1},d(e){a(b),e&&a(Me),e&&a(S),le(x),e&&a(Fe),e&&a(y),e&&a(Be),e&&a(f),e&&a(Le),e&&a(_),e&&a(Ye),e&&a($),le(L),e&&a(ze),e&&a(E),e&&a(Ke),e&&a(N),e&&a(We),e&&a(G),le(K),e&&a(Ue),e&&a(v),e&&a(Ve),e&&a(k),le(U),e&&a(Je),e&&a(w),e&&a(Qe),le(J,e),e&&a(Xe),e&&a(pe),e&&a(Ze),e&&a(A),le(Q),e&&a(et),e&&a(q),e&&a(tt),le(X,e),e&&a(at),e&&a(u),e&&a(ot),e&&a(he)}}}const Do={local:"gradio-spaces",sections:[{local:"your-first-gradio-space-hot-dog-classifier",title:"Your First Gradio Space: Hot Dog Classifier"},{local:"create-a-new-gradio-space",title:"Create a new Gradio Space"},{local:"add-the-dependencies",title:"Add the dependencies"},{local:"create-the-gradio-interface",title:"Create the Gradio interface"}],title:"Gradio Spaces"};function qo(Ta){return To(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ro extends Go{constructor(b){super();ko(this,b,qo,Co,Ao,{})}}export{Ro as default,Do as metadata};
