import{S as Po,i as No,s as To,e as s,k as c,w as oe,t as o,N as Do,c as i,d as a,m as d,a as l,x as re,h as r,b as n,P as Ao,G as t,g as h,y as se,L as Co,q as ie,o as le,B as ne,v as qo}from"../chunks/vendor-hf-doc-builder.js";import{I as Me}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as jo}from"../chunks/CodeBlock-hf-doc-builder.js";function Oo(qa){let b,Fe,k,P,ge,R,ut,me,gt,Be,y,ve,mt,vt,I,wt,yt,M,_t,Et,Le,f,bt,we,kt,Gt,F,$t,St,ye,At,jt,_e,Pt,Nt,Ee,Tt,Dt,be,Ct,qt,Ye,_,Ot,B,xt,Ht,L,Rt,It,ze,G,N,ke,Y,Mt,Ge,Ft,Ke,E,Bt,$e,Lt,Yt,z,zt,Kt,We,T,Wt,K,Ut,Vt,Ue,$,D,Se,W,Jt,Ae,Qt,Ve,v,Xt,U,Zt,ea,je,ta,aa,pe,oa,ra,Je,S,C,Pe,V,sa,Ne,ia,Qe,w,la,Te,na,pa,J,ha,ca,De,da,fa,Xe,Q,Ze,he,ua,et,A,q,Ce,X,ga,qe,ma,tt,O,va,Oe,wa,ya,at,Z,ot,u,_a,ee,Ea,ba,te,ka,Ga,xe,$a,Sa,He,Aa,ja,Re,Pa,Na,Ie,Ta,Da,rt,j,ce,Oa,Ca,de,xa,st;return R=new Me({}),Y=new Me({}),W=new Me({}),V=new Me({}),Q=new jo({props:{code:`transformers
torch`,highlighted:`<span class="hljs-attribute">transformers
torch</span>`}}),X=new Me({}),Z=new jo({props:{code:`import gradio as gr
from transformers import pipeline

pipeline = pipeline(task="image-classification", model="julien-c/hotdog-not-hotdog")

def predict(image):
  predictions = pipeline(image)
  return {p["label"]: p["score"] for p in predictions}

gr.Interface(
    predict,
    inputs=gr.inputs.Image(label="Upload hot dog candidate", type="filepath"),
    outputs=gr.outputs.Label(num_top_classes=2),
    title="Hot Dog? Or Not?",
).launch()`,highlighted:`<span class="hljs-keyword">import</span> gradio <span class="hljs-keyword">as</span> gr
<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

pipeline = pipeline(task=<span class="hljs-string">&quot;image-classification&quot;</span>, model=<span class="hljs-string">&quot;julien-c/hotdog-not-hotdog&quot;</span>)

<span class="hljs-keyword">def</span> <span class="hljs-title function_">predict</span>(<span class="hljs-params">image</span>):
  predictions = pipeline(image)
  <span class="hljs-keyword">return</span> {p[<span class="hljs-string">&quot;label&quot;</span>]: p[<span class="hljs-string">&quot;score&quot;</span>] <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> predictions}

gr.Interface(
    predict,
    inputs=gr.inputs.Image(label=<span class="hljs-string">&quot;Upload hot dog candidate&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;filepath&quot;</span>),
    outputs=gr.outputs.Label(num_top_classes=<span class="hljs-number">2</span>),
    title=<span class="hljs-string">&quot;Hot Dog? Or Not?&quot;</span>,
).launch()`}}),{c(){b=s("meta"),Fe=c(),k=s("h1"),P=s("a"),ge=s("span"),oe(R.$$.fragment),ut=c(),me=s("span"),gt=o("Gradio Spaces"),Be=c(),y=s("p"),ve=s("strong"),mt=o("Gradio"),vt=o(" provides an easy and intuitive interface for running a model from a list of inputs and displaying the outputs in formats such as images, audio, 3D objects, and more. Gradio now even has a "),I=s("a"),wt=o("Plot output component"),yt=o(" for creating data visualizations with Matplotlib, Bokeh, and Plotly! For more details, take a look at the "),M=s("a"),_t=o("Getting started"),Et=o(" guide from the Gradio team."),Le=c(),f=s("p"),bt=o("Selecting "),we=s("strong"),kt=o("Gradio"),Gt=o(" as the SDK when "),F=s("a"),$t=o("creating a new Space"),St=o(" will initialize your Space with the latest version of Gradio by setting the "),ye=s("code"),At=o("sdk"),jt=o(" property to "),_e=s("code"),Pt=o("gradio"),Nt=o(" in your "),Ee=s("code"),Tt=o("README.md"),Dt=o(" file\u2019s YAML block. If you\u2019d like to change the Gradio version, you can edit the "),be=s("code"),Ct=o("sdk_version"),qt=o(" property."),Ye=c(),_=s("p"),Ot=o("Visit the "),B=s("a"),xt=o("Gradio documentation"),Ht=o(" to learn all about its features and check out the "),L=s("a"),Rt=o("Gradio Guides"),It=o(" for some handy tutorials to help you get started!"),ze=c(),G=s("h2"),N=s("a"),ke=s("span"),oe(Y.$$.fragment),Mt=c(),Ge=s("span"),Ft=o("Your First Gradio Space: Hot Dog Classifier"),Ke=c(),E=s("p"),Bt=o("In the following sections, you\u2019ll learn the basics of creating a Space, configuring it, and deploying your code to it. We\u2019ll create a "),$e=s("strong"),Lt=o("Hot Dog Classifier"),Yt=o(" Space with Gradio that\u2019ll be used to demo the "),z=s("a"),zt=o("julien-c/hotdog-not-hotdog"),Kt=o(" model, which can detect whether a given picture contains a hot dog \u{1F32D}"),We=c(),T=s("p"),Wt=o("You can find a completed version of this hosted at "),K=s("a"),Ut=o("NimaBoscarino/hotdog-gradio"),Vt=o("."),Ue=c(),$=s("h2"),D=s("a"),Se=s("span"),oe(W.$$.fragment),Jt=c(),Ae=s("span"),Qt=o("Create a new Gradio Space"),Ve=c(),v=s("p"),Xt=o("We\u2019ll start by "),U=s("a"),Zt=o("creating a brand new Space"),ea=o(" and choosing "),je=s("strong"),ta=o("Gradio"),aa=o(" as our SDK. Hugging Face Spaces are Git repositories, meaning that you can work on your Space incrementally (and collaboratively) by pushing commits. Take a look at the "),pe=s("a"),oa=o("Getting Started with Repositories"),ra=o(" guide to learn about how you can create and edit files before continuing."),Je=c(),S=s("h2"),C=s("a"),Pe=s("span"),oe(V.$$.fragment),sa=c(),Ne=s("span"),ia=o("Add the dependencies"),Qe=c(),w=s("p"),la=o("For the "),Te=s("strong"),na=o("Hot Dog Classifier"),pa=o(" we\u2019ll be using a "),J=s("a"),ha=o("\u{1F917} Transformers pipeline"),ca=o(" to use the model, so we need to start by installing a few dependencies. This can be done by creating a "),De=s("strong"),da=o("requirements.txt"),fa=o(" file in our repository, and adding the following dependencies to it:"),Xe=c(),oe(Q.$$.fragment),Ze=c(),he=s("p"),ua=o("The Spaces runtime will handle installing the dependencies!"),et=c(),A=s("h2"),q=s("a"),Ce=s("span"),oe(X.$$.fragment),ga=c(),qe=s("span"),ma=o("Create the Gradio interface"),tt=c(),O=s("p"),va=o("To create the Gradio app, make a new file in the repository called "),Oe=s("strong"),wa=o("app.py"),ya=o(", and add the following code:"),at=c(),oe(Z.$$.fragment),ot=c(),u=s("p"),_a=o("This Python script uses a "),ee=s("a"),Ea=o("\u{1F917} Transformers pipeline"),ba=o(" to load the "),te=s("a"),ka=o("julien-c/hotdog-not-hotdog"),Ga=o(" model, which is used by the Gradio interface. The Gradio app will expect you to upload an image, which it\u2019ll then classify as "),xe=s("em"),$a=o("hot dog"),Sa=o(" or "),He=s("em"),Aa=o("not hot dog"),ja=o(". Once you\u2019ve saved the code to the "),Re=s("strong"),Pa=o("app.py"),Na=o(" file, visit the "),Ie=s("strong"),Ta=o("App"),Da=o(" tab to see your app in action!"),rt=c(),j=s("div"),ce=s("img"),Ca=c(),de=s("img"),this.h()},l(e){const p=Do('[data-svelte="svelte-1phssyn"]',document.head);b=i(p,"META",{name:!0,content:!0}),p.forEach(a),Fe=d(e),k=i(e,"H1",{class:!0});var it=l(k);P=i(it,"A",{id:!0,class:!0,href:!0});var Ha=l(P);ge=i(Ha,"SPAN",{});var Ra=l(ge);re(R.$$.fragment,Ra),Ra.forEach(a),Ha.forEach(a),ut=d(it),me=i(it,"SPAN",{});var Ia=l(me);gt=r(Ia,"Gradio Spaces"),Ia.forEach(a),it.forEach(a),Be=d(e),y=i(e,"P",{});var ae=l(y);ve=i(ae,"STRONG",{});var Ma=l(ve);mt=r(Ma,"Gradio"),Ma.forEach(a),vt=r(ae," provides an easy and intuitive interface for running a model from a list of inputs and displaying the outputs in formats such as images, audio, 3D objects, and more. Gradio now even has a "),I=i(ae,"A",{href:!0,rel:!0});var Fa=l(I);wt=r(Fa,"Plot output component"),Fa.forEach(a),yt=r(ae," for creating data visualizations with Matplotlib, Bokeh, and Plotly! For more details, take a look at the "),M=i(ae,"A",{href:!0,rel:!0});var Ba=l(M);_t=r(Ba,"Getting started"),Ba.forEach(a),Et=r(ae," guide from the Gradio team."),ae.forEach(a),Le=d(e),f=i(e,"P",{});var g=l(f);bt=r(g,"Selecting "),we=i(g,"STRONG",{});var La=l(we);kt=r(La,"Gradio"),La.forEach(a),Gt=r(g," as the SDK when "),F=i(g,"A",{href:!0,rel:!0});var Ya=l(F);$t=r(Ya,"creating a new Space"),Ya.forEach(a),St=r(g," will initialize your Space with the latest version of Gradio by setting the "),ye=i(g,"CODE",{});var za=l(ye);At=r(za,"sdk"),za.forEach(a),jt=r(g," property to "),_e=i(g,"CODE",{});var Ka=l(_e);Pt=r(Ka,"gradio"),Ka.forEach(a),Nt=r(g," in your "),Ee=i(g,"CODE",{});var Wa=l(Ee);Tt=r(Wa,"README.md"),Wa.forEach(a),Dt=r(g," file\u2019s YAML block. If you\u2019d like to change the Gradio version, you can edit the "),be=i(g,"CODE",{});var Ua=l(be);Ct=r(Ua,"sdk_version"),Ua.forEach(a),qt=r(g," property."),g.forEach(a),Ye=d(e),_=i(e,"P",{});var fe=l(_);Ot=r(fe,"Visit the "),B=i(fe,"A",{href:!0,rel:!0});var Va=l(B);xt=r(Va,"Gradio documentation"),Va.forEach(a),Ht=r(fe," to learn all about its features and check out the "),L=i(fe,"A",{href:!0,rel:!0});var Ja=l(L);Rt=r(Ja,"Gradio Guides"),Ja.forEach(a),It=r(fe," for some handy tutorials to help you get started!"),fe.forEach(a),ze=d(e),G=i(e,"H2",{class:!0});var lt=l(G);N=i(lt,"A",{id:!0,class:!0,href:!0});var Qa=l(N);ke=i(Qa,"SPAN",{});var Xa=l(ke);re(Y.$$.fragment,Xa),Xa.forEach(a),Qa.forEach(a),Mt=d(lt),Ge=i(lt,"SPAN",{});var Za=l(Ge);Ft=r(Za,"Your First Gradio Space: Hot Dog Classifier"),Za.forEach(a),lt.forEach(a),Ke=d(e),E=i(e,"P",{});var ue=l(E);Bt=r(ue,"In the following sections, you\u2019ll learn the basics of creating a Space, configuring it, and deploying your code to it. We\u2019ll create a "),$e=i(ue,"STRONG",{});var eo=l($e);Lt=r(eo,"Hot Dog Classifier"),eo.forEach(a),Yt=r(ue," Space with Gradio that\u2019ll be used to demo the "),z=i(ue,"A",{href:!0,rel:!0});var to=l(z);zt=r(to,"julien-c/hotdog-not-hotdog"),to.forEach(a),Kt=r(ue," model, which can detect whether a given picture contains a hot dog \u{1F32D}"),ue.forEach(a),We=d(e),T=i(e,"P",{});var nt=l(T);Wt=r(nt,"You can find a completed version of this hosted at "),K=i(nt,"A",{href:!0,rel:!0});var ao=l(K);Ut=r(ao,"NimaBoscarino/hotdog-gradio"),ao.forEach(a),Vt=r(nt,"."),nt.forEach(a),Ue=d(e),$=i(e,"H2",{class:!0});var pt=l($);D=i(pt,"A",{id:!0,class:!0,href:!0});var oo=l(D);Se=i(oo,"SPAN",{});var ro=l(Se);re(W.$$.fragment,ro),ro.forEach(a),oo.forEach(a),Jt=d(pt),Ae=i(pt,"SPAN",{});var so=l(Ae);Qt=r(so,"Create a new Gradio Space"),so.forEach(a),pt.forEach(a),Ve=d(e),v=i(e,"P",{});var x=l(v);Xt=r(x,"We\u2019ll start by "),U=i(x,"A",{href:!0,rel:!0});var io=l(U);Zt=r(io,"creating a brand new Space"),io.forEach(a),ea=r(x," and choosing "),je=i(x,"STRONG",{});var lo=l(je);ta=r(lo,"Gradio"),lo.forEach(a),aa=r(x," as our SDK. Hugging Face Spaces are Git repositories, meaning that you can work on your Space incrementally (and collaboratively) by pushing commits. Take a look at the "),pe=i(x,"A",{href:!0});var no=l(pe);oa=r(no,"Getting Started with Repositories"),no.forEach(a),ra=r(x," guide to learn about how you can create and edit files before continuing."),x.forEach(a),Je=d(e),S=i(e,"H2",{class:!0});var ht=l(S);C=i(ht,"A",{id:!0,class:!0,href:!0});var po=l(C);Pe=i(po,"SPAN",{});var ho=l(Pe);re(V.$$.fragment,ho),ho.forEach(a),po.forEach(a),sa=d(ht),Ne=i(ht,"SPAN",{});var co=l(Ne);ia=r(co,"Add the dependencies"),co.forEach(a),ht.forEach(a),Qe=d(e),w=i(e,"P",{});var H=l(w);la=r(H,"For the "),Te=i(H,"STRONG",{});var fo=l(Te);na=r(fo,"Hot Dog Classifier"),fo.forEach(a),pa=r(H," we\u2019ll be using a "),J=i(H,"A",{href:!0,rel:!0});var uo=l(J);ha=r(uo,"\u{1F917} Transformers pipeline"),uo.forEach(a),ca=r(H," to use the model, so we need to start by installing a few dependencies. This can be done by creating a "),De=i(H,"STRONG",{});var go=l(De);da=r(go,"requirements.txt"),go.forEach(a),fa=r(H," file in our repository, and adding the following dependencies to it:"),H.forEach(a),Xe=d(e),re(Q.$$.fragment,e),Ze=d(e),he=i(e,"P",{});var mo=l(he);ua=r(mo,"The Spaces runtime will handle installing the dependencies!"),mo.forEach(a),et=d(e),A=i(e,"H2",{class:!0});var ct=l(A);q=i(ct,"A",{id:!0,class:!0,href:!0});var vo=l(q);Ce=i(vo,"SPAN",{});var wo=l(Ce);re(X.$$.fragment,wo),wo.forEach(a),vo.forEach(a),ga=d(ct),qe=i(ct,"SPAN",{});var yo=l(qe);ma=r(yo,"Create the Gradio interface"),yo.forEach(a),ct.forEach(a),tt=d(e),O=i(e,"P",{});var dt=l(O);va=r(dt,"To create the Gradio app, make a new file in the repository called "),Oe=i(dt,"STRONG",{});var _o=l(Oe);wa=r(_o,"app.py"),_o.forEach(a),ya=r(dt,", and add the following code:"),dt.forEach(a),at=d(e),re(Z.$$.fragment,e),ot=d(e),u=i(e,"P",{});var m=l(u);_a=r(m,"This Python script uses a "),ee=i(m,"A",{href:!0,rel:!0});var Eo=l(ee);Ea=r(Eo,"\u{1F917} Transformers pipeline"),Eo.forEach(a),ba=r(m," to load the "),te=i(m,"A",{href:!0,rel:!0});var bo=l(te);ka=r(bo,"julien-c/hotdog-not-hotdog"),bo.forEach(a),Ga=r(m," model, which is used by the Gradio interface. The Gradio app will expect you to upload an image, which it\u2019ll then classify as "),xe=i(m,"EM",{});var ko=l(xe);$a=r(ko,"hot dog"),ko.forEach(a),Sa=r(m," or "),He=i(m,"EM",{});var Go=l(He);Aa=r(Go,"not hot dog"),Go.forEach(a),ja=r(m,". Once you\u2019ve saved the code to the "),Re=i(m,"STRONG",{});var $o=l(Re);Pa=r($o,"app.py"),$o.forEach(a),Na=r(m," file, visit the "),Ie=i(m,"STRONG",{});var So=l(Ie);Ta=r(So,"App"),So.forEach(a),Da=r(m," tab to see your app in action!"),m.forEach(a),rt=d(e),j=i(e,"DIV",{class:!0});var ft=l(j);ce=i(ft,"IMG",{class:!0,src:!0}),Ca=d(ft),de=i(ft,"IMG",{class:!0,src:!0}),ft.forEach(a),this.h()},h(){n(b,"name","hf:doc:metadata"),n(b,"content",JSON.stringify(xo)),n(P,"id","gradio-spaces"),n(P,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(P,"href","#gradio-spaces"),n(k,"class","relative group"),n(I,"href","https://gradio.app/docs/#o_plot"),n(I,"rel","nofollow"),n(M,"href","https://gradio.app/getting_started/"),n(M,"rel","nofollow"),n(F,"href","https://huggingface.co/new-space"),n(F,"rel","nofollow"),n(B,"href","https://gradio.app/docs/"),n(B,"rel","nofollow"),n(L,"href","https://gradio.app/guides/"),n(L,"rel","nofollow"),n(N,"id","your-first-gradio-space-hot-dog-classifier"),n(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(N,"href","#your-first-gradio-space-hot-dog-classifier"),n(G,"class","relative group"),n(z,"href","https://huggingface.co/julien-c/hotdog-not-hotdog"),n(z,"rel","nofollow"),n(K,"href","https://huggingface.co/spaces/NimaBoscarino/hotdog-gradio"),n(K,"rel","nofollow"),n(D,"id","create-a-new-gradio-space"),n(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(D,"href","#create-a-new-gradio-space"),n($,"class","relative group"),n(U,"href","https://huggingface.co/new-space"),n(U,"rel","nofollow"),n(pe,"href","./repositories-getting-started"),n(C,"id","add-the-dependencies"),n(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(C,"href","#add-the-dependencies"),n(S,"class","relative group"),n(J,"href","https://huggingface.co/docs/transformers/pipeline_tutorial"),n(J,"rel","nofollow"),n(q,"id","create-the-gradio-interface"),n(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(q,"href","#create-the-gradio-interface"),n(A,"class","relative group"),n(ee,"href","https://huggingface.co/docs/transformers/pipeline_tutorial"),n(ee,"rel","nofollow"),n(te,"href","https://huggingface.co/julien-c/hotdog-not-hotdog"),n(te,"rel","nofollow"),n(ce,"class","block dark:hidden"),Ao(ce.src,Oa="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-hot-dog-gradio.png")||n(ce,"src",Oa),n(de,"class","hidden dark:block"),Ao(de.src,xa="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-hot-dog-gradio-dark.png")||n(de,"src",xa),n(j,"class","flex justify-center")},m(e,p){t(document.head,b),h(e,Fe,p),h(e,k,p),t(k,P),t(P,ge),se(R,ge,null),t(k,ut),t(k,me),t(me,gt),h(e,Be,p),h(e,y,p),t(y,ve),t(ve,mt),t(y,vt),t(y,I),t(I,wt),t(y,yt),t(y,M),t(M,_t),t(y,Et),h(e,Le,p),h(e,f,p),t(f,bt),t(f,we),t(we,kt),t(f,Gt),t(f,F),t(F,$t),t(f,St),t(f,ye),t(ye,At),t(f,jt),t(f,_e),t(_e,Pt),t(f,Nt),t(f,Ee),t(Ee,Tt),t(f,Dt),t(f,be),t(be,Ct),t(f,qt),h(e,Ye,p),h(e,_,p),t(_,Ot),t(_,B),t(B,xt),t(_,Ht),t(_,L),t(L,Rt),t(_,It),h(e,ze,p),h(e,G,p),t(G,N),t(N,ke),se(Y,ke,null),t(G,Mt),t(G,Ge),t(Ge,Ft),h(e,Ke,p),h(e,E,p),t(E,Bt),t(E,$e),t($e,Lt),t(E,Yt),t(E,z),t(z,zt),t(E,Kt),h(e,We,p),h(e,T,p),t(T,Wt),t(T,K),t(K,Ut),t(T,Vt),h(e,Ue,p),h(e,$,p),t($,D),t(D,Se),se(W,Se,null),t($,Jt),t($,Ae),t(Ae,Qt),h(e,Ve,p),h(e,v,p),t(v,Xt),t(v,U),t(U,Zt),t(v,ea),t(v,je),t(je,ta),t(v,aa),t(v,pe),t(pe,oa),t(v,ra),h(e,Je,p),h(e,S,p),t(S,C),t(C,Pe),se(V,Pe,null),t(S,sa),t(S,Ne),t(Ne,ia),h(e,Qe,p),h(e,w,p),t(w,la),t(w,Te),t(Te,na),t(w,pa),t(w,J),t(J,ha),t(w,ca),t(w,De),t(De,da),t(w,fa),h(e,Xe,p),se(Q,e,p),h(e,Ze,p),h(e,he,p),t(he,ua),h(e,et,p),h(e,A,p),t(A,q),t(q,Ce),se(X,Ce,null),t(A,ga),t(A,qe),t(qe,ma),h(e,tt,p),h(e,O,p),t(O,va),t(O,Oe),t(Oe,wa),t(O,ya),h(e,at,p),se(Z,e,p),h(e,ot,p),h(e,u,p),t(u,_a),t(u,ee),t(ee,Ea),t(u,ba),t(u,te),t(te,ka),t(u,Ga),t(u,xe),t(xe,$a),t(u,Sa),t(u,He),t(He,Aa),t(u,ja),t(u,Re),t(Re,Pa),t(u,Na),t(u,Ie),t(Ie,Ta),t(u,Da),h(e,rt,p),h(e,j,p),t(j,ce),t(j,Ca),t(j,de),st=!0},p:Co,i(e){st||(ie(R.$$.fragment,e),ie(Y.$$.fragment,e),ie(W.$$.fragment,e),ie(V.$$.fragment,e),ie(Q.$$.fragment,e),ie(X.$$.fragment,e),ie(Z.$$.fragment,e),st=!0)},o(e){le(R.$$.fragment,e),le(Y.$$.fragment,e),le(W.$$.fragment,e),le(V.$$.fragment,e),le(Q.$$.fragment,e),le(X.$$.fragment,e),le(Z.$$.fragment,e),st=!1},d(e){a(b),e&&a(Fe),e&&a(k),ne(R),e&&a(Be),e&&a(y),e&&a(Le),e&&a(f),e&&a(Ye),e&&a(_),e&&a(ze),e&&a(G),ne(Y),e&&a(Ke),e&&a(E),e&&a(We),e&&a(T),e&&a(Ue),e&&a($),ne(W),e&&a(Ve),e&&a(v),e&&a(Je),e&&a(S),ne(V),e&&a(Qe),e&&a(w),e&&a(Xe),ne(Q,e),e&&a(Ze),e&&a(he),e&&a(et),e&&a(A),ne(X),e&&a(tt),e&&a(O),e&&a(at),ne(Z,e),e&&a(ot),e&&a(u),e&&a(rt),e&&a(j)}}}const xo={local:"gradio-spaces",sections:[{local:"your-first-gradio-space-hot-dog-classifier",title:"Your First Gradio Space: Hot Dog Classifier"},{local:"create-a-new-gradio-space",title:"Create a new Gradio Space"},{local:"add-the-dependencies",title:"Add the dependencies"},{local:"create-the-gradio-interface",title:"Create the Gradio interface"}],title:"Gradio Spaces"};function Ho(qa){return qo(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Fo extends Po{constructor(b){super();No(this,b,Ho,Oo,To,{})}}export{Fo as default,xo as metadata};
