import{S as Jl,i as Bl,s as Gl,e as a,k as h,w as d,t as n,M as zl,c as l,d as t,m as p,a as s,x as m,h as i,b as u,G as o,g as f,y as g,q as _,o as w,B as y,v as Kl}from"../chunks/vendor-hf-doc-builder.js";import{T as Vl}from"../chunks/Tip-hf-doc-builder.js";import{I as Fe}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as S}from"../chunks/CodeBlock-hf-doc-builder.js";function Xl(dt){let c,C;return{c(){c=a("p"),C=n(`You can also provide your token to our functions and methods. This way you don\u2019t need to
store your token anywhere.`)},l(v){c=l(v,"P",{});var $=s(c);C=i($,`You can also provide your token to our functions and methods. This way you don\u2019t need to
store your token anywhere.`),$.forEach(t)},m(v,$){f(v,c,$),o(c,C)},d(v){v&&t(c)}}}function Zl(dt){let c,C,v,$,Me,Z,co,Re,mo,mt,k,go,ee,_o,wo,Qe,yo,vo,gt,P,D,We,te,bo,Je,$o,_t,E,Eo,Be,ko,Ao,Ge,Ho,jo,ze,Po,To,wt,L,xo,Ke,qo,Io,yt,oe,vt,N,So,Ve,Co,Do,bt,ae,$t,T,O,Xe,le,Lo,Ze,No,Et,U,Oo,ve,Uo,Yo,kt,Y,Fo,re,Mo,Ro,At,se,Ht,F,Qo,et,Wo,Jo,jt,ne,Pt,M,Bo,be,Go,zo,Tt,x,R,tt,ie,Ko,ot,Vo,xt,A,Xo,fe,Zo,ea,he,ta,oa,qt,Q,It,$e,at,aa,St,pe,Ct,W,la,lt,ra,sa,Dt,ue,Lt,ce,rt,na,Nt,J,ia,Ee,fa,ha,Ot,de,Ut,ke,pa,Yt,me,Ft,Ae,ua,Mt,q,B,st,ge,ca,nt,da,Rt,G,ma,He,ga,_a,Qt,H,it,wa,ya,ft,va,ba,ht,$a,Wt,_e,Jt,z,Ea,je,ka,Aa,Bt,I,K,pt,we,Ha,ut,ja,Gt,V,Pa,ct,Ta,xa,zt,b,Pe,Te,qa,Ia,Sa,xe,qe,Ca,Da,La,Ie,Se,Na,Oa,Ua,Ce,De,Ya,Fa,Ma,Le,Ne,Ra,Qa,Kt;return Z=new Fe({}),te=new Fe({}),oe=new S({props:{code:"pip install huggingface_hub",highlighted:"pip install huggingface_hub"}}),ae=new S({props:{code:"conda install -c conda-forge huggingface_hub",highlighted:"conda install -c conda-forge huggingface_hub"}}),le=new Fe({}),se=new S({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download(repo_id="google/pegasus-xsum", filename="config.json")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(repo_id=<span class="hljs-string">&quot;google/pegasus-xsum&quot;</span>, filename=<span class="hljs-string">&quot;config.json&quot;</span>)`}}),ne=new S({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download(
    repo_id="google/pegasus-xsum", 
    filename="config.json", 
    revision="4d33b01d79672f27f001f6abade33f22d993b151"
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;google/pegasus-xsum&quot;</span>, 
<span class="hljs-meta">... </span>    filename=<span class="hljs-string">&quot;config.json&quot;</span>, 
<span class="hljs-meta">... </span>    revision=<span class="hljs-string">&quot;4d33b01d79672f27f001f6abade33f22d993b151&quot;</span>
<span class="hljs-meta">... </span>)`}}),ie=new Fe({}),Q=new Vl({props:{$$slots:{default:[Xl]},$$scope:{ctx:dt}}}),pe=new S({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}}),ue=new S({props:{code:`from huggingface_hub import notebook_login
notebook_login()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login
<span class="hljs-meta">&gt;&gt;&gt; </span>notebook_login()`}}),de=new S({props:{code:`from huggingface_hub import HfApi
api = HfApi()
api.create_repo(repo_id="super-cool-model")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> HfApi
<span class="hljs-meta">&gt;&gt;&gt; </span>api = HfApi()
<span class="hljs-meta">&gt;&gt;&gt; </span>api.create_repo(repo_id=<span class="hljs-string">&quot;super-cool-model&quot;</span>)`}}),me=new S({props:{code:`from huggingface_hub import HfApi
api = HfApi()
api.create_repo(repo_id="super-cool-model", private=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> HfApi
<span class="hljs-meta">&gt;&gt;&gt; </span>api = HfApi()
<span class="hljs-meta">&gt;&gt;&gt; </span>api.create_repo(repo_id=<span class="hljs-string">&quot;super-cool-model&quot;</span>, private=<span class="hljs-literal">True</span>)`}}),ge=new Fe({}),_e=new S({props:{code:`from huggingface_hub import HfApi
api = HfApi()
api.upload_file(path_or_fileobj="/home/lysandre/dummy-test/README.md", 
                path_in_repo="README.md", 
                repo_id="lysandre/test-model",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> HfApi
<span class="hljs-meta">&gt;&gt;&gt; </span>api = HfApi()
<span class="hljs-meta">&gt;&gt;&gt; </span>api.upload_file(path_or_fileobj=<span class="hljs-string">&quot;/home/lysandre/dummy-test/README.md&quot;</span>, 
<span class="hljs-meta">... </span>                path_in_repo=<span class="hljs-string">&quot;README.md&quot;</span>, 
<span class="hljs-meta">... </span>                repo_id=<span class="hljs-string">&quot;lysandre/test-model&quot;</span>,
<span class="hljs-meta">... </span>)`}}),we=new Fe({}),{c(){c=a("meta"),C=h(),v=a("h1"),$=a("a"),Me=a("span"),d(Z.$$.fragment),co=h(),Re=a("span"),mo=n("Quick start"),mt=h(),k=a("p"),go=n("The "),ee=a("a"),_o=n("Hugging Face Hub"),wo=n(` is the go-to place for sharing machine learning
models, demos, datasets, and metrics. `),Qe=a("code"),yo=n("huggingface_hub"),vo=n(` library helps you interact with
the Hub without leaving your development environment. You can create and manage
repositories easily, download and upload files, and get useful model and dataset
metadata from the Hub.`),gt=h(),P=a("h2"),D=a("a"),We=a("span"),d(te.$$.fragment),bo=h(),Je=a("span"),$o=n("Install the Hub library"),_t=h(),E=a("p"),Eo=n("To get started, you should install the "),Be=a("code"),ko=n("huggingface_hub"),Ao=n(` library. You can install the
library with `),Ge=a("code"),Ho=n("pip"),jo=n(" or "),ze=a("code"),Po=n("conda"),To=n("."),wt=h(),L=a("p"),xo=n("With "),Ke=a("code"),qo=n("pip"),Io=n(":"),yt=h(),d(oe.$$.fragment),vt=h(),N=a("p"),So=n("With "),Ve=a("code"),Co=n("conda"),Do=n(":"),bt=h(),d(ae.$$.fragment),$t=h(),T=a("h2"),O=a("a"),Xe=a("span"),d(le.$$.fragment),Lo=h(),Ze=a("span"),No=n("Download files from the Hub"),Et=h(),U=a("p"),Oo=n(`Repositories on the Hub are git version controlled, and users can download a single file
or the whole repository. You can use the `),ve=a("a"),Uo=n("hf_hub_download()"),Yo=n(` function to download files.
This function will download and cache a file on your local disk. The next time you need
that file, it will load from your cache, so you don\u2019t need to re-download it.`),kt=h(),Y=a("p"),Fo=n(`You will need the repository id and the filename of the file you want to download. For
example, to download the `),re=a("a"),Mo=n("Pegasus"),Ro=n(` model
configuration file:`),At=h(),d(se.$$.fragment),Ht=h(),F=a("p"),Qo=n("To download a specific version of the file, use the "),et=a("code"),Wo=n("revision"),Jo=n(` parameter to specify the
branch name, tag, or commit hash. If you choose to use the commit hash, it must be the
full-length hash instead of the shorter 7-character commit hash:`),jt=h(),d(ne.$$.fragment),Pt=h(),M=a("p"),Bo=n("For more details and options, see the API reference for "),be=a("a"),Go=n("hf_hub_download()"),zo=n("."),Tt=h(),x=a("h2"),R=a("a"),tt=a("span"),d(ie.$$.fragment),Ko=h(),ot=a("span"),Vo=n("Create a repository"),xt=h(),A=a("p"),Xo=n("To create and share files to the Hub, you need to have a Hugging Face account. "),fe=a("a"),Zo=n(`Create
an account`),ea=n(` if you don\u2019t already have one, and then sign in to find
your `),he=a("a"),ta=n("User Access Token"),oa=n(` in
your Settings. The User Access Token is used to authenticate your identity to the Hub.`),qt=h(),d(Q.$$.fragment),It=h(),$e=a("ol"),at=a("li"),aa=n("Log in to your Hugging Face account with the following command:"),St=h(),d(pe.$$.fragment),Ct=h(),W=a("p"),la=n(`Or if you prefer to work from a Jupyter or Colaboratory notebook, then login with
`),lt=a("code"),ra=n("notebook_login()"),sa=n(":"),Dt=h(),d(ue.$$.fragment),Lt=h(),ce=a("ol"),rt=a("li"),na=n("Enter your User Access Token to authenticate your identity to the Hub."),Nt=h(),J=a("p"),ia=n("After you\u2019ve created an account, create a repository with the "),Ee=a("a"),fa=n("create_repo()"),ha=n(" function:"),Ot=h(),d(de.$$.fragment),Ut=h(),ke=a("p"),pa=n("If you want your repository to be private, then:"),Yt=h(),d(me.$$.fragment),Ft=h(),Ae=a("p"),ua=n("Private repositories will not be visible to anyone except yourself."),Mt=h(),q=a("h2"),B=a("a"),st=a("span"),d(ge.$$.fragment),ca=h(),nt=a("span"),da=n("Share files to the Hub"),Rt=h(),G=a("p"),ma=n("Use the "),He=a("a"),ga=n("upload_file()"),_a=n(` function to add a file to your newly created repository. You
need to specify:`),Qt=h(),H=a("ol"),it=a("li"),wa=n("The path of the file to upload."),ya=h(),ft=a("li"),va=n("The path of the file in the repository."),ba=h(),ht=a("li"),$a=n("The repository id of where you want to add the file."),Wt=h(),d(_e.$$.fragment),Jt=h(),z=a("p"),Ea=n("To upload more than one file at a time, take a look at this "),je=a("a"),ka=n("guide"),Aa=n(`
which will introduce you to several methods for uploading files.`),Bt=h(),I=a("h2"),K=a("a"),pt=a("span"),d(we.$$.fragment),Ha=h(),ut=a("span"),ja=n("Next steps"),Gt=h(),V=a("p"),Pa=n("The "),ct=a("code"),Ta=n("huggingface_hub"),xa=n(` library provides an easy way for users to interact with the Hub
with Python. To learn more about how you can manage your files and repositories on the
Hub, we recommend reading our how-to guides for how to:`),zt=h(),b=a("ul"),Pe=a("li"),Te=a("a"),qa=n("Create and manage repositories"),Ia=n("."),Sa=h(),xe=a("li"),qe=a("a"),Ca=n("Download"),Da=n(" files from the Hub."),La=h(),Ie=a("li"),Se=a("a"),Na=n("Upload"),Oa=n(" files to the Hub."),Ua=h(),Ce=a("li"),De=a("a"),Ya=n("Search the Hub"),Fa=n(" for your desired model or dataset."),Ma=h(),Le=a("li"),Ne=a("a"),Ra=n("Access the Inference API"),Qa=n(" for fast inference."),this.h()},l(e){const r=zl('[data-svelte="svelte-1phssyn"]',document.head);c=l(r,"META",{name:!0,content:!0}),r.forEach(t),C=p(e),v=l(e,"H1",{class:!0});var ye=s(v);$=l(ye,"A",{id:!0,class:!0,href:!0});var Ka=s($);Me=l(Ka,"SPAN",{});var Va=s(Me);m(Z.$$.fragment,Va),Va.forEach(t),Ka.forEach(t),co=p(ye),Re=l(ye,"SPAN",{});var Xa=s(Re);mo=i(Xa,"Quick start"),Xa.forEach(t),ye.forEach(t),mt=p(e),k=l(e,"P",{});var Oe=s(k);go=i(Oe,"The "),ee=l(Oe,"A",{href:!0,rel:!0});var Za=s(ee);_o=i(Za,"Hugging Face Hub"),Za.forEach(t),wo=i(Oe,` is the go-to place for sharing machine learning
models, demos, datasets, and metrics. `),Qe=l(Oe,"CODE",{});var el=s(Qe);yo=i(el,"huggingface_hub"),el.forEach(t),vo=i(Oe,` library helps you interact with
the Hub without leaving your development environment. You can create and manage
repositories easily, download and upload files, and get useful model and dataset
metadata from the Hub.`),Oe.forEach(t),gt=p(e),P=l(e,"H2",{class:!0});var Vt=s(P);D=l(Vt,"A",{id:!0,class:!0,href:!0});var tl=s(D);We=l(tl,"SPAN",{});var ol=s(We);m(te.$$.fragment,ol),ol.forEach(t),tl.forEach(t),bo=p(Vt),Je=l(Vt,"SPAN",{});var al=s(Je);$o=i(al,"Install the Hub library"),al.forEach(t),Vt.forEach(t),_t=p(e),E=l(e,"P",{});var X=s(E);Eo=i(X,"To get started, you should install the "),Be=l(X,"CODE",{});var ll=s(Be);ko=i(ll,"huggingface_hub"),ll.forEach(t),Ao=i(X,` library. You can install the
library with `),Ge=l(X,"CODE",{});var rl=s(Ge);Ho=i(rl,"pip"),rl.forEach(t),jo=i(X," or "),ze=l(X,"CODE",{});var sl=s(ze);Po=i(sl,"conda"),sl.forEach(t),To=i(X,"."),X.forEach(t),wt=p(e),L=l(e,"P",{});var Xt=s(L);xo=i(Xt,"With "),Ke=l(Xt,"CODE",{});var nl=s(Ke);qo=i(nl,"pip"),nl.forEach(t),Io=i(Xt,":"),Xt.forEach(t),yt=p(e),m(oe.$$.fragment,e),vt=p(e),N=l(e,"P",{});var Zt=s(N);So=i(Zt,"With "),Ve=l(Zt,"CODE",{});var il=s(Ve);Co=i(il,"conda"),il.forEach(t),Do=i(Zt,":"),Zt.forEach(t),bt=p(e),m(ae.$$.fragment,e),$t=p(e),T=l(e,"H2",{class:!0});var eo=s(T);O=l(eo,"A",{id:!0,class:!0,href:!0});var fl=s(O);Xe=l(fl,"SPAN",{});var hl=s(Xe);m(le.$$.fragment,hl),hl.forEach(t),fl.forEach(t),Lo=p(eo),Ze=l(eo,"SPAN",{});var pl=s(Ze);No=i(pl,"Download files from the Hub"),pl.forEach(t),eo.forEach(t),Et=p(e),U=l(e,"P",{});var to=s(U);Oo=i(to,`Repositories on the Hub are git version controlled, and users can download a single file
or the whole repository. You can use the `),ve=l(to,"A",{href:!0});var ul=s(ve);Uo=i(ul,"hf_hub_download()"),ul.forEach(t),Yo=i(to,` function to download files.
This function will download and cache a file on your local disk. The next time you need
that file, it will load from your cache, so you don\u2019t need to re-download it.`),to.forEach(t),kt=p(e),Y=l(e,"P",{});var oo=s(Y);Fo=i(oo,`You will need the repository id and the filename of the file you want to download. For
example, to download the `),re=l(oo,"A",{href:!0,rel:!0});var cl=s(re);Mo=i(cl,"Pegasus"),cl.forEach(t),Ro=i(oo,` model
configuration file:`),oo.forEach(t),At=p(e),m(se.$$.fragment,e),Ht=p(e),F=l(e,"P",{});var ao=s(F);Qo=i(ao,"To download a specific version of the file, use the "),et=l(ao,"CODE",{});var dl=s(et);Wo=i(dl,"revision"),dl.forEach(t),Jo=i(ao,` parameter to specify the
branch name, tag, or commit hash. If you choose to use the commit hash, it must be the
full-length hash instead of the shorter 7-character commit hash:`),ao.forEach(t),jt=p(e),m(ne.$$.fragment,e),Pt=p(e),M=l(e,"P",{});var lo=s(M);Bo=i(lo,"For more details and options, see the API reference for "),be=l(lo,"A",{href:!0});var ml=s(be);Go=i(ml,"hf_hub_download()"),ml.forEach(t),zo=i(lo,"."),lo.forEach(t),Tt=p(e),x=l(e,"H2",{class:!0});var ro=s(x);R=l(ro,"A",{id:!0,class:!0,href:!0});var gl=s(R);tt=l(gl,"SPAN",{});var _l=s(tt);m(ie.$$.fragment,_l),_l.forEach(t),gl.forEach(t),Ko=p(ro),ot=l(ro,"SPAN",{});var wl=s(ot);Vo=i(wl,"Create a repository"),wl.forEach(t),ro.forEach(t),xt=p(e),A=l(e,"P",{});var Ue=s(A);Xo=i(Ue,"To create and share files to the Hub, you need to have a Hugging Face account. "),fe=l(Ue,"A",{href:!0,rel:!0});var yl=s(fe);Zo=i(yl,`Create
an account`),yl.forEach(t),ea=i(Ue,` if you don\u2019t already have one, and then sign in to find
your `),he=l(Ue,"A",{href:!0,rel:!0});var vl=s(he);ta=i(vl,"User Access Token"),vl.forEach(t),oa=i(Ue,` in
your Settings. The User Access Token is used to authenticate your identity to the Hub.`),Ue.forEach(t),qt=p(e),m(Q.$$.fragment,e),It=p(e),$e=l(e,"OL",{});var bl=s($e);at=l(bl,"LI",{});var $l=s(at);aa=i($l,"Log in to your Hugging Face account with the following command:"),$l.forEach(t),bl.forEach(t),St=p(e),m(pe.$$.fragment,e),Ct=p(e),W=l(e,"P",{});var so=s(W);la=i(so,`Or if you prefer to work from a Jupyter or Colaboratory notebook, then login with
`),lt=l(so,"CODE",{});var El=s(lt);ra=i(El,"notebook_login()"),El.forEach(t),sa=i(so,":"),so.forEach(t),Dt=p(e),m(ue.$$.fragment,e),Lt=p(e),ce=l(e,"OL",{start:!0});var kl=s(ce);rt=l(kl,"LI",{});var Al=s(rt);na=i(Al,"Enter your User Access Token to authenticate your identity to the Hub."),Al.forEach(t),kl.forEach(t),Nt=p(e),J=l(e,"P",{});var no=s(J);ia=i(no,"After you\u2019ve created an account, create a repository with the "),Ee=l(no,"A",{href:!0});var Hl=s(Ee);fa=i(Hl,"create_repo()"),Hl.forEach(t),ha=i(no," function:"),no.forEach(t),Ot=p(e),m(de.$$.fragment,e),Ut=p(e),ke=l(e,"P",{});var jl=s(ke);pa=i(jl,"If you want your repository to be private, then:"),jl.forEach(t),Yt=p(e),m(me.$$.fragment,e),Ft=p(e),Ae=l(e,"P",{});var Pl=s(Ae);ua=i(Pl,"Private repositories will not be visible to anyone except yourself."),Pl.forEach(t),Mt=p(e),q=l(e,"H2",{class:!0});var io=s(q);B=l(io,"A",{id:!0,class:!0,href:!0});var Tl=s(B);st=l(Tl,"SPAN",{});var xl=s(st);m(ge.$$.fragment,xl),xl.forEach(t),Tl.forEach(t),ca=p(io),nt=l(io,"SPAN",{});var ql=s(nt);da=i(ql,"Share files to the Hub"),ql.forEach(t),io.forEach(t),Rt=p(e),G=l(e,"P",{});var fo=s(G);ma=i(fo,"Use the "),He=l(fo,"A",{href:!0});var Il=s(He);ga=i(Il,"upload_file()"),Il.forEach(t),_a=i(fo,` function to add a file to your newly created repository. You
need to specify:`),fo.forEach(t),Qt=p(e),H=l(e,"OL",{});var Ye=s(H);it=l(Ye,"LI",{});var Sl=s(it);wa=i(Sl,"The path of the file to upload."),Sl.forEach(t),ya=p(Ye),ft=l(Ye,"LI",{});var Cl=s(ft);va=i(Cl,"The path of the file in the repository."),Cl.forEach(t),ba=p(Ye),ht=l(Ye,"LI",{});var Dl=s(ht);$a=i(Dl,"The repository id of where you want to add the file."),Dl.forEach(t),Ye.forEach(t),Wt=p(e),m(_e.$$.fragment,e),Jt=p(e),z=l(e,"P",{});var ho=s(z);Ea=i(ho,"To upload more than one file at a time, take a look at this "),je=l(ho,"A",{href:!0});var Ll=s(je);ka=i(Ll,"guide"),Ll.forEach(t),Aa=i(ho,`
which will introduce you to several methods for uploading files.`),ho.forEach(t),Bt=p(e),I=l(e,"H2",{class:!0});var po=s(I);K=l(po,"A",{id:!0,class:!0,href:!0});var Nl=s(K);pt=l(Nl,"SPAN",{});var Ol=s(pt);m(we.$$.fragment,Ol),Ol.forEach(t),Nl.forEach(t),Ha=p(po),ut=l(po,"SPAN",{});var Ul=s(ut);ja=i(Ul,"Next steps"),Ul.forEach(t),po.forEach(t),Gt=p(e),V=l(e,"P",{});var uo=s(V);Pa=i(uo,"The "),ct=l(uo,"CODE",{});var Yl=s(ct);Ta=i(Yl,"huggingface_hub"),Yl.forEach(t),xa=i(uo,` library provides an easy way for users to interact with the Hub
with Python. To learn more about how you can manage your files and repositories on the
Hub, we recommend reading our how-to guides for how to:`),uo.forEach(t),zt=p(e),b=l(e,"UL",{});var j=s(b);Pe=l(j,"LI",{});var Wa=s(Pe);Te=l(Wa,"A",{href:!0});var Fl=s(Te);qa=i(Fl,"Create and manage repositories"),Fl.forEach(t),Ia=i(Wa,"."),Wa.forEach(t),Sa=p(j),xe=l(j,"LI",{});var Ja=s(xe);qe=l(Ja,"A",{href:!0});var Ml=s(qe);Ca=i(Ml,"Download"),Ml.forEach(t),Da=i(Ja," files from the Hub."),Ja.forEach(t),La=p(j),Ie=l(j,"LI",{});var Ba=s(Ie);Se=l(Ba,"A",{href:!0});var Rl=s(Se);Na=i(Rl,"Upload"),Rl.forEach(t),Oa=i(Ba," files to the Hub."),Ba.forEach(t),Ua=p(j),Ce=l(j,"LI",{});var Ga=s(Ce);De=l(Ga,"A",{href:!0});var Ql=s(De);Ya=i(Ql,"Search the Hub"),Ql.forEach(t),Fa=i(Ga," for your desired model or dataset."),Ga.forEach(t),Ma=p(j),Le=l(j,"LI",{});var za=s(Le);Ne=l(za,"A",{href:!0});var Wl=s(Ne);Ra=i(Wl,"Access the Inference API"),Wl.forEach(t),Qa=i(za," for fast inference."),za.forEach(t),j.forEach(t),this.h()},h(){u(c,"name","hf:doc:metadata"),u(c,"content",JSON.stringify(er)),u($,"id","quick-start"),u($,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u($,"href","#quick-start"),u(v,"class","relative group"),u(ee,"href","https://hf.co/"),u(ee,"rel","nofollow"),u(D,"id","install-the-hub-library"),u(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(D,"href","#install-the-hub-library"),u(P,"class","relative group"),u(O,"id","download-files-from-the-hub"),u(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(O,"href","#download-files-from-the-hub"),u(T,"class","relative group"),u(ve,"href","/docs/huggingface_hub/pr_947/en/package_reference/file_download#huggingface_hub.hf_hub_download"),u(re,"href","https://huggingface.co/google/pegasus-xsum"),u(re,"rel","nofollow"),u(be,"href","/docs/huggingface_hub/pr_947/en/package_reference/file_download#huggingface_hub.hf_hub_download"),u(R,"id","create-a-repository"),u(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(R,"href","#create-a-repository"),u(x,"class","relative group"),u(fe,"href","https://hf.co/join"),u(fe,"rel","nofollow"),u(he,"href","https://huggingface.co/docs/hub/security-tokens"),u(he,"rel","nofollow"),u(ce,"start","2"),u(Ee,"href","/docs/huggingface_hub/pr_947/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo"),u(B,"id","share-files-to-the-hub"),u(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(B,"href","#share-files-to-the-hub"),u(q,"class","relative group"),u(He,"href","/docs/huggingface_hub/pr_947/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file"),u(je,"href","how-to-upstream"),u(K,"id","next-steps"),u(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(K,"href","#next-steps"),u(I,"class","relative group"),u(Te,"href","how-to-manage"),u(qe,"href","how-to-downstream"),u(Se,"href","how-to-upstream"),u(De,"href","searching-the-hub"),u(Ne,"href","how-to-inference")},m(e,r){o(document.head,c),f(e,C,r),f(e,v,r),o(v,$),o($,Me),g(Z,Me,null),o(v,co),o(v,Re),o(Re,mo),f(e,mt,r),f(e,k,r),o(k,go),o(k,ee),o(ee,_o),o(k,wo),o(k,Qe),o(Qe,yo),o(k,vo),f(e,gt,r),f(e,P,r),o(P,D),o(D,We),g(te,We,null),o(P,bo),o(P,Je),o(Je,$o),f(e,_t,r),f(e,E,r),o(E,Eo),o(E,Be),o(Be,ko),o(E,Ao),o(E,Ge),o(Ge,Ho),o(E,jo),o(E,ze),o(ze,Po),o(E,To),f(e,wt,r),f(e,L,r),o(L,xo),o(L,Ke),o(Ke,qo),o(L,Io),f(e,yt,r),g(oe,e,r),f(e,vt,r),f(e,N,r),o(N,So),o(N,Ve),o(Ve,Co),o(N,Do),f(e,bt,r),g(ae,e,r),f(e,$t,r),f(e,T,r),o(T,O),o(O,Xe),g(le,Xe,null),o(T,Lo),o(T,Ze),o(Ze,No),f(e,Et,r),f(e,U,r),o(U,Oo),o(U,ve),o(ve,Uo),o(U,Yo),f(e,kt,r),f(e,Y,r),o(Y,Fo),o(Y,re),o(re,Mo),o(Y,Ro),f(e,At,r),g(se,e,r),f(e,Ht,r),f(e,F,r),o(F,Qo),o(F,et),o(et,Wo),o(F,Jo),f(e,jt,r),g(ne,e,r),f(e,Pt,r),f(e,M,r),o(M,Bo),o(M,be),o(be,Go),o(M,zo),f(e,Tt,r),f(e,x,r),o(x,R),o(R,tt),g(ie,tt,null),o(x,Ko),o(x,ot),o(ot,Vo),f(e,xt,r),f(e,A,r),o(A,Xo),o(A,fe),o(fe,Zo),o(A,ea),o(A,he),o(he,ta),o(A,oa),f(e,qt,r),g(Q,e,r),f(e,It,r),f(e,$e,r),o($e,at),o(at,aa),f(e,St,r),g(pe,e,r),f(e,Ct,r),f(e,W,r),o(W,la),o(W,lt),o(lt,ra),o(W,sa),f(e,Dt,r),g(ue,e,r),f(e,Lt,r),f(e,ce,r),o(ce,rt),o(rt,na),f(e,Nt,r),f(e,J,r),o(J,ia),o(J,Ee),o(Ee,fa),o(J,ha),f(e,Ot,r),g(de,e,r),f(e,Ut,r),f(e,ke,r),o(ke,pa),f(e,Yt,r),g(me,e,r),f(e,Ft,r),f(e,Ae,r),o(Ae,ua),f(e,Mt,r),f(e,q,r),o(q,B),o(B,st),g(ge,st,null),o(q,ca),o(q,nt),o(nt,da),f(e,Rt,r),f(e,G,r),o(G,ma),o(G,He),o(He,ga),o(G,_a),f(e,Qt,r),f(e,H,r),o(H,it),o(it,wa),o(H,ya),o(H,ft),o(ft,va),o(H,ba),o(H,ht),o(ht,$a),f(e,Wt,r),g(_e,e,r),f(e,Jt,r),f(e,z,r),o(z,Ea),o(z,je),o(je,ka),o(z,Aa),f(e,Bt,r),f(e,I,r),o(I,K),o(K,pt),g(we,pt,null),o(I,Ha),o(I,ut),o(ut,ja),f(e,Gt,r),f(e,V,r),o(V,Pa),o(V,ct),o(ct,Ta),o(V,xa),f(e,zt,r),f(e,b,r),o(b,Pe),o(Pe,Te),o(Te,qa),o(Pe,Ia),o(b,Sa),o(b,xe),o(xe,qe),o(qe,Ca),o(xe,Da),o(b,La),o(b,Ie),o(Ie,Se),o(Se,Na),o(Ie,Oa),o(b,Ua),o(b,Ce),o(Ce,De),o(De,Ya),o(Ce,Fa),o(b,Ma),o(b,Le),o(Le,Ne),o(Ne,Ra),o(Le,Qa),Kt=!0},p(e,[r]){const ye={};r&2&&(ye.$$scope={dirty:r,ctx:e}),Q.$set(ye)},i(e){Kt||(_(Z.$$.fragment,e),_(te.$$.fragment,e),_(oe.$$.fragment,e),_(ae.$$.fragment,e),_(le.$$.fragment,e),_(se.$$.fragment,e),_(ne.$$.fragment,e),_(ie.$$.fragment,e),_(Q.$$.fragment,e),_(pe.$$.fragment,e),_(ue.$$.fragment,e),_(de.$$.fragment,e),_(me.$$.fragment,e),_(ge.$$.fragment,e),_(_e.$$.fragment,e),_(we.$$.fragment,e),Kt=!0)},o(e){w(Z.$$.fragment,e),w(te.$$.fragment,e),w(oe.$$.fragment,e),w(ae.$$.fragment,e),w(le.$$.fragment,e),w(se.$$.fragment,e),w(ne.$$.fragment,e),w(ie.$$.fragment,e),w(Q.$$.fragment,e),w(pe.$$.fragment,e),w(ue.$$.fragment,e),w(de.$$.fragment,e),w(me.$$.fragment,e),w(ge.$$.fragment,e),w(_e.$$.fragment,e),w(we.$$.fragment,e),Kt=!1},d(e){t(c),e&&t(C),e&&t(v),y(Z),e&&t(mt),e&&t(k),e&&t(gt),e&&t(P),y(te),e&&t(_t),e&&t(E),e&&t(wt),e&&t(L),e&&t(yt),y(oe,e),e&&t(vt),e&&t(N),e&&t(bt),y(ae,e),e&&t($t),e&&t(T),y(le),e&&t(Et),e&&t(U),e&&t(kt),e&&t(Y),e&&t(At),y(se,e),e&&t(Ht),e&&t(F),e&&t(jt),y(ne,e),e&&t(Pt),e&&t(M),e&&t(Tt),e&&t(x),y(ie),e&&t(xt),e&&t(A),e&&t(qt),y(Q,e),e&&t(It),e&&t($e),e&&t(St),y(pe,e),e&&t(Ct),e&&t(W),e&&t(Dt),y(ue,e),e&&t(Lt),e&&t(ce),e&&t(Nt),e&&t(J),e&&t(Ot),y(de,e),e&&t(Ut),e&&t(ke),e&&t(Yt),y(me,e),e&&t(Ft),e&&t(Ae),e&&t(Mt),e&&t(q),y(ge),e&&t(Rt),e&&t(G),e&&t(Qt),e&&t(H),e&&t(Wt),y(_e,e),e&&t(Jt),e&&t(z),e&&t(Bt),e&&t(I),y(we),e&&t(Gt),e&&t(V),e&&t(zt),e&&t(b)}}}const er={local:"quick-start",sections:[{local:"install-the-hub-library",title:"Install the Hub library"},{local:"download-files-from-the-hub",title:"Download files from the Hub"},{local:"create-a-repository",title:"Create a repository"},{local:"share-files-to-the-hub",title:"Share files to the Hub"},{local:"next-steps",title:"Next steps"}],title:"Quick start"};function tr(dt){return Kl(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class sr extends Jl{constructor(c){super();Bl(this,c,tr,Zl,Gl,{})}}export{sr as default,er as metadata};
