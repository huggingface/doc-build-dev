import{S as Yt,i as Bt,s as zt,e as n,k as p,w as P,t,M as Gt,c as l,d as a,m as h,a as o,x,h as i,b as u,G as s,g as c,y as H,L as Jt,q as R,o as C,B as S,v as Kt}from"../chunks/vendor-hf-doc-builder.js";import{I as Ge}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Ds}from"../chunks/CodeBlock-hf-doc-builder.js";function Qt(st){let E,Je,q,T,Pe,Y,ks,xe,Ps,Ke,_,xs,He,Hs,Rs,B,Cs,Ss,Qe,$,I,Re,z,Ts,Ce,Is,Xe,N,Ns,Se,Ms,Ws,Ze,G,es,j,Te,Ls,Os,ae,Vs,Us,ss,J,as,g,Fs,te,Ys,Bs,Ie,zs,Gs,ie,Js,Ks,ts,K,is,d,ne,Qs,Xs,le,Zs,ea,oe,sa,aa,Ne,ta,ia,ns,m,na,Me,la,oa,We,ra,ua,ls,y,M,Le,Q,ca,Oe,pa,os,v,ha,re,fa,da,X,ga,_a,rs,W,ma,ue,va,ba,us,Z,cs,L,wa,ce,Ea,qa,ps,f,pe,he,$a,ja,ya,fe,de,Aa,Da,ka,ge,_e,Pa,xa,Ha,me,ve,Ra,Ca,Sa,be,we,Ta,Ia,hs,O,Na,Ee,Ma,Wa,fs,A,V,Ve,ee,La,Ue,Oa,ds,qe,Fe,Va,gs,D,U,Ye,se,Ua,Be,Fa,_s,b,Ya,$e,Ba,za,je,Ga,Ja,ms;return Y=new Ge({}),z=new Ge({}),G=new Ds({props:{code:`from huggingface_hub import get_repo_discussions

get_repo_discussions(repo_id="bigscience/bloom-1b3")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions

<span class="hljs-meta">&gt;&gt;&gt; </span>get_repo_discussions(repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>)
Pagination(
    page=[
        Discussion(
            num=<span class="hljs-number">8</span>,
            author=<span class="hljs-string">&#x27;ybelkada&#x27;</span>,
            title=<span class="hljs-string">&#x27;Update tokenizer_config.json&#x27;</span>,
            status=<span class="hljs-string">&#x27;merged&#x27;</span>,
            is_pull_request=<span class="hljs-literal">True</span>,
            ...
        ),
        Discussion(
            num=<span class="hljs-number">7</span>,
            author=<span class="hljs-string">&#x27;malteos&#x27;</span>,
            title=<span class="hljs-string">&#x27;Slurm training script&#x27;</span>,
            status=<span class="hljs-string">&#x27;closed&#x27;</span>,
            is_pull_request=<span class="hljs-literal">False</span>,
            ...
        ),
        ...
    ],
    total=<span class="hljs-number">8</span>,
    page_num=<span class="hljs-number">0</span>,
    next_page=<span class="hljs-literal">None</span>,
)`}}),J=new Ds({props:{code:`from huggingface_hub import get_repo_discussions

pagination = get_repo_discussions(repo_id="dalle-mini/dalle-mini")
all_discussions = pagination.page
while pagination.has_next:
    pagination = pagination.next_page()
    all_discussions = all_discussions + pagination.page`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions

<span class="hljs-meta">&gt;&gt;&gt; </span>pagination = get_repo_discussions(repo_id=<span class="hljs-string">&quot;dalle-mini/dalle-mini&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>all_discussions = pagination.page
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">while</span> pagination.has_next:
<span class="hljs-meta">... </span>    pagination = pagination.next_page()
<span class="hljs-meta">... </span>    all_discussions = all_discussions + pagination.page`}}),K=new Ds({props:{code:`from huggingface_hub import get_discussion_details

get_discussion_details(
    repo_id="bigscience/bloom-1b3",
    discussion_num=2
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_discussion_details

<span class="hljs-meta">&gt;&gt;&gt; </span>get_discussion_details(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>,
<span class="hljs-meta">... </span>    discussion_num=<span class="hljs-number">2</span>
<span class="hljs-meta">... </span>)
DiscussionWithDetails(
    num=<span class="hljs-number">2</span>,
    author=<span class="hljs-string">&#x27;cakiki&#x27;</span>,
    title=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>,
    status=<span class="hljs-string">&#x27;open&#x27;</span>,
    is_pull_request=<span class="hljs-literal">True</span>,
    events=[
        DiscussionComment(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;comment&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, ...),
        DiscussionCommit(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;commit&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, summary=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>, oid=<span class="hljs-string">&#x27;1256f9d9a33fa8887e1c1bf0e09b4713da96773a&#x27;</span>, ...),
    ],
    conflicting_files=[],
    target_branch=<span class="hljs-string">&#x27;refs/heads/main&#x27;</span>,
    merge_commit_oid=<span class="hljs-literal">None</span>,
    diff=<span class="hljs-string">&#x27;diff --git a/README.md b/README.md\\nindex a6ae3b9294edf8d0eda0d67c7780a10241242a7e..3a1814f212bc3f0d3cc8f74bdbd316de4ae7b9e3 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -132,7 +132,7 [...]&#x27;</span>,
)`}}),Q=new Ge({}),Z=new Ds({props:{code:`from huggingface_hub import create_discussion

create_discussion(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
    pull_request=True
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_discussion

<span class="hljs-meta">&gt;&gt;&gt; </span>create_discussion(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>    pull_request=<span class="hljs-literal">True</span>
<span class="hljs-meta">... </span>)
DiscussionWithDetails(...)`}}),ee=new Ge({}),se=new Ge({}),{c(){E=n("meta"),Je=p(),q=n("h1"),T=n("a"),Pe=n("span"),P(Y.$$.fragment),ks=p(),xe=n("span"),Ps=t("Interact with discussions and pull requests"),Ke=p(),_=n("p"),xs=t("The "),He=n("code"),Hs=t("huggingface_hub"),Rs=t(` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),B=n("a"),Cs=t("the dedicated documentation page"),Ss=t(`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Qe=p(),$=n("h2"),I=n("a"),Re=n("span"),P(z.$$.fragment),Ts=p(),Ce=n("span"),Is=t("Retrieve Discussions and Pull Requests from the Hub"),Xe=p(),N=n("p"),Ns=t("The "),Se=n("code"),Ms=t("HfApi"),Ws=t(" class allows you to retrieve Discussions and Pull Requests on a given repo:"),Ze=p(),P(G.$$.fragment),es=p(),j=n("p"),Te=n("code"),Ls=t("HfApi.get_repo_discussions"),Os=t(" returns a "),ae=n("a"),Vs=t("Pagination"),Us=t(` object, which is a convenience wrapper to manage pagination
of the results. To get all the discussions in a single list, run:`),ss=p(),P(J.$$.fragment),as=p(),g=n("p"),Fs=t("The "),te=n("a"),Ys=t("Discussion"),Bs=t(" object returned by "),Ie=n("code"),zs=t("HfApi.get_repo_discussion"),Gs=t(` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),ie=n("a"),Js=t("HfApi.get_discussion_details()"),Ks=t(":"),ts=p(),P(K.$$.fragment),is=p(),d=n("p"),ne=n("a"),Qs=t("HfApi.get_discussion_details()"),Xs=t(" returns a "),le=n("a"),Zs=t("DiscussionWithDetails"),ea=t(" object, which is a subclass of "),oe=n("a"),sa=t("Discussion"),aa=t(`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the discussion via `),Ne=n("code"),ta=t("DiscussionWithDetails.events"),ia=t("."),ns=p(),m=n("p"),na=t("In case of a Pull Request, you can retrieve the raw git diff with "),Me=n("code"),la=t("DiscussionWithDetails.diff"),oa=t(`. All the commits of the
Pull Request are listed in `),We=n("code"),ra=t("DiscussionWithDetails.events"),ua=t("."),ls=p(),y=n("h2"),M=n("a"),Le=n("span"),P(Q.$$.fragment),ca=p(),Oe=n("span"),pa=t("Create and edit a Discussion or Pull Request programatically"),os=p(),v=n("p"),ha=t("The "),re=n("a"),fa=t("HfApi"),da=t(` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),X=n("a"),ga=t("access token"),_a=t(` to create and edit Discussions
or Pull Requests.`),rs=p(),W=n("p"),ma=t("Use "),ue=n("a"),va=t("HfApi.create_discussion()"),ba=t(" to create a Discussion or Pull Request on a repo:"),us=p(),P(Z.$$.fragment),cs=p(),L=n("p"),wa=t("Managing Pull Requests and Discussions can be done entirely with the "),ce=n("a"),Ea=t("HfApi"),qa=t(" class. For example:"),ps=p(),f=n("ul"),pe=n("li"),he=n("a"),$a=t("comment_discussion()"),ja=t(" to add comments"),ya=p(),fe=n("li"),de=n("a"),Aa=t("edit_discussion_comment()"),Da=t(" to edit comments"),ka=p(),ge=n("li"),_e=n("a"),Pa=t("rename_discussion()"),xa=t(" to rename a discussion or pull request"),Ha=p(),me=n("li"),ve=n("a"),Ra=t("change_discussion_status()"),Ca=t(" to open or close a discussion / pull request"),Sa=p(),be=n("li"),we=n("a"),Ta=t("merge_pull_request()"),Ia=t(" to merge a pull request"),hs=p(),O=n("p"),Na=t("Visit the "),Ee=n("a"),Ma=t("HfApi"),Wa=t(" documentation page for an exhaustive reference of all available methods."),fs=p(),A=n("h2"),V=n("a"),Ve=n("span"),P(ee.$$.fragment),La=p(),Ue=n("span"),Oa=t("Push changes to a Pull Request"),ds=p(),qe=n("p"),Fe=n("em"),Va=t("Coming soon !"),gs=p(),D=n("h2"),U=n("a"),Ye=n("span"),P(se.$$.fragment),Ua=p(),Be=n("span"),Fa=t("See also"),_s=p(),b=n("p"),Ya=t("For a more detailed reference, visit the "),$e=n("a"),Ba=t("community"),za=t(" and the "),je=n("a"),Ga=t("hf_api"),Ja=t(" documentation page."),this.h()},l(e){const r=Gt('[data-svelte="svelte-1phssyn"]',document.head);E=l(r,"META",{name:!0,content:!0}),r.forEach(a),Je=h(e),q=l(e,"H1",{class:!0});var vs=o(q);T=l(vs,"A",{id:!0,class:!0,href:!0});var at=o(T);Pe=l(at,"SPAN",{});var tt=o(Pe);x(Y.$$.fragment,tt),tt.forEach(a),at.forEach(a),ks=h(vs),xe=l(vs,"SPAN",{});var it=o(xe);Ps=i(it,"Interact with discussions and pull requests"),it.forEach(a),vs.forEach(a),Ke=h(e),_=l(e,"P",{});var ye=o(_);xs=i(ye,"The "),He=l(ye,"CODE",{});var nt=o(He);Hs=i(nt,"huggingface_hub"),nt.forEach(a),Rs=i(ye,` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),B=l(ye,"A",{href:!0,rel:!0});var lt=o(B);Cs=i(lt,"the dedicated documentation page"),lt.forEach(a),Ss=i(ye,`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),ye.forEach(a),Qe=h(e),$=l(e,"H2",{class:!0});var bs=o($);I=l(bs,"A",{id:!0,class:!0,href:!0});var ot=o(I);Re=l(ot,"SPAN",{});var rt=o(Re);x(z.$$.fragment,rt),rt.forEach(a),ot.forEach(a),Ts=h(bs),Ce=l(bs,"SPAN",{});var ut=o(Ce);Is=i(ut,"Retrieve Discussions and Pull Requests from the Hub"),ut.forEach(a),bs.forEach(a),Xe=h(e),N=l(e,"P",{});var ws=o(N);Ns=i(ws,"The "),Se=l(ws,"CODE",{});var ct=o(Se);Ms=i(ct,"HfApi"),ct.forEach(a),Ws=i(ws," class allows you to retrieve Discussions and Pull Requests on a given repo:"),ws.forEach(a),Ze=h(e),x(G.$$.fragment,e),es=h(e),j=l(e,"P",{});var ze=o(j);Te=l(ze,"CODE",{});var pt=o(Te);Ls=i(pt,"HfApi.get_repo_discussions"),pt.forEach(a),Os=i(ze," returns a "),ae=l(ze,"A",{href:!0});var ht=o(ae);Vs=i(ht,"Pagination"),ht.forEach(a),Us=i(ze,` object, which is a convenience wrapper to manage pagination
of the results. To get all the discussions in a single list, run:`),ze.forEach(a),ss=h(e),x(J.$$.fragment,e),as=h(e),g=l(e,"P",{});var F=o(g);Fs=i(F,"The "),te=l(F,"A",{href:!0});var ft=o(te);Ys=i(ft,"Discussion"),ft.forEach(a),Bs=i(F," object returned by "),Ie=l(F,"CODE",{});var dt=o(Ie);zs=i(dt,"HfApi.get_repo_discussion"),dt.forEach(a),Gs=i(F,` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),ie=l(F,"A",{href:!0});var gt=o(ie);Js=i(gt,"HfApi.get_discussion_details()"),gt.forEach(a),Ks=i(F,":"),F.forEach(a),ts=h(e),x(K.$$.fragment,e),is=h(e),d=l(e,"P",{});var k=o(d);ne=l(k,"A",{href:!0});var _t=o(ne);Qs=i(_t,"HfApi.get_discussion_details()"),_t.forEach(a),Xs=i(k," returns a "),le=l(k,"A",{href:!0});var mt=o(le);Zs=i(mt,"DiscussionWithDetails"),mt.forEach(a),ea=i(k," object, which is a subclass of "),oe=l(k,"A",{href:!0});var vt=o(oe);sa=i(vt,"Discussion"),vt.forEach(a),aa=i(k,`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the discussion via `),Ne=l(k,"CODE",{});var bt=o(Ne);ta=i(bt,"DiscussionWithDetails.events"),bt.forEach(a),ia=i(k,"."),k.forEach(a),ns=h(e),m=l(e,"P",{});var Ae=o(m);na=i(Ae,"In case of a Pull Request, you can retrieve the raw git diff with "),Me=l(Ae,"CODE",{});var wt=o(Me);la=i(wt,"DiscussionWithDetails.diff"),wt.forEach(a),oa=i(Ae,`. All the commits of the
Pull Request are listed in `),We=l(Ae,"CODE",{});var Et=o(We);ra=i(Et,"DiscussionWithDetails.events"),Et.forEach(a),ua=i(Ae,"."),Ae.forEach(a),ls=h(e),y=l(e,"H2",{class:!0});var Es=o(y);M=l(Es,"A",{id:!0,class:!0,href:!0});var qt=o(M);Le=l(qt,"SPAN",{});var $t=o(Le);x(Q.$$.fragment,$t),$t.forEach(a),qt.forEach(a),ca=h(Es),Oe=l(Es,"SPAN",{});var jt=o(Oe);pa=i(jt,"Create and edit a Discussion or Pull Request programatically"),jt.forEach(a),Es.forEach(a),os=h(e),v=l(e,"P",{});var De=o(v);ha=i(De,"The "),re=l(De,"A",{href:!0});var yt=o(re);fa=i(yt,"HfApi"),yt.forEach(a),da=i(De,` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),X=l(De,"A",{href:!0,rel:!0});var At=o(X);ga=i(At,"access token"),At.forEach(a),_a=i(De,` to create and edit Discussions
or Pull Requests.`),De.forEach(a),rs=h(e),W=l(e,"P",{});var qs=o(W);ma=i(qs,"Use "),ue=l(qs,"A",{href:!0});var Dt=o(ue);va=i(Dt,"HfApi.create_discussion()"),Dt.forEach(a),ba=i(qs," to create a Discussion or Pull Request on a repo:"),qs.forEach(a),us=h(e),x(Z.$$.fragment,e),cs=h(e),L=l(e,"P",{});var $s=o(L);wa=i($s,"Managing Pull Requests and Discussions can be done entirely with the "),ce=l($s,"A",{href:!0});var kt=o(ce);Ea=i(kt,"HfApi"),kt.forEach(a),qa=i($s," class. For example:"),$s.forEach(a),ps=h(e),f=l(e,"UL",{});var w=o(f);pe=l(w,"LI",{});var Ka=o(pe);he=l(Ka,"A",{href:!0});var Pt=o(he);$a=i(Pt,"comment_discussion()"),Pt.forEach(a),ja=i(Ka," to add comments"),Ka.forEach(a),ya=h(w),fe=l(w,"LI",{});var Qa=o(fe);de=l(Qa,"A",{href:!0});var xt=o(de);Aa=i(xt,"edit_discussion_comment()"),xt.forEach(a),Da=i(Qa," to edit comments"),Qa.forEach(a),ka=h(w),ge=l(w,"LI",{});var Xa=o(ge);_e=l(Xa,"A",{href:!0});var Ht=o(_e);Pa=i(Ht,"rename_discussion()"),Ht.forEach(a),xa=i(Xa," to rename a discussion or pull request"),Xa.forEach(a),Ha=h(w),me=l(w,"LI",{});var Za=o(me);ve=l(Za,"A",{href:!0});var Rt=o(ve);Ra=i(Rt,"change_discussion_status()"),Rt.forEach(a),Ca=i(Za," to open or close a discussion / pull request"),Za.forEach(a),Sa=h(w),be=l(w,"LI",{});var et=o(be);we=l(et,"A",{href:!0});var Ct=o(we);Ta=i(Ct,"merge_pull_request()"),Ct.forEach(a),Ia=i(et," to merge a pull request"),et.forEach(a),w.forEach(a),hs=h(e),O=l(e,"P",{});var js=o(O);Na=i(js,"Visit the "),Ee=l(js,"A",{href:!0});var St=o(Ee);Ma=i(St,"HfApi"),St.forEach(a),Wa=i(js," documentation page for an exhaustive reference of all available methods."),js.forEach(a),fs=h(e),A=l(e,"H2",{class:!0});var ys=o(A);V=l(ys,"A",{id:!0,class:!0,href:!0});var Tt=o(V);Ve=l(Tt,"SPAN",{});var It=o(Ve);x(ee.$$.fragment,It),It.forEach(a),Tt.forEach(a),La=h(ys),Ue=l(ys,"SPAN",{});var Nt=o(Ue);Oa=i(Nt,"Push changes to a Pull Request"),Nt.forEach(a),ys.forEach(a),ds=h(e),qe=l(e,"P",{});var Mt=o(qe);Fe=l(Mt,"EM",{});var Wt=o(Fe);Va=i(Wt,"Coming soon !"),Wt.forEach(a),Mt.forEach(a),gs=h(e),D=l(e,"H2",{class:!0});var As=o(D);U=l(As,"A",{id:!0,class:!0,href:!0});var Lt=o(U);Ye=l(Lt,"SPAN",{});var Ot=o(Ye);x(se.$$.fragment,Ot),Ot.forEach(a),Lt.forEach(a),Ua=h(As),Be=l(As,"SPAN",{});var Vt=o(Be);Fa=i(Vt,"See also"),Vt.forEach(a),As.forEach(a),_s=h(e),b=l(e,"P",{});var ke=o(b);Ya=i(ke,"For a more detailed reference, visit the "),$e=l(ke,"A",{href:!0});var Ut=o($e);Ba=i(Ut,"community"),Ut.forEach(a),za=i(ke," and the "),je=l(ke,"A",{href:!0});var Ft=o(je);Ga=i(Ft,"hf_api"),Ft.forEach(a),Ja=i(ke," documentation page."),ke.forEach(a),this.h()},h(){u(E,"name","hf:doc:metadata"),u(E,"content",JSON.stringify(Xt)),u(T,"id","interact-with-discussions-and-pull-requests"),u(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(T,"href","#interact-with-discussions-and-pull-requests"),u(q,"class","relative group"),u(B,"href","https://huggingface.co/docs/hub/repositories-pull-requests-discussions"),u(B,"rel","nofollow"),u(I,"id","retrieve-discussions-and-pull-requests-from-the-hub"),u(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(I,"href","#retrieve-discussions-and-pull-requests-from-the-hub"),u($,"class","relative group"),u(ae,"href","/docs/huggingface_hub/pr_930/en/package_reference/utilities#huggingface_hub.Pagination"),u(te,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),u(ie,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(ne,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(le,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionWithDetails"),u(oe,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),u(M,"id","create-and-edit-a-discussion-or-pull-request-programatically"),u(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(M,"href","#create-and-edit-a-discussion-or-pull-request-programatically"),u(y,"class","relative group"),u(re,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(X,"href","https://huggingface.co/docs/hub/security-tokens"),u(X,"rel","nofollow"),u(ue,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion"),u(ce,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(he,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.comment_discussion"),u(de,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.edit_discussion_comment"),u(_e,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.rename_discussion"),u(ve,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.change_discussion_status"),u(we,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.merge_pull_request"),u(Ee,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(V,"id","push-changes-to-a-pull-request"),u(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(V,"href","#push-changes-to-a-pull-request"),u(A,"class","relative group"),u(U,"id","see-also"),u(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(U,"href","#see-also"),u(D,"class","relative group"),u($e,"href","/source/package_reference/community"),u(je,"href","/source/package_reference/hf_api")},m(e,r){s(document.head,E),c(e,Je,r),c(e,q,r),s(q,T),s(T,Pe),H(Y,Pe,null),s(q,ks),s(q,xe),s(xe,Ps),c(e,Ke,r),c(e,_,r),s(_,xs),s(_,He),s(He,Hs),s(_,Rs),s(_,B),s(B,Cs),s(_,Ss),c(e,Qe,r),c(e,$,r),s($,I),s(I,Re),H(z,Re,null),s($,Ts),s($,Ce),s(Ce,Is),c(e,Xe,r),c(e,N,r),s(N,Ns),s(N,Se),s(Se,Ms),s(N,Ws),c(e,Ze,r),H(G,e,r),c(e,es,r),c(e,j,r),s(j,Te),s(Te,Ls),s(j,Os),s(j,ae),s(ae,Vs),s(j,Us),c(e,ss,r),H(J,e,r),c(e,as,r),c(e,g,r),s(g,Fs),s(g,te),s(te,Ys),s(g,Bs),s(g,Ie),s(Ie,zs),s(g,Gs),s(g,ie),s(ie,Js),s(g,Ks),c(e,ts,r),H(K,e,r),c(e,is,r),c(e,d,r),s(d,ne),s(ne,Qs),s(d,Xs),s(d,le),s(le,Zs),s(d,ea),s(d,oe),s(oe,sa),s(d,aa),s(d,Ne),s(Ne,ta),s(d,ia),c(e,ns,r),c(e,m,r),s(m,na),s(m,Me),s(Me,la),s(m,oa),s(m,We),s(We,ra),s(m,ua),c(e,ls,r),c(e,y,r),s(y,M),s(M,Le),H(Q,Le,null),s(y,ca),s(y,Oe),s(Oe,pa),c(e,os,r),c(e,v,r),s(v,ha),s(v,re),s(re,fa),s(v,da),s(v,X),s(X,ga),s(v,_a),c(e,rs,r),c(e,W,r),s(W,ma),s(W,ue),s(ue,va),s(W,ba),c(e,us,r),H(Z,e,r),c(e,cs,r),c(e,L,r),s(L,wa),s(L,ce),s(ce,Ea),s(L,qa),c(e,ps,r),c(e,f,r),s(f,pe),s(pe,he),s(he,$a),s(pe,ja),s(f,ya),s(f,fe),s(fe,de),s(de,Aa),s(fe,Da),s(f,ka),s(f,ge),s(ge,_e),s(_e,Pa),s(ge,xa),s(f,Ha),s(f,me),s(me,ve),s(ve,Ra),s(me,Ca),s(f,Sa),s(f,be),s(be,we),s(we,Ta),s(be,Ia),c(e,hs,r),c(e,O,r),s(O,Na),s(O,Ee),s(Ee,Ma),s(O,Wa),c(e,fs,r),c(e,A,r),s(A,V),s(V,Ve),H(ee,Ve,null),s(A,La),s(A,Ue),s(Ue,Oa),c(e,ds,r),c(e,qe,r),s(qe,Fe),s(Fe,Va),c(e,gs,r),c(e,D,r),s(D,U),s(U,Ye),H(se,Ye,null),s(D,Ua),s(D,Be),s(Be,Fa),c(e,_s,r),c(e,b,r),s(b,Ya),s(b,$e),s($e,Ba),s(b,za),s(b,je),s(je,Ga),s(b,Ja),ms=!0},p:Jt,i(e){ms||(R(Y.$$.fragment,e),R(z.$$.fragment,e),R(G.$$.fragment,e),R(J.$$.fragment,e),R(K.$$.fragment,e),R(Q.$$.fragment,e),R(Z.$$.fragment,e),R(ee.$$.fragment,e),R(se.$$.fragment,e),ms=!0)},o(e){C(Y.$$.fragment,e),C(z.$$.fragment,e),C(G.$$.fragment,e),C(J.$$.fragment,e),C(K.$$.fragment,e),C(Q.$$.fragment,e),C(Z.$$.fragment,e),C(ee.$$.fragment,e),C(se.$$.fragment,e),ms=!1},d(e){a(E),e&&a(Je),e&&a(q),S(Y),e&&a(Ke),e&&a(_),e&&a(Qe),e&&a($),S(z),e&&a(Xe),e&&a(N),e&&a(Ze),S(G,e),e&&a(es),e&&a(j),e&&a(ss),S(J,e),e&&a(as),e&&a(g),e&&a(ts),S(K,e),e&&a(is),e&&a(d),e&&a(ns),e&&a(m),e&&a(ls),e&&a(y),S(Q),e&&a(os),e&&a(v),e&&a(rs),e&&a(W),e&&a(us),S(Z,e),e&&a(cs),e&&a(L),e&&a(ps),e&&a(f),e&&a(hs),e&&a(O),e&&a(fs),e&&a(A),S(ee),e&&a(ds),e&&a(qe),e&&a(gs),e&&a(D),S(se),e&&a(_s),e&&a(b)}}}const Xt={local:"interact-with-discussions-and-pull-requests",sections:[{local:"retrieve-discussions-and-pull-requests-from-the-hub",title:"Retrieve Discussions and Pull Requests from the Hub"},{local:"create-and-edit-a-discussion-or-pull-request-programatically",title:"Create and edit a Discussion or Pull Request programatically"},{local:"push-changes-to-a-pull-request",title:"Push changes to a Pull Request"},{local:"see-also",title:"See also"}],title:"Interact with discussions and pull requests"};function Zt(st){return Kt(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ti extends Yt{constructor(E){super();Bt(this,E,Zt,Qt,zt,{})}}export{ti as default,Xt as metadata};
