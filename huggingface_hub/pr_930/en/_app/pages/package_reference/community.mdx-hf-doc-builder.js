import{S as cs,i as us,s as hs,e as n,k as c,w as x,t as a,M as ls,c as o,d as s,m as u,a as i,x as P,h as r,b as h,G as e,g as d,y as E,L as ds,q as w,o as C,B as R,v as gs}from"../../chunks/vendor-hf-doc-builder.js";import{D as z}from"../../chunks/Docstring-hf-doc-builder.js";import{I as rs}from"../../chunks/IconCopyLink-hf-doc-builder.js";function ms(kt){let v,$e,D,T,ce,k,Me,ue,Ue,xe,q,A,he,L,Fe,le,Be,Pe,y,W,Ge,de,Je,Ee,$,N,ze,O,Ke,K,Qe,Xe,we,g,V,Ye,ge,Ze,et,me,tt,st,m,fe,Q,nt,ot,pe,X,it,at,_e,Y,rt,ct,be,Z,ut,Ce,f,H,ht,ve,lt,dt,j,gt,ee,mt,ft,Re,p,M,pt,De,_t,bt,U,vt,te,Dt,qt,Te,_,F,yt,qe,$t,xt,B,Pt,se,Et,wt,Ae,b,G,Ct,ye,Rt,Tt,J,At,ne,St,It,Se;return k=new rs({}),L=new rs({}),W=new z({props:{name:"class huggingface_hub.Discussion",anchor:"huggingface_hub.Discussion",parameters:[{name:"title",val:": str"},{name:"status",val:": typing.Literal['open', 'closed', 'merged', 'draft']"},{name:"num",val:": int"},{name:"repo_id",val:": str"},{name:"repo_type",val:": str"},{name:"author",val:": str"},{name:"is_pull_request",val:": bool"},{name:"created_at",val:": datetime"}],parametersDescription:[{anchor:"huggingface_hub.Discussion.title",description:`<strong>title</strong> (<code>str</code>) &#x2014;
The title of the Discussion / Pull Request`,name:"title"},{anchor:"huggingface_hub.Discussion.status",description:`<strong>status</strong> (<code>str</code>) &#x2014;
The status of the Discussion / Pull Request.
It must be one of:<ul>
<li><code>&quot;open&quot;</code></li>
<li><code>&quot;closed&quot;</code></li>
<li><code>&quot;merged&quot;</code> (only for Pull Requests )</li>
<li><code>&quot;draft&quot;</code> (only for Pull Requests )</li>
</ul>`,name:"status"},{anchor:"huggingface_hub.Discussion.num",description:`<strong>num</strong> (<code>int</code>) &#x2014;
The number of the Discussion / Pull Request.`,name:"num"},{anchor:"huggingface_hub.Discussion.repo_id",description:`<strong>repo_id</strong> (<code>str</code>) &#x2014;
The id (<code>&quot;{namespace}/{repo_name}&quot;</code>) of the repo on which
the Discussion / Pull Request was open.`,name:"repo_id"},{anchor:"huggingface_hub.Discussion.repo_type",description:`<strong>repo_type</strong> (<code>str</code>) &#x2014;
The type of the repo on which the Discussion / Pull Request was open.
Possible values are: <code>&quot;model&quot;</code>, <code>&quot;dataset&quot;</code>, <code>&quot;space&quot;</code>.`,name:"repo_type"},{anchor:"huggingface_hub.Discussion.author",description:`<strong>author</strong> (<code>str</code>) &#x2014;
The username of the Discussion / Pull Request author.
Can be <code>&quot;deleted&quot;</code> if the user has been deleted since.`,name:"author"},{anchor:"huggingface_hub.Discussion.is_pull_request",description:`<strong>is_pull_request</strong> (<code>bool</code>) &#x2014;
Wether or not this is a Pull Request.`,name:"is_pull_request"},{anchor:"huggingface_hub.Discussion.created_at",description:`<strong>created_at</strong> (<code>datetime</code>) &#x2014;
The <code>datetime</code> of creation of the Discussion / Pull Request.`,name:"created_at"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L24"}}),N=new z({props:{name:"class huggingface_hub.DiscussionWithDetails",anchor:"huggingface_hub.DiscussionWithDetails",parameters:[{name:"title",val:": str"},{name:"status",val:": typing.Literal['open', 'closed', 'merged', 'draft']"},{name:"num",val:": int"},{name:"repo_id",val:": str"},{name:"repo_type",val:": str"},{name:"author",val:": str"},{name:"is_pull_request",val:": bool"},{name:"created_at",val:": datetime"},{name:"events",val:": typing.List[ForwardRef('DiscussionEvent')]"},{name:"conflicting_files",val:": typing.Optional[typing.List[str]]"},{name:"target_branch",val:": typing.Optional[str]"},{name:"merge_commit_oid",val:": typing.Optional[str]"},{name:"diff",val:": typing.Optional[str]"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionWithDetails.title",description:`<strong>title</strong> (<code>str</code>) &#x2014;
The title of the Discussion / Pull Request`,name:"title"},{anchor:"huggingface_hub.DiscussionWithDetails.status",description:`<strong>status</strong> (<code>str</code>) &#x2014;
The status of the Discussion / Pull Request.
It can be one of:<ul>
<li><code>&quot;open&quot;</code></li>
<li><code>&quot;closed&quot;</code></li>
<li><code>&quot;merged&quot;</code> (only for Pull Requests )</li>
<li><code>&quot;draft&quot;</code> (only for Pull Requests )</li>
</ul>`,name:"status"},{anchor:"huggingface_hub.DiscussionWithDetails.num",description:`<strong>num</strong> (<code>int</code>) &#x2014;
The number of the Discussion / Pull Request.`,name:"num"},{anchor:"huggingface_hub.DiscussionWithDetails.repo_id",description:`<strong>repo_id</strong> (<code>str</code>) &#x2014;
The id (<code>&quot;{namespace}/{repo_name}&quot;</code>) of the repo on which
the Discussion / Pull Request was open.`,name:"repo_id"},{anchor:"huggingface_hub.DiscussionWithDetails.repo_type",description:`<strong>repo_type</strong> (<code>str</code>) &#x2014;
The type of the repo on which the Discussion / Pull Request was open.
Posiible values are: <code>&quot;model&quot;</code>, <code>&quot;dataset&quot;</code>, <code>&quot;space&quot;</code>.`,name:"repo_type"},{anchor:"huggingface_hub.DiscussionWithDetails.author",description:`<strong>author</strong> (<code>str</code>) &#x2014;
The username of the Discussion / Pull Request author.
Can be <code>&quot;deleted&quot;</code> if the user has been deleted since.`,name:"author"},{anchor:"huggingface_hub.DiscussionWithDetails.is_pull_request",description:`<strong>is_pull_request</strong> (<code>bool</code>) &#x2014;
Wether or not this is a Pull Request.`,name:"is_pull_request"},{anchor:"huggingface_hub.DiscussionWithDetails.created_at",description:`<strong>created_at</strong> (<code>datetime</code>) &#x2014;
The <code>datetime</code> of creation of the Discussion / Pull Request.`,name:"created_at"},{anchor:"huggingface_hub.DiscussionWithDetails.events",description:`<strong>events</strong> (<code>list</code> of <a href="/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionEvent">DiscussionEvent</a>) &#x2014;
The list of <code>DiscussionEvents</code> in this Discussion or Pull Request.`,name:"events"},{anchor:"huggingface_hub.DiscussionWithDetails.conflicting_files",description:`<strong>conflicting_files</strong> (<code>list</code> of <code>str</code>, <em>optional</em>) &#x2014;
A list of conflicting files if this is a Pull Request.
<code>None</code> if <code>self.is_pull_request</code> is <code>False</code>.`,name:"conflicting_files"},{anchor:"huggingface_hub.DiscussionWithDetails.target_branch",description:`<strong>target_branch</strong> (<code>str</code>, <em>optional</em>) &#x2014;
The branch into which changes are to be merged if this is a
Pull Request . <code>None</code>  if <code>self.is_pull_request</code> is <code>False</code>.`,name:"target_branch"},{anchor:"huggingface_hub.DiscussionWithDetails.merge_commit_oid",description:`<strong>merge_commit_oid</strong> (<code>str</code>, <em>optional</em>) &#x2014;
If this is a merged Pull Request , this is set to the OID / SHA of
the merge commit, <code>None</code> otherwise.`,name:"merge_commit_oid"},{anchor:"huggingface_hub.DiscussionWithDetails.diff",description:`<strong>diff</strong> (<code>str</code>, <em>optional</em>) &#x2014;
The git diff if this is a Pull Request , <code>None</code> otherwise.`,name:"diff"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L76"}}),V=new z({props:{name:"class huggingface_hub.DiscussionEvent",anchor:"huggingface_hub.DiscussionEvent",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionEvent.id",description:`<strong>id</strong> (<code>str</code>) &#x2014;
The ID of the event. An hexadecimal string.`,name:"id"},{anchor:"huggingface_hub.DiscussionEvent.type",description:`<strong>type</strong> (<code>str</code>) &#x2014;
The type of the event.`,name:"type"},{anchor:"huggingface_hub.DiscussionEvent.created_at",description:`<strong>created_at</strong> (<code>datetime</code>) &#x2014;
A <a href="https://docs.python.org/3/library/datetime.html?highlight=datetime#datetime.datetime" rel="nofollow"><code>datetime</code></a>
object holding the creation timestamp for the event.`,name:"created_at"},{anchor:"huggingface_hub.DiscussionEvent.author",description:`<strong>author</strong> (<code>str</code>) &#x2014;
The username of the Discussion / Pull Request author.
Can be <code>&quot;deleted&quot;</code> if the user has been deleted since.`,name:"author"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L128"}}),H=new z({props:{name:"class huggingface_hub.DiscussionComment",anchor:"huggingface_hub.DiscussionComment",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"},{name:"content",val:": str"},{name:"edited",val:": bool"},{name:"hidden",val:": bool"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionComment.id",description:`<strong>id</strong> (<code>str</code>) &#x2014;
The ID of the event. An hexadecimal string.`,name:"id"},{anchor:"huggingface_hub.DiscussionComment.type",description:`<strong>type</strong> (<code>str</code>) &#x2014;
The type of the event.`,name:"type"},{anchor:"huggingface_hub.DiscussionComment.created_at",description:`<strong>created_at</strong> (<code>datetime</code>) &#x2014;
A <a href="https://docs.python.org/3/library/datetime.html?highlight=datetime#datetime.datetime" rel="nofollow"><code>datetime</code></a>
object holding the creation timestamp for the event.`,name:"created_at"},{anchor:"huggingface_hub.DiscussionComment.author",description:`<strong>author</strong> (<code>str</code>) &#x2014;
The username of the Discussion / Pull Request author.
Can be <code>&quot;deleted&quot;</code> if the user has been deleted since.`,name:"author"},{anchor:"huggingface_hub.DiscussionComment.content",description:`<strong>content</strong> (<code>str</code>) &#x2014;
The raw markdown content of the comment. Mentions, links and images are not rendered.`,name:"content"},{anchor:"huggingface_hub.DiscussionComment.edited",description:`<strong>edited</strong> (<code>bool</code>) &#x2014;
Wether or not this comment has been edited.`,name:"edited"},{anchor:"huggingface_hub.DiscussionComment.hidden",description:`<strong>hidden</strong> (<code>bool</code>) &#x2014;
Whether or not this comment has been hidden.`,name:"hidden"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L161"}}),M=new z({props:{name:"class huggingface_hub.DiscussionStatusChange",anchor:"huggingface_hub.DiscussionStatusChange",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"},{name:"new_status",val:": str"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionStatusChange.id",description:`<strong>id</strong> (<code>str</code>) &#x2014;
The ID of the event. An hexadecimal string.`,name:"id"},{anchor:"huggingface_hub.DiscussionStatusChange.type",description:`<strong>type</strong> (<code>str</code>) &#x2014;
The type of the event.`,name:"type"},{anchor:"huggingface_hub.DiscussionStatusChange.created_at",description:`<strong>created_at</strong> (<code>datetime</code>) &#x2014;
A <a href="https://docs.python.org/3/library/datetime.html?highlight=datetime#datetime.datetime" rel="nofollow"><code>datetime</code></a>
object holding the creation timestamp for the event.`,name:"created_at"},{anchor:"huggingface_hub.DiscussionStatusChange.author",description:`<strong>author</strong> (<code>str</code>) &#x2014;
The username of the Discussion / Pull Request author.
Can be <code>&quot;deleted&quot;</code> if the user has been deleted since.`,name:"author"},{anchor:"huggingface_hub.DiscussionStatusChange.new_status",description:`<strong>new_status</strong> (<code>str</code>) &#x2014;
The status of the Discussion / Pull Request after the change.
It can be one of:<ul>
<li><code>&quot;open&quot;</code></li>
<li><code>&quot;closed&quot;</code></li>
<li><code>&quot;merged&quot;</code> (only for Pull Requests )</li>
</ul>`,name:"new_status"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L216"}}),F=new z({props:{name:"class huggingface_hub.DiscussionCommit",anchor:"huggingface_hub.DiscussionCommit",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"},{name:"summary",val:": str"},{name:"oid",val:": str"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionCommit.id",description:`<strong>id</strong> (<code>str</code>) &#x2014;
The ID of the event. An hexadecimal string.`,name:"id"},{anchor:"huggingface_hub.DiscussionCommit.type",description:`<strong>type</strong> (<code>str</code>) &#x2014;
The type of the event.`,name:"type"},{anchor:"huggingface_hub.DiscussionCommit.created_at",description:`<strong>created_at</strong> (<code>datetime</code>) &#x2014;
A <a href="https://docs.python.org/3/library/datetime.html?highlight=datetime#datetime.datetime" rel="nofollow"><code>datetime</code></a>
object holding the creation timestamp for the event.`,name:"created_at"},{anchor:"huggingface_hub.DiscussionCommit.author",description:`<strong>author</strong> (<code>str</code>) &#x2014;
The username of the Discussion / Pull Request author.
Can be <code>&quot;deleted&quot;</code> if the user has been deleted since.`,name:"author"},{anchor:"huggingface_hub.DiscussionCommit.summary",description:`<strong>summary</strong> (<code>str</code>) &#x2014;
The summary of the commit.`,name:"summary"},{anchor:"huggingface_hub.DiscussionCommit.oid",description:`<strong>oid</strong> (<code>str</code>) &#x2014;
The OID / SHA of the commit, as a hexadecimal string.`,name:"oid"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L244"}}),G=new z({props:{name:"class huggingface_hub.DiscussionTitleChange",anchor:"huggingface_hub.DiscussionTitleChange",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"},{name:"old_title",val:": str"},{name:"new_title",val:": str"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionTitleChange.id",description:`<strong>id</strong> (<code>str</code>) &#x2014;
The ID of the event. An hexadecimal string.`,name:"id"},{anchor:"huggingface_hub.DiscussionTitleChange.type",description:`<strong>type</strong> (<code>str</code>) &#x2014;
The type of the event.`,name:"type"},{anchor:"huggingface_hub.DiscussionTitleChange.created_at",description:`<strong>created_at</strong> (<code>datetime</code>) &#x2014;
A <a href="https://docs.python.org/3/library/datetime.html?highlight=datetime#datetime.datetime" rel="nofollow"><code>datetime</code></a>
object holding the creation timestamp for the event.`,name:"created_at"},{anchor:"huggingface_hub.DiscussionTitleChange.author",description:`<strong>author</strong> (<code>str</code>) &#x2014;
The username of the Discussion / Pull Request author.
Can be <code>&quot;deleted&quot;</code> if the user has been deleted since.`,name:"author"},{anchor:"huggingface_hub.DiscussionTitleChange.old_title",description:`<strong>old_title</strong> (<code>str</code>) &#x2014;
The previous title for the Discussion / Pull Request.`,name:"old_title"},{anchor:"huggingface_hub.DiscussionTitleChange.new_title",description:`<strong>new_title</strong> (<code>str</code>) &#x2014;
The new title.`,name:"new_title"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L271"}}),{c(){v=n("meta"),$e=c(),D=n("h1"),T=n("a"),ce=n("span"),x(k.$$.fragment),Me=c(),ue=n("span"),Ue=a("Interacting with Discussions and Pull Requests"),xe=c(),q=n("h2"),A=n("a"),he=n("span"),x(L.$$.fragment),Fe=c(),le=n("span"),Be=a("Data structures"),Pe=c(),y=n("div"),x(W.$$.fragment),Ge=c(),de=n("p"),Je=a("A Discussion or Pull Request on the Hub."),Ee=c(),$=n("div"),x(N.$$.fragment),ze=c(),O=n("p"),Ke=a("Subclass of "),K=n("a"),Qe=a("Discussion"),Xe=a("."),we=c(),g=n("div"),x(V.$$.fragment),Ye=c(),ge=n("p"),Ze=a("An event in a Discussion or Pull Request."),et=c(),me=n("p"),tt=a("Use concrete classes:"),st=c(),m=n("ul"),fe=n("li"),Q=n("a"),nt=a("DiscussionComment"),ot=c(),pe=n("li"),X=n("a"),it=a("DiscussionStatusChange"),at=c(),_e=n("li"),Y=n("a"),rt=a("DiscussionCommit"),ct=c(),be=n("li"),Z=n("a"),ut=a("DiscussionTitleChange"),Ce=c(),f=n("div"),x(H.$$.fragment),ht=c(),ve=n("p"),lt=a("A comment in a Discussion / Pull Request."),dt=c(),j=n("p"),gt=a("Subclass of "),ee=n("a"),mt=a("DiscussionEvent"),ft=a("."),Re=c(),p=n("div"),x(M.$$.fragment),pt=c(),De=n("p"),_t=a("A change of status in a Discussion / Pull Request."),bt=c(),U=n("p"),vt=a("Subclass of "),te=n("a"),Dt=a("DiscussionEvent"),qt=a("."),Te=c(),_=n("div"),x(F.$$.fragment),yt=c(),qe=n("p"),$t=a("A commit in a Pull Request."),xt=c(),B=n("p"),Pt=a("Subclass of "),se=n("a"),Et=a("DiscussionEvent"),wt=a("."),Ae=c(),b=n("div"),x(G.$$.fragment),Ct=c(),ye=n("p"),Rt=a("A rename event in a Discussion / Pull Request."),Tt=c(),J=n("p"),At=a("Subclass of "),ne=n("a"),St=a("DiscussionEvent"),It=a("."),this.h()},l(t){const l=ls('[data-svelte="svelte-1phssyn"]',document.head);v=o(l,"META",{name:!0,content:!0}),l.forEach(s),$e=u(t),D=o(t,"H1",{class:!0});var Ie=i(D);T=o(Ie,"A",{id:!0,class:!0,href:!0});var Lt=i(T);ce=o(Lt,"SPAN",{});var Wt=i(ce);P(k.$$.fragment,Wt),Wt.forEach(s),Lt.forEach(s),Me=u(Ie),ue=o(Ie,"SPAN",{});var Nt=i(ue);Ue=r(Nt,"Interacting with Discussions and Pull Requests"),Nt.forEach(s),Ie.forEach(s),xe=u(t),q=o(t,"H2",{class:!0});var ke=i(q);A=o(ke,"A",{id:!0,class:!0,href:!0});var Ot=i(A);he=o(Ot,"SPAN",{});var Vt=i(he);P(L.$$.fragment,Vt),Vt.forEach(s),Ot.forEach(s),Fe=u(ke),le=o(ke,"SPAN",{});var Ht=i(le);Be=r(Ht,"Data structures"),Ht.forEach(s),ke.forEach(s),Pe=u(t),y=o(t,"DIV",{class:!0});var Le=i(y);P(W.$$.fragment,Le),Ge=u(Le),de=o(Le,"P",{});var jt=i(de);Je=r(jt,"A Discussion or Pull Request on the Hub."),jt.forEach(s),Le.forEach(s),Ee=u(t),$=o(t,"DIV",{class:!0});var We=i($);P(N.$$.fragment,We),ze=u(We),O=o(We,"P",{});var Ne=i(O);Ke=r(Ne,"Subclass of "),K=o(Ne,"A",{href:!0});var Mt=i(K);Qe=r(Mt,"Discussion"),Mt.forEach(s),Xe=r(Ne,"."),Ne.forEach(s),We.forEach(s),we=u(t),g=o(t,"DIV",{class:!0});var S=i(g);P(V.$$.fragment,S),Ye=u(S),ge=o(S,"P",{});var Ut=i(ge);Ze=r(Ut,"An event in a Discussion or Pull Request."),Ut.forEach(s),et=u(S),me=o(S,"P",{});var Ft=i(me);tt=r(Ft,"Use concrete classes:"),Ft.forEach(s),st=u(S),m=o(S,"UL",{});var I=i(m);fe=o(I,"LI",{});var Bt=i(fe);Q=o(Bt,"A",{href:!0});var Gt=i(Q);nt=r(Gt,"DiscussionComment"),Gt.forEach(s),Bt.forEach(s),ot=u(I),pe=o(I,"LI",{});var Jt=i(pe);X=o(Jt,"A",{href:!0});var zt=i(X);it=r(zt,"DiscussionStatusChange"),zt.forEach(s),Jt.forEach(s),at=u(I),_e=o(I,"LI",{});var Kt=i(_e);Y=o(Kt,"A",{href:!0});var Qt=i(Y);rt=r(Qt,"DiscussionCommit"),Qt.forEach(s),Kt.forEach(s),ct=u(I),be=o(I,"LI",{});var Xt=i(be);Z=o(Xt,"A",{href:!0});var Yt=i(Z);ut=r(Yt,"DiscussionTitleChange"),Yt.forEach(s),Xt.forEach(s),I.forEach(s),S.forEach(s),Ce=u(t),f=o(t,"DIV",{class:!0});var oe=i(f);P(H.$$.fragment,oe),ht=u(oe),ve=o(oe,"P",{});var Zt=i(ve);lt=r(Zt,"A comment in a Discussion / Pull Request."),Zt.forEach(s),dt=u(oe),j=o(oe,"P",{});var Oe=i(j);gt=r(Oe,"Subclass of "),ee=o(Oe,"A",{href:!0});var es=i(ee);mt=r(es,"DiscussionEvent"),es.forEach(s),ft=r(Oe,"."),Oe.forEach(s),oe.forEach(s),Re=u(t),p=o(t,"DIV",{class:!0});var ie=i(p);P(M.$$.fragment,ie),pt=u(ie),De=o(ie,"P",{});var ts=i(De);_t=r(ts,"A change of status in a Discussion / Pull Request."),ts.forEach(s),bt=u(ie),U=o(ie,"P",{});var Ve=i(U);vt=r(Ve,"Subclass of "),te=o(Ve,"A",{href:!0});var ss=i(te);Dt=r(ss,"DiscussionEvent"),ss.forEach(s),qt=r(Ve,"."),Ve.forEach(s),ie.forEach(s),Te=u(t),_=o(t,"DIV",{class:!0});var ae=i(_);P(F.$$.fragment,ae),yt=u(ae),qe=o(ae,"P",{});var ns=i(qe);$t=r(ns,"A commit in a Pull Request."),ns.forEach(s),xt=u(ae),B=o(ae,"P",{});var He=i(B);Pt=r(He,"Subclass of "),se=o(He,"A",{href:!0});var os=i(se);Et=r(os,"DiscussionEvent"),os.forEach(s),wt=r(He,"."),He.forEach(s),ae.forEach(s),Ae=u(t),b=o(t,"DIV",{class:!0});var re=i(b);P(G.$$.fragment,re),Ct=u(re),ye=o(re,"P",{});var is=i(ye);Rt=r(is,"A rename event in a Discussion / Pull Request."),is.forEach(s),Tt=u(re),J=o(re,"P",{});var je=i(J);At=r(je,"Subclass of "),ne=o(je,"A",{href:!0});var as=i(ne);St=r(as,"DiscussionEvent"),as.forEach(s),It=r(je,"."),je.forEach(s),re.forEach(s),this.h()},h(){h(v,"name","hf:doc:metadata"),h(v,"content",JSON.stringify(fs)),h(T,"id","interacting-with-discussions-and-pull-requests"),h(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(T,"href","#interacting-with-discussions-and-pull-requests"),h(D,"class","relative group"),h(A,"id","huggingface_hub.Discussion"),h(A,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(A,"href","#huggingface_hub.Discussion"),h(q,"class","relative group"),h(y,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(K,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),h($,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(Q,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionComment"),h(X,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionStatusChange"),h(Y,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionCommit"),h(Z,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionTitleChange"),h(g,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(ee,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionEvent"),h(f,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(te,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionEvent"),h(p,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(se,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionEvent"),h(_,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(ne,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionEvent"),h(b,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(t,l){e(document.head,v),d(t,$e,l),d(t,D,l),e(D,T),e(T,ce),E(k,ce,null),e(D,Me),e(D,ue),e(ue,Ue),d(t,xe,l),d(t,q,l),e(q,A),e(A,he),E(L,he,null),e(q,Fe),e(q,le),e(le,Be),d(t,Pe,l),d(t,y,l),E(W,y,null),e(y,Ge),e(y,de),e(de,Je),d(t,Ee,l),d(t,$,l),E(N,$,null),e($,ze),e($,O),e(O,Ke),e(O,K),e(K,Qe),e(O,Xe),d(t,we,l),d(t,g,l),E(V,g,null),e(g,Ye),e(g,ge),e(ge,Ze),e(g,et),e(g,me),e(me,tt),e(g,st),e(g,m),e(m,fe),e(fe,Q),e(Q,nt),e(m,ot),e(m,pe),e(pe,X),e(X,it),e(m,at),e(m,_e),e(_e,Y),e(Y,rt),e(m,ct),e(m,be),e(be,Z),e(Z,ut),d(t,Ce,l),d(t,f,l),E(H,f,null),e(f,ht),e(f,ve),e(ve,lt),e(f,dt),e(f,j),e(j,gt),e(j,ee),e(ee,mt),e(j,ft),d(t,Re,l),d(t,p,l),E(M,p,null),e(p,pt),e(p,De),e(De,_t),e(p,bt),e(p,U),e(U,vt),e(U,te),e(te,Dt),e(U,qt),d(t,Te,l),d(t,_,l),E(F,_,null),e(_,yt),e(_,qe),e(qe,$t),e(_,xt),e(_,B),e(B,Pt),e(B,se),e(se,Et),e(B,wt),d(t,Ae,l),d(t,b,l),E(G,b,null),e(b,Ct),e(b,ye),e(ye,Rt),e(b,Tt),e(b,J),e(J,At),e(J,ne),e(ne,St),e(J,It),Se=!0},p:ds,i(t){Se||(w(k.$$.fragment,t),w(L.$$.fragment,t),w(W.$$.fragment,t),w(N.$$.fragment,t),w(V.$$.fragment,t),w(H.$$.fragment,t),w(M.$$.fragment,t),w(F.$$.fragment,t),w(G.$$.fragment,t),Se=!0)},o(t){C(k.$$.fragment,t),C(L.$$.fragment,t),C(W.$$.fragment,t),C(N.$$.fragment,t),C(V.$$.fragment,t),C(H.$$.fragment,t),C(M.$$.fragment,t),C(F.$$.fragment,t),C(G.$$.fragment,t),Se=!1},d(t){s(v),t&&s($e),t&&s(D),R(k),t&&s(xe),t&&s(q),R(L),t&&s(Pe),t&&s(y),R(W),t&&s(Ee),t&&s($),R(N),t&&s(we),t&&s(g),R(V),t&&s(Ce),t&&s(f),R(H),t&&s(Re),t&&s(p),R(M),t&&s(Te),t&&s(_),R(F),t&&s(Ae),t&&s(b),R(G)}}}const fs={local:"interacting-with-discussions-and-pull-requests",sections:[{local:"huggingface_hub.Discussion",title:"Data structures"}],title:"Interacting with Discussions and Pull Requests "};function ps(kt){return gs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ds extends cs{constructor(v){super();us(this,v,ps,ms,hs,{})}}export{Ds as default,fs as metadata};
