import{S as qt,i as yt,s as wt,e as n,k as a,w as y,t as g,M as Et,c as o,d as t,m as r,a as i,x as w,h as d,b as u,G as s,g as l,y as E,L as xt,q as x,o as C,B as A,v as Ct}from"../../chunks/vendor-hf-doc-builder.js";import{D as R}from"../../chunks/Docstring-hf-doc-builder.js";import{I as $t}from"../../chunks/IconCopyLink-hf-doc-builder.js";function At(Ye){let p,ue,f,T,z,k,xe,K,Ce,le,_,I,Q,P,Ae,X,Te,he,v,W,Ie,Y,Le,ge,N,O,de,h,V,Se,Z,ke,Pe,ee,We,Ne,m,te,j,Oe,Ve,se,B,He,Me,ne,G,Ue,Fe,oe,J,Re,me,b,H,je,ie,Be,pe,D,M,Ge,ae,Je,fe,$,U,ze,re,Ke,_e,q,F,Qe,ce,Xe,ve;return k=new $t({}),P=new $t({}),W=new R({props:{name:"class huggingface_hub.Discussion",anchor:"huggingface_hub.Discussion",parameters:[{name:"title",val:": str"},{name:"status",val:": str"},{name:"num",val:": int"},{name:"repo_id",val:": str"},{name:"repo_type",val:": str"},{name:"author",val:": str"},{name:"is_pull_request",val:": bool"},{name:"created_at",val:": datetime"}],parametersDescription:[{anchor:"huggingface_hub.Discussion.title",description:`<strong>title</strong> (<code>str</code>) &#x2014;
The title of the discussion / pull request`,name:"title"},{anchor:"huggingface_hub.Discussion.status",description:`<strong>status</strong> (<code>str</code>) &#x2014;
The status of the discussion / pull request.
It can be one of:<ul>
<li><code>&quot;open&quot;</code></li>
<li><code>&quot;closed&quot;</code></li>
<li><code>&quot;merged&quot;</code> (only for pull requests)</li>
<li><code>&quot;draft&quot;</code> (only for pull requests)</li>
</ul>`,name:"status"},{anchor:"huggingface_hub.Discussion.num",description:`<strong>num</strong> (<code>int</code>) &#x2014;
The number of the discussion / pull request.`,name:"num"},{anchor:"huggingface_hub.Discussion.repo_id",description:`<strong>repo_id</strong> (<code>str</code>) &#x2014;
The id (<code>&quot;{namespace}/{repo_name}&quot;</code>) of the repo on which
the discussion / pull request was open.`,name:"repo_id"},{anchor:"huggingface_hub.Discussion.repo_type",description:`<strong>repo_type</strong> (<code>str</code>) &#x2014;
The type of the repo on which the discussion / pull request was open.
Posiible values are: <code>&quot;model&quot;</code>, <code>&quot;dataset&quot;</code>, <code>&quot;space&quot;</code>.`,name:"repo_type"},{anchor:"huggingface_hub.Discussion.author",description:`<strong>author</strong> (<code>str</code>) &#x2014;
The username of the discussion / pull request author.
Can be <code>&quot;deleted&quot;</code> if the user has been deleted since.`,name:"author"},{anchor:"huggingface_hub.Discussion.is_pull_request",description:`<strong>is_pull_request</strong> (<code>bool</code>) &#x2014;
Wether or not this is a pull request.`,name:"is_pull_request"},{anchor:"huggingface_hub.Discussion.created_at",description:`<strong>created_at</strong> (<code>datetime</code>) &#x2014;
The <code>datetime</code> of creation of the discussion / pull request.`,name:"created_at"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L9"}}),O=new R({props:{name:"class huggingface_hub.DiscussionWithDetails",anchor:"huggingface_hub.DiscussionWithDetails",parameters:[{name:"title",val:": str"},{name:"status",val:": str"},{name:"num",val:": int"},{name:"repo_id",val:": str"},{name:"repo_type",val:": str"},{name:"author",val:": str"},{name:"is_pull_request",val:": bool"},{name:"created_at",val:": datetime"},{name:"events",val:": typing.List[ForwardRef('DiscussionEvent')]"},{name:"conflicting_files",val:": typing.Optional[typing.List[str]]"},{name:"target_branch",val:": typing.Optional[str]"},{name:"merge_commit_oid",val:": typing.Optional[str]"},{name:"diff",val:": typing.Optional[str]"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionWithDetails.events",description:`<strong>events</strong> (<code>list</code> of <a href="/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionEvent">DiscussionEvent</a>) &#x2014;
The list of <code>DiscussionEvents</code> in this discussion or pull request.`,name:"events"},{anchor:"huggingface_hub.DiscussionWithDetails.conflicting_files",description:`<strong>conflicting_files</strong> (<code>list</code> of <code>str</code>, <em>optional</em>) &#x2014;
A list of conflicting files if this is a pull request.
<code>None</code> if <code>self.is_pull_request</code> is <code>False</code>.`,name:"conflicting_files"},{anchor:"huggingface_hub.DiscussionWithDetails.target_branch",description:`<strong>target_branch</strong> (<code>str</code>, <em>optional</em>) &#x2014;
The branch into which changes are to be merged if this is a
pull request. <code>None</code>  if <code>self.is_pull_request</code> is <code>False</code>.`,name:"target_branch"},{anchor:"huggingface_hub.DiscussionWithDetails.merge_commit_oid",description:`<strong>merge_commit_oid</strong> (<code>str</code>, <em>optional</em>) &#x2014;
If this is a merged pull request, this is set to the OID / SHA of
the merge commit, <code>None</code> otherwise.`,name:"merge_commit_oid"},{anchor:"huggingface_hub.DiscussionWithDetails.diff",description:`<strong>diff</strong> (<code>str</code>, <em>optional</em>) &#x2014;
The git diff if this is a pull request, <code>None</code> otherwise.`,name:"diff"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L51"}}),V=new R({props:{name:"class huggingface_hub.DiscussionEvent",anchor:"huggingface_hub.DiscussionEvent",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionEvent.id",description:`<strong>id</strong> (<code>str</code>) &#x2014;
The ID of the event. An hexadecimal string.`,name:"id"},{anchor:"huggingface_hub.DiscussionEvent.type",description:`<strong>type</strong> (<code>str</code>) &#x2014;
The type of the event.`,name:"type"},{anchor:"huggingface_hub.DiscussionEvent.created_at",description:`<strong>created_at</strong> (<code>datetime</code>) &#x2014;
A <a href="https://docs.python.org/3/library/datetime.html?highlight=datetime#datetime.datetime" rel="nofollow"><code>datetime</code></a>
object holding the creation timestamp for the event.`,name:"created_at"},{anchor:"huggingface_hub.DiscussionEvent.author",description:`<strong>author</strong> (<code>str</code>) &#x2014;
The username of the discussion / pull request author.
Can be <code>&quot;deleted&quot;</code> if the user has been deleted since.`,name:"author"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L77"}}),H=new R({props:{name:"class huggingface_hub.DiscussionComment",anchor:"huggingface_hub.DiscussionComment",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"},{name:"content",val:": str"},{name:"edited",val:": bool"},{name:"hidden",val:": bool"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionComment.content",description:`<strong>content</strong> (<code>str</code>) &#x2014;
The raw markdown content of the comment. Mentions, links and images are not rendered.`,name:"content"},{anchor:"huggingface_hub.DiscussionComment.edited",description:`<strong>edited</strong> (<code>bool</code>) &#x2014;
Wether or not this comment has been edited`,name:"edited"},{anchor:"huggingface_hub.DiscussionComment.hidden",description:`<strong>hidden</strong> (<code>bool</code>) &#x2014;
Whether or not this comment has been hidden`,name:"hidden"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L110"}}),M=new R({props:{name:"class huggingface_hub.DiscussionStatusChange",anchor:"huggingface_hub.DiscussionStatusChange",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"},{name:"new_status",val:": str"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionStatusChange.new_status",description:`<strong>new_status</strong> (<code>str</code>) &#x2014;
The status of the discussion / pull request after the change.
It can be one of:<ul>
<li><code>&quot;open&quot;</code></li>
<li><code>&quot;closed&quot;</code></li>
<li><code>&quot;merged&quot;</code> (only for pull requests)</li>
</ul>`,name:"new_status"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L130"}}),U=new R({props:{name:"class huggingface_hub.DiscussionCommit",anchor:"huggingface_hub.DiscussionCommit",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"},{name:"summary",val:": str"},{name:"oid",val:": str"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionCommit.summary",description:`<strong>summary</strong> (<code>str</code>) &#x2014;
The summary of the commit.`,name:"summary"},{anchor:"huggingface_hub.DiscussionCommit.oid",description:`<strong>oid</strong> (<code>str</code>) &#x2014;
The OID / SHA of the commit, as a hexadecimal string.`,name:"oid"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L146"}}),F=new R({props:{name:"class huggingface_hub.DiscussionTitleChange",anchor:"huggingface_hub.DiscussionTitleChange",parameters:[{name:"id",val:": str"},{name:"type",val:": str"},{name:"created_at",val:": datetime"},{name:"author",val:": str"},{name:"_event",val:": dict"},{name:"old_title",val:": str"},{name:"new_title",val:": str"}],parametersDescription:[{anchor:"huggingface_hub.DiscussionTitleChange.old_title",description:`<strong>old_title</strong> (<code>str</code>) &#x2014;
The previous title for the discussion / pull request`,name:"old_title"},{anchor:"huggingface_hub.DiscussionTitleChange.new_title",description:`<strong>new_title</strong> (<code>str</code>) &#x2014;
The new title`,name:"new_title"}],source:"https://github.com/huggingface/huggingface_hub/blob/vr_930/src/huggingface_hub/community.py#L161"}}),{c(){p=n("meta"),ue=a(),f=n("h1"),T=n("a"),z=n("span"),y(k.$$.fragment),xe=a(),K=n("span"),Ce=g("Interacting with discussions and pull requests"),le=a(),_=n("h2"),I=n("a"),Q=n("span"),y(P.$$.fragment),Ae=a(),X=n("span"),Te=g("Data structures"),he=a(),v=n("div"),y(W.$$.fragment),Ie=a(),Y=n("p"),Le=g("A discussion or pull request on the Hub."),ge=a(),N=n("div"),y(O.$$.fragment),de=a(),h=n("div"),y(V.$$.fragment),Se=a(),Z=n("p"),ke=g("An event in a discussion or pull request."),Pe=a(),ee=n("p"),We=g("Use concrete classes:"),Ne=a(),m=n("ul"),te=n("li"),j=n("a"),Oe=g("DiscussionComment"),Ve=a(),se=n("li"),B=n("a"),He=g("DiscussionStatusChange"),Me=a(),ne=n("li"),G=n("a"),Ue=g("DiscussionCommit"),Fe=a(),oe=n("li"),J=n("a"),Re=g("DiscussionTitleChange"),me=a(),b=n("div"),y(H.$$.fragment),je=a(),ie=n("p"),Be=g("A comment in a discussion / pull request."),pe=a(),D=n("div"),y(M.$$.fragment),Ge=a(),ae=n("p"),Je=g("A change of status in a discussion / pull request."),fe=a(),$=n("div"),y(U.$$.fragment),ze=a(),re=n("p"),Ke=g("A commit in a pull request."),_e=a(),q=n("div"),y(F.$$.fragment),Qe=a(),ce=n("p"),Xe=g("A rename event in a discussion / pull request."),this.h()},l(e){const c=Et('[data-svelte="svelte-1phssyn"]',document.head);p=o(c,"META",{name:!0,content:!0}),c.forEach(t),ue=r(e),f=o(e,"H1",{class:!0});var be=i(f);T=o(be,"A",{id:!0,class:!0,href:!0});var Ze=i(T);z=o(Ze,"SPAN",{});var et=i(z);w(k.$$.fragment,et),et.forEach(t),Ze.forEach(t),xe=r(be),K=o(be,"SPAN",{});var tt=i(K);Ce=d(tt,"Interacting with discussions and pull requests"),tt.forEach(t),be.forEach(t),le=r(e),_=o(e,"H2",{class:!0});var De=i(_);I=o(De,"A",{id:!0,class:!0,href:!0});var st=i(I);Q=o(st,"SPAN",{});var nt=i(Q);w(P.$$.fragment,nt),nt.forEach(t),st.forEach(t),Ae=r(De),X=o(De,"SPAN",{});var ot=i(X);Te=d(ot,"Data structures"),ot.forEach(t),De.forEach(t),he=r(e),v=o(e,"DIV",{class:!0});var $e=i(v);w(W.$$.fragment,$e),Ie=r($e),Y=o($e,"P",{});var it=i(Y);Le=d(it,"A discussion or pull request on the Hub."),it.forEach(t),$e.forEach(t),ge=r(e),N=o(e,"DIV",{class:!0});var at=i(N);w(O.$$.fragment,at),at.forEach(t),de=r(e),h=o(e,"DIV",{class:!0});var L=i(h);w(V.$$.fragment,L),Se=r(L),Z=o(L,"P",{});var rt=i(Z);ke=d(rt,"An event in a discussion or pull request."),rt.forEach(t),Pe=r(L),ee=o(L,"P",{});var ct=i(ee);We=d(ct,"Use concrete classes:"),ct.forEach(t),Ne=r(L),m=o(L,"UL",{});var S=i(m);te=o(S,"LI",{});var ut=i(te);j=o(ut,"A",{href:!0});var lt=i(j);Oe=d(lt,"DiscussionComment"),lt.forEach(t),ut.forEach(t),Ve=r(S),se=o(S,"LI",{});var ht=i(se);B=o(ht,"A",{href:!0});var gt=i(B);He=d(gt,"DiscussionStatusChange"),gt.forEach(t),ht.forEach(t),Me=r(S),ne=o(S,"LI",{});var dt=i(ne);G=o(dt,"A",{href:!0});var mt=i(G);Ue=d(mt,"DiscussionCommit"),mt.forEach(t),dt.forEach(t),Fe=r(S),oe=o(S,"LI",{});var pt=i(oe);J=o(pt,"A",{href:!0});var ft=i(J);Re=d(ft,"DiscussionTitleChange"),ft.forEach(t),pt.forEach(t),S.forEach(t),L.forEach(t),me=r(e),b=o(e,"DIV",{class:!0});var qe=i(b);w(H.$$.fragment,qe),je=r(qe),ie=o(qe,"P",{});var _t=i(ie);Be=d(_t,"A comment in a discussion / pull request."),_t.forEach(t),qe.forEach(t),pe=r(e),D=o(e,"DIV",{class:!0});var ye=i(D);w(M.$$.fragment,ye),Ge=r(ye),ae=o(ye,"P",{});var vt=i(ae);Je=d(vt,"A change of status in a discussion / pull request."),vt.forEach(t),ye.forEach(t),fe=r(e),$=o(e,"DIV",{class:!0});var we=i($);w(U.$$.fragment,we),ze=r(we),re=o(we,"P",{});var bt=i(re);Ke=d(bt,"A commit in a pull request."),bt.forEach(t),we.forEach(t),_e=r(e),q=o(e,"DIV",{class:!0});var Ee=i(q);w(F.$$.fragment,Ee),Qe=r(Ee),ce=o(Ee,"P",{});var Dt=i(ce);Xe=d(Dt,"A rename event in a discussion / pull request."),Dt.forEach(t),Ee.forEach(t),this.h()},h(){u(p,"name","hf:doc:metadata"),u(p,"content",JSON.stringify(Tt)),u(T,"id","interacting-with-discussions-and-pull-requests"),u(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(T,"href","#interacting-with-discussions-and-pull-requests"),u(f,"class","relative group"),u(I,"id","huggingface_hub.Discussion"),u(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(I,"href","#huggingface_hub.Discussion"),u(_,"class","relative group"),u(v,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),u(N,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),u(j,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionComment"),u(B,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionStatusChange"),u(G,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionCommit"),u(J,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionTitleChange"),u(h,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),u(b,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),u(D,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),u($,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),u(q,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,c){s(document.head,p),l(e,ue,c),l(e,f,c),s(f,T),s(T,z),E(k,z,null),s(f,xe),s(f,K),s(K,Ce),l(e,le,c),l(e,_,c),s(_,I),s(I,Q),E(P,Q,null),s(_,Ae),s(_,X),s(X,Te),l(e,he,c),l(e,v,c),E(W,v,null),s(v,Ie),s(v,Y),s(Y,Le),l(e,ge,c),l(e,N,c),E(O,N,null),l(e,de,c),l(e,h,c),E(V,h,null),s(h,Se),s(h,Z),s(Z,ke),s(h,Pe),s(h,ee),s(ee,We),s(h,Ne),s(h,m),s(m,te),s(te,j),s(j,Oe),s(m,Ve),s(m,se),s(se,B),s(B,He),s(m,Me),s(m,ne),s(ne,G),s(G,Ue),s(m,Fe),s(m,oe),s(oe,J),s(J,Re),l(e,me,c),l(e,b,c),E(H,b,null),s(b,je),s(b,ie),s(ie,Be),l(e,pe,c),l(e,D,c),E(M,D,null),s(D,Ge),s(D,ae),s(ae,Je),l(e,fe,c),l(e,$,c),E(U,$,null),s($,ze),s($,re),s(re,Ke),l(e,_e,c),l(e,q,c),E(F,q,null),s(q,Qe),s(q,ce),s(ce,Xe),ve=!0},p:xt,i(e){ve||(x(k.$$.fragment,e),x(P.$$.fragment,e),x(W.$$.fragment,e),x(O.$$.fragment,e),x(V.$$.fragment,e),x(H.$$.fragment,e),x(M.$$.fragment,e),x(U.$$.fragment,e),x(F.$$.fragment,e),ve=!0)},o(e){C(k.$$.fragment,e),C(P.$$.fragment,e),C(W.$$.fragment,e),C(O.$$.fragment,e),C(V.$$.fragment,e),C(H.$$.fragment,e),C(M.$$.fragment,e),C(U.$$.fragment,e),C(F.$$.fragment,e),ve=!1},d(e){t(p),e&&t(ue),e&&t(f),A(k),e&&t(le),e&&t(_),A(P),e&&t(he),e&&t(v),A(W),e&&t(ge),e&&t(N),A(O),e&&t(de),e&&t(h),A(V),e&&t(me),e&&t(b),A(H),e&&t(pe),e&&t(D),A(M),e&&t(fe),e&&t($),A(U),e&&t(_e),e&&t(q),A(F)}}}const Tt={local:"interacting-with-discussions-and-pull-requests",sections:[{local:"huggingface_hub.Discussion",title:"Data structures"}],title:"Interacting with discussions and pull requests"};function It(Ye){return Ct(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Pt extends qt{constructor(p){super();yt(this,p,It,At,wt,{})}}export{Pt as default,Tt as metadata};
