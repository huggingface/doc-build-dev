import{S as Jt,i as Kt,s as Qt,e as n,k as p,w as x,t,M as Xt,c as l,d as a,m as h,a as r,x as H,h as i,b as u,G as s,g as c,y as R,L as Zt,q as C,o as S,B as I,v as ei}from"../chunks/vendor-hf-doc-builder.js";import{I as Ke}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Ds}from"../chunks/CodeBlock-hf-doc-builder.js";function si(it){let E,Qe,j,T,He,Y,Ps,Re,xs,Xe,_,Hs,Ce,Rs,Cs,B,Ss,Is,Ze,y,N,Se,z,Ts,Ie,Ns,es,M,Ms,Te,Ws,Ls,ss,G,as,A,Ne,Os,Vs,ae,Us,Fs,ts,J,is,d,Ys,te,Bs,zs,Me,Gs,Js,ie,Ks,Qs,ns,K,ls,g,ne,Xs,Zs,le,ea,sa,re,aa,ta,We,ia,na,rs,m,la,Le,ra,oa,Oe,ua,ca,os,$,W,Ve,Q,pa,Ue,ha,us,v,fa,oe,ga,da,X,_a,ma,cs,b,va,ue,ba,wa,ce,qa,Ea,ps,Z,hs,L,ja,pe,ya,Aa,fs,f,he,fe,$a,ka,Da,ge,de,Pa,xa,Ha,_e,me,Ra,Ca,Sa,ve,be,Ia,Ta,Na,we,qe,Ma,Wa,gs,O,La,Ee,Oa,Va,ds,k,V,Fe,ee,Ua,Ye,Fa,_s,je,Be,Ya,ms,D,U,ze,se,Ba,Ge,za,vs,w,Ga,ye,Ja,Ka,Ae,Qa,Xa,bs;return Y=new Ke({}),z=new Ke({}),G=new Ds({props:{code:`from huggingface_hub import get_repo_discussions

get_repo_discussions(repo_id="bigscience/bloom-1b3")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions

<span class="hljs-meta">&gt;&gt;&gt; </span>get_repo_discussions(repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>)
Pagination(
    page=[
        Discussion(
            num=<span class="hljs-number">8</span>,
            author=<span class="hljs-string">&#x27;ybelkada&#x27;</span>,
            title=<span class="hljs-string">&#x27;Update tokenizer_config.json&#x27;</span>,
            status=<span class="hljs-string">&#x27;merged&#x27;</span>,
            is_pull_request=<span class="hljs-literal">True</span>,
            ...
        ),
        Discussion(
            num=<span class="hljs-number">7</span>,
            author=<span class="hljs-string">&#x27;malteos&#x27;</span>,
            title=<span class="hljs-string">&#x27;Slurm training script&#x27;</span>,
            status=<span class="hljs-string">&#x27;closed&#x27;</span>,
            is_pull_request=<span class="hljs-literal">False</span>,
            ...
        ),
        ...
    ],
    total=<span class="hljs-number">8</span>,
    page_num=<span class="hljs-number">0</span>,
    next_page=<span class="hljs-literal">None</span>,
)`}}),J=new Ds({props:{code:`from huggingface_hub import get_repo_discussions

pagination = get_repo_discussions(repo_id="dalle-mini/dalle-mini")
all_discussions = pagination.page
while pagination.has_next:
    pagination = pagination.next_page()
    all_discussions = all_discussions + pagination.page`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions

<span class="hljs-meta">&gt;&gt;&gt; </span>pagination = get_repo_discussions(repo_id=<span class="hljs-string">&quot;dalle-mini/dalle-mini&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>all_discussions = pagination.page
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">while</span> pagination.has_next:
<span class="hljs-meta">... </span>    pagination = pagination.next_page()
<span class="hljs-meta">... </span>    all_discussions = all_discussions + pagination.page`}}),K=new Ds({props:{code:`from huggingface_hub import get_discussion_details

get_discussion_details(
    repo_id="bigscience/bloom-1b3",
    discussion_num=2
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_discussion_details

<span class="hljs-meta">&gt;&gt;&gt; </span>get_discussion_details(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>,
<span class="hljs-meta">... </span>    discussion_num=<span class="hljs-number">2</span>
<span class="hljs-meta">... </span>)
DiscussionWithDetails(
    num=<span class="hljs-number">2</span>,
    author=<span class="hljs-string">&#x27;cakiki&#x27;</span>,
    title=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>,
    status=<span class="hljs-string">&#x27;open&#x27;</span>,
    is_pull_request=<span class="hljs-literal">True</span>,
    events=[
        DiscussionComment(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;comment&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, ...),
        DiscussionCommit(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;commit&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, summary=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>, oid=<span class="hljs-string">&#x27;1256f9d9a33fa8887e1c1bf0e09b4713da96773a&#x27;</span>, ...),
    ],
    conflicting_files=[],
    target_branch=<span class="hljs-string">&#x27;refs/heads/main&#x27;</span>,
    merge_commit_oid=<span class="hljs-literal">None</span>,
    diff=<span class="hljs-string">&#x27;diff --git a/README.md b/README.md\\nindex a6ae3b9294edf8d0eda0d67c7780a10241242a7e..3a1814f212bc3f0d3cc8f74bdbd316de4ae7b9e3 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -132,7 +132,7 [...]&#x27;</span>,
)`}}),Q=new Ke({}),Z=new Ds({props:{code:`from huggingface_hub import create_discussion, create_pull_request

create_discussion(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)

create_pull_request(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_discussion, create_pull_request

<span class="hljs-meta">&gt;&gt;&gt; </span>create_discussion(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(...)

<span class="hljs-meta">&gt;&gt;&gt; </span>create_pull_request(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(..., is_pull_request=<span class="hljs-literal">True</span>)`}}),ee=new Ke({}),se=new Ke({}),{c(){E=n("meta"),Qe=p(),j=n("h1"),T=n("a"),He=n("span"),x(Y.$$.fragment),Ps=p(),Re=n("span"),xs=t("Interact with discussions and pull requests"),Xe=p(),_=n("p"),Hs=t("The "),Ce=n("code"),Rs=t("huggingface_hub"),Cs=t(` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),B=n("a"),Ss=t("the dedicated documentation page"),Is=t(`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Ze=p(),y=n("h2"),N=n("a"),Se=n("span"),x(z.$$.fragment),Ts=p(),Ie=n("span"),Ns=t("Retrieve Discussions and Pull Requests from the Hub"),es=p(),M=n("p"),Ms=t("The "),Te=n("code"),Ws=t("HfApi"),Ls=t(" class allows you to retrieve Discussions and Pull Requests on a given repo:"),ss=p(),x(G.$$.fragment),as=p(),A=n("p"),Ne=n("code"),Os=t("HfApi.get_repo_discussions"),Vs=t(" returns a "),ae=n("a"),Us=t("Pagination"),Fs=t(` object, which is a convenience wrapper to manage pagination
of the results. To get all the discussions in a single list, run:`),ts=p(),x(J.$$.fragment),is=p(),d=n("p"),Ys=t("The "),te=n("a"),Bs=t("Discussion"),zs=t(" object returned by "),Me=n("code"),Gs=t("HfApi.get_repo_discussion"),Js=t(` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),ie=n("a"),Ks=t("HfApi.get_discussion_details()"),Qs=t(":"),ns=p(),x(K.$$.fragment),ls=p(),g=n("p"),ne=n("a"),Xs=t("HfApi.get_discussion_details()"),Zs=t(" returns a "),le=n("a"),ea=t("DiscussionWithDetails"),sa=t(" object, which is a subclass of "),re=n("a"),aa=t("Discussion"),ta=t(`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the discussion via `),We=n("code"),ia=t("DiscussionWithDetails.events"),na=t("."),rs=p(),m=n("p"),la=t("In case of a Pull Request, you can retrieve the raw git diff with "),Le=n("code"),ra=t("DiscussionWithDetails.diff"),oa=t(`. All the commits of the
Pull Request are listed in `),Oe=n("code"),ua=t("DiscussionWithDetails.events"),ca=t("."),os=p(),$=n("h2"),W=n("a"),Ve=n("span"),x(Q.$$.fragment),pa=p(),Ue=n("span"),ha=t("Create and edit a Discussion or Pull Request programatically"),us=p(),v=n("p"),fa=t("The "),oe=n("a"),ga=t("HfApi"),da=t(` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),X=n("a"),_a=t("access token"),ma=t(` to create and edit Discussions
or Pull Requests.`),cs=p(),b=n("p"),va=t("Use "),ue=n("a"),ba=t("HfApi.create_discussion()"),wa=t(" (respectively "),ce=n("a"),qa=t("HfApi.create_pull_request()"),Ea=t(") to create a Discussion (respectively a Pull Request) on a repo:"),ps=p(),x(Z.$$.fragment),hs=p(),L=n("p"),ja=t("Managing Pull Requests and Discussions can be done entirely with the "),pe=n("a"),ya=t("HfApi"),Aa=t(" class. For example:"),fs=p(),f=n("ul"),he=n("li"),fe=n("a"),$a=t("comment_discussion()"),ka=t(" to add comments"),Da=p(),ge=n("li"),de=n("a"),Pa=t("edit_discussion_comment()"),xa=t(" to edit comments"),Ha=p(),_e=n("li"),me=n("a"),Ra=t("rename_discussion()"),Ca=t(" to rename a discussion or pull request"),Sa=p(),ve=n("li"),be=n("a"),Ia=t("change_discussion_status()"),Ta=t(" to open or close a discussion / pull request"),Na=p(),we=n("li"),qe=n("a"),Ma=t("merge_pull_request()"),Wa=t(" to merge a pull request"),gs=p(),O=n("p"),La=t("Visit the "),Ee=n("a"),Oa=t("HfApi"),Va=t(" documentation page for an exhaustive reference of all available methods."),ds=p(),k=n("h2"),V=n("a"),Fe=n("span"),x(ee.$$.fragment),Ua=p(),Ye=n("span"),Fa=t("Push changes to a Pull Request"),_s=p(),je=n("p"),Be=n("em"),Ya=t("Coming soon !"),ms=p(),D=n("h2"),U=n("a"),ze=n("span"),x(se.$$.fragment),Ba=p(),Ge=n("span"),za=t("See also"),vs=p(),w=n("p"),Ga=t("For a more detailed reference, visit the "),ye=n("a"),Ja=t("community"),Ka=t(" and the "),Ae=n("a"),Qa=t("hf_api"),Xa=t(" documentation page."),this.h()},l(e){const o=Xt('[data-svelte="svelte-1phssyn"]',document.head);E=l(o,"META",{name:!0,content:!0}),o.forEach(a),Qe=h(e),j=l(e,"H1",{class:!0});var ws=r(j);T=l(ws,"A",{id:!0,class:!0,href:!0});var nt=r(T);He=l(nt,"SPAN",{});var lt=r(He);H(Y.$$.fragment,lt),lt.forEach(a),nt.forEach(a),Ps=h(ws),Re=l(ws,"SPAN",{});var rt=r(Re);xs=i(rt,"Interact with discussions and pull requests"),rt.forEach(a),ws.forEach(a),Xe=h(e),_=l(e,"P",{});var $e=r(_);Hs=i($e,"The "),Ce=l($e,"CODE",{});var ot=r(Ce);Rs=i(ot,"huggingface_hub"),ot.forEach(a),Cs=i($e,` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),B=l($e,"A",{href:!0,rel:!0});var ut=r(B);Ss=i(ut,"the dedicated documentation page"),ut.forEach(a),Is=i($e,`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),$e.forEach(a),Ze=h(e),y=l(e,"H2",{class:!0});var qs=r(y);N=l(qs,"A",{id:!0,class:!0,href:!0});var ct=r(N);Se=l(ct,"SPAN",{});var pt=r(Se);H(z.$$.fragment,pt),pt.forEach(a),ct.forEach(a),Ts=h(qs),Ie=l(qs,"SPAN",{});var ht=r(Ie);Ns=i(ht,"Retrieve Discussions and Pull Requests from the Hub"),ht.forEach(a),qs.forEach(a),es=h(e),M=l(e,"P",{});var Es=r(M);Ms=i(Es,"The "),Te=l(Es,"CODE",{});var ft=r(Te);Ws=i(ft,"HfApi"),ft.forEach(a),Ls=i(Es," class allows you to retrieve Discussions and Pull Requests on a given repo:"),Es.forEach(a),ss=h(e),H(G.$$.fragment,e),as=h(e),A=l(e,"P",{});var Je=r(A);Ne=l(Je,"CODE",{});var gt=r(Ne);Os=i(gt,"HfApi.get_repo_discussions"),gt.forEach(a),Vs=i(Je," returns a "),ae=l(Je,"A",{href:!0});var dt=r(ae);Us=i(dt,"Pagination"),dt.forEach(a),Fs=i(Je,` object, which is a convenience wrapper to manage pagination
of the results. To get all the discussions in a single list, run:`),Je.forEach(a),ts=h(e),H(J.$$.fragment,e),is=h(e),d=l(e,"P",{});var F=r(d);Ys=i(F,"The "),te=l(F,"A",{href:!0});var _t=r(te);Bs=i(_t,"Discussion"),_t.forEach(a),zs=i(F," object returned by "),Me=l(F,"CODE",{});var mt=r(Me);Gs=i(mt,"HfApi.get_repo_discussion"),mt.forEach(a),Js=i(F,` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),ie=l(F,"A",{href:!0});var vt=r(ie);Ks=i(vt,"HfApi.get_discussion_details()"),vt.forEach(a),Qs=i(F,":"),F.forEach(a),ns=h(e),H(K.$$.fragment,e),ls=h(e),g=l(e,"P",{});var P=r(g);ne=l(P,"A",{href:!0});var bt=r(ne);Xs=i(bt,"HfApi.get_discussion_details()"),bt.forEach(a),Zs=i(P," returns a "),le=l(P,"A",{href:!0});var wt=r(le);ea=i(wt,"DiscussionWithDetails"),wt.forEach(a),sa=i(P," object, which is a subclass of "),re=l(P,"A",{href:!0});var qt=r(re);aa=i(qt,"Discussion"),qt.forEach(a),ta=i(P,`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the discussion via `),We=l(P,"CODE",{});var Et=r(We);ia=i(Et,"DiscussionWithDetails.events"),Et.forEach(a),na=i(P,"."),P.forEach(a),rs=h(e),m=l(e,"P",{});var ke=r(m);la=i(ke,"In case of a Pull Request, you can retrieve the raw git diff with "),Le=l(ke,"CODE",{});var jt=r(Le);ra=i(jt,"DiscussionWithDetails.diff"),jt.forEach(a),oa=i(ke,`. All the commits of the
Pull Request are listed in `),Oe=l(ke,"CODE",{});var yt=r(Oe);ua=i(yt,"DiscussionWithDetails.events"),yt.forEach(a),ca=i(ke,"."),ke.forEach(a),os=h(e),$=l(e,"H2",{class:!0});var js=r($);W=l(js,"A",{id:!0,class:!0,href:!0});var At=r(W);Ve=l(At,"SPAN",{});var $t=r(Ve);H(Q.$$.fragment,$t),$t.forEach(a),At.forEach(a),pa=h(js),Ue=l(js,"SPAN",{});var kt=r(Ue);ha=i(kt,"Create and edit a Discussion or Pull Request programatically"),kt.forEach(a),js.forEach(a),us=h(e),v=l(e,"P",{});var De=r(v);fa=i(De,"The "),oe=l(De,"A",{href:!0});var Dt=r(oe);ga=i(Dt,"HfApi"),Dt.forEach(a),da=i(De,` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),X=l(De,"A",{href:!0,rel:!0});var Pt=r(X);_a=i(Pt,"access token"),Pt.forEach(a),ma=i(De,` to create and edit Discussions
or Pull Requests.`),De.forEach(a),cs=h(e),b=l(e,"P",{});var Pe=r(b);va=i(Pe,"Use "),ue=l(Pe,"A",{href:!0});var xt=r(ue);ba=i(xt,"HfApi.create_discussion()"),xt.forEach(a),wa=i(Pe," (respectively "),ce=l(Pe,"A",{href:!0});var Ht=r(ce);qa=i(Ht,"HfApi.create_pull_request()"),Ht.forEach(a),Ea=i(Pe,") to create a Discussion (respectively a Pull Request) on a repo:"),Pe.forEach(a),ps=h(e),H(Z.$$.fragment,e),hs=h(e),L=l(e,"P",{});var ys=r(L);ja=i(ys,"Managing Pull Requests and Discussions can be done entirely with the "),pe=l(ys,"A",{href:!0});var Rt=r(pe);ya=i(Rt,"HfApi"),Rt.forEach(a),Aa=i(ys," class. For example:"),ys.forEach(a),fs=h(e),f=l(e,"UL",{});var q=r(f);he=l(q,"LI",{});var Za=r(he);fe=l(Za,"A",{href:!0});var Ct=r(fe);$a=i(Ct,"comment_discussion()"),Ct.forEach(a),ka=i(Za," to add comments"),Za.forEach(a),Da=h(q),ge=l(q,"LI",{});var et=r(ge);de=l(et,"A",{href:!0});var St=r(de);Pa=i(St,"edit_discussion_comment()"),St.forEach(a),xa=i(et," to edit comments"),et.forEach(a),Ha=h(q),_e=l(q,"LI",{});var st=r(_e);me=l(st,"A",{href:!0});var It=r(me);Ra=i(It,"rename_discussion()"),It.forEach(a),Ca=i(st," to rename a discussion or pull request"),st.forEach(a),Sa=h(q),ve=l(q,"LI",{});var at=r(ve);be=l(at,"A",{href:!0});var Tt=r(be);Ia=i(Tt,"change_discussion_status()"),Tt.forEach(a),Ta=i(at," to open or close a discussion / pull request"),at.forEach(a),Na=h(q),we=l(q,"LI",{});var tt=r(we);qe=l(tt,"A",{href:!0});var Nt=r(qe);Ma=i(Nt,"merge_pull_request()"),Nt.forEach(a),Wa=i(tt," to merge a pull request"),tt.forEach(a),q.forEach(a),gs=h(e),O=l(e,"P",{});var As=r(O);La=i(As,"Visit the "),Ee=l(As,"A",{href:!0});var Mt=r(Ee);Oa=i(Mt,"HfApi"),Mt.forEach(a),Va=i(As," documentation page for an exhaustive reference of all available methods."),As.forEach(a),ds=h(e),k=l(e,"H2",{class:!0});var $s=r(k);V=l($s,"A",{id:!0,class:!0,href:!0});var Wt=r(V);Fe=l(Wt,"SPAN",{});var Lt=r(Fe);H(ee.$$.fragment,Lt),Lt.forEach(a),Wt.forEach(a),Ua=h($s),Ye=l($s,"SPAN",{});var Ot=r(Ye);Fa=i(Ot,"Push changes to a Pull Request"),Ot.forEach(a),$s.forEach(a),_s=h(e),je=l(e,"P",{});var Vt=r(je);Be=l(Vt,"EM",{});var Ut=r(Be);Ya=i(Ut,"Coming soon !"),Ut.forEach(a),Vt.forEach(a),ms=h(e),D=l(e,"H2",{class:!0});var ks=r(D);U=l(ks,"A",{id:!0,class:!0,href:!0});var Ft=r(U);ze=l(Ft,"SPAN",{});var Yt=r(ze);H(se.$$.fragment,Yt),Yt.forEach(a),Ft.forEach(a),Ba=h(ks),Ge=l(ks,"SPAN",{});var Bt=r(Ge);za=i(Bt,"See also"),Bt.forEach(a),ks.forEach(a),vs=h(e),w=l(e,"P",{});var xe=r(w);Ga=i(xe,"For a more detailed reference, visit the "),ye=l(xe,"A",{href:!0});var zt=r(ye);Ja=i(zt,"community"),zt.forEach(a),Ka=i(xe," and the "),Ae=l(xe,"A",{href:!0});var Gt=r(Ae);Qa=i(Gt,"hf_api"),Gt.forEach(a),Xa=i(xe," documentation page."),xe.forEach(a),this.h()},h(){u(E,"name","hf:doc:metadata"),u(E,"content",JSON.stringify(ai)),u(T,"id","interact-with-discussions-and-pull-requests"),u(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(T,"href","#interact-with-discussions-and-pull-requests"),u(j,"class","relative group"),u(B,"href","https://huggingface.co/docs/hub/repositories-pull-requests-discussions"),u(B,"rel","nofollow"),u(N,"id","retrieve-discussions-and-pull-requests-from-the-hub"),u(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(N,"href","#retrieve-discussions-and-pull-requests-from-the-hub"),u(y,"class","relative group"),u(ae,"href","/docs/huggingface_hub/pr_930/en/package_reference/utilities#huggingface_hub.Pagination"),u(te,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),u(ie,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(ne,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(le,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionWithDetails"),u(re,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),u(W,"id","create-and-edit-a-discussion-or-pull-request-programatically"),u(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(W,"href","#create-and-edit-a-discussion-or-pull-request-programatically"),u($,"class","relative group"),u(oe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(X,"href","https://huggingface.co/docs/hub/security-tokens"),u(X,"rel","nofollow"),u(ue,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion"),u(ce,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_pull_request"),u(pe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(fe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.comment_discussion"),u(de,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.edit_discussion_comment"),u(me,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.rename_discussion"),u(be,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.change_discussion_status"),u(qe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.merge_pull_request"),u(Ee,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(V,"id","push-changes-to-a-pull-request"),u(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(V,"href","#push-changes-to-a-pull-request"),u(k,"class","relative group"),u(U,"id","see-also"),u(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(U,"href","#see-also"),u(D,"class","relative group"),u(ye,"href","/source/package_reference/community"),u(Ae,"href","/source/package_reference/hf_api")},m(e,o){s(document.head,E),c(e,Qe,o),c(e,j,o),s(j,T),s(T,He),R(Y,He,null),s(j,Ps),s(j,Re),s(Re,xs),c(e,Xe,o),c(e,_,o),s(_,Hs),s(_,Ce),s(Ce,Rs),s(_,Cs),s(_,B),s(B,Ss),s(_,Is),c(e,Ze,o),c(e,y,o),s(y,N),s(N,Se),R(z,Se,null),s(y,Ts),s(y,Ie),s(Ie,Ns),c(e,es,o),c(e,M,o),s(M,Ms),s(M,Te),s(Te,Ws),s(M,Ls),c(e,ss,o),R(G,e,o),c(e,as,o),c(e,A,o),s(A,Ne),s(Ne,Os),s(A,Vs),s(A,ae),s(ae,Us),s(A,Fs),c(e,ts,o),R(J,e,o),c(e,is,o),c(e,d,o),s(d,Ys),s(d,te),s(te,Bs),s(d,zs),s(d,Me),s(Me,Gs),s(d,Js),s(d,ie),s(ie,Ks),s(d,Qs),c(e,ns,o),R(K,e,o),c(e,ls,o),c(e,g,o),s(g,ne),s(ne,Xs),s(g,Zs),s(g,le),s(le,ea),s(g,sa),s(g,re),s(re,aa),s(g,ta),s(g,We),s(We,ia),s(g,na),c(e,rs,o),c(e,m,o),s(m,la),s(m,Le),s(Le,ra),s(m,oa),s(m,Oe),s(Oe,ua),s(m,ca),c(e,os,o),c(e,$,o),s($,W),s(W,Ve),R(Q,Ve,null),s($,pa),s($,Ue),s(Ue,ha),c(e,us,o),c(e,v,o),s(v,fa),s(v,oe),s(oe,ga),s(v,da),s(v,X),s(X,_a),s(v,ma),c(e,cs,o),c(e,b,o),s(b,va),s(b,ue),s(ue,ba),s(b,wa),s(b,ce),s(ce,qa),s(b,Ea),c(e,ps,o),R(Z,e,o),c(e,hs,o),c(e,L,o),s(L,ja),s(L,pe),s(pe,ya),s(L,Aa),c(e,fs,o),c(e,f,o),s(f,he),s(he,fe),s(fe,$a),s(he,ka),s(f,Da),s(f,ge),s(ge,de),s(de,Pa),s(ge,xa),s(f,Ha),s(f,_e),s(_e,me),s(me,Ra),s(_e,Ca),s(f,Sa),s(f,ve),s(ve,be),s(be,Ia),s(ve,Ta),s(f,Na),s(f,we),s(we,qe),s(qe,Ma),s(we,Wa),c(e,gs,o),c(e,O,o),s(O,La),s(O,Ee),s(Ee,Oa),s(O,Va),c(e,ds,o),c(e,k,o),s(k,V),s(V,Fe),R(ee,Fe,null),s(k,Ua),s(k,Ye),s(Ye,Fa),c(e,_s,o),c(e,je,o),s(je,Be),s(Be,Ya),c(e,ms,o),c(e,D,o),s(D,U),s(U,ze),R(se,ze,null),s(D,Ba),s(D,Ge),s(Ge,za),c(e,vs,o),c(e,w,o),s(w,Ga),s(w,ye),s(ye,Ja),s(w,Ka),s(w,Ae),s(Ae,Qa),s(w,Xa),bs=!0},p:Zt,i(e){bs||(C(Y.$$.fragment,e),C(z.$$.fragment,e),C(G.$$.fragment,e),C(J.$$.fragment,e),C(K.$$.fragment,e),C(Q.$$.fragment,e),C(Z.$$.fragment,e),C(ee.$$.fragment,e),C(se.$$.fragment,e),bs=!0)},o(e){S(Y.$$.fragment,e),S(z.$$.fragment,e),S(G.$$.fragment,e),S(J.$$.fragment,e),S(K.$$.fragment,e),S(Q.$$.fragment,e),S(Z.$$.fragment,e),S(ee.$$.fragment,e),S(se.$$.fragment,e),bs=!1},d(e){a(E),e&&a(Qe),e&&a(j),I(Y),e&&a(Xe),e&&a(_),e&&a(Ze),e&&a(y),I(z),e&&a(es),e&&a(M),e&&a(ss),I(G,e),e&&a(as),e&&a(A),e&&a(ts),I(J,e),e&&a(is),e&&a(d),e&&a(ns),I(K,e),e&&a(ls),e&&a(g),e&&a(rs),e&&a(m),e&&a(os),e&&a($),I(Q),e&&a(us),e&&a(v),e&&a(cs),e&&a(b),e&&a(ps),I(Z,e),e&&a(hs),e&&a(L),e&&a(fs),e&&a(f),e&&a(gs),e&&a(O),e&&a(ds),e&&a(k),I(ee),e&&a(_s),e&&a(je),e&&a(ms),e&&a(D),I(se),e&&a(vs),e&&a(w)}}}const ai={local:"interact-with-discussions-and-pull-requests",sections:[{local:"retrieve-discussions-and-pull-requests-from-the-hub",title:"Retrieve Discussions and Pull Requests from the Hub"},{local:"create-and-edit-a-discussion-or-pull-request-programatically",title:"Create and edit a Discussion or Pull Request programatically"},{local:"push-changes-to-a-pull-request",title:"Push changes to a Pull Request"},{local:"see-also",title:"See also"}],title:"Interact with discussions and pull requests"};function ti(it){return ei(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ri extends Jt{constructor(E){super();Kt(this,E,ti,si,Qt,{})}}export{ri as default,ai as metadata};
