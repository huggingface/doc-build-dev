import{S as sl,i as al,s as tl,e as l,k as h,w as D,t,M as il,c as n,d as a,m as p,a as r,x as $,h as i,b as u,G as s,g as c,y as k,L as ll,q as P,o as H,B as R,v as nl}from"../chunks/vendor-hf-doc-builder.js";import{I as gs}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as ms}from"../chunks/CodeBlock-hf-doc-builder.js";function rl(Jt){let x,vs,T,M,Fe,K,Xs,Ye,Zs,bs,w,ea,Be,sa,aa,Q,ta,ia,Es,C,N,ze,X,la,Ge,na,ws,W,ra,Je,oa,ua,qs,Z,ys,E,Ke,ca,ha,ee,pa,fa,ce,_a,da,As,se,js,g,ga,he,ma,va,Qe,ba,Ea,pe,wa,qa,Ds,ae,$s,d,fe,ya,Aa,_e,ja,Da,de,$a,ka,Xe,Pa,Ha,ks,q,Ra,Ze,xa,Ta,es,Ca,Ia,Ps,I,V,ss,te,Sa,as,La,Hs,y,Oa,ge,Ma,Na,ie,Wa,Va,Rs,f,Ua,me,Fa,Ya,ve,Ba,za,ts,Ga,Ja,is,Ka,Qa,be,Xa,Za,xs,m,ls,Ee,et,st,ns,we,at,tt,rs,qe,it,lt,os,us,nt,Ts,le,Cs,v,rt,ye,ot,ut,Ae,ct,ht,cs,pt,ft,Is,ne,Ss,U,_t,je,dt,gt,Ls,_,De,$e,mt,vt,bt,ke,Pe,Et,wt,qt,He,Re,yt,At,jt,xe,Te,Dt,$t,kt,Ce,Ie,Pt,Ht,Os,F,Rt,Se,xt,Tt,Ms,S,Y,hs,re,Ct,ps,It,Ns,Le,fs,St,Ws,L,B,_s,oe,Lt,ds,Ot,Vs,A,Mt,Oe,Nt,Wt,Me,Vt,Ut,Us;return K=new gs({}),X=new gs({}),Z=new ms({props:{code:`from huggingface_hub import get_repo_discussions
for discussion in get_repo_discussions(repo_id="bigscience/bloom-1b3"):
    print(f"{discussion.num} - {discussion.title}, pr: {discussion.is_pull_request}")
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> discussion <span class="hljs-keyword">in</span> get_repo_discussions(repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{discussion.num}</span> - <span class="hljs-subst">{discussion.title}</span>, pr: <span class="hljs-subst">{discussion.is_pull_request}</span>&quot;</span>)

<span class="hljs-comment"># 11 - Add Flax weights, pr: True</span>
<span class="hljs-comment"># 10 - Update README.md, pr: True</span>
<span class="hljs-comment"># 9 - Training languages in the model card, pr: True</span>
<span class="hljs-comment"># 8 - Update tokenizer_config.json, pr: True</span>
<span class="hljs-comment"># 7 - Slurm training script, pr: False</span>
[...]`}}),se=new ms({props:{code:`from huggingface_hub import get_repo_discussions
discussions_list = list(get_repo_discussions(repo_id="bert-base-uncased"))`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span>discussions_list = <span class="hljs-built_in">list</span>(get_repo_discussions(repo_id=<span class="hljs-string">&quot;bert-base-uncased&quot;</span>))`}}),ae=new ms({props:{code:`from huggingface_hub import get_discussion_details

get_discussion_details(
    repo_id="bigscience/bloom-1b3",
    discussion_num=2
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_discussion_details

<span class="hljs-meta">&gt;&gt;&gt; </span>get_discussion_details(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>,
<span class="hljs-meta">... </span>    discussion_num=<span class="hljs-number">2</span>
<span class="hljs-meta">... </span>)
DiscussionWithDetails(
    num=<span class="hljs-number">2</span>,
    author=<span class="hljs-string">&#x27;cakiki&#x27;</span>,
    title=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>,
    status=<span class="hljs-string">&#x27;open&#x27;</span>,
    is_pull_request=<span class="hljs-literal">True</span>,
    events=[
        DiscussionComment(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;comment&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, ...),
        DiscussionCommit(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;commit&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, summary=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>, oid=<span class="hljs-string">&#x27;1256f9d9a33fa8887e1c1bf0e09b4713da96773a&#x27;</span>, ...),
    ],
    conflicting_files=[],
    target_branch=<span class="hljs-string">&#x27;refs/heads/main&#x27;</span>,
    merge_commit_oid=<span class="hljs-literal">None</span>,
    diff=<span class="hljs-string">&#x27;diff --git a/README.md b/README.md\\nindex a6ae3b9294edf8d0eda0d67c7780a10241242a7e..3a1814f212bc3f0d3cc8f74bdbd316de4ae7b9e3 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -132,7 +132,7 [...]&#x27;</span>,
)`}}),te=new gs({}),le=new ms({props:{code:`from huggingface_hub import metadata_update

metadata_update(
    repo_id="username/repo_name",
    metadata={"tags": ["laguage:en", "awesome-model"]},
    create_pr=True,
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> metadata_update

<span class="hljs-meta">&gt;&gt;&gt; </span>metadata_update(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo_name&quot;</span>,
<span class="hljs-meta">... </span>    metadata={<span class="hljs-string">&quot;tags&quot;</span>: [<span class="hljs-string">&quot;laguage:en&quot;</span>, <span class="hljs-string">&quot;awesome-model&quot;</span>]},
<span class="hljs-meta">... </span>    create_pr=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>)`}}),ne=new ms({props:{code:`from huggingface_hub import create_discussion, create_pull_request

create_discussion(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)

create_pull_request(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_discussion, create_pull_request

<span class="hljs-meta">&gt;&gt;&gt; </span>create_discussion(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(...)

<span class="hljs-meta">&gt;&gt;&gt; </span>create_pull_request(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(..., is_pull_request=<span class="hljs-literal">True</span>)`}}),re=new gs({}),oe=new gs({}),{c(){x=l("meta"),vs=h(),T=l("h1"),M=l("a"),Fe=l("span"),D(K.$$.fragment),Xs=h(),Ye=l("span"),Zs=t("Interact with Discussions and Pull Requests"),bs=h(),w=l("p"),ea=t("The "),Be=l("code"),sa=t("huggingface_hub"),aa=t(` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=l("a"),ta=t("the dedicated documentation page"),ia=t(`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Es=h(),C=l("h2"),N=l("a"),ze=l("span"),D(X.$$.fragment),la=h(),Ge=l("span"),na=t("Retrieve Discussions and Pull Requests from the Hub"),ws=h(),W=l("p"),ra=t("The "),Je=l("code"),oa=t("HfApi"),ua=t(" class allows you to retrieve Discussions and Pull Requests on a given repo:"),qs=h(),D(Z.$$.fragment),ys=h(),E=l("p"),Ke=l("code"),ca=t("HfApi.get_repo_discussions"),ha=t(" returns a "),ee=l("a"),pa=t("generator"),fa=t(` that yields
`),ce=l("a"),_a=t("Discussion"),da=t(" objects. To get all the Discussions in a single list, run:"),As=h(),D(se.$$.fragment),js=h(),g=l("p"),ga=t("The "),he=l("a"),ma=t("Discussion"),va=t(" object returned by "),Qe=l("code"),ba=t("HfApi.get_repo_discussion"),Ea=t(` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),pe=l("a"),wa=t("HfApi.get_discussion_details()"),qa=t(":"),Ds=h(),D(ae.$$.fragment),$s=h(),d=l("p"),fe=l("a"),ya=t("HfApi.get_discussion_details()"),Aa=t(" returns a "),_e=l("a"),ja=t("DiscussionWithDetails"),Da=t(" object, which is a subclass of "),de=l("a"),$a=t("Discussion"),ka=t(`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Xe=l("code"),Pa=t("DiscussionWithDetails.events"),Ha=t("."),ks=h(),q=l("p"),Ra=t("In case of a Pull Request, you can retrieve the raw git diff with "),Ze=l("code"),xa=t("DiscussionWithDetails.diff"),Ta=t(`. All the commits of the
Pull Request are listed in `),es=l("code"),Ca=t("DiscussionWithDetails.events"),Ia=t("."),Ps=h(),I=l("h2"),V=l("a"),ss=l("span"),D(te.$$.fragment),Sa=h(),as=l("span"),La=t("Create and edit a Discussion or Pull Request programatically"),Hs=h(),y=l("p"),Oa=t("The "),ge=l("a"),Ma=t("HfApi"),Na=t(` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=l("a"),Wa=t("access token"),Va=t(` to create and edit Discussions
or Pull Requests.`),Rs=h(),f=l("p"),Ua=t("The simplest way to propose changes on a repo on the Hub is via the "),me=l("a"),Fa=t("create_commit()"),Ya=t(" API. "),ve=l("a"),Ba=t("create_commit()"),za=t(`: just
set the `),ts=l("code"),Ga=t("create_pr"),Ja=t(" parameter to "),is=l("code"),Ka=t("True"),Qa=t(". This parameter is also available on other methods that wrap "),be=l("a"),Xa=t("create_commit()"),Za=t(":"),xs=h(),m=l("ul"),ls=l("li"),Ee=l("a"),et=t("upload_file()"),st=h(),ns=l("li"),we=l("a"),at=t("upload_folder()"),tt=h(),rs=l("li"),qe=l("a"),it=t("delete_file()"),lt=h(),os=l("li"),us=l("code"),nt=t("metadata_update()"),Ts=h(),D(le.$$.fragment),Cs=h(),v=l("p"),rt=t("You can also use "),ye=l("a"),ot=t("HfApi.create_discussion()"),ut=t(" (respectively "),Ae=l("a"),ct=t("HfApi.create_pull_request()"),ht=t(`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),cs=l("code"),pt=t('"draft"'),ft=t(" mode."),Is=h(),D(ne.$$.fragment),Ss=h(),U=l("p"),_t=t("Managing Pull Requests and Discussions can be done entirely with the "),je=l("a"),dt=t("HfApi"),gt=t(" class. For example:"),Ls=h(),_=l("ul"),De=l("li"),$e=l("a"),mt=t("comment_discussion()"),vt=t(" to add comments"),bt=h(),ke=l("li"),Pe=l("a"),Et=t("edit_discussion_comment()"),wt=t(" to edit comments"),qt=h(),He=l("li"),Re=l("a"),yt=t("rename_discussion()"),At=t(" to rename a Discussion or Pull Request"),jt=h(),xe=l("li"),Te=l("a"),Dt=t("change_discussion_status()"),$t=t(" to open or close a Discussion / Pull Request"),kt=h(),Ce=l("li"),Ie=l("a"),Pt=t("merge_pull_request()"),Ht=t(" to merge a Pull Request"),Os=h(),F=l("p"),Rt=t("Visit the "),Se=l("a"),xt=t("HfApi"),Tt=t(" documentation page for an exhaustive reference of all available methods."),Ms=h(),S=l("h2"),Y=l("a"),hs=l("span"),D(re.$$.fragment),Ct=h(),ps=l("span"),It=t("Push changes to a Pull Request"),Ns=h(),Le=l("p"),fs=l("em"),St=t("Coming soon !"),Ws=h(),L=l("h2"),B=l("a"),_s=l("span"),D(oe.$$.fragment),Lt=h(),ds=l("span"),Ot=t("See also"),Vs=h(),A=l("p"),Mt=t("For a more detailed reference, visit the "),Oe=l("a"),Nt=t("community"),Wt=t(" and the "),Me=l("a"),Vt=t("hf_api"),Ut=t(" documentation page."),this.h()},l(e){const o=il('[data-svelte="svelte-1phssyn"]',document.head);x=n(o,"META",{name:!0,content:!0}),o.forEach(a),vs=p(e),T=n(e,"H1",{class:!0});var Fs=r(T);M=n(Fs,"A",{id:!0,class:!0,href:!0});var Kt=r(M);Fe=n(Kt,"SPAN",{});var Qt=r(Fe);$(K.$$.fragment,Qt),Qt.forEach(a),Kt.forEach(a),Xs=p(Fs),Ye=n(Fs,"SPAN",{});var Xt=r(Ye);Zs=i(Xt,"Interact with Discussions and Pull Requests"),Xt.forEach(a),Fs.forEach(a),bs=p(e),w=n(e,"P",{});var Ne=r(w);ea=i(Ne,"The "),Be=n(Ne,"CODE",{});var Zt=r(Be);sa=i(Zt,"huggingface_hub"),Zt.forEach(a),aa=i(Ne,` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=n(Ne,"A",{href:!0,rel:!0});var ei=r(Q);ta=i(ei,"the dedicated documentation page"),ei.forEach(a),ia=i(Ne,`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Ne.forEach(a),Es=p(e),C=n(e,"H2",{class:!0});var Ys=r(C);N=n(Ys,"A",{id:!0,class:!0,href:!0});var si=r(N);ze=n(si,"SPAN",{});var ai=r(ze);$(X.$$.fragment,ai),ai.forEach(a),si.forEach(a),la=p(Ys),Ge=n(Ys,"SPAN",{});var ti=r(Ge);na=i(ti,"Retrieve Discussions and Pull Requests from the Hub"),ti.forEach(a),Ys.forEach(a),ws=p(e),W=n(e,"P",{});var Bs=r(W);ra=i(Bs,"The "),Je=n(Bs,"CODE",{});var ii=r(Je);oa=i(ii,"HfApi"),ii.forEach(a),ua=i(Bs," class allows you to retrieve Discussions and Pull Requests on a given repo:"),Bs.forEach(a),qs=p(e),$(Z.$$.fragment,e),ys=p(e),E=n(e,"P",{});var ue=r(E);Ke=n(ue,"CODE",{});var li=r(Ke);ca=i(li,"HfApi.get_repo_discussions"),li.forEach(a),ha=i(ue," returns a "),ee=n(ue,"A",{href:!0,rel:!0});var ni=r(ee);pa=i(ni,"generator"),ni.forEach(a),fa=i(ue,` that yields
`),ce=n(ue,"A",{href:!0});var ri=r(ce);_a=i(ri,"Discussion"),ri.forEach(a),da=i(ue," objects. To get all the Discussions in a single list, run:"),ue.forEach(a),As=p(e),$(se.$$.fragment,e),js=p(e),g=n(e,"P",{});var z=r(g);ga=i(z,"The "),he=n(z,"A",{href:!0});var oi=r(he);ma=i(oi,"Discussion"),oi.forEach(a),va=i(z," object returned by "),Qe=n(z,"CODE",{});var ui=r(Qe);ba=i(ui,"HfApi.get_repo_discussion"),ui.forEach(a),Ea=i(z,` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),pe=n(z,"A",{href:!0});var ci=r(pe);wa=i(ci,"HfApi.get_discussion_details()"),ci.forEach(a),qa=i(z,":"),z.forEach(a),Ds=p(e),$(ae.$$.fragment,e),$s=p(e),d=n(e,"P",{});var O=r(d);fe=n(O,"A",{href:!0});var hi=r(fe);ya=i(hi,"HfApi.get_discussion_details()"),hi.forEach(a),Aa=i(O," returns a "),_e=n(O,"A",{href:!0});var pi=r(_e);ja=i(pi,"DiscussionWithDetails"),pi.forEach(a),Da=i(O," object, which is a subclass of "),de=n(O,"A",{href:!0});var fi=r(de);$a=i(fi,"Discussion"),fi.forEach(a),ka=i(O,`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Xe=n(O,"CODE",{});var _i=r(Xe);Pa=i(_i,"DiscussionWithDetails.events"),_i.forEach(a),Ha=i(O,"."),O.forEach(a),ks=p(e),q=n(e,"P",{});var We=r(q);Ra=i(We,"In case of a Pull Request, you can retrieve the raw git diff with "),Ze=n(We,"CODE",{});var di=r(Ze);xa=i(di,"DiscussionWithDetails.diff"),di.forEach(a),Ta=i(We,`. All the commits of the
Pull Request are listed in `),es=n(We,"CODE",{});var gi=r(es);Ca=i(gi,"DiscussionWithDetails.events"),gi.forEach(a),Ia=i(We,"."),We.forEach(a),Ps=p(e),I=n(e,"H2",{class:!0});var zs=r(I);V=n(zs,"A",{id:!0,class:!0,href:!0});var mi=r(V);ss=n(mi,"SPAN",{});var vi=r(ss);$(te.$$.fragment,vi),vi.forEach(a),mi.forEach(a),Sa=p(zs),as=n(zs,"SPAN",{});var bi=r(as);La=i(bi,"Create and edit a Discussion or Pull Request programatically"),bi.forEach(a),zs.forEach(a),Hs=p(e),y=n(e,"P",{});var Ve=r(y);Oa=i(Ve,"The "),ge=n(Ve,"A",{href:!0});var Ei=r(ge);Ma=i(Ei,"HfApi"),Ei.forEach(a),Na=i(Ve,` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=n(Ve,"A",{href:!0,rel:!0});var wi=r(ie);Wa=i(wi,"access token"),wi.forEach(a),Va=i(Ve,` to create and edit Discussions
or Pull Requests.`),Ve.forEach(a),Rs=p(e),f=n(e,"P",{});var b=r(f);Ua=i(b,"The simplest way to propose changes on a repo on the Hub is via the "),me=n(b,"A",{href:!0});var qi=r(me);Fa=i(qi,"create_commit()"),qi.forEach(a),Ya=i(b," API. "),ve=n(b,"A",{href:!0});var yi=r(ve);Ba=i(yi,"create_commit()"),yi.forEach(a),za=i(b,`: just
set the `),ts=n(b,"CODE",{});var Ai=r(ts);Ga=i(Ai,"create_pr"),Ai.forEach(a),Ja=i(b," parameter to "),is=n(b,"CODE",{});var ji=r(is);Ka=i(ji,"True"),ji.forEach(a),Qa=i(b,". This parameter is also available on other methods that wrap "),be=n(b,"A",{href:!0});var Di=r(be);Xa=i(Di,"create_commit()"),Di.forEach(a),Za=i(b,":"),b.forEach(a),xs=p(e),m=n(e,"UL",{});var G=r(m);ls=n(G,"LI",{});var $i=r(ls);Ee=n($i,"A",{href:!0});var ki=r(Ee);et=i(ki,"upload_file()"),ki.forEach(a),$i.forEach(a),st=p(G),ns=n(G,"LI",{});var Pi=r(ns);we=n(Pi,"A",{href:!0});var Hi=r(we);at=i(Hi,"upload_folder()"),Hi.forEach(a),Pi.forEach(a),tt=p(G),rs=n(G,"LI",{});var Ri=r(rs);qe=n(Ri,"A",{href:!0});var xi=r(qe);it=i(xi,"delete_file()"),xi.forEach(a),Ri.forEach(a),lt=p(G),os=n(G,"LI",{});var Ti=r(os);us=n(Ti,"CODE",{});var Ci=r(us);nt=i(Ci,"metadata_update()"),Ci.forEach(a),Ti.forEach(a),G.forEach(a),Ts=p(e),$(le.$$.fragment,e),Cs=p(e),v=n(e,"P",{});var J=r(v);rt=i(J,"You can also use "),ye=n(J,"A",{href:!0});var Ii=r(ye);ot=i(Ii,"HfApi.create_discussion()"),Ii.forEach(a),ut=i(J," (respectively "),Ae=n(J,"A",{href:!0});var Si=r(Ae);ct=i(Si,"HfApi.create_pull_request()"),Si.forEach(a),ht=i(J,`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),cs=n(J,"CODE",{});var Li=r(cs);pt=i(Li,'"draft"'),Li.forEach(a),ft=i(J," mode."),J.forEach(a),Is=p(e),$(ne.$$.fragment,e),Ss=p(e),U=n(e,"P",{});var Gs=r(U);_t=i(Gs,"Managing Pull Requests and Discussions can be done entirely with the "),je=n(Gs,"A",{href:!0});var Oi=r(je);dt=i(Oi,"HfApi"),Oi.forEach(a),gt=i(Gs," class. For example:"),Gs.forEach(a),Ls=p(e),_=n(e,"UL",{});var j=r(_);De=n(j,"LI",{});var Ft=r(De);$e=n(Ft,"A",{href:!0});var Mi=r($e);mt=i(Mi,"comment_discussion()"),Mi.forEach(a),vt=i(Ft," to add comments"),Ft.forEach(a),bt=p(j),ke=n(j,"LI",{});var Yt=r(ke);Pe=n(Yt,"A",{href:!0});var Ni=r(Pe);Et=i(Ni,"edit_discussion_comment()"),Ni.forEach(a),wt=i(Yt," to edit comments"),Yt.forEach(a),qt=p(j),He=n(j,"LI",{});var Bt=r(He);Re=n(Bt,"A",{href:!0});var Wi=r(Re);yt=i(Wi,"rename_discussion()"),Wi.forEach(a),At=i(Bt," to rename a Discussion or Pull Request"),Bt.forEach(a),jt=p(j),xe=n(j,"LI",{});var zt=r(xe);Te=n(zt,"A",{href:!0});var Vi=r(Te);Dt=i(Vi,"change_discussion_status()"),Vi.forEach(a),$t=i(zt," to open or close a Discussion / Pull Request"),zt.forEach(a),kt=p(j),Ce=n(j,"LI",{});var Gt=r(Ce);Ie=n(Gt,"A",{href:!0});var Ui=r(Ie);Pt=i(Ui,"merge_pull_request()"),Ui.forEach(a),Ht=i(Gt," to merge a Pull Request"),Gt.forEach(a),j.forEach(a),Os=p(e),F=n(e,"P",{});var Js=r(F);Rt=i(Js,"Visit the "),Se=n(Js,"A",{href:!0});var Fi=r(Se);xt=i(Fi,"HfApi"),Fi.forEach(a),Tt=i(Js," documentation page for an exhaustive reference of all available methods."),Js.forEach(a),Ms=p(e),S=n(e,"H2",{class:!0});var Ks=r(S);Y=n(Ks,"A",{id:!0,class:!0,href:!0});var Yi=r(Y);hs=n(Yi,"SPAN",{});var Bi=r(hs);$(re.$$.fragment,Bi),Bi.forEach(a),Yi.forEach(a),Ct=p(Ks),ps=n(Ks,"SPAN",{});var zi=r(ps);It=i(zi,"Push changes to a Pull Request"),zi.forEach(a),Ks.forEach(a),Ns=p(e),Le=n(e,"P",{});var Gi=r(Le);fs=n(Gi,"EM",{});var Ji=r(fs);St=i(Ji,"Coming soon !"),Ji.forEach(a),Gi.forEach(a),Ws=p(e),L=n(e,"H2",{class:!0});var Qs=r(L);B=n(Qs,"A",{id:!0,class:!0,href:!0});var Ki=r(B);_s=n(Ki,"SPAN",{});var Qi=r(_s);$(oe.$$.fragment,Qi),Qi.forEach(a),Ki.forEach(a),Lt=p(Qs),ds=n(Qs,"SPAN",{});var Xi=r(ds);Ot=i(Xi,"See also"),Xi.forEach(a),Qs.forEach(a),Vs=p(e),A=n(e,"P",{});var Ue=r(A);Mt=i(Ue,"For a more detailed reference, visit the "),Oe=n(Ue,"A",{href:!0});var Zi=r(Oe);Nt=i(Zi,"community"),Zi.forEach(a),Wt=i(Ue," and the "),Me=n(Ue,"A",{href:!0});var el=r(Me);Vt=i(el,"hf_api"),el.forEach(a),Ut=i(Ue," documentation page."),Ue.forEach(a),this.h()},h(){u(x,"name","hf:doc:metadata"),u(x,"content",JSON.stringify(ol)),u(M,"id","interact-with-discussions-and-pull-requests"),u(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(M,"href","#interact-with-discussions-and-pull-requests"),u(T,"class","relative group"),u(Q,"href","https://huggingface.co/docs/hub/repositories-pull-requests-discussions"),u(Q,"rel","nofollow"),u(N,"id","retrieve-discussions-and-pull-requests-from-the-hub"),u(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(N,"href","#retrieve-discussions-and-pull-requests-from-the-hub"),u(C,"class","relative group"),u(ee,"href","https://docs.python.org/3.7/howto/functional.html#generators"),u(ee,"rel","nofollow"),u(ce,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),u(he,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),u(pe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(fe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(_e,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionWithDetails"),u(de,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),u(V,"id","create-and-edit-a-discussion-or-pull-request-programatically"),u(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(V,"href","#create-and-edit-a-discussion-or-pull-request-programatically"),u(I,"class","relative group"),u(ge,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(ie,"href","https://huggingface.co/docs/hub/security-tokens"),u(ie,"rel","nofollow"),u(me,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(ve,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(be,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(Ee,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file"),u(we,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder"),u(qe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.delete_file"),u(ye,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion"),u(Ae,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_pull_request"),u(je,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u($e,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.comment_discussion"),u(Pe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.edit_discussion_comment"),u(Re,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.rename_discussion"),u(Te,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.change_discussion_status"),u(Ie,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.merge_pull_request"),u(Se,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(Y,"id","push-changes-to-a-pull-request"),u(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Y,"href","#push-changes-to-a-pull-request"),u(S,"class","relative group"),u(B,"id","see-also"),u(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(B,"href","#see-also"),u(L,"class","relative group"),u(Oe,"href","/source/package_reference/community"),u(Me,"href","/source/package_reference/hf_api")},m(e,o){s(document.head,x),c(e,vs,o),c(e,T,o),s(T,M),s(M,Fe),k(K,Fe,null),s(T,Xs),s(T,Ye),s(Ye,Zs),c(e,bs,o),c(e,w,o),s(w,ea),s(w,Be),s(Be,sa),s(w,aa),s(w,Q),s(Q,ta),s(w,ia),c(e,Es,o),c(e,C,o),s(C,N),s(N,ze),k(X,ze,null),s(C,la),s(C,Ge),s(Ge,na),c(e,ws,o),c(e,W,o),s(W,ra),s(W,Je),s(Je,oa),s(W,ua),c(e,qs,o),k(Z,e,o),c(e,ys,o),c(e,E,o),s(E,Ke),s(Ke,ca),s(E,ha),s(E,ee),s(ee,pa),s(E,fa),s(E,ce),s(ce,_a),s(E,da),c(e,As,o),k(se,e,o),c(e,js,o),c(e,g,o),s(g,ga),s(g,he),s(he,ma),s(g,va),s(g,Qe),s(Qe,ba),s(g,Ea),s(g,pe),s(pe,wa),s(g,qa),c(e,Ds,o),k(ae,e,o),c(e,$s,o),c(e,d,o),s(d,fe),s(fe,ya),s(d,Aa),s(d,_e),s(_e,ja),s(d,Da),s(d,de),s(de,$a),s(d,ka),s(d,Xe),s(Xe,Pa),s(d,Ha),c(e,ks,o),c(e,q,o),s(q,Ra),s(q,Ze),s(Ze,xa),s(q,Ta),s(q,es),s(es,Ca),s(q,Ia),c(e,Ps,o),c(e,I,o),s(I,V),s(V,ss),k(te,ss,null),s(I,Sa),s(I,as),s(as,La),c(e,Hs,o),c(e,y,o),s(y,Oa),s(y,ge),s(ge,Ma),s(y,Na),s(y,ie),s(ie,Wa),s(y,Va),c(e,Rs,o),c(e,f,o),s(f,Ua),s(f,me),s(me,Fa),s(f,Ya),s(f,ve),s(ve,Ba),s(f,za),s(f,ts),s(ts,Ga),s(f,Ja),s(f,is),s(is,Ka),s(f,Qa),s(f,be),s(be,Xa),s(f,Za),c(e,xs,o),c(e,m,o),s(m,ls),s(ls,Ee),s(Ee,et),s(m,st),s(m,ns),s(ns,we),s(we,at),s(m,tt),s(m,rs),s(rs,qe),s(qe,it),s(m,lt),s(m,os),s(os,us),s(us,nt),c(e,Ts,o),k(le,e,o),c(e,Cs,o),c(e,v,o),s(v,rt),s(v,ye),s(ye,ot),s(v,ut),s(v,Ae),s(Ae,ct),s(v,ht),s(v,cs),s(cs,pt),s(v,ft),c(e,Is,o),k(ne,e,o),c(e,Ss,o),c(e,U,o),s(U,_t),s(U,je),s(je,dt),s(U,gt),c(e,Ls,o),c(e,_,o),s(_,De),s(De,$e),s($e,mt),s(De,vt),s(_,bt),s(_,ke),s(ke,Pe),s(Pe,Et),s(ke,wt),s(_,qt),s(_,He),s(He,Re),s(Re,yt),s(He,At),s(_,jt),s(_,xe),s(xe,Te),s(Te,Dt),s(xe,$t),s(_,kt),s(_,Ce),s(Ce,Ie),s(Ie,Pt),s(Ce,Ht),c(e,Os,o),c(e,F,o),s(F,Rt),s(F,Se),s(Se,xt),s(F,Tt),c(e,Ms,o),c(e,S,o),s(S,Y),s(Y,hs),k(re,hs,null),s(S,Ct),s(S,ps),s(ps,It),c(e,Ns,o),c(e,Le,o),s(Le,fs),s(fs,St),c(e,Ws,o),c(e,L,o),s(L,B),s(B,_s),k(oe,_s,null),s(L,Lt),s(L,ds),s(ds,Ot),c(e,Vs,o),c(e,A,o),s(A,Mt),s(A,Oe),s(Oe,Nt),s(A,Wt),s(A,Me),s(Me,Vt),s(A,Ut),Us=!0},p:ll,i(e){Us||(P(K.$$.fragment,e),P(X.$$.fragment,e),P(Z.$$.fragment,e),P(se.$$.fragment,e),P(ae.$$.fragment,e),P(te.$$.fragment,e),P(le.$$.fragment,e),P(ne.$$.fragment,e),P(re.$$.fragment,e),P(oe.$$.fragment,e),Us=!0)},o(e){H(K.$$.fragment,e),H(X.$$.fragment,e),H(Z.$$.fragment,e),H(se.$$.fragment,e),H(ae.$$.fragment,e),H(te.$$.fragment,e),H(le.$$.fragment,e),H(ne.$$.fragment,e),H(re.$$.fragment,e),H(oe.$$.fragment,e),Us=!1},d(e){a(x),e&&a(vs),e&&a(T),R(K),e&&a(bs),e&&a(w),e&&a(Es),e&&a(C),R(X),e&&a(ws),e&&a(W),e&&a(qs),R(Z,e),e&&a(ys),e&&a(E),e&&a(As),R(se,e),e&&a(js),e&&a(g),e&&a(Ds),R(ae,e),e&&a($s),e&&a(d),e&&a(ks),e&&a(q),e&&a(Ps),e&&a(I),R(te),e&&a(Hs),e&&a(y),e&&a(Rs),e&&a(f),e&&a(xs),e&&a(m),e&&a(Ts),R(le,e),e&&a(Cs),e&&a(v),e&&a(Is),R(ne,e),e&&a(Ss),e&&a(U),e&&a(Ls),e&&a(_),e&&a(Os),e&&a(F),e&&a(Ms),e&&a(S),R(re),e&&a(Ns),e&&a(Le),e&&a(Ws),e&&a(L),R(oe),e&&a(Vs),e&&a(A)}}}const ol={local:"interact-with-discussions-and-pull-requests",sections:[{local:"retrieve-discussions-and-pull-requests-from-the-hub",title:"Retrieve Discussions and Pull Requests from the Hub"},{local:"create-and-edit-a-discussion-or-pull-request-programatically",title:"Create and edit a Discussion or Pull Request programatically"},{local:"push-changes-to-a-pull-request",title:"Push changes to a Pull Request"},{local:"see-also",title:"See also"}],title:"Interact with Discussions and Pull Requests "};function ul(Jt){return nl(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class fl extends sl{constructor(x){super();al(this,x,ul,rl,tl,{})}}export{fl as default,ol as metadata};
