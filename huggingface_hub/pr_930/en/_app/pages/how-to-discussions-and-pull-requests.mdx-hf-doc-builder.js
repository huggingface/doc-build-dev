import{S as Qi,i as Xi,s as Zi,e as n,k as p,w as A,t,M as en,c as l,d as a,m as h,a as o,x as D,h as i,b as u,G as s,g as c,y as $,L as sn,q as k,o as P,B as H,v as an}from"../chunks/vendor-hf-doc-builder.js";import{I as gs}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as ds}from"../chunks/CodeBlock-hf-doc-builder.js";function tn(Bt){let x,ms,R,N,Ve,K,Qs,Ue,Xs,vs,w,Zs,Ye,ea,sa,Q,aa,ta,bs,C,M,Fe,X,ia,Be,na,ws,W,la,ze,oa,ra,Es,Z,qs,T,Ge,ua,ca,re,pa,ha,js,ee,ys,d,fa,ue,_a,ga,Je,da,ma,ce,va,ba,As,se,Ds,g,pe,wa,Ea,he,qa,ja,fe,ya,Aa,Ke,Da,$a,$s,E,ka,Qe,Pa,Ha,Xe,xa,Ra,ks,I,V,Ze,ae,Ca,es,Ta,Ps,q,Ia,_e,Sa,La,te,Oa,Na,Hs,f,Ma,ge,Wa,Va,de,Ua,Ya,ss,Fa,Ba,as,za,Ga,me,Ja,Ka,xs,m,ts,ve,Qa,Xa,is,be,Za,et,ns,we,st,at,ls,os,tt,Rs,ie,Cs,v,it,Ee,nt,lt,qe,ot,rt,rs,ut,ct,Ts,ne,Is,U,pt,je,ht,ft,Ss,_,ye,Ae,_t,gt,dt,De,$e,mt,vt,bt,ke,Pe,wt,Et,qt,He,xe,jt,yt,At,Re,Ce,Dt,$t,Ls,Y,kt,Te,Pt,Ht,Os,S,F,us,le,xt,cs,Rt,Ns,Ie,ps,Ct,Ms,L,B,hs,oe,Tt,fs,It,Ws,j,St,Se,Lt,Ot,Le,Nt,Mt,Vs;return K=new gs({}),X=new gs({}),Z=new ds({props:{code:`from huggingface_hub import get_repo_discussions

get_repo_discussions(repo_id="bigscience/bloom-1b3")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions

<span class="hljs-meta">&gt;&gt;&gt; </span>get_repo_discussions(repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>)
Pagination(
    page=[
        Discussion(
            num=<span class="hljs-number">8</span>,
            author=<span class="hljs-string">&#x27;ybelkada&#x27;</span>,
            title=<span class="hljs-string">&#x27;Update tokenizer_config.json&#x27;</span>,
            status=<span class="hljs-string">&#x27;merged&#x27;</span>,
            is_pull_request=<span class="hljs-literal">True</span>,
            ...
        ),
        Discussion(
            num=<span class="hljs-number">7</span>,
            author=<span class="hljs-string">&#x27;malteos&#x27;</span>,
            title=<span class="hljs-string">&#x27;Slurm training script&#x27;</span>,
            status=<span class="hljs-string">&#x27;closed&#x27;</span>,
            is_pull_request=<span class="hljs-literal">False</span>,
            ...
        ),
        ...
    ],
    total=<span class="hljs-number">8</span>,
    page_num=<span class="hljs-number">0</span>,
    next_page=<span class="hljs-literal">None</span>,
)`}}),ee=new ds({props:{code:`from huggingface_hub import get_repo_discussions

pagination = get_repo_discussions(repo_id="dalle-mini/dalle-mini")
all_discussions = pagination.page
while pagination.has_next:
    pagination = pagination.next_page()
    all_discussions = all_discussions + pagination.page`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions

<span class="hljs-meta">&gt;&gt;&gt; </span>pagination = get_repo_discussions(repo_id=<span class="hljs-string">&quot;dalle-mini/dalle-mini&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>all_discussions = pagination.page
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">while</span> pagination.has_next:
<span class="hljs-meta">... </span>    pagination = pagination.next_page()
<span class="hljs-meta">... </span>    all_discussions = all_discussions + pagination.page`}}),se=new ds({props:{code:`from huggingface_hub import get_discussion_details

get_discussion_details(
    repo_id="bigscience/bloom-1b3",
    discussion_num=2
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_discussion_details

<span class="hljs-meta">&gt;&gt;&gt; </span>get_discussion_details(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>,
<span class="hljs-meta">... </span>    discussion_num=<span class="hljs-number">2</span>
<span class="hljs-meta">... </span>)
DiscussionWithDetails(
    num=<span class="hljs-number">2</span>,
    author=<span class="hljs-string">&#x27;cakiki&#x27;</span>,
    title=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>,
    status=<span class="hljs-string">&#x27;open&#x27;</span>,
    is_pull_request=<span class="hljs-literal">True</span>,
    events=[
        DiscussionComment(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;comment&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, ...),
        DiscussionCommit(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;commit&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, summary=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>, oid=<span class="hljs-string">&#x27;1256f9d9a33fa8887e1c1bf0e09b4713da96773a&#x27;</span>, ...),
    ],
    conflicting_files=[],
    target_branch=<span class="hljs-string">&#x27;refs/heads/main&#x27;</span>,
    merge_commit_oid=<span class="hljs-literal">None</span>,
    diff=<span class="hljs-string">&#x27;diff --git a/README.md b/README.md\\nindex a6ae3b9294edf8d0eda0d67c7780a10241242a7e..3a1814f212bc3f0d3cc8f74bdbd316de4ae7b9e3 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -132,7 +132,7 [...]&#x27;</span>,
)`}}),ae=new gs({}),ie=new ds({props:{code:`from huggingface_hub import metadata_update

metadata_update(
    repo_id="username/repo_name",
    metadata={"tags": ["laguage:en", "awesome-model"]},
    create_pr=True,
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> metadata_update

<span class="hljs-meta">&gt;&gt;&gt; </span>metadata_update(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo_name&quot;</span>,
<span class="hljs-meta">... </span>    metadata={<span class="hljs-string">&quot;tags&quot;</span>: [<span class="hljs-string">&quot;laguage:en&quot;</span>, <span class="hljs-string">&quot;awesome-model&quot;</span>]},
<span class="hljs-meta">... </span>    create_pr=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>)`}}),ne=new ds({props:{code:`from huggingface_hub import create_discussion, create_pull_request

create_discussion(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)

create_pull_request(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_discussion, create_pull_request

<span class="hljs-meta">&gt;&gt;&gt; </span>create_discussion(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(...)

<span class="hljs-meta">&gt;&gt;&gt; </span>create_pull_request(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(..., is_pull_request=<span class="hljs-literal">True</span>)`}}),le=new gs({}),oe=new gs({}),{c(){x=n("meta"),ms=p(),R=n("h1"),N=n("a"),Ve=n("span"),A(K.$$.fragment),Qs=p(),Ue=n("span"),Xs=t("Interact with Discussions and Pull Requests"),vs=p(),w=n("p"),Zs=t("The "),Ye=n("code"),ea=t("huggingface_hub"),sa=t(` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=n("a"),aa=t("the dedicated documentation page"),ta=t(`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),bs=p(),C=n("h2"),M=n("a"),Fe=n("span"),A(X.$$.fragment),ia=p(),Be=n("span"),na=t("Retrieve Discussions and Pull Requests from the Hub"),ws=p(),W=n("p"),la=t("The "),ze=n("code"),oa=t("HfApi"),ra=t(" class allows you to retrieve Discussions and Pull Requests on a given repo:"),Es=p(),A(Z.$$.fragment),qs=p(),T=n("p"),Ge=n("code"),ua=t("HfApi.get_repo_discussions"),ca=t(" returns a "),re=n("a"),pa=t("Pagination"),ha=t(` object, which is a convenience wrapper to manage pagination
of the results. To get all the Discussions in a single list, run:`),js=p(),A(ee.$$.fragment),ys=p(),d=n("p"),fa=t("The "),ue=n("a"),_a=t("Discussion"),ga=t(" object returned by "),Je=n("code"),da=t("HfApi.get_repo_discussion"),ma=t(` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),ce=n("a"),va=t("HfApi.get_discussion_details()"),ba=t(":"),As=p(),A(se.$$.fragment),Ds=p(),g=n("p"),pe=n("a"),wa=t("HfApi.get_discussion_details()"),Ea=t(" returns a "),he=n("a"),qa=t("DiscussionWithDetails"),ja=t(" object, which is a subclass of "),fe=n("a"),ya=t("Discussion"),Aa=t(`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Ke=n("code"),Da=t("DiscussionWithDetails.events"),$a=t("."),$s=p(),E=n("p"),ka=t("In case of a Pull Request, you can retrieve the raw git diff with "),Qe=n("code"),Pa=t("DiscussionWithDetails.diff"),Ha=t(`. All the commits of the
Pull Request are listed in `),Xe=n("code"),xa=t("DiscussionWithDetails.events"),Ra=t("."),ks=p(),I=n("h2"),V=n("a"),Ze=n("span"),A(ae.$$.fragment),Ca=p(),es=n("span"),Ta=t("Create and edit a Discussion or Pull Request programatically"),Ps=p(),q=n("p"),Ia=t("The "),_e=n("a"),Sa=t("HfApi"),La=t(` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),te=n("a"),Oa=t("access token"),Na=t(` to create and edit Discussions
or Pull Requests.`),Hs=p(),f=n("p"),Ma=t("The simplest way to propose changes on a repo on the Hub is via the "),ge=n("a"),Wa=t("create_commit()"),Va=t(" API. "),de=n("a"),Ua=t("create_commit()"),Ya=t(`: just
set the `),ss=n("code"),Fa=t("create_pr"),Ba=t(" parameter to "),as=n("code"),za=t("True"),Ga=t(". This parameter is also available on other methods that wrap "),me=n("a"),Ja=t("create_commit()"),Ka=t(":"),xs=p(),m=n("ul"),ts=n("li"),ve=n("a"),Qa=t("upload_file()"),Xa=p(),is=n("li"),be=n("a"),Za=t("upload_folder()"),et=p(),ns=n("li"),we=n("a"),st=t("delete_file()"),at=p(),ls=n("li"),os=n("code"),tt=t("metadata_update()"),Rs=p(),A(ie.$$.fragment),Cs=p(),v=n("p"),it=t("You can also use "),Ee=n("a"),nt=t("HfApi.create_discussion()"),lt=t(" (respectively "),qe=n("a"),ot=t("HfApi.create_pull_request()"),rt=t(`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),rs=n("code"),ut=t('"draft"'),ct=t(" mode."),Ts=p(),A(ne.$$.fragment),Is=p(),U=n("p"),pt=t("Managing Pull Requests and Discussions can be done entirely with the "),je=n("a"),ht=t("HfApi"),ft=t(" class. For example:"),Ss=p(),_=n("ul"),ye=n("li"),Ae=n("a"),_t=t("comment_discussion()"),gt=t(" to add comments"),dt=p(),De=n("li"),$e=n("a"),mt=t("edit_discussion_comment()"),vt=t(" to edit comments"),bt=p(),ke=n("li"),Pe=n("a"),wt=t("rename_discussion()"),Et=t(" to rename a Discussion or Pull Request"),qt=p(),He=n("li"),xe=n("a"),jt=t("change_discussion_status()"),yt=t(" to open or close a Discussion / Pull Request"),At=p(),Re=n("li"),Ce=n("a"),Dt=t("merge_pull_request()"),$t=t(" to merge a Pull Request"),Ls=p(),Y=n("p"),kt=t("Visit the "),Te=n("a"),Pt=t("HfApi"),Ht=t(" documentation page for an exhaustive reference of all available methods."),Os=p(),S=n("h2"),F=n("a"),us=n("span"),A(le.$$.fragment),xt=p(),cs=n("span"),Rt=t("Push changes to a Pull Request"),Ns=p(),Ie=n("p"),ps=n("em"),Ct=t("Coming soon !"),Ms=p(),L=n("h2"),B=n("a"),hs=n("span"),A(oe.$$.fragment),Tt=p(),fs=n("span"),It=t("See also"),Ws=p(),j=n("p"),St=t("For a more detailed reference, visit the "),Se=n("a"),Lt=t("community"),Ot=t(" and the "),Le=n("a"),Nt=t("hf_api"),Mt=t(" documentation page."),this.h()},l(e){const r=en('[data-svelte="svelte-1phssyn"]',document.head);x=l(r,"META",{name:!0,content:!0}),r.forEach(a),ms=h(e),R=l(e,"H1",{class:!0});var Us=o(R);N=l(Us,"A",{id:!0,class:!0,href:!0});var zt=o(N);Ve=l(zt,"SPAN",{});var Gt=o(Ve);D(K.$$.fragment,Gt),Gt.forEach(a),zt.forEach(a),Qs=h(Us),Ue=l(Us,"SPAN",{});var Jt=o(Ue);Xs=i(Jt,"Interact with Discussions and Pull Requests"),Jt.forEach(a),Us.forEach(a),vs=h(e),w=l(e,"P",{});var Oe=o(w);Zs=i(Oe,"The "),Ye=l(Oe,"CODE",{});var Kt=o(Ye);ea=i(Kt,"huggingface_hub"),Kt.forEach(a),sa=i(Oe,` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=l(Oe,"A",{href:!0,rel:!0});var Qt=o(Q);aa=i(Qt,"the dedicated documentation page"),Qt.forEach(a),ta=i(Oe,`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Oe.forEach(a),bs=h(e),C=l(e,"H2",{class:!0});var Ys=o(C);M=l(Ys,"A",{id:!0,class:!0,href:!0});var Xt=o(M);Fe=l(Xt,"SPAN",{});var Zt=o(Fe);D(X.$$.fragment,Zt),Zt.forEach(a),Xt.forEach(a),ia=h(Ys),Be=l(Ys,"SPAN",{});var ei=o(Be);na=i(ei,"Retrieve Discussions and Pull Requests from the Hub"),ei.forEach(a),Ys.forEach(a),ws=h(e),W=l(e,"P",{});var Fs=o(W);la=i(Fs,"The "),ze=l(Fs,"CODE",{});var si=o(ze);oa=i(si,"HfApi"),si.forEach(a),ra=i(Fs," class allows you to retrieve Discussions and Pull Requests on a given repo:"),Fs.forEach(a),Es=h(e),D(Z.$$.fragment,e),qs=h(e),T=l(e,"P",{});var _s=o(T);Ge=l(_s,"CODE",{});var ai=o(Ge);ua=i(ai,"HfApi.get_repo_discussions"),ai.forEach(a),ca=i(_s," returns a "),re=l(_s,"A",{href:!0});var ti=o(re);pa=i(ti,"Pagination"),ti.forEach(a),ha=i(_s,` object, which is a convenience wrapper to manage pagination
of the results. To get all the Discussions in a single list, run:`),_s.forEach(a),js=h(e),D(ee.$$.fragment,e),ys=h(e),d=l(e,"P",{});var z=o(d);fa=i(z,"The "),ue=l(z,"A",{href:!0});var ii=o(ue);_a=i(ii,"Discussion"),ii.forEach(a),ga=i(z," object returned by "),Je=l(z,"CODE",{});var ni=o(Je);da=i(ni,"HfApi.get_repo_discussion"),ni.forEach(a),ma=i(z,` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),ce=l(z,"A",{href:!0});var li=o(ce);va=i(li,"HfApi.get_discussion_details()"),li.forEach(a),ba=i(z,":"),z.forEach(a),As=h(e),D(se.$$.fragment,e),Ds=h(e),g=l(e,"P",{});var O=o(g);pe=l(O,"A",{href:!0});var oi=o(pe);wa=i(oi,"HfApi.get_discussion_details()"),oi.forEach(a),Ea=i(O," returns a "),he=l(O,"A",{href:!0});var ri=o(he);qa=i(ri,"DiscussionWithDetails"),ri.forEach(a),ja=i(O," object, which is a subclass of "),fe=l(O,"A",{href:!0});var ui=o(fe);ya=i(ui,"Discussion"),ui.forEach(a),Aa=i(O,`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Ke=l(O,"CODE",{});var ci=o(Ke);Da=i(ci,"DiscussionWithDetails.events"),ci.forEach(a),$a=i(O,"."),O.forEach(a),$s=h(e),E=l(e,"P",{});var Ne=o(E);ka=i(Ne,"In case of a Pull Request, you can retrieve the raw git diff with "),Qe=l(Ne,"CODE",{});var pi=o(Qe);Pa=i(pi,"DiscussionWithDetails.diff"),pi.forEach(a),Ha=i(Ne,`. All the commits of the
Pull Request are listed in `),Xe=l(Ne,"CODE",{});var hi=o(Xe);xa=i(hi,"DiscussionWithDetails.events"),hi.forEach(a),Ra=i(Ne,"."),Ne.forEach(a),ks=h(e),I=l(e,"H2",{class:!0});var Bs=o(I);V=l(Bs,"A",{id:!0,class:!0,href:!0});var fi=o(V);Ze=l(fi,"SPAN",{});var _i=o(Ze);D(ae.$$.fragment,_i),_i.forEach(a),fi.forEach(a),Ca=h(Bs),es=l(Bs,"SPAN",{});var gi=o(es);Ta=i(gi,"Create and edit a Discussion or Pull Request programatically"),gi.forEach(a),Bs.forEach(a),Ps=h(e),q=l(e,"P",{});var Me=o(q);Ia=i(Me,"The "),_e=l(Me,"A",{href:!0});var di=o(_e);Sa=i(di,"HfApi"),di.forEach(a),La=i(Me,` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),te=l(Me,"A",{href:!0,rel:!0});var mi=o(te);Oa=i(mi,"access token"),mi.forEach(a),Na=i(Me,` to create and edit Discussions
or Pull Requests.`),Me.forEach(a),Hs=h(e),f=l(e,"P",{});var b=o(f);Ma=i(b,"The simplest way to propose changes on a repo on the Hub is via the "),ge=l(b,"A",{href:!0});var vi=o(ge);Wa=i(vi,"create_commit()"),vi.forEach(a),Va=i(b," API. "),de=l(b,"A",{href:!0});var bi=o(de);Ua=i(bi,"create_commit()"),bi.forEach(a),Ya=i(b,`: just
set the `),ss=l(b,"CODE",{});var wi=o(ss);Fa=i(wi,"create_pr"),wi.forEach(a),Ba=i(b," parameter to "),as=l(b,"CODE",{});var Ei=o(as);za=i(Ei,"True"),Ei.forEach(a),Ga=i(b,". This parameter is also available on other methods that wrap "),me=l(b,"A",{href:!0});var qi=o(me);Ja=i(qi,"create_commit()"),qi.forEach(a),Ka=i(b,":"),b.forEach(a),xs=h(e),m=l(e,"UL",{});var G=o(m);ts=l(G,"LI",{});var ji=o(ts);ve=l(ji,"A",{href:!0});var yi=o(ve);Qa=i(yi,"upload_file()"),yi.forEach(a),ji.forEach(a),Xa=h(G),is=l(G,"LI",{});var Ai=o(is);be=l(Ai,"A",{href:!0});var Di=o(be);Za=i(Di,"upload_folder()"),Di.forEach(a),Ai.forEach(a),et=h(G),ns=l(G,"LI",{});var $i=o(ns);we=l($i,"A",{href:!0});var ki=o(we);st=i(ki,"delete_file()"),ki.forEach(a),$i.forEach(a),at=h(G),ls=l(G,"LI",{});var Pi=o(ls);os=l(Pi,"CODE",{});var Hi=o(os);tt=i(Hi,"metadata_update()"),Hi.forEach(a),Pi.forEach(a),G.forEach(a),Rs=h(e),D(ie.$$.fragment,e),Cs=h(e),v=l(e,"P",{});var J=o(v);it=i(J,"You can also use "),Ee=l(J,"A",{href:!0});var xi=o(Ee);nt=i(xi,"HfApi.create_discussion()"),xi.forEach(a),lt=i(J," (respectively "),qe=l(J,"A",{href:!0});var Ri=o(qe);ot=i(Ri,"HfApi.create_pull_request()"),Ri.forEach(a),rt=i(J,`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),rs=l(J,"CODE",{});var Ci=o(rs);ut=i(Ci,'"draft"'),Ci.forEach(a),ct=i(J," mode."),J.forEach(a),Ts=h(e),D(ne.$$.fragment,e),Is=h(e),U=l(e,"P",{});var zs=o(U);pt=i(zs,"Managing Pull Requests and Discussions can be done entirely with the "),je=l(zs,"A",{href:!0});var Ti=o(je);ht=i(Ti,"HfApi"),Ti.forEach(a),ft=i(zs," class. For example:"),zs.forEach(a),Ss=h(e),_=l(e,"UL",{});var y=o(_);ye=l(y,"LI",{});var Wt=o(ye);Ae=l(Wt,"A",{href:!0});var Ii=o(Ae);_t=i(Ii,"comment_discussion()"),Ii.forEach(a),gt=i(Wt," to add comments"),Wt.forEach(a),dt=h(y),De=l(y,"LI",{});var Vt=o(De);$e=l(Vt,"A",{href:!0});var Si=o($e);mt=i(Si,"edit_discussion_comment()"),Si.forEach(a),vt=i(Vt," to edit comments"),Vt.forEach(a),bt=h(y),ke=l(y,"LI",{});var Ut=o(ke);Pe=l(Ut,"A",{href:!0});var Li=o(Pe);wt=i(Li,"rename_discussion()"),Li.forEach(a),Et=i(Ut," to rename a Discussion or Pull Request"),Ut.forEach(a),qt=h(y),He=l(y,"LI",{});var Yt=o(He);xe=l(Yt,"A",{href:!0});var Oi=o(xe);jt=i(Oi,"change_discussion_status()"),Oi.forEach(a),yt=i(Yt," to open or close a Discussion / Pull Request"),Yt.forEach(a),At=h(y),Re=l(y,"LI",{});var Ft=o(Re);Ce=l(Ft,"A",{href:!0});var Ni=o(Ce);Dt=i(Ni,"merge_pull_request()"),Ni.forEach(a),$t=i(Ft," to merge a Pull Request"),Ft.forEach(a),y.forEach(a),Ls=h(e),Y=l(e,"P",{});var Gs=o(Y);kt=i(Gs,"Visit the "),Te=l(Gs,"A",{href:!0});var Mi=o(Te);Pt=i(Mi,"HfApi"),Mi.forEach(a),Ht=i(Gs," documentation page for an exhaustive reference of all available methods."),Gs.forEach(a),Os=h(e),S=l(e,"H2",{class:!0});var Js=o(S);F=l(Js,"A",{id:!0,class:!0,href:!0});var Wi=o(F);us=l(Wi,"SPAN",{});var Vi=o(us);D(le.$$.fragment,Vi),Vi.forEach(a),Wi.forEach(a),xt=h(Js),cs=l(Js,"SPAN",{});var Ui=o(cs);Rt=i(Ui,"Push changes to a Pull Request"),Ui.forEach(a),Js.forEach(a),Ns=h(e),Ie=l(e,"P",{});var Yi=o(Ie);ps=l(Yi,"EM",{});var Fi=o(ps);Ct=i(Fi,"Coming soon !"),Fi.forEach(a),Yi.forEach(a),Ms=h(e),L=l(e,"H2",{class:!0});var Ks=o(L);B=l(Ks,"A",{id:!0,class:!0,href:!0});var Bi=o(B);hs=l(Bi,"SPAN",{});var zi=o(hs);D(oe.$$.fragment,zi),zi.forEach(a),Bi.forEach(a),Tt=h(Ks),fs=l(Ks,"SPAN",{});var Gi=o(fs);It=i(Gi,"See also"),Gi.forEach(a),Ks.forEach(a),Ws=h(e),j=l(e,"P",{});var We=o(j);St=i(We,"For a more detailed reference, visit the "),Se=l(We,"A",{href:!0});var Ji=o(Se);Lt=i(Ji,"community"),Ji.forEach(a),Ot=i(We," and the "),Le=l(We,"A",{href:!0});var Ki=o(Le);Nt=i(Ki,"hf_api"),Ki.forEach(a),Mt=i(We," documentation page."),We.forEach(a),this.h()},h(){u(x,"name","hf:doc:metadata"),u(x,"content",JSON.stringify(nn)),u(N,"id","interact-with-discussions-and-pull-requests"),u(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(N,"href","#interact-with-discussions-and-pull-requests"),u(R,"class","relative group"),u(Q,"href","https://huggingface.co/docs/hub/repositories-pull-requests-discussions"),u(Q,"rel","nofollow"),u(M,"id","retrieve-discussions-and-pull-requests-from-the-hub"),u(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(M,"href","#retrieve-discussions-and-pull-requests-from-the-hub"),u(C,"class","relative group"),u(re,"href","/docs/huggingface_hub/pr_930/en/package_reference/utilities#huggingface_hub.Pagination"),u(ue,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),u(ce,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(pe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(he,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.DiscussionWithDetails"),u(fe,"href","/docs/huggingface_hub/pr_930/en/package_reference/community#huggingface_hub.Discussion"),u(V,"id","create-and-edit-a-discussion-or-pull-request-programatically"),u(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(V,"href","#create-and-edit-a-discussion-or-pull-request-programatically"),u(I,"class","relative group"),u(_e,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(te,"href","https://huggingface.co/docs/hub/security-tokens"),u(te,"rel","nofollow"),u(ge,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(de,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(me,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(ve,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file"),u(be,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder"),u(we,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.delete_file"),u(Ee,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion"),u(qe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.create_pull_request"),u(je,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(Ae,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.comment_discussion"),u($e,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.edit_discussion_comment"),u(Pe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.rename_discussion"),u(xe,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.change_discussion_status"),u(Ce,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi.merge_pull_request"),u(Te,"href","/docs/huggingface_hub/pr_930/en/package_reference/hf_api#huggingface_hub.HfApi"),u(F,"id","push-changes-to-a-pull-request"),u(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(F,"href","#push-changes-to-a-pull-request"),u(S,"class","relative group"),u(B,"id","see-also"),u(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(B,"href","#see-also"),u(L,"class","relative group"),u(Se,"href","/source/package_reference/community"),u(Le,"href","/source/package_reference/hf_api")},m(e,r){s(document.head,x),c(e,ms,r),c(e,R,r),s(R,N),s(N,Ve),$(K,Ve,null),s(R,Qs),s(R,Ue),s(Ue,Xs),c(e,vs,r),c(e,w,r),s(w,Zs),s(w,Ye),s(Ye,ea),s(w,sa),s(w,Q),s(Q,aa),s(w,ta),c(e,bs,r),c(e,C,r),s(C,M),s(M,Fe),$(X,Fe,null),s(C,ia),s(C,Be),s(Be,na),c(e,ws,r),c(e,W,r),s(W,la),s(W,ze),s(ze,oa),s(W,ra),c(e,Es,r),$(Z,e,r),c(e,qs,r),c(e,T,r),s(T,Ge),s(Ge,ua),s(T,ca),s(T,re),s(re,pa),s(T,ha),c(e,js,r),$(ee,e,r),c(e,ys,r),c(e,d,r),s(d,fa),s(d,ue),s(ue,_a),s(d,ga),s(d,Je),s(Je,da),s(d,ma),s(d,ce),s(ce,va),s(d,ba),c(e,As,r),$(se,e,r),c(e,Ds,r),c(e,g,r),s(g,pe),s(pe,wa),s(g,Ea),s(g,he),s(he,qa),s(g,ja),s(g,fe),s(fe,ya),s(g,Aa),s(g,Ke),s(Ke,Da),s(g,$a),c(e,$s,r),c(e,E,r),s(E,ka),s(E,Qe),s(Qe,Pa),s(E,Ha),s(E,Xe),s(Xe,xa),s(E,Ra),c(e,ks,r),c(e,I,r),s(I,V),s(V,Ze),$(ae,Ze,null),s(I,Ca),s(I,es),s(es,Ta),c(e,Ps,r),c(e,q,r),s(q,Ia),s(q,_e),s(_e,Sa),s(q,La),s(q,te),s(te,Oa),s(q,Na),c(e,Hs,r),c(e,f,r),s(f,Ma),s(f,ge),s(ge,Wa),s(f,Va),s(f,de),s(de,Ua),s(f,Ya),s(f,ss),s(ss,Fa),s(f,Ba),s(f,as),s(as,za),s(f,Ga),s(f,me),s(me,Ja),s(f,Ka),c(e,xs,r),c(e,m,r),s(m,ts),s(ts,ve),s(ve,Qa),s(m,Xa),s(m,is),s(is,be),s(be,Za),s(m,et),s(m,ns),s(ns,we),s(we,st),s(m,at),s(m,ls),s(ls,os),s(os,tt),c(e,Rs,r),$(ie,e,r),c(e,Cs,r),c(e,v,r),s(v,it),s(v,Ee),s(Ee,nt),s(v,lt),s(v,qe),s(qe,ot),s(v,rt),s(v,rs),s(rs,ut),s(v,ct),c(e,Ts,r),$(ne,e,r),c(e,Is,r),c(e,U,r),s(U,pt),s(U,je),s(je,ht),s(U,ft),c(e,Ss,r),c(e,_,r),s(_,ye),s(ye,Ae),s(Ae,_t),s(ye,gt),s(_,dt),s(_,De),s(De,$e),s($e,mt),s(De,vt),s(_,bt),s(_,ke),s(ke,Pe),s(Pe,wt),s(ke,Et),s(_,qt),s(_,He),s(He,xe),s(xe,jt),s(He,yt),s(_,At),s(_,Re),s(Re,Ce),s(Ce,Dt),s(Re,$t),c(e,Ls,r),c(e,Y,r),s(Y,kt),s(Y,Te),s(Te,Pt),s(Y,Ht),c(e,Os,r),c(e,S,r),s(S,F),s(F,us),$(le,us,null),s(S,xt),s(S,cs),s(cs,Rt),c(e,Ns,r),c(e,Ie,r),s(Ie,ps),s(ps,Ct),c(e,Ms,r),c(e,L,r),s(L,B),s(B,hs),$(oe,hs,null),s(L,Tt),s(L,fs),s(fs,It),c(e,Ws,r),c(e,j,r),s(j,St),s(j,Se),s(Se,Lt),s(j,Ot),s(j,Le),s(Le,Nt),s(j,Mt),Vs=!0},p:sn,i(e){Vs||(k(K.$$.fragment,e),k(X.$$.fragment,e),k(Z.$$.fragment,e),k(ee.$$.fragment,e),k(se.$$.fragment,e),k(ae.$$.fragment,e),k(ie.$$.fragment,e),k(ne.$$.fragment,e),k(le.$$.fragment,e),k(oe.$$.fragment,e),Vs=!0)},o(e){P(K.$$.fragment,e),P(X.$$.fragment,e),P(Z.$$.fragment,e),P(ee.$$.fragment,e),P(se.$$.fragment,e),P(ae.$$.fragment,e),P(ie.$$.fragment,e),P(ne.$$.fragment,e),P(le.$$.fragment,e),P(oe.$$.fragment,e),Vs=!1},d(e){a(x),e&&a(ms),e&&a(R),H(K),e&&a(vs),e&&a(w),e&&a(bs),e&&a(C),H(X),e&&a(ws),e&&a(W),e&&a(Es),H(Z,e),e&&a(qs),e&&a(T),e&&a(js),H(ee,e),e&&a(ys),e&&a(d),e&&a(As),H(se,e),e&&a(Ds),e&&a(g),e&&a($s),e&&a(E),e&&a(ks),e&&a(I),H(ae),e&&a(Ps),e&&a(q),e&&a(Hs),e&&a(f),e&&a(xs),e&&a(m),e&&a(Rs),H(ie,e),e&&a(Cs),e&&a(v),e&&a(Ts),H(ne,e),e&&a(Is),e&&a(U),e&&a(Ss),e&&a(_),e&&a(Ls),e&&a(Y),e&&a(Os),e&&a(S),H(le),e&&a(Ns),e&&a(Ie),e&&a(Ms),e&&a(L),H(oe),e&&a(Ws),e&&a(j)}}}const nn={local:"interact-with-discussions-and-pull-requests",sections:[{local:"retrieve-discussions-and-pull-requests-from-the-hub",title:"Retrieve Discussions and Pull Requests from the Hub"},{local:"create-and-edit-a-discussion-or-pull-request-programatically",title:"Create and edit a Discussion or Pull Request programatically"},{local:"push-changes-to-a-pull-request",title:"Push changes to a Pull Request"},{local:"see-also",title:"See also"}],title:"Interact with Discussions and Pull Requests "};function ln(Bt){return an(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class cn extends Qi{constructor(x){super();Xi(this,x,ln,tn,Zi,{})}}export{cn as default,nn as metadata};
